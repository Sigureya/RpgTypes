"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"type":"object","required":["name","id","nickname","battlerName","characterName","characterIndex","faceName","faceIndex","classId","initialLevel","maxLevel"],"properties":{"name":{"type":"string"},"battlerName":{"type":"string"},"characterName":{"type":"string"},"characterIndex":{"type":"integer"},"faceName":{"type":"string"},"faceIndex":{"type":"integer","minimum":0,"maximum":7},"id":{"type":"integer","minimum":0},"nickname":{"type":"string"},"profile":{"type":"string"},"initialLevel":{"type":"integer","minimum":0},"maxLevel":{"type":"integer"},"classId":{"type":"integer","minimum":0},"equips":{"type":"array","items":{"type":"integer"}},"note":{"type":"string"},"traits":{"type":"array","items":{"type":"object","properties":{"code":{"type":"integer"},"dataId":{"type":"integer"},"value":{"type":"integer"}},"required":["code","dataId","value"]}}}};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((((((((data.name === undefined) && (missing0 = "name")) || ((data.id === undefined) && (missing0 = "id"))) || ((data.nickname === undefined) && (missing0 = "nickname"))) || ((data.battlerName === undefined) && (missing0 = "battlerName"))) || ((data.characterName === undefined) && (missing0 = "characterName"))) || ((data.characterIndex === undefined) && (missing0 = "characterIndex"))) || ((data.faceName === undefined) && (missing0 = "faceName"))) || ((data.faceIndex === undefined) && (missing0 = "faceIndex"))) || ((data.classId === undefined) && (missing0 = "classId"))) || ((data.initialLevel === undefined) && (missing0 = "initialLevel"))) || ((data.maxLevel === undefined) && (missing0 = "maxLevel"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate10.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.battlerName !== undefined){const _errs3 = errors;if(typeof data.battlerName !== "string"){validate10.errors = [{instancePath:instancePath+"/battlerName",schemaPath:"#/properties/battlerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.characterName !== undefined){const _errs5 = errors;if(typeof data.characterName !== "string"){validate10.errors = [{instancePath:instancePath+"/characterName",schemaPath:"#/properties/characterName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.characterIndex !== undefined){let data3 = data.characterIndex;const _errs7 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){validate10.errors = [{instancePath:instancePath+"/characterIndex",schemaPath:"#/properties/characterIndex/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.faceName !== undefined){const _errs9 = errors;if(typeof data.faceName !== "string"){validate10.errors = [{instancePath:instancePath+"/faceName",schemaPath:"#/properties/faceName/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.faceIndex !== undefined){let data5 = data.faceIndex;const _errs11 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate10.errors = [{instancePath:instancePath+"/faceIndex",schemaPath:"#/properties/faceIndex/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs11){if((typeof data5 == "number") && (isFinite(data5))){if(data5 > 7 || isNaN(data5)){validate10.errors = [{instancePath:instancePath+"/faceIndex",schemaPath:"#/properties/faceIndex/maximum",keyword:"maximum",params:{comparison: "<=", limit: 7},message:"must be <= 7"}];return false;}else {if(data5 < 0 || isNaN(data5)){validate10.errors = [{instancePath:instancePath+"/faceIndex",schemaPath:"#/properties/faceIndex/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){let data6 = data.id;const _errs13 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs13){if((typeof data6 == "number") && (isFinite(data6))){if(data6 < 0 || isNaN(data6)){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.nickname !== undefined){const _errs15 = errors;if(typeof data.nickname !== "string"){validate10.errors = [{instancePath:instancePath+"/nickname",schemaPath:"#/properties/nickname/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.profile !== undefined){const _errs17 = errors;if(typeof data.profile !== "string"){validate10.errors = [{instancePath:instancePath+"/profile",schemaPath:"#/properties/profile/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.initialLevel !== undefined){let data9 = data.initialLevel;const _errs19 = errors;if(!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))){validate10.errors = [{instancePath:instancePath+"/initialLevel",schemaPath:"#/properties/initialLevel/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs19){if((typeof data9 == "number") && (isFinite(data9))){if(data9 < 0 || isNaN(data9)){validate10.errors = [{instancePath:instancePath+"/initialLevel",schemaPath:"#/properties/initialLevel/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.maxLevel !== undefined){let data10 = data.maxLevel;const _errs21 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){validate10.errors = [{instancePath:instancePath+"/maxLevel",schemaPath:"#/properties/maxLevel/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.classId !== undefined){let data11 = data.classId;const _errs23 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){validate10.errors = [{instancePath:instancePath+"/classId",schemaPath:"#/properties/classId/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs23){if((typeof data11 == "number") && (isFinite(data11))){if(data11 < 0 || isNaN(data11)){validate10.errors = [{instancePath:instancePath+"/classId",schemaPath:"#/properties/classId/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.equips !== undefined){let data12 = data.equips;const _errs25 = errors;if(errors === _errs25){if(Array.isArray(data12)){var valid1 = true;const len0 = data12.length;for(let i0=0; i0<len0; i0++){let data13 = data12[i0];const _errs27 = errors;if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){validate10.errors = [{instancePath:instancePath+"/equips/" + i0,schemaPath:"#/properties/equips/items/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid1 = _errs27 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/equips",schemaPath:"#/properties/equips/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.note !== undefined){const _errs29 = errors;if(typeof data.note !== "string"){validate10.errors = [{instancePath:instancePath+"/note",schemaPath:"#/properties/note/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.traits !== undefined){let data15 = data.traits;const _errs31 = errors;if(errors === _errs31){if(Array.isArray(data15)){var valid2 = true;const len1 = data15.length;for(let i1=0; i1<len1; i1++){let data16 = data15[i1];const _errs33 = errors;if(errors === _errs33){if(data16 && typeof data16 == "object" && !Array.isArray(data16)){let missing1;if((((data16.code === undefined) && (missing1 = "code")) || ((data16.dataId === undefined) && (missing1 = "dataId"))) || ((data16.value === undefined) && (missing1 = "value"))){validate10.errors = [{instancePath:instancePath+"/traits/" + i1,schemaPath:"#/properties/traits/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data16.code !== undefined){let data17 = data16.code;const _errs35 = errors;if(!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))){validate10.errors = [{instancePath:instancePath+"/traits/" + i1+"/code",schemaPath:"#/properties/traits/items/properties/code/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs35 === errors;}else {var valid3 = true;}if(valid3){if(data16.dataId !== undefined){let data18 = data16.dataId;const _errs37 = errors;if(!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))){validate10.errors = [{instancePath:instancePath+"/traits/" + i1+"/dataId",schemaPath:"#/properties/traits/items/properties/dataId/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs37 === errors;}else {var valid3 = true;}if(valid3){if(data16.value !== undefined){let data19 = data16.value;const _errs39 = errors;if(!(((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19)))){validate10.errors = [{instancePath:instancePath+"/traits/" + i1+"/value",schemaPath:"#/properties/traits/items/properties/value/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid3 = _errs39 === errors;}else {var valid3 = true;}}}}}else {validate10.errors = [{instancePath:instancePath+"/traits/" + i1,schemaPath:"#/properties/traits/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs33 === errors;if(!valid2){break;}}}else {validate10.errors = [{instancePath:instancePath+"/traits",schemaPath:"#/properties/traits/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}