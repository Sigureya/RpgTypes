"use strict";module.exports = validate10;module.exports.default = validate10;const schema11 = {"type":"object","required":["trigger","id","name","list","switchId"],"properties":{"trigger":{"type":"integer","minimum":0},"id":{"type":"integer","minimum":0},"name":{"type":"string"},"list":{"type":"array","items":{"type":"object","required":["code","indent","parameters"],"properties":{"code":{"type":"integer"},"indent":{"type":"integer"},"parameters":{"type":"array"}}}},"switchId":{"type":"integer","minimum":0}}};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((data.trigger === undefined) && (missing0 = "trigger")) || ((data.id === undefined) && (missing0 = "id"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.list === undefined) && (missing0 = "list"))) || ((data.switchId === undefined) && (missing0 = "switchId"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.trigger !== undefined){let data0 = data.trigger;const _errs1 = errors;if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){validate10.errors = [{instancePath:instancePath+"/trigger",schemaPath:"#/properties/trigger/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs1){if((typeof data0 == "number") && (isFinite(data0))){if(data0 < 0 || isNaN(data0)){validate10.errors = [{instancePath:instancePath+"/trigger",schemaPath:"#/properties/trigger/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){let data1 = data.id;const _errs3 = errors;if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs3){if((typeof data1 == "number") && (isFinite(data1))){if(data1 < 0 || isNaN(data1)){validate10.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs5 = errors;if(typeof data.name !== "string"){validate10.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.list !== undefined){let data3 = data.list;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){let data4 = data3[i0];const _errs9 = errors;if(errors === _errs9){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing1;if((((data4.code === undefined) && (missing1 = "code")) || ((data4.indent === undefined) && (missing1 = "indent"))) || ((data4.parameters === undefined) && (missing1 = "parameters"))){validate10.errors = [{instancePath:instancePath+"/list/" + i0,schemaPath:"#/properties/list/items/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data4.code !== undefined){let data5 = data4.code;const _errs11 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){validate10.errors = [{instancePath:instancePath+"/list/" + i0+"/code",schemaPath:"#/properties/list/items/properties/code/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs11 === errors;}else {var valid2 = true;}if(valid2){if(data4.indent !== undefined){let data6 = data4.indent;const _errs13 = errors;if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){validate10.errors = [{instancePath:instancePath+"/list/" + i0+"/indent",schemaPath:"#/properties/list/items/properties/indent/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid2 = _errs13 === errors;}else {var valid2 = true;}if(valid2){if(data4.parameters !== undefined){const _errs15 = errors;if(!(Array.isArray(data4.parameters))){validate10.errors = [{instancePath:instancePath+"/list/" + i0+"/parameters",schemaPath:"#/properties/list/items/properties/parameters/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}var valid2 = _errs15 === errors;}else {var valid2 = true;}}}}}else {validate10.errors = [{instancePath:instancePath+"/list/" + i0,schemaPath:"#/properties/list/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs9 === errors;if(!valid1){break;}}}else {validate10.errors = [{instancePath:instancePath+"/list",schemaPath:"#/properties/list/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.switchId !== undefined){let data8 = data.switchId;const _errs17 = errors;if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){validate10.errors = [{instancePath:instancePath+"/switchId",schemaPath:"#/properties/switchId/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs17){if((typeof data8 == "number") && (isFinite(data8))){if(data8 < 0 || isNaN(data8)){validate10.errors = [{instancePath:instancePath+"/switchId",schemaPath:"#/properties/switchId/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];return false;}}}var valid0 = _errs17 === errors;}else {var valid0 = true;}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}