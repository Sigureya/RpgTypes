{"version":3,"file":"rpgMocks.es.js","sources":["../../src/mock/labels/actor.ts","../../src/mock/labels/class.ts","../../src/mock/labels/skill.ts","../../src/mock/labels/traits/paramRegular.ts","../../src/mock/labels/traits/paramExtra.ts","../../src/mock/labels/traits/paramSpecial.ts","../../src/mock/labels/traits/partyAbility.ts","../../src/mock/labels/traits/collaps.ts","../../src/mock/labels/traits/specialFlag.ts","../../src/mock/labels/enemy.ts","../../src/mock/labels/global.ts","../../src/mock/labels/state.ts","../../src/mock/labels/usableItem.ts","../../src/mock/labels/armor.ts","../../src/mock/labels/weapon.ts","../../src/mock/labels/item.ts","../../src/mock/labelRegistry.ts"],"sourcesContent":["import type { DomainLabel, ActorLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockActorLabels = {\r\n  domainName: \"アクター\",\r\n  options: {\r\n    initialEquipments: \"初期装備\",\r\n    faceImage: \"顔画像\",\r\n    characterImage: \"キャラクター画像\",\r\n    svBattlerImage: \"SVバトラー画像\",\r\n    nickname: \"ニックネーム\",\r\n    profile: \"プロフィール\",\r\n    classId: \"職業ID\",\r\n    initialLevel: \"初期レベル\",\r\n    maxLevel: \"最大レベル\",\r\n  },\r\n} as const satisfies DomainLabel<ActorLabels>;\r\n","import type { DomainLabel, ClassLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockClassLables = {\r\n  domainName: \"職業\",\r\n  options: {\r\n    params: \"パラメータ\",\r\n    learnings: \"習得スキル\",\r\n    expParams: \"経験値パラメータ\",\r\n  },\r\n} as const satisfies DomainLabel<ClassLabels>;\r\n","import type { DomainLabel, SkillLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockSkillLabels = {\r\n  domainName: \"スキル\",\r\n  options: {\r\n    requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n    requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n    mpCost: \"MP消費\",\r\n    tpCost: \"TP消費\",\r\n  },\r\n} as const satisfies DomainLabel<SkillLabels>;\r\n","import type { DomainLabel, RegularParamLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockParamRegularLabels = {\r\n  domainName: \"基本能力値\",\r\n  options: {\r\n    maxHp: \"最大HP\",\r\n    maxMp: \"最大MP\",\r\n    atk: \"攻撃力\",\r\n    def: \"防御力\",\r\n    matk: \"魔法攻撃力\",\r\n    mdef: \"魔法防御力\",\r\n    agi: \"敏捷性\",\r\n    luk: \"運\",\r\n  },\r\n} as const satisfies DomainLabel<RegularParamLabels>;\r\n","import type { DomainLabel, ExtraParamLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockParamExtra = {\r\n  domainName: \"追加能力値\",\r\n  options: {\r\n    hitRate: \"命中率\",\r\n    evasionRate: \"回避率\",\r\n    criticalRate: \"クリティカル率\",\r\n    criticalEvasionRate: \"クリティカル回避率\",\r\n    magicEvasionRate: \"魔法回避率\",\r\n    magicReflectionRate: \"魔法反射率\",\r\n    counterAttackRate: \"反撃率\",\r\n    hpRegenerationRate: \"HP再生率\",\r\n    mpRegenerationRate: \"MP再生率\",\r\n    tpRegenerationRate: \"TP再生率\",\r\n  },\r\n} as const satisfies DomainLabel<ExtraParamLabels>;\r\n","import type { DomainLabel, SpecialParamLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockParamSpecialLabels = {\r\n  domainName: \"特殊能力値\",\r\n  options: {\r\n    targetRate: \"狙われ率\",\r\n    guradEffectRate: \"防御効果率\",\r\n    recoveryEffectRate: \"回復効果率\",\r\n    pharmacology: \"薬の知識\",\r\n    mpCostRate: \"MP消費率\",\r\n    tpChargeRate: \"TPチャージ率\",\r\n    physicalDamageRate: \"物理ダメージ率\",\r\n    magicDamageRate: \"魔法ダメージ率\",\r\n    floorDamageRate: \"床ダメージ率\",\r\n    experienceRate: \"経験値率\",\r\n  },\r\n} as const satisfies DomainLabel<SpecialParamLabels>;\r\n","import type { DomainLabel, PartyAbilityOptionLabels } from \"@RpgTypes/schema\";\r\nexport const MockPartyAbility = {\r\n  domainName: \"パーティ能力\",\r\n  options: {\r\n    cancelSurprise: \"不意打ち無効\",\r\n    dropItemDouble: \"アイテムドロップ2倍\",\r\n    encounterHalf: \"エンカウント半減\",\r\n    encounterNone: \"エンカウントなし\",\r\n    goldDouble: \"ゴールド2倍\",\r\n    raisePreemptive: \"先制攻撃率アップ\",\r\n  },\r\n} as const satisfies DomainLabel<PartyAbilityOptionLabels>;\r\n","import type { DomainLabel, CollapsOptionLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockCollapsLabels = {\r\n  domainName: \"消滅エフェクト\",\r\n  options: {\r\n    bossCollaps: \"ボス崩壊\",\r\n    instantCollaps: \"即時崩壊\",\r\n    noneCollaps: \"崩壊なし\",\r\n  },\r\n} as const satisfies DomainLabel<CollapsOptionLabels>;\r\n","import type { SpecialFlagOptions, DomainLabel } from \"@RpgTypes/schema\";\r\nexport const MockSpecialFlagLabels = {\r\n  domainName: \"特殊フラグ\",\r\n  options: {\r\n    autoBattle: \"自動戦闘\",\r\n    guard: \"防御\",\r\n    substitute: \"身代わり\",\r\n    preventEscape: \"逃走防止\",\r\n  },\r\n} as const satisfies DomainLabel<SpecialFlagOptions>;\r\n","import type { DomainLabel, EnemyLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockEnemyLabels = {\r\n  domainName: \"敵キャラ\",\r\n  options: {\r\n    dropItems: \"ドロップアイテム\",\r\n    battlerHue: \"バトラーヒュー\",\r\n    battlerName: \"バトラー名\",\r\n    gold: \"ゴールド\",\r\n  },\r\n} as const satisfies DomainLabel<EnemyLabels>;\r\n","import type { GlobalLabel } from \"@RpgTypes/schema\";\r\n\r\nexport const MockGlobalLabels = {\r\n  id: \"識別子\",\r\n  name: \"名前\",\r\n  note: \"メモ\",\r\n  description: \"説明\",\r\n  iconIndex: \"アイコンインデックス\",\r\n  occasion: \"使用タイミング\",\r\n  params: \"パラメータ\",\r\n  repeats: \"繰り返し回数\",\r\n  scope: \"範囲\",\r\n  speed: \"速度補正\",\r\n  successRate: \"成功率\",\r\n  animationId: \"アニメーションID\",\r\n  displayType: \"表示タイプ\",\r\n  characterIndex: \"キャラクターインデックス\",\r\n  characterName: \"キャラクター名\",\r\n  effectName: \"効果名\",\r\n  faceIndex: \"顔グラフィックインデックス\",\r\n  faceName: \"顔グラフィック名\",\r\n  flashTimings: \"フラッシュタイミング\",\r\n  list: \"リスト\",\r\n  messageType: \"メッセージタイプ\",\r\n  offsetX: \"オフセットX\",\r\n  offsetY: \"オフセットY\",\r\n  overlay: \"オーバーレイ\",\r\n  priority: \"優先度\",\r\n  restriction: \"制約\",\r\n  rotation: \"回転\",\r\n  scale: \"スケール\",\r\n  soundTimings: \"サウンドタイミング\",\r\n  stepsToRemove: \"解除までの歩数\",\r\n  type: \"タイプ\",\r\n  variance: \"分散度\",\r\n  unknownCode: \"不明なコード\",\r\n  content: \"内容\",\r\n  apply: \"適用\",\r\n  turn: \"ターン\",\r\n  commonEvent: \"コモンイベント\",\r\n  normal: \"通常\",\r\n  dualWield: \"二刀流\",\r\n  bossCollaps: \"ボス崩壊\",\r\n  instantCollaps: \"即時崩壊\",\r\n  noneCollaps: \"崩壊なし\",\r\n  escape: \"逃走\",\r\n} as const satisfies GlobalLabel;\r\n","import type { DomainLabel, StateLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockStateLabels = {\r\n  domainName: \"ステート\",\r\n  options: {\r\n    restriction: \"制約\",\r\n    priority: \"優先度\",\r\n    motion: \"モーション\",\r\n    overlay: \"オーバーレイ\",\r\n    removeAtBattleEnd: \"戦闘終了時解除\",\r\n    removeByRestriction: \"制約による解除\",\r\n    autoRemovalTiming: \"自動解除タイミング\",\r\n    minTurns: \"最小ターン数\",\r\n    maxTurns: \"最大ターン数\",\r\n    removeByDamage: \"ダメージによる解除\",\r\n    chanceByDamage: \"ダメージによる解除確率\",\r\n    removeByWalking: \"歩行による解除\",\r\n    stepsToRemove: \"解除までの歩数\",\r\n  },\r\n} as const satisfies DomainLabel<StateLabels>;\r\n","import type { DomainLabel, UsableItemLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockUsableItem = {\r\n  domainName: \"\",\r\n  options: {\r\n    scope: \"範囲\",\r\n    speed: \"速度補正\",\r\n    successRate: \"成功率\",\r\n  },\r\n} as const satisfies DomainLabel<UsableItemLabels>;\r\n","import type { DomainLabel, ArmorLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockArmorLabels = {\r\n  domainName: \"防具\",\r\n  options: {\r\n    armorTypeId: \"防具タイプID\",\r\n    slotTypeId: \"スロットタイプID\",\r\n  },\r\n} as const satisfies DomainLabel<ArmorLabels>;\r\n","import type { WeaponLabels, DomainLabel } from \"@RpgTypes/schema\";\r\n\r\nexport const MockWeaponLabels = {\r\n  domainName: \"武器\",\r\n  options: {\r\n    weaponTypeId: \"武器タイプID\",\r\n  },\r\n} as const satisfies DomainLabel<WeaponLabels>;\r\n","import type { DomainLabel, ItemLabels } from \"@RpgTypes/schema\";\r\n\r\nexport const MockItemLabels = {\r\n  domainName: \"アイテム\",\r\n  options: {\r\n    consumable: \"消耗品\",\r\n  },\r\n} as const satisfies DomainLabel<ItemLabels>;\r\n","import type { LabelRegistry } from \"@RpgTypes/schema\";\r\nimport {\r\n  MockActorLabels,\r\n  MockArmorLabels,\r\n  MockClassLables,\r\n  MockCollapsLabels,\r\n  MockEnemyLabels,\r\n  MockGlobalLabels,\r\n  MockItemLabels,\r\n  MockParamExtra,\r\n  MockParamRegularLabels,\r\n  MockParamSpecialLabels,\r\n  MockPartyAbility,\r\n  MockSkillLabels,\r\n  MockSpecialFlagLabels,\r\n  MockStateLabels,\r\n  MockUsableItem,\r\n  MockWeaponLabels,\r\n} from \"./labels\";\r\n\r\nexport const MockLabelRegistry = {\r\n  rpg: {\r\n    actor: MockActorLabels,\r\n\r\n    armor: MockArmorLabels,\r\n    skill: MockSkillLabels,\r\n    damage: {\r\n      domainName: \"ダメージ\",\r\n      options: {},\r\n    },\r\n    item: MockItemLabels,\r\n    class: MockClassLables,\r\n    enemy: MockEnemyLabels,\r\n    collaps: MockCollapsLabels,\r\n    paramExtra: MockParamExtra,\r\n    paramSpecial: MockParamSpecialLabels,\r\n    paramRegular: MockParamRegularLabels,\r\n    partyAbility: MockPartyAbility,\r\n    weapon: MockWeaponLabels,\r\n    usableItem: MockUsableItem,\r\n    state: MockStateLabels,\r\n    specialFlag: MockSpecialFlagLabels,\r\n  },\r\n  global: MockGlobalLabels,\r\n} as const satisfies LabelRegistry;\r\n"],"names":["MockActorLabels","MockClassLables","MockSkillLabels","MockParamRegularLabels","MockParamExtra","MockParamSpecialLabels","MockPartyAbility","MockCollapsLabels","MockSpecialFlagLabels","MockEnemyLabels","MockGlobalLabels","MockStateLabels","MockUsableItem","MockArmorLabels","MockWeaponLabels","MockItemLabels","MockLabelRegistry"],"mappings":"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"}