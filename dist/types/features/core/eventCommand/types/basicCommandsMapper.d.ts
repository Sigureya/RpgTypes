import { Command_ShowMessageHeader } from '../../../../rmmz';
import { Command_ShowChoices, Command_StopSE } from '../../../../rmmz/eventCommand';
import { Command_ChangeActorImages } from '../../../../rmmz/eventCommand/commands/actor/changeImages/types';
import { Command_ShowAnimation } from '../../../../rmmz/eventCommand/commands/animation/types';
import { Command_FadeOutBGM, Command_FadeOutBGS, Command_ResumeBGM, Command_SaveBGM } from '../../../../rmmz/eventCommand/commands/audio/other/types';
import { Command_ChangeBattleBackground } from '../../../../rmmz/eventCommand/commands/battle/background/types';
import { Command_BattleProcessing } from '../../../../rmmz/eventCommand/commands/battle/battleProcessing/types';
import { Command_ControlTimer } from '../../../../rmmz/eventCommand/commands/controlTimer';
import { Command_ChangeEncounter } from '../../../../rmmz/eventCommand/commands/encounter/types';
import { Command_ConditionalBranch } from '../../../../rmmz/eventCommand/commands/flow/branch/commandTypes';
import { Command_Label, Command_LabelJump } from '../../../../rmmz/eventCommand/commands/flow/label/types';
import { Command_ChangeArmors, Command_ChangeWeapons } from '../../../../rmmz/eventCommand/commands/item/change';
import { Command_ChangeParallax } from '../../../../rmmz/eventCommand/commands/map/parallax/types';
import { Command_ScrollMap } from '../../../../rmmz/eventCommand/commands/map/scroll/types';
import { Command_GetLocationInfo } from '../../../../rmmz/eventCommand/commands/mapEvent/getLocationInfo/types';
import { Command_SetEventLocation } from '../../../../rmmz/eventCommand/commands/mapEvent/setLocation/types';
import { Command_ChangePlayerFollowers } from '../../../../rmmz/eventCommand/commands/mapFollwer/types';
import { Command_ChangeTileset } from '../../../../rmmz/eventCommand/commands/mapImage/tileset/types';
import { Command_TransferPlayer } from '../../../../rmmz/eventCommand/commands/mapPlayer/transferPlayer/types';
import { Command_ChangeFormationAccess, Command_ChangeMenuAccess, Command_ChangeSaveAccess } from '../../../../rmmz/eventCommand/commands/menu/types';
import { Command_SetMovementRoute } from '../../../../rmmz/eventCommand/commands/movementRoute/command';
import { Command_PlayMovie } from '../../../../rmmz/eventCommand/commands/movie/types';
import { Command_ChangePartyMember } from '../../../../rmmz/eventCommand/commands/party/changeMember/types';
import { Command_ChangeGold } from '../../../../rmmz/eventCommand/commands/party/gold/changeGold';
import { Command_ErasePicture, Command_RotatePicture, Command_TintPicture } from '../../../../rmmz/eventCommand/commands/picture/other/types';
import { Command_FlashScreen, Command_ShakeScreen, Command_TintScreen } from '../../../../rmmz/eventCommand/commands/screen/types';
import { Command_ChangeTransparency } from '../../../../rmmz/eventCommand/commands/transparency/types';
import { Command_ChangeVehicleImage } from '../../../../rmmz/eventCommand/commands/vehicle/changeImage/types';
import { Command_SetVehicleLocation } from '../../../../rmmz/eventCommand/commands/vehicle/setLocation/types';
import { Command_GetOnOffVehicle } from '../../../../rmmz/eventCommand/commands/vehicle/types';
import { Command_Wait } from '../../../../rmmz/eventCommand/commands/wait/types';
import { Command_SetWeatherEffect } from '../../../../rmmz/eventCommand/commands/weather/types';
import { Command_ChangeWindowColor } from '../../../../rmmz/eventCommand/commands/window/changeWindowColor/types';
import type * as RpgTypes from "@RpgTypes/rmmz";
export type CallBackFunc<Command extends RpgTypes.EventCommandUnknown, Reulst = void> = (command: Readonly<Command>, index: number, list: ReadonlyArray<Readonly<RpgTypes.EventCommand>>) => Reulst;
export interface FallbackMapper<T> {
    other: CallBackFunc<RpgTypes.EventCommand, T>;
}
export interface BasicMappingObject<T> extends FallbackMapper<T> {
    showMessageHeader: CallBackFunc<Command_ShowMessageHeader, T>;
    showMessageBody: CallBackFunc<RpgTypes.Command_ShowMessageBody, T>;
    showScrollingTextBody: CallBackFunc<RpgTypes.Command_ScrollTextBody, T>;
    commentHedder: CallBackFunc<RpgTypes.Command_CommentHeader, T>;
    commentBody: CallBackFunc<RpgTypes.Command_CommentBody, T>;
    scriptHedder: CallBackFunc<RpgTypes.Command_ScriptHeader, T>;
    scriptBody: CallBackFunc<RpgTypes.Command_ScriptBody, T>;
    controlSwitch: CallBackFunc<RpgTypes.Command_ControlSwitches, T>;
    controlVariable: CallBackFunc<RpgTypes.Command_ControlVariables, T>;
    controlSelfSwitch: CallBackFunc<RpgTypes.Command_ControlSelfSwitch, T>;
    controlTimer: CallBackFunc<Command_ControlTimer, T>;
    conditionalBranch: CallBackFunc<Command_ConditionalBranch, T>;
    battleProcessing: CallBackFunc<Command_BattleProcessing, T>;
    showChoices: CallBackFunc<Command_ShowChoices, T>;
    choiceWhen: CallBackFunc<RpgTypes.Command_ShowChoiceWhen, T>;
    changeName: CallBackFunc<RpgTypes.Command_ChangeActorName, T>;
    changeProfile: CallBackFunc<RpgTypes.Command_ChangeActorProfile, T>;
    changeNickname: CallBackFunc<RpgTypes.Command_ChangeActorNickName, T>;
    label: CallBackFunc<Command_Label, T>;
    labelJump: CallBackFunc<Command_LabelJump, T>;
    commonEvent: CallBackFunc<RpgTypes.Command_CommonEvent, T>;
    changeBattleBGM: CallBackFunc<RpgTypes.Command_ChangeBattleBGM, T>;
    changeVictoryME: CallBackFunc<RpgTypes.Command_ChangeVictoryME, T>;
    changeDefeatME: CallBackFunc<RpgTypes.Command_ChangeDefeatME, T>;
    changeSaveAccess: CallBackFunc<Command_ChangeSaveAccess, T>;
    changeMenuAccess: CallBackFunc<Command_ChangeMenuAccess, T>;
    changeEncounter: CallBackFunc<Command_ChangeEncounter, T>;
    changeFormationAccess: CallBackFunc<Command_ChangeFormationAccess, T>;
    changeWindowColor: CallBackFunc<Command_ChangeWindowColor, T>;
    changeGold: CallBackFunc<Command_ChangeGold, T>;
    showAnimation: CallBackFunc<Command_ShowAnimation, T>;
    transferPlayer: CallBackFunc<Command_TransferPlayer, T>;
    setVehicleLocation: CallBackFunc<Command_SetVehicleLocation, T>;
    setEventLocation: CallBackFunc<Command_SetEventLocation, T>;
    scrollMap: CallBackFunc<Command_ScrollMap, T>;
    setMovementRoute: CallBackFunc<Command_SetMovementRoute, T>;
    gettingOnOffVehicle: CallBackFunc<Command_GetOnOffVehicle, T>;
    changeTransparency: CallBackFunc<Command_ChangeTransparency, T>;
    showPicture: CallBackFunc<RpgTypes.Command_ShowPicture, T>;
    movePicture: CallBackFunc<RpgTypes.Command_MovePicture, T>;
    rotatePicture: CallBackFunc<Command_RotatePicture, T>;
    tintPicture: CallBackFunc<Command_TintPicture, T>;
    erasePicture: CallBackFunc<Command_ErasePicture, T>;
    setWeatherEffects: CallBackFunc<Command_SetWeatherEffect, T>;
    playBGM: CallBackFunc<RpgTypes.Command_PlayBGM, T>;
    fadeOutBGM: CallBackFunc<Command_FadeOutBGM, T>;
    saveBGM: CallBackFunc<Command_SaveBGM, T>;
    resumeBGM: CallBackFunc<Command_ResumeBGM, T>;
    playBGS: CallBackFunc<RpgTypes.Command_PlayBGS, T>;
    fadeOutBGS: CallBackFunc<Command_FadeOutBGS, T>;
    playME: CallBackFunc<RpgTypes.Command_PlayME, T>;
    playSE: CallBackFunc<RpgTypes.Command_PlaySE, T>;
    stopSE: CallBackFunc<Command_StopSE, T>;
    playMovie: CallBackFunc<Command_PlayMovie, T>;
    changePlayerFollowers: CallBackFunc<Command_ChangePlayerFollowers, T>;
    gameover: CallBackFunc<RpgTypes.Command_GameOver, T>;
    wait: CallBackFunc<Command_Wait, T>;
    shonAnimation: CallBackFunc<Command_ShowAnimation, T>;
    gatherFollowers: CallBackFunc<RpgTypes.Command_GatherFollowers, T>;
    changeWeapon: CallBackFunc<Command_ChangeWeapons, T>;
    changeArmor: CallBackFunc<Command_ChangeArmors, T>;
    changePartyMember: CallBackFunc<Command_ChangePartyMember, T>;
    changeActorImages: CallBackFunc<Command_ChangeActorImages, T>;
    changeTileset: CallBackFunc<Command_ChangeTileset, T>;
    changeBattleBackground: CallBackFunc<Command_ChangeBattleBackground, T>;
    changeParallax: CallBackFunc<Command_ChangeParallax, T>;
    getLocationsInfo: CallBackFunc<Command_GetLocationInfo, T>;
    changeVehicleImage: CallBackFunc<Command_ChangeVehicleImage, T>;
    tintScreen: CallBackFunc<Command_TintScreen, T>;
    flashScreen: CallBackFunc<Command_FlashScreen, T>;
    shakeScreen: CallBackFunc<Command_ShakeScreen, T>;
}
