{"version":3,"file":"plugin.es.js","sources":["../../src/rmmz/rpg/data/controlChars/controlChars.ts","../../src/rmmz/rpg/data/controlChars/getContolChars.ts","../../src/rmmz/rpg/data/dataToCtrlChar.ts","../../src/rmmz/rpg/data/controlChars/constants.ts","../../src/rmmz/rpg/data/event/makeEvent.ts","../../src/rmmz/rpg/data/event/map/event/page/condition/make.ts","../../src/rmmz/rpg/data/event/map/event/page/eventCommand/eventCommandCodes.ts","../../src/rmmz/rpg/data/event/map/event/page/eventCommand/make.ts","../../src/rmmz/rpg/data/event/map/event/page/eventCommand/types/domains/moveRoute/constants.ts","../../src/rmmz/rpg/data/event/map/event/page/make.ts","../../src/rmmz/rpg/data/event/map/make.ts","../../src/rmmz/rpg/data/event/map/mapInfo/make.ts","../../src/rmmz/rpg/data/event/map/schema.ts","../../src/rmmz/rpg/data/event/map/event/page/schema.ts","../../src/rmmz/rpg/data/event/map/event/page/condition/schema.ts","../../src/rmmz/rpg/data/event/map/event/page/image/schema.ts","../../src/rmmz/rpg/data/event/map/event/page/eventCommand/moveRoute/schema.ts","../../src/rmmz/rpg/data/event/validate.ts","../../src/rmmz/rpg/data/event/map/mapInfo/schema.ts","../../src/rmmz/rpg/data/main/defaultDataLabels.ts","../../src/rmmz/rpg/data/main/members/damage/damageDefault.ts","../../src/rmmz/rpg/data/main/members/damage/make.ts","../../src/rmmz/rpg/data/main/traitContainers/actor/actor.ts","../../src/rmmz/rpg/data/main/traitContainers/armor/armor.ts","../../src/rmmz/rpg/data/main/traitContainers/class/class.ts","../../src/rmmz/rpg/data/main/traitContainers/enemy/enemy.ts","../../src/rmmz/rpg/data/main/traitContainers/state/state.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/default.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/format.ts","../../src/rmmz/rpg/data/main/traitContainers/weapon/make.ts","../../src/rmmz/rpg/data/main/traitContainers/weapon/weaponDefault.ts","../../src/rmmz/rpg/data/main/usableItems/core/hitType/constants.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/labels/defaultLabelSet.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/specialEffect/constants.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/format.ts","../../src/rmmz/rpg/data/main/usableItems/core/labels/item/itemDefault.ts","../../src/rmmz/rpg/data/main/usableItems/core/labels/skill/skillDefault.ts","../../src/rmmz/rpg/data/main/usableItems/core/labels/usableItemDefault.ts","../../src/rmmz/rpg/data/main/usableItems/item.ts","../../src/rmmz/rpg/data/main/usableItems/skill.ts","../../src/rmmz/rpg/data/main/primitiveSchema/integer.schema.ts","../../src/rmmz/rpg/data/main/primitiveSchema/positiveInteger.schema.ts","../../src/rmmz/rpg/data/main/primitiveSchema/string.schema.ts","../../src/rmmz/rpg/data/main/schema.usableItem.ts","../../src/rmmz/rpg/data/main/validate.ts","../../src/rmmz/rpg/data/main/traitContainers/weapon/schema.ts","../../src/rmmz/rpg/data/note/note.ts","../../src/rmmz/rpg/data/sourceKindConstants.ts","../../src/rmmz/rpg/labels/default.ts","../../src/rmmz/rpg/labelRegistryDefault.ts","../../src/rmmz/system/core/advanced/advanced.ts","../../src/rmmz/system/core/audio/soundArray/soundArray.ts","../../src/rmmz/system/core/booleanOptions/gameMenu/gameMenu.ts","../../src/rmmz/system/core/booleanOptions/gameMenu/itemCategories/itemCategories.ts","../../src/rmmz/system/core/booleanOptions/gameMenu/menuCommands/make.ts","../../src/rmmz/system/core/booleanOptions/gameMenu/schema.ts","../../src/rmmz/system/core/booleanOptions/gameMenu/itemCategories/schema.ts","../../src/rmmz/system/core/booleanOptions/gameMenu/menuCommands/schema.ts","../../src/rmmz/system/core/booleanOptions/gameSetting/options.ts","../../src/rmmz/system/core/booleanOptions/gameSetting/schema.ts","../../src/rmmz/system/core/gameInitial/gameInitial.ts","../../src/rmmz/system/core/rpgDataTypes/dataTypes.ts","../../src/rmmz/system/core/terms/terms.ts","../../src/rmmz/system/core/titleCommandWindow/titleCommandWindow.ts","../../src/rmmz/system/core/vehicle/vehicle.ts","../../src/rmmz/system/gameEdit/gameEdit.ts","../../src/rmmz/system/systemLabels.ts","../../src/rmmz/system/core/attackMotion/schema.ts","../../src/rmmz/system/core/images/size/schema.ts","../../src/rmmz/system/gameEdit/testPlay/testBattler/schema.ts","../../src/rmmz/system/core/audio/schema.ts","../../src/rmmz/system/core/battle/schema.ts","../../src/rmmz/system/core/gameInitial/schema.ts","../../src/rmmz/system/core/images/title/schema.ts","../../src/rmmz/system/core/other/schema.ts","../../src/rmmz/system/core/rpgDataTypes/schema.ts","../../src/rmmz/system/core/terms/core/commands/schema.ts","../../src/rmmz/system/core/terms/core/messages/schema.ts","../../src/rmmz/system/core/terms/schema.ts","../../src/rmmz/system/core/terms/core/schema.ts","../../src/rmmz/system/core/terms/core/basic/schema.ts","../../src/rmmz/system/core/terms/core/paramArray/schema.ts","../../src/rmmz/system/gameEdit/schema.ts","../../src/rmmz/system/gameEdit/editor/schema.ts","../../src/rmmz/system/core/vehicle/schema.ts","../../src/rmmz/system/schemaBundle.ts","../../src/rmmz/system/core/advanced/schema.ts","../../src/rmmz/system/schemaMerge.ts","../../src/rmmz/system/validate.ts","../../src/rmmz/system/core/terms/core/basic/make.ts","../../src/rmmz/system/core/terms/core/commands/commands.ts","../../src/rmmz/system/core/terms/core/messages/make.ts","../../src/rmmz/system/make.ts","../../src/rmmz/eventCommand/commands/actor/changeText/make.ts","../../src/rmmz/eventCommand/commands/audio/play/make.ts","../../src/rmmz/eventCommand/commands/flow/callCommonEvent/make.ts","../../src/rmmz/eventCommand/commands/flow/controlSwtches/make.ts","../../src/rmmz/eventCommand/commands/message/comment/make.ts","../../src/rmmz/eventCommand/commands/message/inputNumber/make.ts","../../src/rmmz/eventCommand/commands/message/setupChoice/make.ts","../../src/rmmz/eventCommand/commands/message/showMessage/convert.ts","../../src/rmmz/eventCommand/commands/script/make.ts","../../src/rmmz/eventCommand/commands/variable/constants.ts","../../src/rmmz/eventCommand/commands/variable/types/enemy/dataSource.ts","../../src/rmmz/eventCommand/commands/variable/convert.ts","../../src/rmmz/eventCommand/commands/variable/getValue.ts","../../src/rmmz/eventCommand/utils/clone/clone.ts","../../src/rmmz/eventCommand/validate.ts","../../src/rmmz/eventCommand/commands/actor/changeText/schema.ts","../../src/rmmz/eventCommand/commands/message/scrollText/head/schema.ts","../../src/rmmz/eventCommand/commandEmptyParam.schema.ts","../../src/rmmz/eventCommand/commandTextParam.schema.ts","../../src/rmmz/eventCommand/commands/flow/callCommonEvent/schema.ts","../../src/rmmz/eventCommand/commands/message/setupChoice/schema.ts","../../src/rmmz/eventCommand/commands/message/setupChoice/item/schema.ts","../../src/rmmz/eventCommand/commands/message/inputNumber/schema.ts","../../src/rmmz/eventCommand/commands/message/showMessage/schema.ts","../../src/rmmz/eventCommand/validateTextBody.ts","../../src/rmmz/folderNames/asset/audio.ts","../../src/rmmz/folderNames/asset/images.ts","../../src/rmmz/folderNames/data/fileNames.ts","../../src/rmmz/folderNames/folderName.ts","../../src/rmmz/plugin/schema/compile/kinds/core/paramBase/basicMetaField.ts","../../src/rmmz/plugin/schema/compile/kinds/numbers.ts","../../src/rmmz/plugin/schema/compile/kinds/compileField.ts","../../src/rmmz/plugin/schema/compile/kinds/string.ts","../../src/rmmz/plugin/schema/compile/kinds/combo.ts","../../src/rmmz/plugin/schema/compile/kinds/select.ts","../../src/rmmz/plugin/schema/compile/kinds/rpgDataKind.ts","../../src/rmmz/plugin/schema/compile/kinds/boolean.ts","../../src/rmmz/plugin/schema/compile/kinds/structDef.ts","../../src/rmmz/plugin/schema/compile/kinds/core/mapping/mapping.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/keyword/constants.ts","../../src/rmmz/plugin/schema/compile/kinds/core/rmmzJSON/parseDeepJSON.ts","../../src/rmmz/plugin/schema/compile/kinds/core/attributes.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/block.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/option.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/flashState.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/parse.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/state.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/struct.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parse/dependencies.ts","../../src/rmmz/plugin/schema/compile/kinds/core/parsePlugin.ts","../../src/rmmz/plugin/plugin.ts","../../src/rmmz/plugin/schema/compile/kinds/compileFlatStruct.ts"],"sourcesContent":["export const createControlCharFormat = <C extends string>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromStringArray = <C extends string>(\r\n  char: C,\r\n  array: ReadonlyArray<string>\r\n) => {\r\n  return array.map((text, index) => ({\r\n    text,\r\n    controlChar: createControlCharFormat(char, index),\r\n  }));\r\n};\r\n","import type { ControlChar } from \"./types\";\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (text: string): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n  return Array.from(text.matchAll(regex)).map<ControlChar>(\r\n    (match: RegExpMatchArray) => ({\r\n      char: match[1],\r\n      id: parseInt(match[2], 10),\r\n    })\r\n  );\r\n};\r\n","import type { Data_System } from \"@RpgTypes/system\";\r\nimport type { ControlCharInfo } from \"./controlChars\";\r\nimport { createControlCharFormat } from \"./controlChars\";\r\nimport { CTRL_CHAR_ACTOR, CTRL_CHAR_VARIABLE } from \"./controlChars/constants\";\r\nimport type { Data_Actor } from \"./main\";\r\n\r\nexport const createActorControlChars = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    text: actor.name,\r\n    controlChar: createControlCharFormat(CTRL_CHAR_ACTOR, actor.id),\r\n  }));\r\n};\r\n\r\nexport const createSystemVariableControlChars = (\r\n  system: Pick<Data_System, \"variables\">\r\n): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(CTRL_CHAR_VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","export const CTRL_CHAR_ACTOR = \"N\" as const;\r\nexport const CTRL_CHAR_VARIABLE = \"V\" as const;\r\nexport const CTRL_CHAR_POSTION_X = \"PX\" as const;\r\nexport const CTRL_CHAR_POSTION_Y = \"PY\" as const;\r\nexport const CTRL_CHAR_GOLD = \"G\" as const;\r\nexport const CTRL_CHAR_PARTY = \"P\" as const;\r\nexport const CTRL_CHAR_COLOR = \"C\" as const;\r\nexport const CTRL_CHAR_ICON = \"I\" as const;\r\nexport const CTRL_CHAR_FONT_SIZE = \"FS\" as const;\r\n","import type { Data_CommonEvent } from \"./commonEvent\";\r\nimport type { Data_Troop, Troop_EventConditions, Troop_Member } from \"./troop\";\r\n\r\nexport const makeCommonEventData = (\r\n  data: Partial<Data_CommonEvent> = {}\r\n): Data_CommonEvent => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  trigger: data.trigger ?? 0,\r\n  list: data.list ?? [],\r\n  switchId: data.switchId ?? 0,\r\n});\r\n\r\nexport const makeTroopData = (data: Partial<Data_Troop> = {}): Data_Troop => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  members: data.members ?? [],\r\n  pages: data.pages ?? [],\r\n});\r\n\r\nexport const makeTroopMember = (\r\n  data: Partial<Troop_Member> = {}\r\n): Troop_Member => ({\r\n  enemyId: data.enemyId ?? 0,\r\n  x: data.x ?? 0,\r\n  y: data.y ?? 0,\r\n  hidden: data.hidden ?? false,\r\n});\r\n\r\nexport const makeTroopEventConditions = (\r\n  data: Partial<Troop_EventConditions> = {}\r\n): Troop_EventConditions => ({\r\n  actorHp: data.actorHp ?? 0,\r\n  actorId: data.actorId ?? 0,\r\n  enemyValid: data.enemyValid ?? 0,\r\n  switchValid: data.switchValid ?? 0,\r\n});\r\n","import type { MapEvent_PageCondition, PageConditionArg } from \"./condition\";\r\n\r\nexport const makeEventPageCondition = (\r\n  arg: Partial<PageConditionArg> = {}\r\n): MapEvent_PageCondition => {\r\n  return {\r\n    switch1Id: arg.switch1Id ?? 0,\r\n    switch1Valid: arg.switch1Id !== undefined,\r\n    switch2Id: arg.switch2Id ?? 0,\r\n    switch2Valid: arg.switch2Id !== undefined,\r\n    variableId: arg.variableId ?? 0,\r\n    variableValid: arg.variableId !== undefined,\r\n    variableValue: arg.variableValue ?? 0,\r\n    selfSwitchCh: arg.selfSwitchCh ?? \"A\",\r\n    selfSwitchValid: arg.selfSwitchCh !== undefined,\r\n    itemId: arg.itemId ?? 0,\r\n    itemValid: arg.itemId !== undefined,\r\n    actorId: arg.actorId ?? 0,\r\n    actorValid: arg.actorId !== undefined,\r\n  };\r\n};\r\n","export const NO_OPERATION = 0 as const;\r\nexport const SHOW_MESSAGE = 101 as const;\r\nexport const SHOW_MESSAGE_BODY = 401 as const;\r\nexport const SHOW_CHOICES = 102 as const;\r\nexport const SHOW_CHOICES_ITEM = 402 as const;\r\nexport const INPUT_NUMBER = 103 as const;\r\nexport const SELECT_ITEM = 104 as const;\r\nexport const SHOW_SCROLLING_TEXT = 105 as const;\r\nexport const SHOW_SCROLLING_TEXT_BODY = 405 as const;\r\nexport const COMMENT_HEAD = 108 as const;\r\nexport const COMMENT_BODY = 408 as const;\r\nexport const SKIP = 109 as const;\r\nexport const CONDITIONAL_BRANCH = 111 as const;\r\nexport const CONDITIONAL_BRANCH_ELSE = 411 as const;\r\nexport const LOOP = 112 as const;\r\nexport const LOOP_BREAK = 113 as const;\r\nexport const EXIT_EVENT_PROCESSING = 115 as const;\r\nexport const COMMON_EVENT = 117 as const;\r\nexport const LABEL = 118 as const;\r\nexport const LABEL_JUMP = 119 as const;\r\nexport const CONTROL_SWITCHES = 121 as const;\r\nexport const CONTROL_VARIABLES = 122 as const;\r\nexport const CONTROL_SELF_SWITCH = 123 as const;\r\nexport const CONTROL_TIMER = 124 as const;\r\nexport const CHANGE_GOLD = 125 as const;\r\nexport const CHANGE_ITEMS = 126 as const;\r\nexport const CHANGE_WEAPONS = 127 as const;\r\nexport const CHANGE_ARMORS = 128 as const;\r\nexport const CHANGE_PARTY_MEMBER = 129 as const;\r\nexport const CHANGE_BATTLE_BGM = 132 as const;\r\nexport const CHANGE_VICTORY_ME = 133 as const;\r\nexport const CHANGE_SAVE_ACCESS = 134 as const;\r\nexport const CHANGE_MENU_ACCESS = 135 as const;\r\nexport const CHANGE_ENCOUNTER = 136 as const;\r\nexport const CHANGE_FORMATION_ACCESS = 137 as const;\r\nexport const CHANGE_WINDOW_COLOR = 138 as const;\r\n\r\nexport const CHANGE_DEFEAT_ME = 139 as const;\r\nexport const CHANGE_VEHICLE_BGM = 140 as const;\r\n\r\nexport const TRANSFER_PLAYER = 201 as const;\r\nexport const SET_VEHICLE_LOCATION = 202 as const;\r\nexport const SET_EVENT_LOCATION = 203 as const;\r\nexport const SCROLL_MAP = 204 as const;\r\nexport const SET_MOVEMENT_ROUTE = 205 as const;\r\nexport const GET_ONOFF_VEHICLE = 206 as const;\r\nexport const CHANGE_TRANSPARENCY = 211 as const;\r\nexport const SHOW_ANIMATION = 212 as const;\r\nexport const SHOW_BALLOON_ICON = 213 as const;\r\nexport const ERASE_EVENT = 214 as const;\r\nexport const CHANGE_PLAYER_FOLLOWERS = 216 as const;\r\nexport const GATHER_FOLLOWERS = 217 as const;\r\nexport const FADEOUT_SCREEN = 221 as const;\r\nexport const FADEIN_SCREEN = 222 as const;\r\nexport const TINT_SCREEN = 223 as const;\r\nexport const FLASH_SCREEN = 224 as const;\r\nexport const SHAKE_SCREEN = 225 as const;\r\n\r\nexport const WAIT = 230 as const;\r\nexport const SHOW_PICTURE = 231 as const;\r\nexport const MOVE_PICTURE = 232 as const;\r\nexport const ROTATE_PICTURE = 233 as const;\r\nexport const TINT_PICTURE = 234 as const;\r\nexport const ERASE_PICTURE = 235 as const;\r\nexport const SET_WEATHER_EFFECT = 236 as const;\r\n\r\nexport const PLAY_BGM = 241 as const;\r\nexport const FADEOUT_BGM = 242 as const;\r\nexport const SAVE_BGM = 243 as const;\r\nexport const RESUME_BGM = 244 as const;\r\n\r\nexport const PLAY_BGS = 245 as const;\r\nexport const FADEOUT_BGS = 246 as const;\r\nexport const PLAY_ME = 249 as const;\r\nexport const PLAY_SE = 250 as const;\r\nexport const STOP_SE = 251 as const;\r\n\r\nexport const PLAY_MOVIE = 261 as const;\r\n\r\nexport const CHANGE_TILESET = 282 as const;\r\nexport const CHANGE_BATTLE_BACKGROUND = 283 as const;\r\nexport const CHANGE_PARALLAX = 284 as const;\r\nexport const GET_LOCATION_INFO = 285 as const;\r\n\r\nexport const BATTLE_PROCESSING = 301 as const;\r\n\r\nexport const SHOP_PROCESSING = 302 as const;\r\nexport const SHOP_PROCESSING_BODY = 605 as const;\r\nexport const NAME_INPUT_PROCESSING = 303 as const;\r\nexport const CHANGE_HP = 311 as const;\r\nexport const CHANGE_MP = 312 as const;\r\nexport const CHANGE_TP = 313 as const;\r\nexport const RECOVER_ALL = 314 as const;\r\nexport const CHANGE_EXP = 315 as const;\r\n\r\nexport const CHANGE_NAME = 320 as const;\r\nexport const CHANGE_CLASS = 321 as const;\r\nexport const CHANGE_ACTOR_IMAGES = 322 as const;\r\nexport const CHANGE_VEHICLE_IMAGE = 323 as const;\r\nexport const CHANGE_NICKNAME = 324 as const;\r\nexport const CHANGE_PROFILE = 325 as const;\r\n\r\nexport const CHANGE_ENEMY_HP = 331 as const;\r\nexport const CHANGE_ENEMY_MP = 332 as const;\r\n\r\nexport const CHANGE_ENEMY_STATE = 333 as const;\r\nexport const ENEMY_RECOVER_ALL = 334 as const;\r\nexport const ENEMY_APPEAR = 335 as const;\r\nexport const ENEMY_TRANSFORM = 336 as const;\r\nexport const SHOW_BATTLE_ANIMATION = 337 as const;\r\nexport const FORCE_ACTION = 339 as const;\r\nexport const ABORT_BATTLE = 340 as const;\r\nexport const OPEN_MENU_SCREEN = 351 as const;\r\n\r\nexport const CHANGE_ENEMY_TP = 342 as const;\r\n\r\nexport const OPEN_SAVE_SCREEN = 352 as const;\r\nexport const GAME_OVER = 353 as const;\r\nexport const RETURN_TO_TITLE_SCREEN = 354 as const;\r\nexport const SCRIPT_EVAL = 355 as const;\r\nexport const SCRIPT_EVAL_BODY = 655 as const;\r\nexport const PLUGIN_COMMAND_MV = 356 as const;\r\nexport const PLUGIN_COMMAND_MZ = 357 as const;\r\n","import type { CommandParamaterType } from \"@RpgTypes/eventCommand\";\r\nimport type { EventCommandLike } from \"./eventComandLike\";\r\nimport type { EventCode } from \"./eventCommand\";\r\n\r\nexport const createEventCommand = <\r\n  Code extends EventCode,\r\n  Param extends CommandParamaterType<Code>\r\n>(\r\n  code: Code,\r\n  param: Param,\r\n  indent: number = 0\r\n): EventCommandLike<Code, Param> => {\r\n  return {\r\n    code,\r\n    indent,\r\n    parameters: param,\r\n  };\r\n};\r\n","export const ROUTE_END = 0 as const;\r\nexport const ROUTE_MOVE_DOWN = 1 as const;\r\nexport const ROUTE_MOVE_LEFT = 2 as const;\r\nexport const ROUTE_MOVE_RIGHT = 3 as const;\r\nexport const ROUTE_MOVE_UP = 4 as const;\r\nexport const ROUTE_MOVE_LOWER_L = 5 as const;\r\nexport const ROUTE_MOVE_LOWER_R = 6 as const;\r\nexport const ROUTE_MOVE_UPPER_L = 7 as const;\r\nexport const ROUTE_MOVE_UPPER_R = 8 as const;\r\nexport const ROUTE_MOVE_RANDOM = 9 as const;\r\nexport const ROUTE_MOVE_TOWARD = 10 as const;\r\nexport const ROUTE_MOVE_AWAY = 11 as const;\r\nexport const ROUTE_MOVE_FORWARD = 12 as const;\r\nexport const ROUTE_MOVE_BACKWARD = 13 as const;\r\nexport const ROUTE_JUMP = 14 as const;\r\nexport const ROUTE_WAIT = 15 as const;\r\nexport const ROUTE_TURN_DOWN = 16 as const;\r\nexport const ROUTE_TURN_LEFT = 17 as const;\r\nexport const ROUTE_TURN_RIGHT = 18 as const;\r\nexport const ROUTE_TURN_UP = 19 as const;\r\nexport const ROUTE_TURN_90D_R = 20 as const;\r\nexport const ROUTE_TURN_90D_L = 21 as const;\r\nexport const ROUTE_TURN_180D = 22 as const;\r\nexport const ROUTE_TURN_90D_R_L = 23 as const;\r\nexport const ROUTE_TURN_RANDOM = 24 as const;\r\nexport const ROUTE_TURN_TOWARD = 25 as const;\r\nexport const ROUTE_TURN_AWAY = 26 as const;\r\nexport const ROUTE_SWITCH_ON = 27 as const;\r\nexport const ROUTE_SWITCH_OFF = 28 as const;\r\nexport const ROUTE_CHANGE_SPEED = 29 as const;\r\nexport const ROUTE_CHANGE_FREQ = 30 as const;\r\nexport const ROUTE_WALK_ANIME_ON = 31 as const;\r\nexport const ROUTE_WALK_ANIME_OFF = 32 as const;\r\nexport const ROUTE_STEP_ANIME_ON = 33 as const;\r\nexport const ROUTE_STEP_ANIME_OFF = 34 as const;\r\nexport const ROUTE_DIR_FIX_ON = 35 as const;\r\nexport const ROUTE_DIR_FIX_OFF = 36 as const;\r\nexport const ROUTE_THROUGH_ON = 37 as const;\r\nexport const ROUTE_THROUGH_OFF = 38 as const;\r\nexport const ROUTE_TRANSPARENT_ON = 39 as const;\r\nexport const ROUTE_TRANSPARENT_OFF = 40 as const;\r\nexport const ROUTE_CHANGE_IMAGE = 41 as const;\r\nexport const ROUTE_CHANGE_OPACITY = 42 as const;\r\nexport const ROUTE_CHANGE_BLEND_MODE = 43 as const;\r\nexport const ROUTE_PLAY_SE = 44 as const;\r\nexport const ROUTE_SCRIPT = 45 as const;\r\n","import { makeEventPageCondition } from \"./condition\";\r\nimport type { MapEvent_Image } from \"./image/types\";\r\nimport type { MapEvent } from \"./mapEvent\";\r\nimport type { MapEventPage } from \"./page\";\r\n\r\nexport const makeMapEvent = (): MapEvent => {\r\n  return {\r\n    id: 1,\r\n    name: \"\",\r\n    pages: [],\r\n    note: \"\",\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventIamge = (): MapEvent_Image => {\r\n  return {\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    direction: 2,\r\n    pattern: 0,\r\n    tileId: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventPage = (): MapEventPage => {\r\n  return {\r\n    conditions: makeEventPageCondition(),\r\n    list: [],\r\n    directionFix: false,\r\n    image: makeMapEventIamge(),\r\n    moveFrequency: 5,\r\n    moveRoute: {\r\n      list: [],\r\n      repeat: false,\r\n      skippable: false,\r\n      wait: false,\r\n    },\r\n  };\r\n};\r\n","import type { Data_Map } from \"./map\";\r\n\r\nexport const makeMapData = (map: Partial<Data_Map> = {}): Data_Map => {\r\n  return {\r\n    data: map.data ?? [],\r\n    battleback1Name: map.battleback1Name ?? \"\",\r\n    battleback2Name: map.battleback2Name ?? \"\",\r\n\r\n    autoplayBgm: map.autoplayBgm ?? false,\r\n    autoplayBgs: map.autoplayBgs ?? false,\r\n    parallaxLoopX: map.parallaxLoopX ?? false,\r\n    parallaxLoopY: map.parallaxLoopY ?? false,\r\n    parallaxName: map.parallaxName ?? \"\",\r\n    parallaxShow: map.parallaxShow ?? false,\r\n    parallaxSx: map.parallaxSx ?? 0,\r\n    parallaxSy: map.parallaxSy ?? 0,\r\n\r\n    x: map.x ?? 0,\r\n    y: map.y ?? 0,\r\n    width: map.width ?? 0,\r\n    height: map.height ?? 0,\r\n    note: map.note ?? \"\",\r\n\r\n    bgm: map.bgm ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    bgs: map.bgs ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    disableDashing: map.disableDashing ?? false,\r\n    displayName: map.displayName ?? \"\",\r\n    encounterList: map.encounterList ?? [],\r\n    events: map.events ?? [],\r\n  };\r\n};\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\n\r\nconst makeMapName = (mapId: number) => {\r\n  return mapId.toString().padStart(3, \"0\");\r\n};\r\n\r\nexport const makeMapInfoData = (\r\n  info: { id: number } & Partial<Data_MapInfo> = { id: 0 }\r\n): Data_MapInfo => {\r\n  return {\r\n    name: info.name ?? makeMapName(info.id),\r\n    id: info.id,\r\n    expanded: info.expanded ?? false,\r\n    order: info.order ?? 0,\r\n    parentId: info.parentId ?? 0,\r\n    scrollX: info.scrollX ?? 0,\r\n    scrollY: info.scrollY ?? 0,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AudioFileParams } from \"src/utils\";\r\nimport type { MapEvent } from \"./event\";\r\nimport SCHEMA_MAP_EVENT_PAGE from \"./event/page/schema\";\r\nimport type { Data_Map } from \"./map\";\r\nimport type { Encounter } from \"./members\";\r\n\r\nconst SCHEMA_DATA_MAP = {\r\n  type: \"object\",\r\n\r\n  required: [\r\n    \"battleback1Name\",\r\n    \"battleback2Name\",\r\n    \"note\",\r\n    \"width\",\r\n    \"height\",\r\n    \"x\",\r\n    \"y\",\r\n    \"parallaxSy\",\r\n    \"parallaxSx\",\r\n    \"parallaxLoopY\",\r\n    \"parallaxLoopX\",\r\n    \"disableDashing\",\r\n    \"parallaxName\",\r\n    \"parallaxShow\",\r\n    \"displayName\",\r\n    \"data\",\r\n    \"autoplayBgm\",\r\n    \"bgm\",\r\n    \"autoplayBgs\",\r\n    \"bgs\",\r\n  ] satisfies (keyof Data_Map)[],\r\n  properties: {\r\n    data: { type: \"array\", items: { type: \"integer\" } },\r\n    battleback1Name: { type: \"string\" },\r\n    battleback2Name: { type: \"string\" },\r\n\r\n    parallaxLoopY: { type: \"boolean\" },\r\n    parallaxLoopX: { type: \"boolean\" },\r\n    parallaxName: { type: \"string\" },\r\n    parallaxShow: { type: \"boolean\" },\r\n    parallaxSy: { type: \"integer\" },\r\n    parallaxSx: { type: \"integer\" },\r\n\r\n    x: { type: \"integer\", minimum: 0 },\r\n    y: { type: \"integer\", minimum: 0 },\r\n    width: { type: \"integer\", minimum: 0 },\r\n    height: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    displayName: { type: \"string\" },\r\n    disableDashing: { type: \"boolean\" },\r\n\r\n    autoplayBgm: { type: \"boolean\" },\r\n    bgm: {\r\n      type: \"object\",\r\n      required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        pan: { type: \"integer\" },\r\n        pitch: { type: \"integer\" },\r\n        volume: { type: \"integer\" },\r\n      },\r\n    } as const satisfies JSONSchemaType<AudioFileParams>,\r\n\r\n    autoplayBgs: { type: \"boolean\" },\r\n    bgs: {\r\n      type: \"object\",\r\n      required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        pan: { type: \"integer\" },\r\n        pitch: { type: \"integer\" },\r\n        volume: { type: \"integer\" },\r\n      },\r\n    } as const satisfies JSONSchemaType<AudioFileParams>,\r\n\r\n    encounterList: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\"regionSet\", \"troopId\", \"weight\"],\r\n        properties: {\r\n          regionSet: { type: \"array\", items: { type: \"integer\" } },\r\n          troopId: { type: \"integer\" },\r\n          weight: { type: \"integer\" },\r\n        },\r\n      } satisfies JSONSchemaType<Encounter>,\r\n    } satisfies JSONSchemaType<Encounter[]>,\r\n    events: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"id\",\r\n          \"name\",\r\n          \"x\",\r\n          \"y\",\r\n          \"pages\",\r\n        ] satisfies (keyof MapEvent)[],\r\n        properties: {\r\n          id: { type: \"integer\" },\r\n          name: { type: \"string\" },\r\n          x: { type: \"integer\" },\r\n          y: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n          pages: {\r\n            type: \"array\",\r\n            items: SCHEMA_MAP_EVENT_PAGE,\r\n          },\r\n        },\r\n      } as const,\r\n    },\r\n  }, // satisfies Record<keyof Data_Map, unknown>,\r\n} as const satisfies JSONSchemaType<Omit<Data_Map, \"events\">>;\r\n// evetntsはコモンイベントが入ってて複雑。簡略化して対応する\r\n\r\nexport default SCHEMA_DATA_MAP;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MapEvent_PageCondition } from \"./condition\";\r\nimport SCHEMA_MAP_EVENT_PAGE_CONDITION from \"./condition/schema\";\r\nimport type { MoveRouteDataUnkwnown } from \"./eventCommand/moveRoute\";\r\nimport SCHEMA_MOVEROUTE_DATA from \"./eventCommand/moveRoute/schema\";\r\nimport SCHEMA_MAP_EVENT_IMAGE from \"./image/schema\";\r\nimport type { MapEvent_Image } from \"./image/types\";\r\nimport type { MapEventPage } from \"./page\";\r\n\r\nconst SCHEMA_MAP_EVENT_PAGE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"image\",\r\n    \"moveRoute\",\r\n    \"conditions\",\r\n    \"directionFix\",\r\n    \"moveFrequency\",\r\n  ] satisfies (keyof MapEventPage)[],\r\n  properties: {\r\n    moveFrequency: { type: \"integer\" },\r\n    directionFix: { type: \"boolean\" },\r\n    conditions:\r\n      SCHEMA_MAP_EVENT_PAGE_CONDITION satisfies JSONSchemaType<MapEvent_PageCondition>,\r\n\r\n    image: SCHEMA_MAP_EVENT_IMAGE satisfies JSONSchemaType<MapEvent_Image>,\r\n    moveRoute:\r\n      SCHEMA_MOVEROUTE_DATA satisfies JSONSchemaType<MoveRouteDataUnkwnown>,\r\n  },\r\n} as const satisfies JSONSchemaType<Omit<MapEventPage, \"list\">>;\r\n\r\nexport default SCHEMA_MAP_EVENT_PAGE;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MapEvent_PageCondition } from \"./condition\";\r\n\r\nconst SCHEMA_MAP_EVENT_PAGE_CONDITION = {\r\n  type: \"object\",\r\n  required: [\r\n    \"switch1Id\",\r\n    \"switch1Valid\",\r\n    \"switch2Id\",\r\n    \"switch2Valid\",\r\n    \"variableId\",\r\n    \"variableValid\",\r\n    \"selfSwitchCh\",\r\n    \"selfSwitchValid\",\r\n    \"variableValue\",\r\n    \"itemId\",\r\n    \"itemValid\",\r\n    \"actorId\",\r\n    \"actorValid\",\r\n  ],\r\n  properties: {\r\n    switch1Id: { type: \"integer\", minimum: 0 },\r\n    switch1Valid: { type: \"boolean\" },\r\n    switch2Id: { type: \"integer\", minimum: 0 },\r\n    switch2Valid: { type: \"boolean\" },\r\n    variableId: { type: \"integer\", minimum: 0 },\r\n    variableValid: { type: \"boolean\" },\r\n    selfSwitchCh: { type: \"string\" },\r\n    selfSwitchValid: { type: \"boolean\" },\r\n    variableValue: { type: \"integer\" },\r\n    itemId: { type: \"integer\", minimum: 0 },\r\n    itemValid: { type: \"boolean\" },\r\n    actorId: { type: \"integer\" },\r\n    actorValid: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<MapEvent_PageCondition>;\r\n\r\nexport default SCHEMA_MAP_EVENT_PAGE_CONDITION;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MapEvent_Image } from \"./types\";\r\n\r\nconst SCHEMA_MAP_EVENT_IMAGE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"characterIndex\",\r\n    \"characterName\",\r\n    \"direction\",\r\n    \"pattern\",\r\n    \"tileId\",\r\n  ],\r\n  properties: {\r\n    characterIndex: { type: \"integer\", minimum: 0 },\r\n    characterName: { type: \"string\" },\r\n    direction: { type: \"integer\", enum: [2, 4, 6, 8] },\r\n    pattern: { type: \"integer\" },\r\n    tileId: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<MapEvent_Image>;\r\n\r\nexport default SCHEMA_MAP_EVENT_IMAGE;\r\n","import type { AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nimport type { MoveRouteDataUnkwnown } from \"./moveRoute\";\r\n\r\nconst SCHEMA_MOVEROUTE_DATA = {\r\n  type: \"object\",\r\n  required: [\"wait\", \"repeat\", \"skippable\", \"list\"],\r\n  properties: {\r\n    wait: { type: \"boolean\" },\r\n    repeat: { type: \"boolean\" },\r\n    skippable: { type: \"boolean\" },\r\n    list: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\"code\", \"parameters\"],\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          parameters: {\r\n            type: \"array\",\r\n            items: {\r\n              oneOf: [\r\n                { type: \"string\" },\r\n                { type: \"number\" },\r\n                {\r\n                  type: \"object\",\r\n                  required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n                  properties: {\r\n                    name: { type: \"string\" },\r\n                    pan: { type: \"integer\" },\r\n                    pitch: { type: \"integer\" },\r\n                    volume: { type: \"integer\" },\r\n                  },\r\n                } satisfies JSONSchemaType<AudioFileParams>,\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<MoveRouteDataUnkwnown>;\r\n\r\nexport default SCHEMA_MOVEROUTE_DATA;\r\n","import Ajv from \"ajv\";\r\nimport type { Data_MapInfo } from \"./map\";\r\nimport SCHEMA_DATA_MAP_INFO from \"./map/mapInfo/schema\";\r\nimport SCHEMA_DATA_MAP from \"./map/schema\";\r\n\r\nconst ajv = new Ajv({\r\n  strict: true,\r\n});\r\n\r\nconst mapInfo = ajv.compile(SCHEMA_DATA_MAP_INFO);\r\n\r\nconst mapData = ajv.compile(SCHEMA_DATA_MAP);\r\n\r\nexport const isDataMapInfo = (data: unknown): data is Data_MapInfo => {\r\n  return mapInfo(data);\r\n};\r\n\r\nexport const isDataMap = (data: unknown): data is Data_MapInfo => {\r\n  return mapData(data);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_MapInfo } from \"./mapInfo\";\r\n\r\nconst SCHEMA_DATA_MAP_INFO = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"expanded\",\r\n    \"order\",\r\n    \"parentId\",\r\n    \"scrollX\",\r\n    \"scrollY\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    expanded: { type: \"boolean\" },\r\n    order: { type: \"integer\" },\r\n    parentId: { type: \"integer\" },\r\n    scrollX: { type: \"number\" },\r\n    scrollY: { type: \"number\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_MapInfo>;\r\n\r\nexport default SCHEMA_DATA_MAP_INFO;\r\n","import type { DomainLabel } from \"src/templates\";\r\nimport type { DataLabels } from \"./dataLabels\";\r\nimport type {\r\n  ActorLabels,\r\n  ArmorLabels,\r\n  ClassLabels,\r\n  EnemyLabels,\r\n  StateLabels,\r\n  WeaponLabels,\r\n} from \"./traitContainers\";\r\nimport type { ItemLabels, SkillLabels, UsableItemLabels } from \"./usableItems\";\r\n\r\nexport const LABEL_SET_DATA = {\r\n  actor: {\r\n    title: \"アクター\",\r\n    options: {\r\n      initialEquipments: \"初期装備\",\r\n      faceImage: \"顔画像\",\r\n      characterImage: \"キャラクター画像\",\r\n      svBattlerImage: \"SVバトラー画像\",\r\n      nickname: \"ニックネーム\",\r\n      profile: \"プロフィール\",\r\n      classId: \"職業ID\",\r\n      initialLevel: \"初期レベル\",\r\n      maxLevel: \"最大レベル\",\r\n    },\r\n  } as const satisfies DomainLabel<ActorLabels>,\r\n  class: {\r\n    title: \"職業\",\r\n    options: {\r\n      params: \"パラメータ\",\r\n      learnings: \"習得スキル\",\r\n      expParams: \"経験値パラメータ\",\r\n    },\r\n  } as const satisfies DomainLabel<ClassLabels>,\r\n  armor: {\r\n    title: \"防具\",\r\n    options: {\r\n      armorTypeId: \"防具タイプID\",\r\n      slotTypeId: \"スロットタイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<ArmorLabels>,\r\n  enemy: {\r\n    title: \"敵キャラ\",\r\n    options: {\r\n      dropItems: \"ドロップアイテム\",\r\n      battlerHue: \"バトラーヒュー\",\r\n      battlerName: \"バトラー名\",\r\n      gold: \"ゴールド\",\r\n    },\r\n  } as const satisfies DomainLabel<EnemyLabels>,\r\n  item: {\r\n    title: \"アイテム\",\r\n    options: {\r\n      consumable: \"消耗品\",\r\n    },\r\n  } as const satisfies DomainLabel<ItemLabels>,\r\n  skill: {\r\n    title: \"スキル\",\r\n    options: {\r\n      requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n      requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n      mpCost: \"MP消費\",\r\n      tpCost: \"TP消費\",\r\n    },\r\n  } as const satisfies DomainLabel<SkillLabels>,\r\n  state: {\r\n    title: \"ステート\",\r\n    options: {\r\n      restriction: \"制約\",\r\n      priority: \"優先度\",\r\n      motion: \"モーション\",\r\n      overlay: \"オーバーレイ\",\r\n      removeAtBattleEnd: \"戦闘終了時解除\",\r\n      removeByRestriction: \"制約による解除\",\r\n      autoRemovalTiming: \"自動解除タイミング\",\r\n      minTurns: \"最小ターン数\",\r\n      maxTurns: \"最大ターン数\",\r\n      removeByDamage: \"ダメージによる解除\",\r\n      chanceByDamage: \"ダメージによる解除確率\",\r\n      removeByWalking: \"歩行による解除\",\r\n      stepsToRemove: \"解除までの歩数\",\r\n    },\r\n  } as const satisfies DomainLabel<StateLabels>,\r\n  weapon: {\r\n    title: \"武器\",\r\n    options: {\r\n      weaponTypeId: \"武器タイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<WeaponLabels>,\r\n  usableItem: {\r\n    title: \"\",\r\n    options: {\r\n      scope: \"範囲\",\r\n      speed: \"速度補正\",\r\n      successRate: \"成功率\",\r\n    },\r\n  } as const satisfies DomainLabel<UsableItemLabels>,\r\n  commonEvent: {\r\n    title: \"コモンイベント\",\r\n    options: {\r\n      trigger: \"トリガー\",\r\n      switchId: \"スイッチID\",\r\n      name: \"名前\",\r\n      id: \"ID\",\r\n      list: \"コマンドリスト\",\r\n    },\r\n  },\r\n} as const satisfies DataLabels;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DamageLabels } from \"./damageLabels\";\r\n\r\nexport const DEFAULT_DAMAGE_LABELS = {\r\n  title: \"ダメージ\",\r\n  options: {},\r\n} as const satisfies DomainLabel<DamageLabels>;\r\n","import type { Damage } from \"./damage\";\r\n\r\nexport const makeDamage = (damage: Partial<Damage> = {}): Damage => ({\r\n  type: damage.type ?? 0,\r\n  elementId: damage.elementId ?? 0,\r\n  formula: damage.formula ?? \"\",\r\n  variance: damage.variance ?? 0,\r\n  critical: damage.critical ?? false,\r\n});\r\n","import type { Data_Actor } from \"./types\";\r\n\r\nexport const makeActorData = (actor: Partial<Data_Actor> = {}): Data_Actor => ({\r\n  name: actor.name ?? \"\",\r\n  id: actor.id ?? 0,\r\n  battlerName: actor.battlerName ?? \"\",\r\n  characterName: actor.characterName ?? \"\",\r\n  characterIndex: actor.characterIndex ?? 0,\r\n  faceName: actor.faceName ?? \"\",\r\n  faceIndex: actor.faceIndex ?? 0,\r\n  traits: [],\r\n  note: actor.note ?? \"\",\r\n  classId: actor.classId ?? 0,\r\n  nickname: actor.nickname ?? \"\",\r\n  profile: actor.profile ?? \"\",\r\n  equips: [],\r\n  initialLevel: actor.initialLevel ?? 0,\r\n  maxLevel: actor.maxLevel ?? 0,\r\n});\r\n\r\nexport const normalizeDataActor = (data: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    name: data.name ?? \"\",\r\n    id: data.id ?? 0,\r\n    battlerName: data.battlerName ?? \"\",\r\n    characterName: data.characterName ?? \"\",\r\n    characterIndex: data.characterIndex ?? 0,\r\n    faceName: data.faceName ?? \"\",\r\n    faceIndex: data.faceIndex ?? 0,\r\n    traits: [],\r\n    note: data.note ?? \"\",\r\n    classId: data.classId ?? 0,\r\n    nickname: data.nickname ?? \"\",\r\n    profile: data.profile ?? \"\",\r\n    equips: [],\r\n    initialLevel: data.initialLevel ?? 0,\r\n    maxLevel: data.maxLevel ?? 0,\r\n  };\r\n};\r\n","import type { Data_Armor } from \"./types\";\r\n\r\nexport const makeArmorData = (armor: Partial<Data_Armor> = {}): Data_Armor => ({\r\n  id: armor.id ?? 0,\r\n  name: armor.name ?? \"\",\r\n  iconIndex: armor.iconIndex ?? 0,\r\n  description: armor.description ?? \"\",\r\n  traits: armor.traits ?? [],\r\n  note: armor.note ?? \"\",\r\n  atypeId: armor.atypeId ?? 0,\r\n  params: armor.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: armor.etypeId ?? 0,\r\n  price: armor.price ?? 0,\r\n});\r\n","import type { Data_Class } from \"./types\";\r\n\r\nexport const makeClassData = (data: Partial<Data_Class> = {}): Data_Class => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  learnings: data.learnings ?? [],\r\n  expParams: data.expParams ?? [],\r\n});\r\n","import type { Data_Enemy, DropItem, Enemy_Action } from \"./types\";\r\n\r\nexport const makeDropItem = (dropItem: Partial<DropItem> = {}): DropItem => ({\r\n  dataId: dropItem.dataId ?? 0,\r\n  denominator: dropItem.denominator ?? 0,\r\n  kind: dropItem.kind ?? 0,\r\n});\r\n\r\nexport const makeEnemyAction = (\r\n  action: Partial<Enemy_Action> = {}\r\n): Enemy_Action => ({\r\n  conditionParam1: action.conditionParam1 ?? 0,\r\n  conditionParam2: action.conditionParam2 ?? 0,\r\n  conditionType: action.conditionType ?? 0,\r\n  rating: action.rating ?? 0,\r\n\r\n  skillId: action.skillId ?? 0,\r\n});\r\n\r\nexport const makeEnemyData = (data: Partial<Data_Enemy> = {}): Data_Enemy => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  battlerName: data.battlerName ?? \"\",\r\n  battlerHue: data.battlerHue ?? 0,\r\n  dropItems: data.dropItems?.map(() => makeDropItem()) ?? [],\r\n  exp: data.exp ?? 0,\r\n  gold: data.gold ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  actions: [],\r\n});\r\n","import type { Data_State } from \"./types\";\r\n\r\nexport const makeStateData = (data: Partial<Data_State> = {}): Data_State => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  iconIndex: data.iconIndex ?? 0,\r\n  message1: data.message1 ?? \"\",\r\n  message2: data.message2 ?? \"\",\r\n  message3: data.message3 ?? \"\",\r\n  message4: data.message4 ?? \"\",\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n\r\n  messageType: data.messageType ?? 0,\r\n  releaseByDamage: data.releaseByDamage ?? false,\r\n  restriction: data.restriction ?? 0,\r\n  priority: data.priority ?? 0,\r\n  motion: data.motion ?? 0,\r\n  overlay: data.overlay ?? 0,\r\n  removeAtBattleEnd: data.removeAtBattleEnd ?? false,\r\n  removeByRestriction: data.removeByRestriction ?? false,\r\n  autoRemovalTiming: data.autoRemovalTiming ?? 0,\r\n  minTurns: data.minTurns ?? 0,\r\n  maxTurns: data.maxTurns ?? 0,\r\n  removeByDamage: data.removeByDamage ?? false,\r\n  chanceByDamage: data.chanceByDamage ?? 0,\r\n  removeByWalking: data.removeByWalking ?? false,\r\n  stepsToRemove: data.stepsToRemove ?? 0,\r\n});\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  RawTraitLabel,\r\n  TraitLabelWithOption,\r\n} from \"./items\";\r\nimport type { TraitLabelSet } from \"./labelSet\";\r\n\r\nconst FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_PARAM_RATE_MUL = \"{name} * {value}%\" as const;\r\nconst FORMAT_PARAM_RATE_PLUS = \"{name} + {value}%\" as const;\r\nconst FORMAT_PARAM_VALUE = \"{value}\" as const;\r\n\r\nexport const LABEL_SET_TRAIT = {\r\n  title: \"特徴\",\r\n  options: {\r\n    regularParam: {\r\n      title: \"基本能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        maxHp: \"最大HP\",\r\n        maxMp: \"最大MP\",\r\n        atk: \"攻撃力\",\r\n        def: \"防御力\",\r\n        matk: \"魔法攻撃力\",\r\n        mdef: \"魔法防御力\",\r\n        agi: \"敏捷性\",\r\n        luk: \"運\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<RegularParamLabels>,\r\n    extraParam: {\r\n      title: \"追加能力値\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n      options: {\r\n        hitRate: \"命中率\",\r\n        evasionRate: \"回避率\",\r\n        criticalRate: \"クリティカル率\",\r\n        criticalEvasionRate: \"クリティカル回避率\",\r\n        magicEvasionRate: \"魔法回避率\",\r\n        magicReflectionRate: \"魔法反射率\",\r\n        counterAttackRate: \"反撃率\",\r\n        hpRegenerationRate: \"HP再生率\",\r\n        mpRegenerationRate: \"MP再生率\",\r\n        tpRegenerationRate: \"TP再生率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<ExtraParamLabels>,\r\n    specialParam: {\r\n      title: \"特殊能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        targetRate: \"狙われ率\",\r\n        guardEffectRate: \"防御効果率\",\r\n        recoveryEffectRate: \"回復効果率\",\r\n        pharmacology: \"薬の知識\",\r\n        mpCostRate: \"MP消費率\",\r\n        tpChargeRate: \"TPチャージ率\",\r\n        physicalDamageRate: \"物理ダメージ率\",\r\n        magicDamageRate: \"魔法ダメージ率\",\r\n        floorDamageRate: \"床ダメージ率\",\r\n        experienceRate: \"経験値率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialParamLabels>,\r\n    specialFlag: {\r\n      title: \"特殊フラグ\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        autoBattle: \"自動戦闘\",\r\n        guard: \"防御\",\r\n        substitute: \"身代わり\",\r\n        preventEscape: \"逃走防止\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialFlagOptions>,\r\n    collaps: {\r\n      title: \"消滅エフェクト\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        bossCollaps: \"ボス崩壊\",\r\n        instantCollaps: \"即時崩壊\",\r\n        noneCollaps: \"崩壊なし\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<CollapsOptionLabels>,\r\n    partyAbility: {\r\n      title: \"パーティ能力\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        cancelSurprise: \"不意打ち無効\",\r\n        dropItemDouble: \"アイテムドロップ2倍\",\r\n        encounterHalf: \"エンカウント半減\",\r\n        encounterNone: \"エンカウントなし\",\r\n        goldDouble: \"ゴールド2倍\",\r\n        raisePreemptive: \"先制攻撃率アップ\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<PartyAbilityOptionLabels>,\r\n    elementRate: {\r\n      title: \"属性有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    debuffRate: {\r\n      title: \"弱体有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateRate: {\r\n      title: \"ステート有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateResist: {\r\n      title: \"ステート無効\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackElement: {\r\n      title: \"攻撃属性\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackState: {\r\n      title: \"攻撃ステート\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSpeed: {\r\n      title: \"攻撃速度補正\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    attackTimes: {\r\n      title: \"攻撃追加回数\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    actionPlus: {\r\n      title: \"行動追加\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSkill: {\r\n      title: \"攻撃スキル\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipWeaponType: {\r\n      title: \"装備武器タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipArmorType: {\r\n      title: \"装備防具タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipLock: {\r\n      title: \"装備固定\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipSeal: {\r\n      title: \"装備封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    slotType: {\r\n      title: \"スロットタイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillAdd: {\r\n      title: \"スキル追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillSeal: {\r\n      title: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeAdd: {\r\n      title: \"スキルタイプ追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeSeal: {\r\n      title: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n  },\r\n} as const satisfies DomainLabel<TraitLabelSet>;\r\n","import type {\r\n  FormatErrorLabels,\r\n  FormatRule,\r\n  FormatWithSource,\r\n  Data_NamedItem,\r\n  FormatErrorGroup,\r\n  FormatInput,\r\n} from \"src/namedItemSource\";\r\nimport {\r\n  detectFormatErrors,\r\n  applyFormatRule,\r\n  compileFormatRule,\r\n} from \"src/namedItemSource\";\r\nimport type { Trait } from \"./types\";\r\n\r\nconst RULE_TRAIT = {\r\n  itemMapper: {\r\n    placeHolder: \"name\",\r\n    dataIdKey: \"dataId\",\r\n    kindKey: \"code\",\r\n  },\r\n  placeHolder: {\r\n    numbers: [\"value\"],\r\n  },\r\n} as const satisfies FormatRule<Trait>;\r\n\r\nexport const formatTraitText = (\r\n  descriptor: FormatWithSource,\r\n  trait: Trait,\r\n  items: ReadonlyArray<Data_NamedItem>\r\n): string => {\r\n  const rule = compileFormatRule(RULE_TRAIT);\r\n  return applyFormatRule(\r\n    trait,\r\n    items,\r\n    rule,\r\n    descriptor.pattern,\r\n    (t) => t.dataId\r\n  );\r\n};\r\n\r\nexport const detectTraitFormatErrors = (\r\n  format: FormatInput,\r\n  errorTexts: FormatErrorLabels\r\n): FormatErrorGroup => {\r\n  return detectFormatErrors(format, RULE_TRAIT, errorTexts);\r\n};\r\n","import { makeDamage } from \"../../members\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\n\r\nexport const makeWeaponData = (\r\n  weapon: Partial<Data_Weapon> = {}\r\n): Data_Weapon => ({\r\n  id: weapon.id ?? 0,\r\n  name: weapon.name ?? \"\",\r\n  iconIndex: weapon.iconIndex ?? 0,\r\n  description: weapon.description ?? \"\",\r\n  traits: weapon.traits ?? [],\r\n  note: weapon.note ?? \"\",\r\n  animationId: weapon.animationId ?? 0,\r\n  params: weapon.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: weapon.etypeId ?? 0,\r\n  price: weapon.price ?? 0,\r\n  damage: makeDamage(weapon.damage ?? {}),\r\n  wtypeId: weapon.wtypeId ?? 0,\r\n});\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { WeaponLabels } from \"./weaponLabels\";\r\n\r\nexport const LABELS_DATA_WEAPON = {\r\n  title: \"武器\",\r\n  options: {\r\n    weaponTypeId: \"武器タイプID\",\r\n  },\r\n} as const satisfies DomainLabel<WeaponLabels>;\r\n","export const HITTYPE_CERTAIN = 0 as const;\r\nexport const HITTYPE_PHYSICAL = 1 as const;\r\nexport const HITTYPE_MAGICAL = 2 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { EffectLabelDefinition, ItemEffectLabelSet } from \"./types\";\r\n\r\nconst FORMAT_GROW = \"{name} + {value1}\" as const;\r\nconst FORMAT_STATE = \"{name} {value1}%\" as const;\r\nconst FORMAT_RECOVER = \"{value1}% + {value2}\" as const;\r\nconst FORMAT_ADD_BUFF = \"{name} {value1}ターン\" as const;\r\nconst FORMAT_NAME = \"{name}\" as const;\r\n\r\nexport const LABEL_SET_ITEM_EFFECT = {\r\n  title: \"使用効果\",\r\n  options: {\r\n    addBuff: {\r\n      desc: \"バフを付与する\",\r\n      domainName: \"バフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addDebuff: {\r\n      desc: \"デバフを付与する\",\r\n      domainName: \"デバフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    gainTp: {\r\n      desc: \"TPを指定した量だけ増加させます。\",\r\n      domainName: \"TP増加\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    grow: {\r\n      desc: \"成長効果\",\r\n      domainName: \"成長効果\",\r\n      format: FORMAT_GROW,\r\n    } as const satisfies EffectLabelDefinition,\r\n    learnSkill: {\r\n      desc: \"スキルを習得する\",\r\n      domainName: \"スキル習得\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverHp: {\r\n      desc: \"HPを回復します。最大HPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"HP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverMp: {\r\n      desc: \"MPを回復します。最大MPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"MP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeBuff: {\r\n      desc: \"バフを解除する\",\r\n      domainName: \"バフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeDebuff: {\r\n      desc: \"デバフを解除する\",\r\n      domainName: \"デバフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeState: {\r\n      desc: \"指定したステートを付加します。\",\r\n      domainName: \"ステート付加\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    special: {\r\n      desc: \"特殊効果\",\r\n      domainName: \"特殊効果\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addState: {\r\n      desc: \"状態異常を解除する\",\r\n      domainName: \"ステート解除\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    commonEvent: {\r\n      desc: \"コモンイベントを実行する\",\r\n      domainName: \"コモンイベント\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n  },\r\n} as const satisfies DomainLabel<ItemEffectLabelSet>;\r\n","export const SPECIAL_EFFECT_ESCAPE = 0 as const;\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\nimport type { EffectDefinitionResolved } from \"./labels\";\r\nconst FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_VALUE1 = \"{value1}\" as const;\r\nconst FORMAT_VALUE2 = \"{value2}\" as const;\r\n\r\nexport const formatItemEffectText = (\r\n  effectDefine: EffectDefinitionResolved,\r\n  effect: ItemEffect,\r\n  items: Data_NamedItem[]\r\n): string => {\r\n  const item = items.find((item) => item.id === effect.dataId);\r\n  const name: string = item ? item.name : \"Unknown Item\";\r\n  return effectDefine.pattern\r\n    .replaceAll(FORMAT_VALUE1, effect.value1.toString())\r\n    .replaceAll(FORMAT_VALUE2, effect.value2.toString())\r\n    .replaceAll(FORMAT_NAME, name);\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { ItemLabels } from \"./itemLabels\";\r\n\r\nexport const DEFAULT_ITEM_LABELS = {\r\n  title: \"アイテム\",\r\n  options: {\r\n    consumable: \"消耗品\",\r\n  },\r\n} as const satisfies DomainLabel<ItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { SkillLabels } from \"./skillLabels\";\r\n\r\nexport const DEFAULT_SKILL_LABELS = {\r\n  title: \"スキル\",\r\n  options: {\r\n    requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n    requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n    mpCost: \"MP消費\",\r\n    tpCost: \"TP消費\",\r\n  },\r\n} as const satisfies DomainLabel<SkillLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { UsableItemLabels } from \"./usableItemLabels\";\r\n\r\nexport const DEFAULT_USABLE_ITEM_LABELS = {\r\n  title: \"\",\r\n  options: {\r\n    scope: \"範囲\",\r\n    speed: \"速度補正\",\r\n    successRate: \"成功率\",\r\n  },\r\n} as const satisfies DomainLabel<UsableItemLabels>;\r\n","import { makeDamage } from \"../members\";\r\nimport type { Data_Item } from \"./core\";\r\n\r\nexport const makeItemData = (item: Partial<Data_Item> = {}): Data_Item => ({\r\n  animationId: item.animationId ?? 0,\r\n  id: item.id ?? 0,\r\n  name: item.name ?? \"\",\r\n  iconIndex: item.iconIndex ?? 0,\r\n  description: item.description ?? \"\",\r\n  itypeId: item.itypeId ?? 0,\r\n\r\n  note: item.note ?? \"\",\r\n  consumable: item.consumable ?? false,\r\n  scope: item.scope ?? 0,\r\n  occasion: item.occasion ?? 0,\r\n  speed: item.speed ?? 0,\r\n  successRate: item.successRate ?? 0,\r\n  repeats: item.repeats ?? 0,\r\n  tpGain: item.tpGain ?? 0,\r\n  hitType: item.hitType ?? 0,\r\n  damage: makeDamage(item.damage ?? {}),\r\n  effects: [],\r\n  price: 0,\r\n});\r\n","import { makeDamage } from \"../members\";\r\nimport type { Data_Skill } from \"./core\";\r\n\r\nexport const makeSkillData = (skill: Partial<Data_Skill> = {}): Data_Skill => ({\r\n  stypeId: skill.stypeId ?? 0,\r\n  requiredWtypeId1: skill.requiredWtypeId1 ?? 0,\r\n  requiredWtypeId2: skill.requiredWtypeId2 ?? 0,\r\n  animationId: skill.animationId ?? 0,\r\n  damage: makeDamage(skill.damage ?? {}),\r\n  description: skill.description ?? \"\",\r\n  effects: [],\r\n  hitType: skill.hitType ?? 0,\r\n  iconIndex: skill.iconIndex ?? 0,\r\n  id: skill.id ?? 0,\r\n  message1: skill.message1 ?? \"\",\r\n  message2: skill.message2 ?? \"\",\r\n  messageType: skill.messageType ?? 0,\r\n  name: skill.name ?? \"\",\r\n  note: skill.note ?? \"\",\r\n  mpCost: skill.mpCost ?? 0,\r\n  occasion: skill.occasion ?? 0,\r\n  repeats: skill.repeats ?? 0,\r\n  scope: skill.scope ?? 0,\r\n  speed: skill.speed ?? 0,\r\n  successRate: skill.successRate ?? 0,\r\n  tpCost: skill.tpCost ?? 0,\r\n  tpGain: skill.tpGain ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_INTEGER = {\r\n  type: \"integer\",\r\n} as const satisfies JSONSchemaType<number>;\r\n\r\nexport default SCHEMA_INTEGER;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_POSITIVE_INTEGER = {\r\n  type: \"integer\",\r\n  minimum: 0,\r\n} as const satisfies JSONSchemaType<number>;\r\n\r\nexport default SCHEMA_POSITIVE_INTEGER;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_STRING = {\r\n  type: \"string\",\r\n} as const satisfies JSONSchemaType<string>;\r\n\r\nexport default SCHEMA_STRING;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Damage } from \"./members\";\r\nimport SCHEMA_INTEGER from \"./primitiveSchema/integer.schema\";\r\nimport SCHEMA_POSITIVE_INTEGER from \"./primitiveSchema/positiveInteger.schema\";\r\nimport SCHEMA_STRING from \"./primitiveSchema/string.schema\";\r\nimport type { Data_Item, Data_Skill, ItemEffect } from \"./usableItems\";\r\n\r\nconst SCHEMA_DAMATE = {\r\n  type: \"object\",\r\n  properties: {\r\n    type: { type: \"integer\" },\r\n    elementId: SCHEMA_POSITIVE_INTEGER,\r\n    formula: SCHEMA_STRING,\r\n    variance: SCHEMA_INTEGER,\r\n    critical: { type: \"boolean\" },\r\n  },\r\n  required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<Damage>;\r\n\r\nconst SCHEMA_EFFECT = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: SCHEMA_INTEGER,\r\n    dataId: SCHEMA_POSITIVE_INTEGER,\r\n    value1: SCHEMA_INTEGER,\r\n    value2: SCHEMA_INTEGER,\r\n  },\r\n  required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<ItemEffect>;\r\n\r\nconst SCHEMA_DATA_SKILL = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"messageType\",\r\n    \"mpCost\",\r\n    \"requiredWtypeId1\",\r\n    \"requiredWtypeId2\",\r\n    \"stypeId\",\r\n    \"tpCost\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"note\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: SCHEMA_STRING,\r\n    id: SCHEMA_POSITIVE_INTEGER,\r\n    description: SCHEMA_STRING,\r\n    iconIndex: SCHEMA_POSITIVE_INTEGER,\r\n    message1: SCHEMA_STRING,\r\n    message2: SCHEMA_STRING,\r\n\r\n    messageType: SCHEMA_POSITIVE_INTEGER,\r\n    mpCost: SCHEMA_INTEGER,\r\n    requiredWtypeId1: SCHEMA_POSITIVE_INTEGER,\r\n    requiredWtypeId2: SCHEMA_POSITIVE_INTEGER,\r\n    stypeId: SCHEMA_POSITIVE_INTEGER,\r\n    tpCost: SCHEMA_INTEGER,\r\n\r\n    animationId: SCHEMA_POSITIVE_INTEGER,\r\n    hitType: SCHEMA_POSITIVE_INTEGER,\r\n    occasion: { type: \"integer\" },\r\n    repeats: SCHEMA_POSITIVE_INTEGER,\r\n    scope: SCHEMA_INTEGER,\r\n    speed: SCHEMA_INTEGER,\r\n    successRate: SCHEMA_INTEGER,\r\n    tpGain: SCHEMA_INTEGER,\r\n\r\n    note: SCHEMA_STRING,\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: SCHEMA_EFFECT,\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: SCHEMA_DAMATE,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<Data_Skill>;\r\n\r\nconst SCHEMA_DATA_ITEM = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"note\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"consumable\",\r\n    \"price\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: SCHEMA_STRING,\r\n    id: SCHEMA_POSITIVE_INTEGER,\r\n    description: SCHEMA_STRING,\r\n    iconIndex: SCHEMA_POSITIVE_INTEGER,\r\n    note: SCHEMA_STRING,\r\n    animationId: SCHEMA_POSITIVE_INTEGER,\r\n    hitType: SCHEMA_INTEGER,\r\n    occasion: SCHEMA_INTEGER,\r\n    repeats: SCHEMA_INTEGER,\r\n    scope: SCHEMA_INTEGER,\r\n    speed: SCHEMA_INTEGER,\r\n    successRate: SCHEMA_INTEGER,\r\n    tpGain: SCHEMA_INTEGER,\r\n    consumable: { type: \"boolean\" },\r\n    price: SCHEMA_POSITIVE_INTEGER,\r\n    itypeId: SCHEMA_POSITIVE_INTEGER,\r\n    effects: {\r\n      type: \"array\",\r\n      items: SCHEMA_EFFECT,\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: SCHEMA_DAMATE,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Item>;\r\n\r\nexport { SCHEMA_DATA_ITEM, SCHEMA_DATA_SKILL, SCHEMA_EFFECT, SCHEMA_DAMATE };\r\n","import Ajv from \"ajv\";\r\nimport { SCHEMA_DATA_ITEM, SCHEMA_DATA_SKILL } from \"./schema.usableItem\";\r\nimport type { Data_Weapon } from \"./traitContainers\";\r\nimport SCHEMA_DATA_WEAPON from \"./traitContainers/weapon/schema\";\r\nimport type { Data_Item, Data_Skill } from \"./usableItems\";\r\n\r\nconst ajv = new Ajv({\r\n  strict: true,\r\n});\r\nconst item = ajv.compile(SCHEMA_DATA_ITEM);\r\n\r\nexport const isDataItem = (data: unknown): data is Data_Item => {\r\n  return item(data);\r\n};\r\n\r\nconst skill = ajv.compile(SCHEMA_DATA_SKILL);\r\nexport const isDataSkill = (data: unknown): data is Data_Skill => {\r\n  return skill(data);\r\n};\r\n\r\nconst weapon = ajv.compile(SCHEMA_DATA_WEAPON);\r\nexport const isDataWeapon = (data: unknown): data is Data_Weapon => {\r\n  return weapon(data);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\n\r\nconst SCHEMA_DATA_WEAPON = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n    \"animationId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    wtypeId: { type: \"integer\", minimum: 0 },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    },\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\", minimum: 0 },\r\n        elementId: { type: \"integer\", minimum: 0 },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        critical: { type: \"boolean\", default: false },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n    },\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Weapon>;\r\nexport default SCHEMA_DATA_WEAPON;\r\n","import type { NoteReadResult } from \"./types\";\r\n\r\nexport const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]{1,100}):([^>]{1,1000})>/g;\r\n\r\nexport const readNoteObject = <Result, T extends { note: string }>(\r\n  data: T,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => readNoteEx(data.note, (key, value) => fn(key, value, data));\r\n\r\nexport const readNote = (note: string): NoteReadResult[] => {\r\n  return readNoteEx(note, (key, value) => [key, value]);\r\n};\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nconst readNoteEx = <Result>(\r\n  note: string,\r\n  fn: (key: string, value: string) => Result\r\n): Result[] => {\r\n  const regex = makeRegex();\r\n  return Array.from(note.matchAll(regex), (match) => fn(match[1], match[2]));\r\n};\r\n\r\n/**\r\n *\r\n * @param note\r\n * @param transformFunction この関数の戻り値でvalueを置き換える\r\n * @returns\r\n */\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  if (note.length >= 3000) {\r\n    throw new Error(\"Note text is too long. Please shorten it.\");\r\n  }\r\n\r\n  return note.replaceAll(\r\n    makeRegex(),\r\n    (_subString, key: string, value: string) => {\r\n      const newText = transformFunction(key, value);\r\n      if (newText.length >= 1000) {\r\n        throw new Error(\"Note text is too long. Please shorten it.\");\r\n      }\r\n      return createNoteEntity(key, newText);\r\n    }\r\n  );\r\n};\r\n\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  const match = Array.from(note.matchAll(regex)).find(\r\n    (m) => m[1] === targetKey\r\n  );\r\n  return match ? match[2] : undefined;\r\n};\r\n\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replace(regex, (match, key: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","export const MODULE_DATA = \"data\" as const;\r\n\r\nexport const SRC_DATA_ACTOR = \"actor\" as const;\r\nexport const SRC_DATA_MAP = \"map\" as const;\r\nexport const SRC_DATA_ENEMY = \"enemy\" as const;\r\nexport const SRC_DATA_STATE = \"state\" as const;\r\nexport const SRC_DATA_SKILL = \"skill\" as const;\r\nexport const SRC_DATA_ITEMS = \"item\" as const;\r\nexport const SRC_DATA_WEAPON = \"weapon\" as const;\r\nexport const SRC_DATA_ARMOR = \"armor\" as const;\r\nexport const SRC_DATA_CLASS = \"class\" as const;\r\nexport const SRC_DATA_COMMON_EVNET = \"common_event\" as const;\r\nexport const SRC_DATA_TROOP = \"troop\" as const;\r\n","import type { GlobalLabel } from \"./globalLabels\";\r\n\r\nexport const DEFAULT_GLOBAL_LABELS = {\r\n  id: \"識別子\",\r\n  name: \"名前\",\r\n  note: \"メモ\",\r\n  description: \"説明\",\r\n  iconIndex: \"アイコンインデックス\",\r\n  occasion: \"使用タイミング\",\r\n  params: \"パラメータ\",\r\n  repeats: \"繰り返し回数\",\r\n  scope: \"範囲\",\r\n  speed: \"速度補正\",\r\n  successRate: \"成功率\",\r\n  animationId: \"アニメーションID\",\r\n  displayType: \"表示タイプ\",\r\n  characterIndex: \"キャラクターインデックス\",\r\n  characterName: \"キャラクター名\",\r\n  effectName: \"効果名\",\r\n  faceIndex: \"顔グラフィックインデックス\",\r\n  faceName: \"顔グラフィック名\",\r\n  flashTimings: \"フラッシュタイミング\",\r\n  list: \"リスト\",\r\n  messageType: \"メッセージタイプ\",\r\n  offsetX: \"オフセットX\",\r\n  offsetY: \"オフセットY\",\r\n  overlay: \"オーバーレイ\",\r\n  priority: \"優先度\",\r\n  restriction: \"制約\",\r\n  rotation: \"回転\",\r\n  scale: \"スケール\",\r\n  soundTimings: \"サウンドタイミング\",\r\n  stepsToRemove: \"解除までの歩数\",\r\n  type: \"タイプ\",\r\n  variance: \"分散度\",\r\n  unknownCode: \"不明なコード\",\r\n  content: \"内容\",\r\n  apply: \"適用\",\r\n  turn: \"ターン\",\r\n  commonEvent: \"コモンイベント\",\r\n  normal: \"通常\",\r\n  dualWield: \"二刀流\",\r\n  bossCollaps: \"ボス崩壊\",\r\n  instantCollaps: \"即時崩壊\",\r\n  noneCollaps: \"崩壊なし\",\r\n  escape: \"逃走\",\r\n} as const satisfies GlobalLabel;\r\n","import {\r\n  DEFAULT_DAMAGE_LABELS,\r\n  LABEL_SET_DATA,\r\n  LABEL_SET_TRAIT,\r\n  LABEL_SET_ITEM_EFFECT,\r\n} from \"./data\";\r\nimport type { LabelRegistry } from \"./labelRegistry\";\r\nimport { DEFAULT_GLOBAL_LABELS } from \"./labels\";\r\n\r\nexport const labelsRegistry = () => {\r\n  return {\r\n    rpg: {\r\n      damage: DEFAULT_DAMAGE_LABELS,\r\n      data: LABEL_SET_DATA,\r\n      traits: LABEL_SET_TRAIT,\r\n      itemEffect: LABEL_SET_ITEM_EFFECT,\r\n    },\r\n    global: DEFAULT_GLOBAL_LABELS,\r\n  } satisfies LabelRegistry;\r\n};\r\n","export interface System_Advanced {\r\n  gameId: number;\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  uiAreaWidth: number;\r\n  uiAreaHeight: number;\r\n  windowOpacity: number;\r\n  screenScale: number;\r\n\r\n  numberFontFilename: string;\r\n  mainFontFilename: string;\r\n  fallbackFonts: string;\r\n  fontSize: number;\r\n}\r\n\r\nexport const makeSystemAdvanced = (\r\n  advanced: Partial<System_Advanced> = {}\r\n): System_Advanced => {\r\n  return {\r\n    gameId: advanced.gameId ?? 0,\r\n    screenWidth: advanced.screenWidth ?? 0,\r\n    screenHeight: advanced.screenHeight ?? 0,\r\n    uiAreaWidth: advanced.uiAreaWidth ?? 0,\r\n    uiAreaHeight: advanced.uiAreaHeight ?? 0,\r\n    windowOpacity: advanced.windowOpacity ?? 0,\r\n    screenScale: advanced.screenScale ?? 1,\r\n\r\n    numberFontFilename: advanced.numberFontFilename ?? \"\",\r\n    mainFontFilename: advanced.mainFontFilename ?? \"\",\r\n    fallbackFonts: advanced.fallbackFonts ?? \"\",\r\n    fontSize: advanced.fontSize ?? 28,\r\n  };\r\n};\r\n","import { makeAudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { System_SoundsArray, System_SoundsObject } from \"./types\";\r\n\r\nexport const makeSoundsArray = (\r\n  sounds: Partial<System_SoundsObject> = {}\r\n): System_SoundsArray => {\r\n  return [\r\n    makeAudioFileParams(sounds.cursor),\r\n    makeAudioFileParams(sounds.ok),\r\n    makeAudioFileParams(sounds.cancel),\r\n    makeAudioFileParams(sounds.buzzer),\r\n    makeAudioFileParams(sounds.equip),\r\n    makeAudioFileParams(sounds.save),\r\n    makeAudioFileParams(sounds.load),\r\n    makeAudioFileParams(sounds.battleStart),\r\n    makeAudioFileParams(sounds.escape),\r\n    makeAudioFileParams(sounds.enemyAttack),\r\n    makeAudioFileParams(sounds.enemyDamage),\r\n    makeAudioFileParams(sounds.enemyCollapse),\r\n    makeAudioFileParams(sounds.bossCollapes1),\r\n    makeAudioFileParams(sounds.bossCollapes2),\r\n    makeAudioFileParams(sounds.actorDamage),\r\n    makeAudioFileParams(sounds.actorCollapse),\r\n    makeAudioFileParams(sounds.playRecovery),\r\n    makeAudioFileParams(sounds.playMiss),\r\n    makeAudioFileParams(sounds.playEvasion),\r\n    makeAudioFileParams(sounds.playMagicEvasion),\r\n    makeAudioFileParams(sounds.playReflection),\r\n    makeAudioFileParams(sounds.shop),\r\n    makeAudioFileParams(sounds.useItem),\r\n    makeAudioFileParams(sounds.useSkill),\r\n  ];\r\n};\r\n\r\nexport const makeSoundsObject = (\r\n  sounds: System_SoundsArray\r\n): System_SoundsObject => {\r\n  return {\r\n    cursor: sounds[0],\r\n    ok: sounds[1],\r\n    cancel: sounds[2],\r\n    buzzer: sounds[3],\r\n    equip: sounds[4],\r\n    save: sounds[5],\r\n    load: sounds[6],\r\n    battleStart: sounds[7],\r\n    escape: sounds[8],\r\n    enemyAttack: sounds[9],\r\n    enemyDamage: sounds[10],\r\n    enemyCollapse: sounds[11],\r\n    bossCollapes1: sounds[12],\r\n    bossCollapes2: sounds[13],\r\n    actorDamage: sounds[14],\r\n    actorCollapse: sounds[15],\r\n    playRecovery: sounds[16],\r\n    playMiss: sounds[17],\r\n    playEvasion: sounds[18],\r\n    playMagicEvasion: sounds[19],\r\n    playReflection: sounds[20],\r\n    shop: sounds[21],\r\n    useItem: sounds[22],\r\n    useSkill: sounds[23],\r\n  };\r\n};\r\n","import type { System_BooleanGameMenuOptions } from \"./types\";\r\n\r\nexport const getItemCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[0];\r\n};\r\n\r\nexport const getSkillCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[1];\r\n};\r\n\r\nexport const getEquipCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[2];\r\n};\r\n\r\nexport const getStatusCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[3];\r\n};\r\n\r\nexport const getFormationCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[4];\r\n};\r\n\r\nexport const getSaveCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[5];\r\n};\r\n\r\nexport const getItemCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[0];\r\n};\r\n\r\nexport const getWeaponCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[1];\r\n};\r\n\r\nexport const getArmorCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[2];\r\n};\r\n\r\nexport const getKeyItemCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[3];\r\n};\r\n","import type { ItemCategories, ItemCategoriesArray } from \"./types\";\r\n\r\nexport const makeItemCategories = (\r\n  param: Partial<ItemCategories> = {}\r\n): ItemCategoriesArray => {\r\n  return [\r\n    param.item ?? true,\r\n    param.weapon ?? true,\r\n    param.armor ?? true,\r\n    param.keyItem ?? true,\r\n  ];\r\n};\r\nexport const makeItemCategoriesFromArray = (\r\n  param: ItemCategoriesArray\r\n): ItemCategories => {\r\n  return {\r\n    item: param[0],\r\n    weapon: param[1],\r\n    armor: param[2],\r\n    keyItem: param[3],\r\n  };\r\n};\r\n","import type { MenuCommandsEnabledArray } from \"./types\";\r\nimport type { MenuCommandsEnabled } from \"./types\";\r\n\r\nexport const makeMenuCommandsEnabled = (\r\n  param: Partial<MenuCommandsEnabled> = {}\r\n): MenuCommandsEnabledArray => {\r\n  return [\r\n    param.item ?? true,\r\n    param.skill ?? true,\r\n    param.equip ?? true,\r\n    param.status ?? true,\r\n    param.formation ?? true,\r\n    param.save ?? true,\r\n  ];\r\n};\r\n\r\nexport const makeMenuCommandsEnabledFromArray = (\r\n  array: MenuCommandsEnabledArray\r\n): MenuCommandsEnabled => {\r\n  return {\r\n    item: array[0],\r\n    skill: array[1],\r\n    equip: array[2],\r\n    status: array[3],\r\n    formation: array[4],\r\n    save: array[5],\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport SCHEMA_SYSTEM_ITEM_CATEGORIES from \"./itemCategories/schema\";\r\nimport SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED from \"./menuCommands/schema\";\r\nimport type { System_BooleanGameMenuOptions } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS = {\r\n  required: [\"itemCategories\", \"menuCommands\"],\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  properties: {\r\n    itemCategories: SCHEMA_SYSTEM_ITEM_CATEGORIES,\r\n    menuCommands: SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED,\r\n  },\r\n} as const satisfies JSONSchemaType<\r\n  Record<keyof System_BooleanGameMenuOptions, boolean[]>\r\n>;\r\n\r\nexport default SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_SYSTEM_ITEM_CATEGORIES = {\r\n  type: \"array\",\r\n  maxItems: 4,\r\n  minItems: 4,\r\n  items: {\r\n    type: \"boolean\",\r\n  },\r\n} as const satisfies JSONSchemaType<boolean[]>;\r\n\r\nexport default SCHEMA_SYSTEM_ITEM_CATEGORIES;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED = {\r\n  type: \"array\",\r\n  maxItems: 6,\r\n  minItems: 6,\r\n  items: {\r\n    type: \"boolean\",\r\n  },\r\n} as const satisfies JSONSchemaType<boolean[]>;\r\n\r\nexport default SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED;\r\n","import type { System_BooleanGameOptions } from \"./types\";\r\n\r\nexport const makeBooleanOptions = (\r\n  options: Partial<System_BooleanGameOptions> = {}\r\n): System_BooleanGameOptions => {\r\n  return {\r\n    optAutosave: options.optAutosave ?? true,\r\n    optDisplayTp: options.optDisplayTp ?? true,\r\n    optDrawTitle: options.optDrawTitle ?? true,\r\n    optExtraExp: options.optExtraExp ?? true,\r\n    optFloorDeath: options.optFloorDeath ?? true,\r\n    optFollowers: options.optFollowers ?? true,\r\n    optKeyItemsNumber: options.optKeyItemsNumber ?? true,\r\n    optSideView: options.optSideView ?? true,\r\n    optSlipDeath: options.optSlipDeath ?? true,\r\n    optTransparent: options.optTransparent ?? true,\r\n    optMessageSkip: options.optMessageSkip ?? true,\r\n    optSplashScreen: options.optSplashScreen ?? true,\r\n  } satisfies Record<keyof System_BooleanGameOptions, boolean>;\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_BooleanGameOptions } from \"./types\";\r\n\r\nconst SCHEMA_BOOLEAN = {\r\n  type: \"boolean\",\r\n} as const satisfies JSONSchemaType<boolean>;\r\n\r\nconst SCHEMA_SYSTEM_BOOLEAN_OPTIONS = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\r\n    \"optAutosave\",\r\n    \"optDisplayTp\",\r\n    \"optDrawTitle\",\r\n    \"optExtraExp\",\r\n    \"optFloorDeath\",\r\n    \"optFollowers\",\r\n    \"optKeyItemsNumber\",\r\n    \"optSideView\",\r\n    \"optSlipDeath\",\r\n    \"optTransparent\",\r\n    \"optMessageSkip\",\r\n    \"optSplashScreen\",\r\n  ] satisfies Array<keyof System_BooleanGameOptions>,\r\n  properties: {\r\n    optAutosave: SCHEMA_BOOLEAN,\r\n    optDisplayTp: SCHEMA_BOOLEAN,\r\n    optDrawTitle: SCHEMA_BOOLEAN,\r\n    optExtraExp: SCHEMA_BOOLEAN,\r\n    optFloorDeath: SCHEMA_BOOLEAN,\r\n    optFollowers: SCHEMA_BOOLEAN,\r\n    optKeyItemsNumber: SCHEMA_BOOLEAN,\r\n    optSideView: SCHEMA_BOOLEAN,\r\n    optSlipDeath: SCHEMA_BOOLEAN,\r\n    optTransparent: SCHEMA_BOOLEAN,\r\n    optMessageSkip: SCHEMA_BOOLEAN,\r\n    optSplashScreen: SCHEMA_BOOLEAN,\r\n  },\r\n} as const satisfies JSONSchemaType<System_BooleanGameOptions>;\r\n\r\nexport default SCHEMA_SYSTEM_BOOLEAN_OPTIONS;\r\n","import type { System_GameInitial } from \"./types\";\r\n\r\nexport const makeGameInitial = (\r\n  gameInitial: Partial<System_GameInitial> = {}\r\n): System_GameInitial => ({\r\n  startMapId: gameInitial.startMapId ?? 0,\r\n  startX: gameInitial.startX ?? 0,\r\n  startY: gameInitial.startY ?? 0,\r\n  partyMembersArray: gameInitial.partyMembersArray\r\n    ? Array.from(gameInitial.partyMembersArray)\r\n    : [1],\r\n});\r\n","import type { System_RPG_DataNames } from \"./types\";\r\n\r\nexport const makeDataNames = (\r\n  data: Partial<System_RPG_DataNames>\r\n): System_RPG_DataNames => ({\r\n  armorTypes: cloneStringArray(data.armorTypes),\r\n  elements: cloneStringArray(data.elements),\r\n  equipTypes: cloneStringArray(data.equipTypes),\r\n  weaponTypes: cloneStringArray(data.weaponTypes),\r\n  skillTypes: cloneStringArray(data.skillTypes),\r\n  variables: cloneStringArray(data.variables),\r\n  switches: cloneStringArray(data.switches),\r\n});\r\n\r\nconst cloneStringArray = (array?: ReadonlyArray<string>) => {\r\n  return array ? [...array] : [];\r\n};\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type {\r\n  SystemLabels_TermsParamNames,\r\n  Terms_ParamNamesArray,\r\n} from \"./core/paramArray/types\";\r\nimport type { System_Terms_Params } from \"./types\";\r\n\r\nexport const makeParamNamesArray = (\r\n  param: Partial<SystemLabels_TermsParamNames>\r\n): Terms_ParamNamesArray => {\r\n  return [\r\n    param.mhp ?? \"\",\r\n    param.mmp ?? \"\",\r\n    param.atk ?? \"\",\r\n    param.def ?? \"\",\r\n    param.mat ?? \"\",\r\n    param.mdf ?? \"\",\r\n    param.agi ?? \"\",\r\n    param.luk ?? \"\",\r\n    param.hit ?? \"\",\r\n    param.eva ?? \"\",\r\n  ];\r\n};\r\n\r\nexport const getParamNames = (\r\n  system: System_Terms_Params\r\n): Data_NamedItem[] => {\r\n  return system.terms.params.map((name, index) => ({\r\n    name: name,\r\n    id: index,\r\n  }));\r\n};\r\n","import type { TitleCommandWindow } from \"./types\";\r\n\r\nexport const makeTitleCommandWindow = (\r\n  param: Partial<TitleCommandWindow>\r\n): TitleCommandWindow => {\r\n  return {\r\n    background: param.background ?? 0,\r\n    offsetX: param.offsetX ?? 0,\r\n    offsetY: param.offsetY ?? 0,\r\n  };\r\n};\r\n","import { makeAudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { Data_Vehicle } from \"./types\";\r\n\r\nexport const makeVehicleData = (\r\n  vehicle: Partial<Data_Vehicle> = {}\r\n): Data_Vehicle => ({\r\n  characterIndex: vehicle.characterIndex ?? 0,\r\n  characterName: vehicle.characterName ?? \"\",\r\n  bgm: makeAudioFileParams(vehicle.bgm ?? {}),\r\n  startMapId: vehicle.startMapId ?? 0,\r\n  startX: vehicle.startX ?? 0,\r\n  startY: vehicle.startY ?? 0,\r\n});\r\n","import type { EditorSettings } from \"./editor/types\";\r\n\r\nexport const makeEditorSetting = (\r\n  param: Partial<EditorSettings> = {}\r\n): EditorSettings => {\r\n  return {\r\n    jsonFormatLevel: param.jsonFormatLevel ?? 0,\r\n    messageWidth1: param.messageWidth1 ?? 816,\r\n    messageWidth2: param.messageWidth2 ?? 816,\r\n  };\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  System_Bgm,\r\n  System_BooleanGameOptions,\r\n  System_TitleImages,\r\n  SystemLabel_DataNames,\r\n} from \"./core\";\r\nimport type { SystemLabels_GameCommands } from \"./core/terms/core/commands\";\r\nimport type { SystemLabels_TermsParamNames } from \"./core/terms/core/paramArray\";\r\nimport type { System_Text } from \"./subset\";\r\ntype AsLabel<T> = Record<keyof T, string>;\r\n\r\nexport type SystemLabel_Images = AsLabel<System_TitleImages>;\r\nexport type SystemLabel_Text = AsLabel<System_Text>;\r\nexport type SystemLabel_Bgm = AsLabel<System_Bgm>;\r\nexport type SystemLabel_BoolanOptions = AsLabel<System_BooleanGameOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_BOOLEAN = {\r\n  title: \"オプション\",\r\n  options: {\r\n    optDrawTitle: \"ゲームタイトルの描画\",\r\n    optDisplayTp: \"ウィンドウにTPを表示\",\r\n    optFloorDeath: \"床ダメージで戦闘不能\",\r\n    optSlipDeath: \"スリップダメージで戦闘不能\",\r\n    optAutosave: \"オートセーブを有効化\",\r\n    optExtraExp: \"控えメンバーも経験値を獲得\",\r\n    optFollowers: \"隊列歩行\",\r\n    optSideView: \"戦闘をサイドビューにする\",\r\n    optKeyItemsNumber: \"大事なものの個数を表示\",\r\n    optTransparent: \"透明状態で開始\",\r\n    optMessageSkip: \"メッセージスキップを有効化\",\r\n    optSplashScreen: \"スプラッシュ画面を表示\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_BoolanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_DATA_TYPES = {\r\n  title: \"タイプ\",\r\n\r\n  format: \"{name}\",\r\n\r\n  options: {\r\n    elements: \"属性\",\r\n    equipTypes: \"装備タイプ\",\r\n    skillTypes: \"スキルタイプ\",\r\n    weaponTypes: \"武器タイプ\",\r\n    armorTypes: \"防具タイプ\",\r\n    switches: \"スイッチ\",\r\n    variables: \"変数\",\r\n  },\r\n} as const satisfies SystemLabel_DataNames;\r\n\r\nexport const LABELS_SYSTEM_BATTLER_PARAMS = {\r\n  title: \"能力値\",\r\n  options: {\r\n    agi: \"敏捷\",\r\n    atk: \"攻撃力\",\r\n    def: \"防御力\",\r\n    eva: \"回避\",\r\n    hit: \"命中\",\r\n    luk: \"運\",\r\n    mat: \"魔法攻撃力\",\r\n    mdf: \"魔法防御力\",\r\n    mhp: \"最大HP\",\r\n    mmp: \"最大MP\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabels_TermsParamNames>;\r\n\r\nexport const LABELS_SYSTEM_GAME_COMMANDS = {\r\n  title: \"コマンド\",\r\n  options: {\r\n    item: \"アイテム\",\r\n    skill: \"スキル\",\r\n    equip: \"装備\",\r\n    status: \"ステータス\",\r\n    formation: \"編成\",\r\n    options: \"オプション\",\r\n    save: \"セーブ\",\r\n    gameEnd: \"ゲーム終了\",\r\n    armor: \"防具\",\r\n    weapon: \"武器\",\r\n    newGame: \"ニューゲーム\",\r\n    attack: \"攻撃\",\r\n    guard: \"防御\",\r\n    escape: \"逃げる\",\r\n    fight: \"戦う\",\r\n    buy: \"買う\",\r\n    sell: \"売る\",\r\n    cancel: \"キャンセル\",\r\n    clear: \"クリア\",\r\n    continue_: \"続きから\",\r\n    equip2: \"装備2\",\r\n    keyItem: \"大事なもの\",\r\n    optimize: \"最強装備\",\r\n    toTitle: \"タイトルへ戻る\",\r\n  },\r\n} satisfies DomainLabel<SystemLabels_GameCommands>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AttackMotion } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"type\", \"weaponImageId\"],\r\n  properties: {\r\n    type: { type: \"number\" },\r\n    weaponImageId: { type: \"number\" },\r\n  },\r\n} as const satisfies JSONSchemaType<AttackMotion>;\r\n\r\nexport default SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_ImageSize } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_IMAGE_SIZE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"tileSize\", \"faceSize\", \"iconSize\"],\r\n  properties: {\r\n    tileSize: { type: \"integer\", minimum: 0 },\r\n    faceSize: { type: \"integer\", minimum: 0 },\r\n    iconSize: { type: \"integer\", minimum: 0 },\r\n  },\r\n} as const satisfies JSONSchemaType<System_ImageSize>;\r\n\r\nexport default SCHEMA_SYSTEM_IMAGE_SIZE;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { TestBattler } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_TEST_BATTLER = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"actorId\", \"equips\", \"level\"],\r\n  properties: {\r\n    actorId: { type: \"integer\" },\r\n\r\n    level: { type: \"integer\", minimum: 1 },\r\n    equips: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<TestBattler>;\r\n\r\nexport default SCHEMA_SYSTEM_TEST_BATTLER;\r\n","import type { AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nimport type { JSONSchemaAudioFileParams } from \"src/utils/types/audioFileParams/schemaType\";\r\nimport type { System_AudioFiles } from \"./types\";\r\n\r\nconst audioFileParamsSchema = {\r\n  type: \"object\",\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    volume: { type: \"integer\", minimum: 0, maximum: 100 },\r\n    pitch: { type: \"integer\", minimum: 0, maximum: 100 },\r\n    pan: { type: \"integer\", minimum: -100, maximum: 100 },\r\n  },\r\n  required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<AudioFileParams> &\r\n  JSONSchemaAudioFileParams;\r\n\r\nconst SCHEMA_SYSTEM_AUDIOFILES = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"battleBgm\",\r\n    \"victoryMe\",\r\n    \"gameoverMe\",\r\n    \"titleBgm\",\r\n    \"defeatMe\",\r\n    \"sounds\",\r\n  ],\r\n  properties: {\r\n    battleBgm: audioFileParamsSchema,\r\n    victoryMe: audioFileParamsSchema,\r\n    gameoverMe: audioFileParamsSchema,\r\n    titleBgm: audioFileParamsSchema,\r\n    defeatMe: audioFileParamsSchema,\r\n    sounds: {\r\n      type: \"array\",\r\n      items: audioFileParamsSchema,\r\n      minItems: 24,\r\n      maxItems: 24,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<System_AudioFiles>;\r\n\r\nexport default SCHEMA_SYSTEM_AUDIOFILES;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { BattleRuleRMMZ } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_BATTLE_RULE_RMMZ = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"magicSkills\", \"battleSystem\"],\r\n  properties: {\r\n    magicSkills: {\r\n      type: \"array\",\r\n      items: { type: \"number\" },\r\n      minItems: 0,\r\n      uniqueItems: true,\r\n    },\r\n    battleSystem: { type: \"number\" },\r\n  },\r\n} as const satisfies JSONSchemaType<BattleRuleRMMZ>;\r\n\r\nexport default SCHEMA_SYSTEM_BATTLE_RULE_RMMZ;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_GameInitial } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_GAME_INITIAL = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"startMapId\", \"startX\", \"startY\", \"partyMembersArray\"],\r\n  properties: {\r\n    startMapId: { type: \"integer\", minimum: 0 },\r\n    startX: { type: \"integer\", minimum: 0 },\r\n    startY: { type: \"integer\", minimum: 0 },\r\n    partyMembersArray: {\r\n      type: \"array\",\r\n      items: { type: \"integer\", minimum: 0 },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<System_GameInitial>;\r\n\r\nexport default SCHEMA_SYSTEM_GAME_INITIAL;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_TitleImages } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_TITLE_IMAGES = {\r\n  additionalProperties: false,\r\n\r\n  type: \"object\",\r\n  required: [\"title1Name\", \"title2Name\"],\r\n  properties: {\r\n    title1Name: { type: \"string\" },\r\n    title2Name: { type: \"string\" },\r\n  },\r\n} as const satisfies JSONSchemaType<System_TitleImages>;\r\n\r\nexport default SCHEMA_SYSTEM_TITLE_IMAGES;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_OtherData } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_OTHER_DATA = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"locale\", \"versionId\", \"windowTone\"],\r\n  properties: {\r\n    locale: { type: \"string\" },\r\n    versionId: { type: \"number\" },\r\n    windowTone: {\r\n      type: \"array\",\r\n      items: { type: \"number\" },\r\n      minItems: 4,\r\n      maxItems: 4,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<System_OtherData>;\r\n\r\nexport default SCHEMA_SYSTEM_OTHER_DATA;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_RPG_DataNames } from \"./types\";\r\n\r\nconst stringArraySchema = {\r\n  type: \"array\",\r\n  items: { type: \"string\" },\r\n} as const satisfies JSONSchemaType<string[]>;\r\n\r\nconst SCHEMA_SYSTEM_RPG_DATA_NAMES = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"weaponTypes\",\r\n    \"skillTypes\",\r\n    \"elements\",\r\n    \"variables\",\r\n    \"equipTypes\",\r\n    \"switches\",\r\n    \"armorTypes\",\r\n  ],\r\n  properties: {\r\n    weaponTypes: stringArraySchema,\r\n    skillTypes: stringArraySchema,\r\n    elements: stringArraySchema,\r\n    variables: stringArraySchema,\r\n    equipTypes: stringArraySchema,\r\n    switches: stringArraySchema,\r\n    armorTypes: stringArraySchema,\r\n  },\r\n} as const satisfies JSONSchemaType<System_RPG_DataNames>;\r\n\r\nexport default SCHEMA_SYSTEM_RPG_DATA_NAMES;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_STRING = {\r\n  type: \"string\",\r\n} as const satisfies JSONSchemaType<string>;\r\nconst SCHEMA_STRING_NULL = {\r\n  type: \"string\",\r\n  nullable: true,\r\n} as const satisfies JSONSchemaType<string | null>;\r\n\r\nconst SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY = {\r\n  type: \"array\",\r\n  items: [\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING_NULL,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING_NULL,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n  ] as const,\r\n  minItems: 26,\r\n  maxItems: 26,\r\n} as const;\r\n\r\nexport default SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Terms_Messages } from \"./types\";\r\n\r\nconst SCHEMA_STRING = {\r\n  type: \"string\",\r\n} as const satisfies JSONSchemaType<string>;\r\n\r\nconst SCHEMA_SYSTEM_TERMS_MESSAGES = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\r\n    \"actionFailure\",\r\n    \"actorDamage\",\r\n    \"actorNoDamage\",\r\n    \"actorRecovery\",\r\n    \"actorGain\",\r\n    \"actorLoss\",\r\n    \"actorDrain\",\r\n    \"alwaysDash\",\r\n    \"bgmVolume\",\r\n    \"bgsVolume\",\r\n    \"commandRemember\",\r\n    \"criticalToActor\",\r\n    \"criticalToEnemy\",\r\n    \"counterAttack\",\r\n    \"debuffAdd\",\r\n    \"defeat\",\r\n    \"enemyDamage\",\r\n    \"enemyNoDamage\",\r\n    \"enemyRecovery\",\r\n    \"enemyGain\",\r\n    \"enemyLoss\",\r\n    \"enemyDrain\",\r\n    \"evasion\",\r\n    \"expNext\",\r\n    \"expTotal\",\r\n    \"escapeFailure\",\r\n    \"escapeStart\",\r\n    \"file\",\r\n    \"loadMessage\",\r\n    \"meVolume\",\r\n    \"magicEvasion\",\r\n    \"magicReflection\",\r\n    \"obtainExp\",\r\n    \"obtainGold\",\r\n    \"obtainItem\",\r\n    \"obtainSkill\",\r\n    \"partyName\",\r\n    \"preemptive\",\r\n    \"saveMessage\",\r\n    \"seVolume\",\r\n    \"substitute\",\r\n    \"touchUI\",\r\n    \"victory\",\r\n    \"useItem\",\r\n  ],\r\n  properties: {\r\n    actionFailure: SCHEMA_STRING,\r\n    actorDamage: SCHEMA_STRING,\r\n    actorNoDamage: SCHEMA_STRING,\r\n    actorRecovery: SCHEMA_STRING,\r\n    actorGain: SCHEMA_STRING,\r\n    actorLoss: SCHEMA_STRING,\r\n    actorDrain: SCHEMA_STRING,\r\n    alwaysDash: SCHEMA_STRING,\r\n    bgmVolume: SCHEMA_STRING,\r\n    bgsVolume: SCHEMA_STRING,\r\n    commandRemember: SCHEMA_STRING,\r\n    criticalToActor: SCHEMA_STRING,\r\n    criticalToEnemy: SCHEMA_STRING,\r\n    counterAttack: SCHEMA_STRING,\r\n    debuffAdd: SCHEMA_STRING,\r\n    defeat: SCHEMA_STRING,\r\n    enemyDamage: SCHEMA_STRING,\r\n    enemyNoDamage: SCHEMA_STRING,\r\n    enemyRecovery: SCHEMA_STRING,\r\n    enemyGain: SCHEMA_STRING,\r\n    enemyLoss: SCHEMA_STRING,\r\n    enemyDrain: SCHEMA_STRING,\r\n    evasion: SCHEMA_STRING,\r\n    expNext: SCHEMA_STRING,\r\n    expTotal: SCHEMA_STRING,\r\n    escapeFailure: SCHEMA_STRING,\r\n    escapeStart: SCHEMA_STRING,\r\n    file: SCHEMA_STRING,\r\n    loadMessage: SCHEMA_STRING,\r\n    meVolume: SCHEMA_STRING,\r\n    magicEvasion: SCHEMA_STRING,\r\n    magicReflection: SCHEMA_STRING,\r\n    obtainExp: SCHEMA_STRING,\r\n    obtainGold: SCHEMA_STRING,\r\n    obtainItem: SCHEMA_STRING,\r\n    obtainSkill: SCHEMA_STRING,\r\n    partyName: SCHEMA_STRING,\r\n    preemptive: SCHEMA_STRING,\r\n    saveMessage: SCHEMA_STRING,\r\n    seVolume: SCHEMA_STRING,\r\n    substitute: SCHEMA_STRING,\r\n    touchUI: SCHEMA_STRING,\r\n    victory: SCHEMA_STRING,\r\n    useItem: SCHEMA_STRING,\r\n    buffAdd: SCHEMA_STRING,\r\n    buffRemove: SCHEMA_STRING,\r\n    actorNoHit: SCHEMA_STRING,\r\n    enemyNoHit: SCHEMA_STRING,\r\n    autosave: SCHEMA_STRING,\r\n    emerge: SCHEMA_STRING,\r\n    levelUp: SCHEMA_STRING,\r\n    possession: SCHEMA_STRING,\r\n    surprise: SCHEMA_STRING,\r\n  },\r\n} as const satisfies JSONSchemaType<Terms_Messages>;\r\nexport default SCHEMA_SYSTEM_TERMS_MESSAGES;\r\n","import type { JSONSchemaType, SchemaObject } from \"ajv\";\r\nimport SCHEMA_SYSTEM_TERMS_CORE from \"./core/schema\";\r\nimport type { System_TextBundle } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_TERMS_BUNDLE = {\r\n  required: [\r\n    \"terms\",\r\n    \"currencyUnit\",\r\n    \"gameTitle\",\r\n  ] satisfies (keyof System_TextBundle)[],\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  properties: {\r\n    currencyUnit: { type: \"string\" } satisfies JSONSchemaType<string>,\r\n    gameTitle: { type: \"string\" } satisfies JSONSchemaType<string>,\r\n    terms: SCHEMA_SYSTEM_TERMS_CORE,\r\n  },\r\n} as const satisfies SchemaObject;\r\n\r\nexport default SCHEMA_SYSTEM_TERMS_BUNDLE;\r\n","import type { SchemaObject } from \"ajv\";\r\nimport SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY from \"./basic/schema\";\r\nimport SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY from \"./commands/schema\";\r\nimport SCHEMA_SYSTEM_TERMS_MESSAGES from \"./messages/schema\";\r\nimport SCHEMA_SYSTEM_PARAM_NAMS_ARRAY from \"./paramArray/schema\";\r\nimport type { System_Terms } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_TERMS_CORE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"messages\",\r\n    \"commands\",\r\n    \"basic\",\r\n    \"params\",\r\n  ] satisfies (keyof System_Terms)[],\r\n  properties: {\r\n    messages: SCHEMA_SYSTEM_TERMS_MESSAGES,\r\n    commands: SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY,\r\n    basic: SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY,\r\n    params: SCHEMA_SYSTEM_PARAM_NAMS_ARRAY,\r\n  } satisfies Record<keyof System_Terms, SchemaObject>,\r\n} as const satisfies SchemaObject;\r\n\r\nexport default SCHEMA_SYSTEM_TERMS_CORE;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY = {\r\n  type: \"array\",\r\n  items: { type: \"string\" },\r\n  minItems: 10,\r\n  maxItems: 10,\r\n} as const satisfies JSONSchemaType<string[]>;\r\n\r\nexport default SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_SYSTEM_PARAM_NAMS_ARRAY = {\r\n  type: \"array\",\r\n  items: {\r\n    type: \"string\",\r\n    minLength: 1,\r\n  },\r\n  minItems: 10,\r\n  maxItems: 10,\r\n  uniqueItems: true,\r\n} as const satisfies JSONSchemaType<string[]>;\r\n\r\nexport default SCHEMA_SYSTEM_PARAM_NAMS_ARRAY;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport SCHEMA_SYSTEM_EDITOR_SETTINGS from \"./editor/schema\";\r\nimport SCHEMA_SYSTEM_TEST_BATTLER from \"./testPlay/testBattler/schema\";\r\nimport type { System_GameEditorBundleRMMZ } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"battleback1Name\",\r\n    \"battleback2Name\",\r\n    \"battlerHue\",\r\n    \"battlerName\",\r\n    \"editMapId\",\r\n    \"editor\",\r\n    \"testBattlers\",\r\n    \"testTroopId\",\r\n  ],\r\n  properties: {\r\n    testBattlers: {\r\n      type: \"array\",\r\n      items: SCHEMA_SYSTEM_TEST_BATTLER,\r\n    },\r\n    testTroopId: { type: \"integer\", minimum: 0 },\r\n    battleback1Name: { type: \"string\" },\r\n    battleback2Name: { type: \"string\" },\r\n    editMapId: { type: \"integer\", minimum: 0 },\r\n    battlerHue: { type: \"integer\", minimum: 0 },\r\n    battlerName: { type: \"string\" },\r\n    editor: SCHEMA_SYSTEM_EDITOR_SETTINGS,\r\n  },\r\n} as const satisfies JSONSchemaType<System_GameEditorBundleRMMZ>;\r\n\r\nexport default SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { EditorSettings } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_EDITOR_SETTINGS: JSONSchemaType<EditorSettings> = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"messageWidth1\", \"messageWidth2\", \"jsonFormatLevel\"],\r\n  properties: {\r\n    messageWidth1: { type: \"integer\", minimum: 0, maximum: 1000 },\r\n    messageWidth2: { type: \"integer\", minimum: 0, maximum: 1000 },\r\n    jsonFormatLevel: { type: \"integer\", minimum: 0, maximum: 4 },\r\n  },\r\n} as const satisfies JSONSchemaType<EditorSettings>;\r\n\r\nexport default SCHEMA_SYSTEM_EDITOR_SETTINGS;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Vehicle } from \"./types\";\r\n\r\nconst SCHEMA_SYSTEM_VEHICLE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"characterIndex\",\r\n    \"characterName\",\r\n    \"bgm\",\r\n    \"startMapId\",\r\n    \"startX\",\r\n    \"startY\",\r\n  ],\r\n  properties: {\r\n    characterIndex: { type: \"integer\", minimum: 0, maximum: 7 },\r\n    characterName: { type: \"string\", minLength: 1 },\r\n    bgm: {\r\n      type: \"object\",\r\n      additionalProperties: false,\r\n      required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        volume: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        pitch: { type: \"integer\", minimum: 50, maximum: 150 },\r\n        pan: { type: \"integer\", minimum: -100, maximum: 100 },\r\n      },\r\n    },\r\n    startMapId: { type: \"integer\", minimum: 0 },\r\n    startX: { type: \"integer\", minimum: 0, maximum: 5000 },\r\n    startY: { type: \"integer\", minimum: 0, maximum: 5000 },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Vehicle>;\r\n\r\nexport default SCHEMA_SYSTEM_VEHICLE;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AttackMotion, Data_Vehicle, System_Advanced } from \"./core\";\r\nimport SCHEMA_SYSTEM_ADVANCED from \"./core/advanced/schema\";\r\nimport SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION from \"./core/attackMotion/schema\";\r\nimport SCHEMA_SYSTEM_VEHICLE from \"./core/vehicle/schema\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nconst SCHEMA_SYSTEM_PARTIAL_BUNDLE = {\r\n  additionalProperties: false,\r\n  required: [\"airship\", \"boat\", \"ship\", \"advanced\", \"attackMotions\"],\r\n  type: \"object\",\r\n  properties: {\r\n    airship: SCHEMA_SYSTEM_VEHICLE satisfies JSONSchemaType<Data_Vehicle>,\r\n    boat: SCHEMA_SYSTEM_VEHICLE satisfies JSONSchemaType<Data_Vehicle>,\r\n    ship: SCHEMA_SYSTEM_VEHICLE satisfies JSONSchemaType<Data_Vehicle>,\r\n    advanced: SCHEMA_SYSTEM_ADVANCED satisfies JSONSchemaType<System_Advanced>,\r\n    attackMotions: {\r\n      type: \"array\",\r\n      items: SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION,\r\n    } satisfies JSONSchemaType<AttackMotion[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<\r\n  Pick<Data_System, \"airship\" | \"boat\" | \"ship\" | \"advanced\" | \"attackMotions\">\r\n>;\r\n\r\nexport default SCHEMA_SYSTEM_PARTIAL_BUNDLE;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_Advanced } from \"./advanced\";\r\n\r\nconst SCHEMA_SYSTEM_ADVANCED = {\r\n  type: \"object\",\r\n  properties: {\r\n    gameId: { type: \"integer\" },\r\n    screenWidth: { type: \"integer\" },\r\n    screenHeight: { type: \"integer\" },\r\n    uiAreaWidth: { type: \"integer\" },\r\n    uiAreaHeight: { type: \"integer\" },\r\n    windowOpacity: { type: \"integer\" },\r\n    screenScale: { type: \"number\" },\r\n\r\n    numberFontFilename: { type: \"string\" },\r\n    mainFontFilename: { type: \"string\" },\r\n    fallbackFonts: { type: \"string\" },\r\n    fontSize: { type: \"integer\" },\r\n  },\r\n  required: [\r\n    \"gameId\",\r\n    \"screenWidth\",\r\n    \"screenHeight\",\r\n    \"uiAreaWidth\",\r\n    \"uiAreaHeight\",\r\n    \"windowOpacity\",\r\n    \"screenScale\",\r\n    \"numberFontFilename\",\r\n    \"mainFontFilename\",\r\n    \"fallbackFonts\",\r\n    \"fontSize\",\r\n  ],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<System_Advanced>;\r\n\r\nexport default SCHEMA_SYSTEM_ADVANCED;\r\n","import SCHEMA_SYSTEM_AUDIOFILES from \"./core/audio/schema\";\r\nimport SCHEMA_SYSTEM_BATTLE_RULE_RMMZ from \"./core/battle/schema\";\r\nimport SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS from \"./core/booleanOptions/gameMenu/schema\";\r\nimport SCHEMA_SYSTEM_BOOLEAN_OPTIONS from \"./core/booleanOptions/gameSetting/schema\";\r\nimport SCHEMA_SYSTEM_GAME_INITIAL from \"./core/gameInitial/schema\";\r\nimport SCHEMA_SYSTEM_IMAGE_SIZE from \"./core/images/size/schema\";\r\nimport SCHEMA_SYSTEM_TITLE_IMAGES from \"./core/images/title/schema\";\r\nimport SCHEMA_SYSTEM_OTHER_DATA from \"./core/other/schema\";\r\nimport SCHEMA_SYSTEM_RPG_DATA_NAMES from \"./core/rpgDataTypes/schema\";\r\nimport SCHEMA_SYSTEM_TERMS_BUNDLE from \"./core/terms/schema\";\r\nimport SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE from \"./gameEdit/schema\";\r\nimport SCHEMA_SYSTEM_PARTIAL_BUNDLE from \"./schemaBundle\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nexport interface PartialSystemSchema {\r\n  required: ReadonlyArray<keyof Data_System>;\r\n  properties: Record<string, object>;\r\n  additionalProperties: false;\r\n  type: \"object\";\r\n}\r\n\r\nexport const allSystemSchema = () => [\r\n  SCHEMA_SYSTEM_PARTIAL_BUNDLE,\r\n  SCHEMA_SYSTEM_AUDIOFILES,\r\n  SCHEMA_SYSTEM_BATTLE_RULE_RMMZ,\r\n  SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS,\r\n  SCHEMA_SYSTEM_BOOLEAN_OPTIONS,\r\n  SCHEMA_SYSTEM_GAME_INITIAL,\r\n  SCHEMA_SYSTEM_IMAGE_SIZE,\r\n  SCHEMA_SYSTEM_OTHER_DATA,\r\n  SCHEMA_SYSTEM_RPG_DATA_NAMES,\r\n  SCHEMA_SYSTEM_TERMS_BUNDLE,\r\n  SCHEMA_SYSTEM_TITLE_IMAGES,\r\n  SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE,\r\n];\r\n\r\nexport const mergeSystemSchema = (\r\n  list: ReadonlyArray<PartialSystemSchema>\r\n): PartialSystemSchema => {\r\n  const reducedList = reduce(list);\r\n  return {\r\n    additionalProperties: false,\r\n    type: \"object\",\r\n    required: Array.from(new Set(reducedList.required)),\r\n    properties: reducedList.properties,\r\n  };\r\n};\r\n\r\nconst reduce = (list: ReadonlyArray<PartialSystemSchema>) => {\r\n  type Type = Pick<PartialSystemSchema, \"required\" | \"properties\">;\r\n  return list.reduce<Type>(\r\n    (acc, item) => ({\r\n      required: [...acc.required, ...item.required],\r\n      properties: { ...acc.properties, ...item.properties },\r\n    }),\r\n    { required: [], properties: {} }\r\n  );\r\n};\r\n","import Ajv from \"ajv\";\r\nimport type { AttackMotion, System_ImageSize } from \"./core\";\r\nimport SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION from \"./core/attackMotion/schema\";\r\nimport SCHEMA_SYSTEM_IMAGE_SIZE from \"./core/images/size/schema\";\r\nimport type { TestBattler } from \"./gameEdit\";\r\nimport SCHEMA_SYSTEM_TEST_BATTLER from \"./gameEdit/testPlay/testBattler/schema\";\r\nimport { mergeSystemSchema, allSystemSchema } from \"./schemaMerge\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nconst ajv = new Ajv({ strict: true });\r\n\r\nconst schema = mergeSystemSchema(allSystemSchema());\r\nconst systemValidate = ajv.compile(schema);\r\n\r\nexport const isDataSystem = (data: unknown): data is Data_System => {\r\n  return systemValidate(data);\r\n};\r\n\r\nconst testBattler = ajv.compile(SCHEMA_SYSTEM_TEST_BATTLER);\r\n\r\nexport const isTestBattler = (data: unknown): data is TestBattler => {\r\n  return testBattler(data);\r\n};\r\n\r\nconst attackMotion = ajv.compile(SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION);\r\nexport const isAttackMotion = (data: unknown): data is AttackMotion => {\r\n  return attackMotion(data);\r\n};\r\n\r\nconst imageSize = ajv.compile(SCHEMA_SYSTEM_IMAGE_SIZE);\r\nexport const isImageSize = (data: unknown): data is System_ImageSize => {\r\n  return imageSize(data);\r\n};\r\n","import type { Terms_Basic, Terms_BasicArray } from \"./types\";\r\n\r\nexport const makeTermsBasic = (\r\n  terms: Partial<Terms_Basic>\r\n): Terms_BasicArray => {\r\n  return [\r\n    terms.level ?? \"Level\",\r\n    terms.levelA ?? \"Level\",\r\n    terms.hp ?? \"HP\",\r\n    terms.hpA ?? \"HP\",\r\n    terms.mp ?? \"MP\",\r\n    terms.mpA ?? \"MP\",\r\n    terms.tp ?? \"TP\",\r\n    terms.tpA ?? \"TP\",\r\n    terms.experience ?? \"EXP\",\r\n    terms.exp ?? \"EXP\",\r\n  ];\r\n};\r\n\r\nexport const makeTermsBasicFromArray = (\r\n  array: Terms_BasicArray\r\n): Terms_Basic => {\r\n  return {\r\n    level: array[0],\r\n    levelA: array[1],\r\n    hp: array[2],\r\n    hpA: array[3],\r\n    mp: array[4],\r\n    mpA: array[5],\r\n    tp: array[6],\r\n    tpA: array[7],\r\n    experience: array[8],\r\n    exp: array[9],\r\n  };\r\n};\r\n","import type { Terms_GameCommands } from \"./types\";\r\nimport type { Terms_CommandArray } from \"./types\";\r\n\r\nexport const makeTermsCommandArray = (\r\n  param: Partial<Terms_GameCommands>\r\n): Terms_CommandArray => {\r\n  return makeTermsCommandArrayWithNulls(param, \"\");\r\n};\r\n\r\nexport const makeTermsCommandArrayWithNulls = <T extends \"\" | null>(\r\n  param: Partial<Terms_GameCommands>,\r\n  empty: T\r\n): Terms_CommandArray<T> => {\r\n  return [\r\n    param.fight ?? \"Fight\",\r\n    param.escape ?? \"Escape\",\r\n    param.attack ?? \"Attack\",\r\n    param.guard ?? \"Guard\",\r\n    param.item ?? \"Item\",\r\n    param.skill ?? \"Skill\",\r\n    param.equip ?? \"Equip\",\r\n    param.status ?? \"Status\",\r\n    param.formation ?? \"Formation\",\r\n    param.save ?? \"Save\",\r\n    param.gameEnd ?? \"Game End\",\r\n    param.options ?? \"Options\",\r\n    param.weapon ?? \"Weapon\",\r\n    param.armor ?? \"Armor\",\r\n    param.keyItem ?? \"Key Item\",\r\n    param.equip2 ?? \"Equip2\",\r\n    param.optimize ?? \"Optimize\",\r\n    param.clear ?? \"Clear\",\r\n    param.newGame ?? \"New Game\",\r\n    param.continue_ ?? \"Continue\",\r\n    empty,\r\n    param.toTitle ?? \"To Title\",\r\n    param.cancel ?? \"Cancel\",\r\n    empty,\r\n    param.buy ?? \"Buy\",\r\n    param.sell ?? \"Sell\",\r\n  ];\r\n};\r\n\r\nexport const makeTermsCommandFromArray = <T extends \"\" | null = \"\">(\r\n  param: Terms_CommandArray<T>\r\n): Terms_GameCommands => {\r\n  return {\r\n    fight: param[0],\r\n    escape: param[1],\r\n    attack: param[2],\r\n    guard: param[3],\r\n    item: param[4],\r\n    skill: param[5],\r\n    equip: param[6],\r\n    status: param[7],\r\n    formation: param[8],\r\n    save: param[9],\r\n    gameEnd: param[10],\r\n    options: param[11],\r\n    weapon: param[12],\r\n    armor: param[13],\r\n    keyItem: param[14],\r\n    equip2: param[15],\r\n    optimize: param[16],\r\n    clear: param[17],\r\n    newGame: param[18],\r\n    continue_: param[19],\r\n    toTitle: param[21],\r\n    cancel: param[22],\r\n\r\n    buy: param[24],\r\n    sell: param[25],\r\n  };\r\n};\r\n","import type { Terms_Messages } from \"./types\";\r\n\r\nconst validate = (msg: unknown, fallback: string): string => {\r\n  return typeof msg === \"string\" ? msg : fallback;\r\n};\r\n\r\nexport const makeTermsMessages = (\r\n  msg: Partial<Terms_Messages>\r\n): Terms_Messages => {\r\n  return {\r\n    actionFailure: validate(msg.actionFailure, \"Action failed.\"),\r\n    actorDamage: validate(msg.actorDamage, \"%1 took %2 damage.\"),\r\n    actorRecovery: validate(msg.actorRecovery, \"%1 recovered %2 HP.\"),\r\n    actorGain: validate(msg.actorGain, \"%1 gained %2.\"),\r\n    actorLoss: validate(msg.actorLoss, \"%1 lost %2.\"),\r\n    actorDrain: validate(msg.actorDrain, \"%1 drained %2 HP.\"),\r\n    actorNoDamage: validate(msg.actorNoDamage, \"%1 was not damaged.\"),\r\n    actorNoHit: validate(msg.actorNoHit, \"%1 was not hit.\"),\r\n    alwaysDash: validate(msg.alwaysDash, \"Always dash.\"),\r\n    bgmVolume: validate(msg.bgmVolume, \"BGM volume\"),\r\n    bgsVolume: validate(msg.bgsVolume, \"BGS volume\"),\r\n    commandRemember: validate(msg.commandRemember, \"Command remember.\"),\r\n    criticalToActor: validate(msg.criticalToActor, \"%1 dealt %2 damage to %3.\"),\r\n    criticalToEnemy: validate(msg.criticalToEnemy, \"%1 dealt %2 damage to %3.\"),\r\n    counterAttack: validate(msg.counterAttack, \"%1 countered!\"),\r\n    debuffAdd: validate(msg.debuffAdd, \"%1's %2 was lowered.\"),\r\n    defeat: validate(msg.defeat, \"Defeat.\"),\r\n    enemyDamage: validate(msg.enemyDamage, \"%1 took %2 damage.\"),\r\n    enemyDrain: validate(msg.enemyDrain, \"%1 drained %2 HP.\"),\r\n    enemyGain: validate(msg.enemyGain, \"%1 gained %2.\"),\r\n    enemyLoss: validate(msg.enemyLoss, \"%1 lost %2.\"),\r\n    enemyNoDamage: validate(msg.enemyNoDamage, \"%1 was not damaged.\"),\r\n    enemyNoHit: validate(msg.enemyNoHit, \"%1 was not hit.\"),\r\n    enemyRecovery: validate(msg.enemyRecovery, \"%1 recovered %2 HP.\"),\r\n    evasion: validate(msg.evasion, \"%1 evaded the attack!\"),\r\n    autosave: validate(msg.autosave, \"Autosave\"),\r\n    escapeFailure: validate(msg.escapeFailure, \"Escape failed.\"),\r\n    escapeStart: validate(msg.escapeStart, \"%1 started to escape!\"),\r\n    emerge: validate(msg.emerge, \"%1 appeared!\"),\r\n    expNext: validate(msg.expNext, \"Next level in %1 EXP.\"),\r\n    expTotal: validate(msg.expTotal, \"Total EXP: %1\"),\r\n    file: validate(msg.file, \"File\"),\r\n    buffAdd: validate(msg.buffAdd, \"%1's %2 was raised.\"),\r\n    buffRemove: validate(msg.buffRemove, \"%1's %2 was lowered.\"),\r\n    obtainExp: validate(msg.obtainExp, \"%1 EXP obtained.\"),\r\n    obtainGold: validate(msg.obtainGold, \"%1 gold obtained.\"),\r\n    obtainItem: validate(msg.obtainItem, \"%1 obtained %2.\"),\r\n    obtainSkill: validate(msg.obtainSkill, \"%1 learned %2.\"),\r\n    levelUp: validate(msg.levelUp, \"%1 leveled up!\"),\r\n    partyName: validate(msg.partyName, \"Party\"),\r\n    loadMessage: validate(msg.loadMessage, \"Load %1?\"),\r\n    meVolume: validate(msg.meVolume, \"ME volume\"),\r\n    possession: validate(msg.possession, \"Possession\"),\r\n    preemptive: validate(msg.preemptive, \"%1 attacked first!\"),\r\n    saveMessage: validate(msg.saveMessage, \"Save %1?\"),\r\n    seVolume: validate(msg.seVolume, \"SE volume\"),\r\n    magicEvasion: validate(msg.magicEvasion, \"%1 evaded the magic!\"),\r\n    magicReflection: validate(msg.magicReflection, \"%1 reflected the magic!\"),\r\n    substitute: validate(msg.substitute, \"%1 took the hit!\"),\r\n    surprise: validate(msg.surprise, \"%1 surprised the enemy!\"),\r\n    touchUI: validate(msg.touchUI, \"Touch UI\"),\r\n    useItem: validate(msg.useItem, \"%1 used %2.\"),\r\n    victory: validate(msg.victory, \"Victory!\"),\r\n  };\r\n};\r\n","import type { AudioFileParams } from \"src/utils\";\r\nimport { makeAudioFileParams } from \"src/utils\";\r\nimport {\r\n  makeBooleanOptions,\r\n  makeDataNames,\r\n  makeItemCategories,\r\n  makeMenuCommandsEnabled,\r\n  makeParamNamesArray,\r\n  makeSoundsArray,\r\n  makeSystemAdvanced,\r\n  makeVehicleData,\r\n} from \"./core\";\r\nimport type {\r\n  System_BooleanGameOptions,\r\n  System_RPG_DataNames,\r\n  System_ImageSize,\r\n  System_Terms,\r\n  System_TermsPartial,\r\n} from \"./core\";\r\nimport { makeTermsBasic } from \"./core/terms/core/basic\";\r\nimport { makeTermsCommand } from \"./core/terms/core/commands\";\r\nimport type { Terms_Messages } from \"./core/terms/core/messages\";\r\nimport { makeTermsMessages } from \"./core/terms/core/messages\";\r\nimport type { EditorSettings } from \"./gameEdit\";\r\nimport { makeEditorSetting } from \"./gameEdit\";\r\nimport type { TestBattler } from \"./gameEdit/testPlay/testBattler/types\";\r\nimport type { Data_System } from \"./system\";\r\nimport type { SystemDataFragments } from \"./systemSegments\";\r\nimport { isImageSize, isTestBattler } from \"./validate\";\r\n\r\nexport const makeSystemData = (\r\n  fragments: Partial<SystemDataFragments>\r\n): Data_System => {\r\n  const size = cloneSize(fragments.size);\r\n\r\n  return {\r\n    ...(makeBooleanOptions(fragments.options) satisfies Record<\r\n      string & keyof System_BooleanGameOptions,\r\n      boolean\r\n    >),\r\n    currencyUnit: fragments.texts?.currencyUnit ?? \"\",\r\n    gameTitle: fragments.texts?.gameTitle ?? \"\",\r\n    sounds: makeSoundsArray(fragments.sounds) satisfies AudioFileParams[],\r\n    editor: makeEditorSetting(fragments.editing) satisfies Record<\r\n      keyof EditorSettings,\r\n      number\r\n    >,\r\n    advanced: makeSystemAdvanced(fragments.advanced),\r\n    title1Name: fragments.images?.title1Name ?? \"\",\r\n    title2Name: fragments.images?.title2Name ?? \"\",\r\n    ...(makeDataNames(fragments.dataNames ?? {}) satisfies Record<\r\n      keyof System_RPG_DataNames,\r\n      string[]\r\n    >),\r\n    magicSkills: cloneNumberArray([]),\r\n    airship: makeVehicleData(fragments.vehicles?.airship),\r\n    boat: makeVehicleData(fragments.vehicles?.boat),\r\n    ship: makeVehicleData(fragments.vehicles?.ship),\r\n    defeatMe: makeAudioFileParams(fragments.me?.defeatMe),\r\n    gameoverMe: makeAudioFileParams(fragments.me?.gameoverMe),\r\n    titleBgm: makeAudioFileParams(fragments.bgm?.titleBgm),\r\n\r\n    tileSize: size.tileSize,\r\n    faceSize: size.faceSize,\r\n    iconSize: size.iconSize,\r\n    versionId: 1,\r\n    attackMotions: [],\r\n    battleback1Name: fragments.battleTest?.battleback1Name ?? \"\",\r\n    battleback2Name: fragments.battleTest?.battleback2Name ?? \"\",\r\n    testTroopId: fragments.battleTest?.testTroopId ?? 0,\r\n    testBattlers: cloneObjectArray(\r\n      fragments.battleTest?.testBattlers,\r\n      cloneTestBattler\r\n    ),\r\n    battleBgm: makeAudioFileParams(fragments.bgm?.battleBgm),\r\n    victoryMe: makeAudioFileParams(fragments.me?.victoryMe),\r\n    editMapId: fragments.editorTemporary?.editMapId ?? 0,\r\n    battlerName: fragments.editorTemporary?.battlerName ?? \"\",\r\n    locale: \"\",\r\n    startMapId: fragments.gameInit?.startMapId ?? 0,\r\n    startX: fragments.gameInit?.startX ?? 0,\r\n    startY: fragments.gameInit?.startY ?? 0,\r\n    windowTone: [0, 0, 0, 0],\r\n    terms: makeTerms(fragments.terms ?? {}) satisfies System_Terms,\r\n    itemCategories: makeItemCategories(\r\n      fragments.itemCategories\r\n    ) satisfies boolean[],\r\n    partyMembersArray: cloneNumberArray(fragments.gameInit?.partyMembersArray),\r\n    battleSystem: 0,\r\n    battlerHue: 0,\r\n    menuCommands: makeMenuCommandsEnabled(\r\n      fragments.menuComamnds\r\n    ) satisfies boolean[],\r\n  };\r\n};\r\n\r\nexport default makeSystemData;\r\n\r\nconst makeTerms = (terms: System_TermsPartial): System_Terms => {\r\n  return {\r\n    basic: makeTermsBasic(terms.basic ?? {}) satisfies string[],\r\n    commands: makeTermsCommand(terms.commands ?? {}) satisfies string[],\r\n    params: makeParamNamesArray(terms.params ?? {}) satisfies string[],\r\n    messages: makeTermsMessages(terms.messages ?? {}) satisfies Record<\r\n      keyof Terms_Messages,\r\n      string\r\n    >,\r\n  };\r\n};\r\n\r\nconst cloneNumberArray = (array?: ReadonlyArray<number>) => {\r\n  return array ? [...array] : [];\r\n};\r\n\r\nconst cloneSize = (data: unknown): System_ImageSize => {\r\n  return isImageSize(data)\r\n    ? {\r\n        tileSize: data.tileSize,\r\n        faceSize: data.faceSize,\r\n        iconSize: data.iconSize,\r\n      }\r\n    : {\r\n        tileSize: 48,\r\n        faceSize: 144,\r\n        iconSize: 32,\r\n      };\r\n};\r\n\r\nconst cloneObjectArray = <T>(\r\n  array: ReadonlyArray<unknown> | undefined,\r\n  fn: (data: unknown) => T\r\n) => {\r\n  return array ? array.map(fn) : [];\r\n};\r\n\r\nconst cloneTestBattler = (data: unknown): TestBattler => {\r\n  return isTestBattler(data)\r\n    ? {\r\n        actorId: data.actorId,\r\n        equips: cloneNumberArray(data.equips),\r\n        level: data.level,\r\n      }\r\n    : {\r\n        actorId: 0,\r\n        equips: [],\r\n        level: 1,\r\n      };\r\n};\r\n","import { CHANGE_NAME, CHANGE_NICKNAME, CHANGE_PROFILE } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  ParamObject_ChangeActorName,\r\n  Command_ChangeActorName as Command_ChangeActorName,\r\n  Command_ChangeActorNickName,\r\n  Command_ChangeActorProfile,\r\n  ParamObject_ChangeActorNickName,\r\n  ParamObject_ChangeActorProfile,\r\n} from \"./types\";\r\n\r\nexport const makeCommandChangeActorName = (\r\n  param: ParamObject_ChangeActorName,\r\n  indent: number = 0\r\n): Command_ChangeActorName => ({\r\n  code: CHANGE_NAME,\r\n  parameters: [param.actorId, param.name],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorNickName = (\r\n  param: ParamObject_ChangeActorNickName,\r\n  indent: number = 0\r\n): Command_ChangeActorNickName => ({\r\n  code: CHANGE_NICKNAME,\r\n  parameters: [param.actorId, param.nickname],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorProfile = (\r\n  param: ParamObject_ChangeActorProfile,\r\n  indent: number = 0\r\n): Command_ChangeActorProfile => ({\r\n  code: CHANGE_PROFILE,\r\n  parameters: [param.actorId, param.profile],\r\n  indent,\r\n});\r\n","import {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_BATTLE_BGM,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_DEFEAT_ME,\r\n} from \"@RpgTypes/rpg\";\r\nimport { makeAudioFileParams, type AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n  Command_ChangeDefeatME,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeBattleBGM,\r\n  CommandUnion_AnyAudio,\r\n} from \"./types\";\r\n\r\nexport const makeAudioCommand = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  filename: string\r\n) => {\r\n  return makeCommandAudioAny(code, makeAudioFileParams({ name: filename }));\r\n};\r\n\r\nexport const makeCommandAudioAny = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n) => {\r\n  return {\r\n    code,\r\n    parameters: [makeAudioFileParams(audio)] satisfies [AudioFileParams],\r\n    indent,\r\n  };\r\n};\r\n\r\nexport const makeCommandPlayBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGM => makeCommandAudioAny(PLAY_BGM, audio, indent);\r\n\r\nexport const makeCommandPlayBGS = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGS => makeCommandAudioAny(PLAY_BGS, audio, indent);\r\n\r\nexport const makeCommandPlayME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayME => makeCommandAudioAny(PLAY_ME, audio, indent);\r\n\r\nexport const makeCommandPlaySE = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlaySE => makeCommandAudioAny(PLAY_SE, audio, indent);\r\n\r\nexport const makeCommandChangeBattleBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeBattleBGM =>\r\n  makeCommandAudioAny(CHANGE_BATTLE_BGM, audio, indent);\r\n\r\nexport const makeCommandChangeVictoryME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeVictoryME =>\r\n  makeCommandAudioAny(CHANGE_VICTORY_ME, audio, indent);\r\n\r\nexport const makeCommandChangeDefeatME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeDefeatME =>\r\n  makeCommandAudioAny(CHANGE_DEFEAT_ME, audio, indent);\r\n","import { COMMON_EVENT } from \"@RpgTypes/rpg\";\r\nimport type { Command_CommonEvent, ParamObject_CommonEvent } from \"./types\";\r\nimport type { ParamArray_CommonEvent } from \"./types\";\r\n\r\nexport const makeCommandCommonEvent = (\r\n  param: Partial<ParamObject_CommonEvent> | undefined,\r\n  indent: number = 0\r\n): Command_CommonEvent => ({\r\n  code: COMMON_EVENT,\r\n  indent,\r\n  parameters: toArrayCommonEvent(param ?? {}),\r\n});\r\n\r\nexport const fromArrayCommonEvent = (\r\n  array: ParamArray_CommonEvent\r\n): ParamObject_CommonEvent => ({\r\n  eventId: array[0],\r\n});\r\n\r\nexport const toArrayCommonEvent = (\r\n  object: Partial<ParamObject_CommonEvent>\r\n): ParamArray_CommonEvent => [object.eventId ?? 0];\r\n","import { CONTROL_SWITCHES } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ControlSwitches,\r\n  ParamArray_ControlSwitches,\r\n  Paramobject_ControlSwitches,\r\n} from \"./types\";\r\n\r\nexport const fromArrayControlSwitches = (\r\n  param: ParamArray_ControlSwitches\r\n): Paramobject_ControlSwitches => {\r\n  return {\r\n    min: param[0],\r\n    max: param[1],\r\n    value: param[2],\r\n  };\r\n};\r\n\r\nexport const toArrayControlSwitches = (\r\n  object: Paramobject_ControlSwitches\r\n): ParamArray_ControlSwitches => {\r\n  return [object.min, object.max, object.value];\r\n};\r\n\r\nexport const makeCommandControlSwitches = (\r\n  param: Paramobject_ControlSwitches,\r\n  indent = 0\r\n): Command_ControlSwitches => ({\r\n  code: CONTROL_SWITCHES,\r\n  indent,\r\n  parameters: toArrayControlSwitches(param),\r\n});\r\n","import { COMMENT_BODY, COMMENT_HEAD } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  ParamArray_Comment,\r\n  ParamObject_Comment,\r\n  Command_CommentHeader,\r\n  Command_CommentBody,\r\n} from \"./types\";\r\n\r\nexport const makeCommentArray = (comment: string): ParamArray_Comment => {\r\n  return [comment];\r\n};\r\n\r\nexport const convertCommentArrayToObject = (\r\n  paramArray: ParamArray_Comment\r\n): ParamObject_Comment => ({\r\n  comment: paramArray[0],\r\n});\r\n\r\nexport const makeCommandCommentHeader = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentHeader => ({\r\n  code: COMMENT_HEAD,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommandCommentBody = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentBody => ({\r\n  code: COMMENT_BODY,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommentCommandArray = (\r\n  comments: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return comments.map((comment, index) =>\r\n    index === 0\r\n      ? makeCommandCommentHeader(comment, indent)\r\n      : makeCommandCommentBody(comment, indent)\r\n  ) as [Command_CommentHeader, ...Command_CommentBody[]];\r\n};\r\n","import { INPUT_NUMBER } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_InputNumber,\r\n  ParamArray_InputNumber,\r\n  ParamObject_InputNumber,\r\n} from \"./types\";\r\n\r\nexport const toArrayInputNumber = (\r\n  param: Partial<ParamObject_InputNumber>\r\n): ParamArray_InputNumber => [param.variableId ?? 0, param.digits ?? 0];\r\n\r\nexport const fromArrayInputNumber = (\r\n  array: ParamArray_InputNumber\r\n): ParamObject_InputNumber => ({\r\n  variableId: array[0],\r\n  digits: array[1],\r\n});\r\n\r\nexport const makeCommandInputNumber = (\r\n  param: Partial<ParamObject_InputNumber> | undefined,\r\n  indent: number = 0\r\n): Command_InputNumber => ({\r\n  code: INPUT_NUMBER,\r\n  indent,\r\n  parameters: toArrayInputNumber(param ?? {}),\r\n});\r\n","import type { SHOW_CHOICES, SHOW_CHOICES_ITEM } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  ParamObject_ShowChoiceWhen,\r\n  Command_ShowChoiceWhen,\r\n  ParamArray_ShowChoiceWhen,\r\n} from \"./item/types\";\r\nimport type {\r\n  ParamArray_SetupChoice,\r\n  ParamObject_SetupChoice,\r\n  Command_ShowChoices,\r\n} from \"./types/body\";\r\n\r\nexport const makeCommandShowChoiceItem = (\r\n  param: Partial<ParamObject_ShowChoiceWhen> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoiceWhen => ({\r\n  code: 402 satisfies typeof SHOW_CHOICES_ITEM,\r\n  indent,\r\n  parameters: [param?.index ?? 0, param?.name ?? \"\"],\r\n});\r\n\r\nexport const fromArraySetupChoiceItem = (\r\n  array: ParamArray_ShowChoiceWhen\r\n): ParamObject_ShowChoiceWhen => ({\r\n  index: array[0],\r\n  name: array[1],\r\n});\r\n\r\nexport const toArraySetupChoiceItem = (\r\n  object: Partial<ParamObject_ShowChoiceWhen>\r\n): ParamArray_ShowChoiceWhen => [object.index ?? 0, object.name ?? \"\"];\r\n\r\nexport const fromArraySetupChoice = (\r\n  array: ParamArray_SetupChoice\r\n): ParamObject_SetupChoice => ({\r\n  choices: array[0],\r\n  cancelType: array[1],\r\n  defaultType: array[2],\r\n  positionType: array[3],\r\n  background: array[4],\r\n});\r\n\r\nexport const toArraySetupChoice = (\r\n  object: Partial<ParamObject_SetupChoice>\r\n): ParamArray_SetupChoice => [\r\n  object.choices ?? [],\r\n  object.cancelType ?? 0,\r\n  object.defaultType ?? 0,\r\n  object.positionType ?? 2,\r\n  object.background ?? 0,\r\n];\r\n\r\nexport const makeCommandSetupChoice = (\r\n  param: Partial<ParamObject_SetupChoice> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoices => ({\r\n  code: 102 satisfies typeof SHOW_CHOICES,\r\n  indent,\r\n  parameters: [\r\n    param?.choices ?? [],\r\n    param?.cancelType ?? 0,\r\n    param?.defaultType ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.background ?? 0,\r\n  ],\r\n});\r\n\r\nexport const cloneChoices = (\r\n  command: Command_ShowChoices\r\n): Command_ShowChoices => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: [\r\n      [...command.parameters[0]],\r\n      command.parameters[1],\r\n      command.parameters[2],\r\n      command.parameters[3],\r\n      command.parameters[4],\r\n    ],\r\n  };\r\n};\r\n","import { SHOW_MESSAGE, SHOW_MESSAGE_BODY } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ShowMessageBody,\r\n  Command_ShowMessageHeader,\r\n  ParamArray_ShowMessage,\r\n  ParamObject_ShowMessage,\r\n} from \"./types\";\r\n\r\nexport const makeCommandShowMessage = (\r\n  param: Partial<ParamObject_ShowMessage> | undefined,\r\n  indent: number = 0\r\n): Command_ShowMessageHeader => ({\r\n  code: SHOW_MESSAGE,\r\n  indent,\r\n  parameters: [\r\n    param?.facename ?? \"\",\r\n    param?.faceIndex ?? 0,\r\n    param?.background ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.speakerName ?? \"\",\r\n  ],\r\n});\r\n\r\nexport const fromArrayShowMessageHeader = (\r\n  array: ParamArray_ShowMessage\r\n): ParamObject_ShowMessage => {\r\n  return {\r\n    facename: array[0],\r\n    faceIndex: array[1],\r\n    background: array[2],\r\n    positionType: array[3],\r\n    speakerName: array[4],\r\n  };\r\n};\r\n\r\nexport const toArrayShowMessageHeader = (\r\n  object: ParamObject_ShowMessage\r\n): ParamArray_ShowMessage => {\r\n  return [\r\n    object.facename,\r\n    object.faceIndex,\r\n    object.background,\r\n    object.positionType,\r\n    object.speakerName,\r\n  ];\r\n};\r\n\r\nexport const makeCommandShowMessageBody = (\r\n  text: string,\r\n  indent: number = 0\r\n): Command_ShowMessageBody => ({\r\n  code: SHOW_MESSAGE_BODY,\r\n  indent,\r\n  parameters: [text],\r\n});\r\n","import { SCRIPT_EVAL, SCRIPT_EVAL_BODY } from \"@RpgTypes/rpg\";\r\nimport type { Command_ScriptBody, Command_ScriptHeader } from \"./types\";\r\n\r\nexport const makeCommandScriptHeader = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptHeader => {\r\n  return {\r\n    code: SCRIPT_EVAL,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\n\r\nexport const makeCommandScriptBody = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptBody => {\r\n  return {\r\n    code: SCRIPT_EVAL_BODY,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\nexport const makeCommandScriptArray = (\r\n  lines: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return lines.map((line, index) =>\r\n    index === 0\r\n      ? makeCommandScriptHeader(line, indent)\r\n      : makeCommandScriptBody(line, indent)\r\n  ) as [Command_ScriptHeader, ...Command_ScriptBody[]];\r\n};\r\n","export const OPERAND_CONSTANT = 0 as const;\r\nexport const OPERAND_VARIABLE = 1 as const;\r\nexport const OPERAND_RANDOM = 2 as const;\r\nexport const OPERAND_GAMEDATA = 3 as const;\r\nexport const OPERAND_SCRIPT = 4 as const;\r\n","export const ENEMY_PARAM_INDEX = {\r\n  HP: 0,\r\n  MP: 1,\r\n  MHP: 2,\r\n  MMP: 3,\r\n  ATK: 4,\r\n  DEF: 5,\r\n  MAT: 6,\r\n  MDF: 7,\r\n  AGI: 8,\r\n  LUK: 9,\r\n  TP: 10,\r\n} as const;\r\n","import {\r\n  OPERAND_CONSTANT,\r\n  OPERAND_RANDOM,\r\n  OPERAND_VARIABLE,\r\n  OPERAND_GAMEDATA,\r\n  OPERAND_SCRIPT,\r\n} from \"./constants\";\r\nimport type * as Type from \"./types\";\r\nimport { ENEMY_PARAM_INDEX } from \"./types/enemy/dataSource\";\r\n\r\nexport const toArrayOperandConstant = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Constant,\r\n  operation: number = 0\r\n): Type.Operand_Constatant => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_CONSTANT,\r\n  value.value,\r\n];\r\n\r\nexport const toArrayOperandVariable = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Variable,\r\n  operation: number = 0\r\n): Type.Operand_Variable => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_VARIABLE,\r\n  value.variableId,\r\n];\r\nexport const toArrayOperandRandom = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Random,\r\n  operation: number = 0\r\n): Type.Operand_Random => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_RANDOM,\r\n  value.min,\r\n  value.max,\r\n];\r\n\r\nexport const toArrayOperandScript = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Script,\r\n  operation: number = 0\r\n): Type.Operand_Script => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_SCRIPT,\r\n  value.code,\r\n];\r\nexport const toArrayOperandItemData = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ItemData,\r\n  operation: number = 0\r\n): Type.Operand_ItemData => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  value.type,\r\n  value.itemId,\r\n];\r\n\r\nexport const toArrayOperandActorStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ActorStatus,\r\n  operation: number = 0\r\n): Type.Operand_ActorStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  3,\r\n  value.index,\r\n  value.param,\r\n];\r\n\r\nexport const toArrayOperandEnemyStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Enemy,\r\n  operation: number = 0\r\n): Type.Operand_EnemyStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  4,\r\n  value.index,\r\n  ENEMY_PARAM_INDEX[value.param],\r\n];\r\n","import type {\r\n  DataOperand_Enemy,\r\n  Operand_EnemyStatus,\r\n  DataOperand_Actor,\r\n  Operand_ActorStatus,\r\n} from \"./types\";\r\n\r\nexport const getEnemyValue = (\r\n  enemy: DataOperand_Enemy,\r\n  param: Operand_EnemyStatus\r\n): number => {\r\n  switch (param[6]) {\r\n    case 0:\r\n      return enemy.hp;\r\n    case 1:\r\n      return enemy.mp;\r\n    case 10:\r\n      return enemy.tp;\r\n  }\r\n  if (param[6] >= 2 && param[6] <= 9) {\r\n    return enemy.param(param[6] - 2);\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getActorValue = (\r\n  actor: DataOperand_Actor,\r\n  param: Operand_ActorStatus\r\n) => {\r\n  switch (param[6]) {\r\n    case 0: // Level\r\n      return actor.level;\r\n    case 1: // EXP\r\n      return actor.currentExp();\r\n    case 2: // HP\r\n      return actor.hp;\r\n    case 3: // MP\r\n      return actor.mp;\r\n    case 12: // TP\r\n      return actor.tp;\r\n  }\r\n  if (param[6] >= 4 && param[6] <= 11) {\r\n    return actor.param(param[6] - 4);\r\n  }\r\n  return 0;\r\n};\r\n","import type {\r\n  EventCommandLike2,\r\n  EventCommandUnknown,\r\n} from \"@RpgTypes/eventCommand\";\r\n\r\nexport const cloneParameters = <\r\n  Param extends ReadonlyArray<number | boolean | string>\r\n>(\r\n  param: Param\r\n): Param => {\r\n  return [...param] as unknown as Param;\r\n};\r\n\r\nexport const cloneEventCommand = <\r\n  Param extends Array<number | boolean | string>\r\n>(\r\n  command: EventCommandLike2<number, Param>\r\n) => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: cloneParameters<Param>(command.parameters),\r\n  };\r\n};\r\n\r\nconst isPrimitive = (value: unknown): value is string | number | boolean =>\r\n  typeof value === \"string\" ||\r\n  typeof value === \"number\" ||\r\n  typeof value === \"boolean\";\r\n\r\nexport const isCloneableCommand = (\r\n  value: EventCommandUnknown\r\n): value is EventCommandLike2<number, (string | number | boolean)[]> => {\r\n  return value.parameters.every(isPrimitive);\r\n};\r\n","import Ajv from \"ajv\";\r\nimport SCHEMA_COMMAND_EMPTY_PARAM from \"./commandEmptyParam.schema\";\r\nimport type {\r\n  CommandUnion_ChangeActorText,\r\n  Command_ScrollTextHeader,\r\n  CommandUnion_AnyAudio,\r\n  Command_CommonEvent,\r\n  Command_ShowChoices,\r\n  Command_ShowChoiceWhen,\r\n  Command_InputNumber,\r\n  Command_ShowMessageHeader,\r\n} from \"./commands\";\r\nimport SCHEMA_COMMAND_CHANGE_ACTOR_TEXT from \"./commands/actor/changeText/schema\";\r\nimport SCHEMA_COMMAND_CALL_COMMON_EVENT from \"./commands/flow/callCommonEvent/schema\";\r\nimport SCHEMA_COMMAND_INPUT_NUMBER from \"./commands/message/inputNumber/schema\";\r\nimport SCHEMA_COMMAND_SCROLL_TEXT_HEAD from \"./commands/message/scrollText/head/schema\";\r\nimport SCHEMA_COMMAND_SHOW_CHOICE_WHEN from \"./commands/message/setupChoice/item/schema\";\r\nimport SCHEMA_COMMAND_SHOW_CHOICES from \"./commands/message/setupChoice/schema\";\r\nimport SCHEMA_COMMAND_SHOW_MESSAGE from \"./commands/message/showMessage/schema\";\r\nimport SCHEMA_COMMAND_TEXT_BODY from \"./commandTextParam.schema\";\r\nimport type {\r\n  CommandUnion_EmptyParam,\r\n  CommandUnion_TextBody,\r\n} from \"./unionTypes\";\r\n\r\nconst ajv = new Ajv({ strict: true });\r\n// schemaはindex.ts無しで直接importすること！\r\n// 過去に循環参照エラーで苦しんでます\r\n\r\n// 各Schemaはtype以外はimportしないこと\r\n// 定数の解決に失敗してエラーになることがある\r\nconst changeActorText = ajv.compile(SCHEMA_COMMAND_CHANGE_ACTOR_TEXT);\r\nexport const isCommandChangeActorText = (\r\n  data: unknown\r\n): data is CommandUnion_ChangeActorText => {\r\n  return changeActorText(data);\r\n};\r\n\r\nconst scrollTextHead = ajv.compile(SCHEMA_COMMAND_SCROLL_TEXT_HEAD);\r\nexport const isCommandScrollTextHead = (\r\n  data: unknown\r\n): data is Command_ScrollTextHeader => {\r\n  return scrollTextHead(data);\r\n};\r\n\r\nconst emptyParam = ajv.compile(SCHEMA_COMMAND_EMPTY_PARAM);\r\nexport const isCommandNonParam = (\r\n  data: unknown\r\n): data is CommandUnion_EmptyParam => {\r\n  return emptyParam(data);\r\n};\r\n\r\nconst textBody = ajv.compile(SCHEMA_COMMAND_TEXT_BODY);\r\nexport const isCommandTextBody = (\r\n  command: unknown\r\n): command is CommandUnion_TextBody => {\r\n  return textBody(command);\r\n};\r\n\r\nconst commonVent = ajv.compile(SCHEMA_COMMAND_CALL_COMMON_EVENT);\r\nexport const isCommandCommonEvent = (\r\n  data: unknown\r\n): data is Command_CommonEvent => {\r\n  return commonVent(data);\r\n};\r\n\r\nconst showChoices = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICES);\r\nexport const isCommandShowChoices = (\r\n  data: unknown\r\n): data is Command_ShowChoices => {\r\n  return showChoices(data);\r\n};\r\n\r\nconst showChoiceItem = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICE_WHEN);\r\nexport const isCommandShowChoiceItem = (\r\n  data: unknown\r\n): data is Command_ShowChoiceWhen => {\r\n  return showChoiceItem(data);\r\n};\r\n\r\nconst inputNumber = ajv.compile(SCHEMA_COMMAND_INPUT_NUMBER);\r\nexport const isCommandInputNumber = (\r\n  data: unknown\r\n): data is Command_InputNumber => {\r\n  return inputNumber(data);\r\n};\r\n\r\nconst showMessage = ajv.compile(SCHEMA_COMMAND_SHOW_MESSAGE);\r\nexport const isCommandShowMessage = (\r\n  data: unknown\r\n): data is Command_ShowMessageHeader => {\r\n  return showMessage(data);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_ChangeActorText } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_CHANGE_ACTOR_TEXT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [320, 324, 325],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\", minimum: 0 }, // actorId\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_ChangeActorText>;\r\n\r\nexport default SCHEMA_COMMAND_CHANGE_ACTOR_TEXT;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ScrollTextHeader } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_SCROLL_TEXT_HEAD = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 105 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // speed\r\n        { type: \"boolean\" }, // skip\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextHeader>;\r\n\r\nexport default SCHEMA_COMMAND_SCROLL_TEXT_HEAD;\r\n","import type { CommandUnion_EmptyParam } from \"./unionTypes\";\r\n\r\nconst SCHEMA_COMMAND_EMPTY_PARAM = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: { type: \"array\", minItems: 0, maxItems: 0 },\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        0, 109, 112, 113, 115, 204, 206, 213, 214, 216, 217, 221, 222, 243, 244,\r\n        251, 314, 315, 340, 351, 352, 353, 354, 411,\r\n      ] satisfies ReadonlyArray<CommandUnion_EmptyParam[\"code\"]>,\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const;\r\n\r\nexport default SCHEMA_COMMAND_EMPTY_PARAM;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_TextBody } from \"./unionTypes\";\r\n// enumは意図的に数値直書き。\r\n// importで定数を取り込むと参照解決の問題でエラーになることがある\r\nconst SCHEMA_COMMAND_TEXT_BODY = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [108, 355, 401, 405, 408, 655] satisfies ReadonlyArray<\r\n        CommandUnion_TextBody[\"code\"]\r\n      >,\r\n    },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_TextBody>;\r\n\r\nexport default SCHEMA_COMMAND_TEXT_BODY;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_CommonEvent } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_CALL_COMMON_EVENT = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 117 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"number\", minimum: 0, default: 0 }],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_CommonEvent>;\r\n\r\nexport default SCHEMA_COMMAND_CALL_COMMON_EVENT;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowChoices } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_SHOW_CHOICES = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 102 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 5,\r\n      maxItems: 5,\r\n      items: [\r\n        { type: \"array\", items: { type: \"string\" } }, // choices\r\n        { type: \"integer\" }, // cancelType\r\n        { type: \"integer\" }, // defaultType\r\n        { type: \"integer\" }, // positionType\r\n        { type: \"integer\" }, // background\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoices>;\r\n\r\nexport default SCHEMA_COMMAND_SHOW_CHOICES;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowChoiceWhen } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_SHOW_CHOICE_WHEN = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 402 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\" }, // index\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoiceWhen>;\r\n\r\nexport default SCHEMA_COMMAND_SHOW_CHOICE_WHEN;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_InputNumber } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_INPUT_NUMBER = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 103 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // variableId\r\n        { type: \"number\" }, // digits\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_InputNumber>;\r\n\r\nexport default SCHEMA_COMMAND_INPUT_NUMBER;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowMessageHeader } from \"./types\";\r\n\r\nconst SCHEMA_COMMAND_SHOW_MESSAGE = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    code: { type: \"integer\", const: 101 }, // Assuming 101 is the code for ShowMessage\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"string\" }, // facename\r\n        { type: \"integer\", minimum: 0, maximum: 7 }, // faceIndex\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // background\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // positionType\r\n        { type: \"string\" }, // speakerName\r\n      ] as const,\r\n\r\n      minItems: 5,\r\n      maxItems: 5,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Command_ShowMessageHeader>;\r\n\r\nexport default SCHEMA_COMMAND_SHOW_MESSAGE;\r\n","import {\r\n  SHOW_MESSAGE_BODY,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n  COMMENT_BODY,\r\n  COMMENT_HEAD,\r\n  SCRIPT_EVAL_BODY,\r\n  SCRIPT_EVAL,\r\n} from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ShowMessageBody,\r\n  Command_CommentBody,\r\n  Command_CommentHeader,\r\n  Command_ScrollTextBody,\r\n  Command_ScriptHeader,\r\n  Command_ScriptBody,\r\n} from \"./commands\";\r\nimport { isCommandTextBody } from \"./validate\";\r\n\r\nexport const isCommandShowMessageBody = (\r\n  command: unknown\r\n): command is Command_ShowMessageBody => {\r\n  return isCommandTextBody(command) && command.code === SHOW_MESSAGE_BODY;\r\n};\r\n\r\nexport const isCommandShowScrollingTextBody = (\r\n  command: unknown\r\n): command is Command_ScrollTextBody => {\r\n  return (\r\n    isCommandTextBody(command) && command.code === SHOW_SCROLLING_TEXT_BODY\r\n  );\r\n};\r\n\r\nexport const isCommandCommentHeader = (\r\n  command: unknown\r\n): command is Command_CommentHeader => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_HEAD;\r\n};\r\n\r\nexport const isCommandCommentBody = (\r\n  command: unknown\r\n): command is Command_CommentBody => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_BODY;\r\n};\r\n\r\nexport const isCommandScriptHeader = (\r\n  command: unknown\r\n): command is Command_ScriptHeader => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL;\r\n};\r\n\r\nexport const isCommandScriptBody = (\r\n  command: unknown\r\n): command is Command_ScriptBody => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL_BODY;\r\n};\r\n","export const FOLDER_AUDIO_BGM = \"bgm\" as const;\r\nexport const FOLDER_AUDIO_SE = \"se\" as const;\r\nexport const FOLDER_AUDIO_ME = \"me\" as const;\r\nexport const FOLDER_AUDIO_BGS = \"bgs\" as const;\r\n","export const FOLDER_IMG_BATTLEBACK1 = \"battlebacks1\" as const;\r\nexport const FOLDER_IMG_BATTLEBACK2 = \"battlebacks2\" as const;\r\nexport const FOLDER_IMG_CHACTERS = \"characters\" as const;\r\nexport const FOLDER_IMG_ENEMIES = \"enemies\" as const;\r\nexport const FOLDER_IMG_FACES = \"faces\" as const;\r\nexport const FOLDER_IMG_PARALLACES = \"parallaxes\" as const;\r\nexport const FOLDER_IMG_PICTURES = \"pictures\" as const;\r\nexport const FOLDER_IMG_SV_ACTORS = \"sv_actors\" as const;\r\nexport const FOLDER_IMG_SV_ENEMIES = \"sv_enemies\" as const;\r\nexport const FOLDER_IMG_SYSTEM = \"system\" as const;\r\nexport const FOLDER_IMG_TILESETS = \"tilesets\" as const;\r\nexport const FOLDER_IMG_TITLES1 = \"titles1\" as const;\r\nexport const FOLDER_IMG_TITLES2 = \"titles2\" as const;\r\n","export const FILENAME_SYSTEM = \"System.json\";\r\nexport const FILENAME_ACTORS = \"Actors.json\";\r\nexport const FILENAME_CLASSES = \"Classes.json\";\r\nexport const FILENAME_SKILLS = \"Skills.json\";\r\nexport const FILENAME_ITEMS = \"Items.json\";\r\nexport const FILENAME_WEAPONS = \"Weapons.json\";\r\nexport const FILENAME_ARMORS = \"Armors.json\";\r\nexport const FILENAME_ENEMIES = \"Enemies.json\";\r\nexport const FILENAME_TROOPS = \"Troops.json\";\r\nexport const FILENAME_STATES = \"States.json\";\r\nexport const FILENAME_ANIMATIONS = \"Animations.json\";\r\nexport const FILENAME_TILESET = \"Tilesets.json\";\r\nexport const FILENAME_COMMON_EVENTS = \"CommonEvents.json\";\r\nexport const FILENAME_MAP_INFOS = \"MapInfos.json\";\r\n","export const FOLDER_DATA = \"data\" as const;\r\nexport const FOLDER_IMG = \"img\" as const;\r\nexport const FOLDER_AUDIO = \"audio\" as const;\r\nexport const FOLDER_JS = \"js\" as const;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { ArrayParamBase, ParamBase } from \"./paramBase\";\r\n\r\nexport const compileArrayField = <T, S extends JSONSchemaType<T>>(\r\n  data: ArrayParamBase<T>,\r\n  itemSchema: S\r\n) =>\r\n  ({\r\n    type: \"array\",\r\n    items: itemSchema,\r\n    ...withTexts(data),\r\n    ...withDefault(data.default),\r\n  } satisfies JSONSchemaType<T[]>);\r\n\r\n/**\r\n * - ParamBaseの派生型からメタ情報を抽出しJSONSchema形式に変換。値が無効な場合はフィールドを生成しない。\r\n */\r\nexport const withTexts = (\r\n  param: ParamBase\r\n): {\r\n  title?: string;\r\n  description?: string;\r\n} => ({\r\n  ...(typeof param.text === \"string\" ? { title: param.text } : {}),\r\n  ...(typeof param.desc === \"string\" ? { description: param.desc } : {}),\r\n});\r\n\r\n/**\r\n * - ParamBaseの派生型からdefault値を抽出。値が無効な場合はフィールドを生成しない。\r\n */\r\nexport const withDefault = <T>(\r\n  value: T | undefined\r\n):\r\n  | {}\r\n  | {\r\n      default: T;\r\n    } => (value !== undefined ? { default: value } : {});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type {\r\n  JSONSchemaTypeWithRpgParam,\r\n  X_Param,\r\n} from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { NumberParam, NumberArrayParam } from \"./core/primitiveParams\";\r\nimport { withDefault } from \"./utils\";\r\n\r\nconst isIntegerKind = (digit: number | undefined | null) => {\r\n  return digit === undefined || digit === 0;\r\n};\r\nexport const compileNumberField = (\r\n  data: NumberParam\r\n): JSONSchemaType<number> => ({\r\n  type: isIntegerKind(data.decimals) ? \"integer\" : \"number\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n});\r\nexport const compileNumberArrayField = (\r\n  data: NumberArrayParam\r\n): JSONSchemaType<number[]> => ({\r\n  type: \"array\",\r\n  items: {\r\n    type: isIntegerKind(data.decimals) ? \"integer\" : \"number\",\r\n  },\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n});\r\n\r\nconst xparamNumber = (data: NumberParam | NumberArrayParam) =>\r\n  xparamBaseData(\r\n    data,\r\n    typeof data.decimals === \"number\"\r\n      ? ({ decimals: data.decimals } satisfies Partial<NumberParam>)\r\n      : {}\r\n  );\r\nexport const compileNumberFieldWithXparam = (\r\n  data: NumberParam\r\n): JSONSchemaTypeWithRpgParam<NumberParam> => ({\r\n  type: isIntegerKind(data.decimals) ? \"integer\" : \"number\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n  ...(xparamNumber(data) satisfies X_Param),\r\n});\r\n\r\nexport const compileNumberArrayFieldWithXParam = (\r\n  data: NumberArrayParam\r\n): JSONSchemaTypeWithRpgParam<NumberArrayParam> => ({\r\n  type: \"array\",\r\n  items: {\r\n    type: isIntegerKind(data.decimals) ? \"integer\" : \"number\",\r\n  },\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n  ...xparamNumber(data),\r\n});\r\n","import { compileBooleanFieldWithXParam, compileBooleanField } from \"./boolean\";\r\nimport { compileComboField, compileComboFieldWithXparam } from \"./combo\";\r\nimport type { PrimitiveParam } from \"./core/primitiveParams\";\r\nimport { compileFileField, compileFileFieldWithXparam } from \"./file\";\r\nimport {\r\n  compileNumberArrayField,\r\n  compileNumberArrayFieldWithXParam,\r\n  compileNumberField,\r\n  compileNumberFieldWithXparam,\r\n} from \"./numbers\";\r\nimport type { AnyParamSchema } from \"./pluginMeta/anyParamSchema\";\r\nimport { makeRpgIdFieldWithXParam, makeRpgIdField } from \"./rpgDataKind\";\r\nimport { compileSelectField, compileSelectFieldWithXparam } from \"./select\";\r\nimport { compileStringField, compileStringFieldWithXparam } from \"./string\";\r\nimport { makeStructRef } from \"./structDef\";\r\nimport { compileArrayField } from \"./utils\";\r\n\r\nconst makeStringArrayField = (\r\n  data: Extract<PrimitiveParam, { default: string[] }>\r\n) => compileArrayField(data, { type: \"string\" });\r\n\r\nconst makeDataIdArrayField = (\r\n  data: Extract<PrimitiveParam, { default: number[] }>\r\n) => compileArrayField(data, { type: \"integer\" });\r\n\r\nexport const compilePrimitiveField = (data: PrimitiveParam): AnyParamSchema => {\r\n  switch (data.kind) {\r\n    case \"string\":\r\n    case \"multiline_string\":\r\n      return compileStringField(data);\r\n    case \"file\":\r\n      return compileFileField(data);\r\n    case \"combo\":\r\n      return compileComboField(data);\r\n    case \"select\":\r\n      return compileSelectField(data);\r\n    case \"file[]\":\r\n      return makeStringArrayField(data);\r\n    case \"string[]\":\r\n    case \"multiline_string[]\":\r\n      return makeStringArrayField(data);\r\n    case \"number[]\":\r\n      return compileNumberArrayField(data);\r\n    case \"actor[]\":\r\n    case \"weapon[]\":\r\n    case \"armor[]\":\r\n    case \"skill[]\":\r\n    case \"item[]\":\r\n    case \"enemy[]\":\r\n    case \"state[]\":\r\n    case \"class[]\":\r\n    case \"troop[]\":\r\n      return makeDataIdArrayField(data);\r\n    case \"number\":\r\n      return compileNumberField(data);\r\n    case \"actor\":\r\n    case \"weapon\":\r\n    case \"armor\":\r\n    case \"skill\":\r\n    case \"item\":\r\n    case \"enemy\":\r\n    case \"state\":\r\n    case \"class\":\r\n    case \"troop\":\r\n      return makeRpgIdField(data);\r\n    case \"boolean\":\r\n      return compileBooleanField(data);\r\n    case \"struct\":\r\n      return makeStructRef(data);\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n\r\nexport const compilePrimitiveFieldWithXParam = (\r\n  data: PrimitiveParam\r\n): AnyParamSchema => {\r\n  switch (data.kind) {\r\n    case \"string\":\r\n    case \"multiline_string\":\r\n      return compileStringFieldWithXparam(data);\r\n    case \"file\":\r\n      return compileFileFieldWithXparam(data);\r\n    case \"combo\":\r\n      return compileComboFieldWithXparam(data);\r\n    case \"select\":\r\n      return compileSelectFieldWithXparam(data);\r\n    case \"file[]\":\r\n      return makeStringArrayField(data);\r\n    case \"string[]\":\r\n    case \"multiline_string[]\":\r\n      return makeStringArrayField(data);\r\n    case \"number[]\":\r\n      return compileNumberArrayFieldWithXParam(data);\r\n    case \"actor[]\":\r\n    case \"weapon[]\":\r\n    case \"armor[]\":\r\n    case \"skill[]\":\r\n    case \"item[]\":\r\n    case \"enemy[]\":\r\n    case \"state[]\":\r\n    case \"class[]\":\r\n    case \"troop[]\":\r\n      return makeDataIdArrayField(data);\r\n    case \"number\":\r\n      return compileNumberFieldWithXparam(data);\r\n    case \"actor\":\r\n    case \"weapon\":\r\n    case \"armor\":\r\n    case \"skill\":\r\n    case \"item\":\r\n    case \"enemy\":\r\n    case \"state\":\r\n    case \"class\":\r\n    case \"troop\":\r\n      return makeRpgIdFieldWithXParam(data);\r\n    case \"boolean\":\r\n      return compileBooleanFieldWithXParam(data);\r\n    case \"struct\":\r\n      return makeStructRef(data);\r\n    default:\r\n      return {};\r\n  }\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type { JSONSchemaTypeWithRpgParam } from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { StringParam } from \"./core/primitiveParams\";\r\nimport { withDefault } from \"./utils\";\r\n\r\nexport const compileStringField = (\r\n  data: StringParam\r\n): JSONSchemaType<string> => ({\r\n  type: \"string\",\r\n  ...withTexts(data),\r\n  ...withDefault(data.default),\r\n});\r\n\r\nexport const compileStringFieldWithXparam = (\r\n  data: StringParam\r\n): JSONSchemaTypeWithRpgParam<StringParam> => ({\r\n  type: \"string\",\r\n  ...withTexts(data),\r\n  ...withDefault(data.default),\r\n  ...xparamBaseData(data, {}),\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type { JSONSchemaTypeWithRpgParam } from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { ComboParam } from \"./core/primitiveParams\";\r\nimport { withDefault } from \"./utils\";\r\n\r\nexport const compileComboField = (\r\n  data: ComboParam\r\n): JSONSchemaType<string> => ({\r\n  type: \"string\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n});\r\n\r\nexport const compileComboFieldWithXparam = (\r\n  data: ComboParam\r\n): JSONSchemaTypeWithRpgParam<ComboParam> => ({\r\n  type: \"string\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n  ...xparamBaseData(data, {\r\n    options: [...data.options],\r\n  }),\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type { JSONSchemaTypeWithRpgParam } from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { SelectParam } from \"./core/primitiveParams\";\r\nimport { withDefault } from \"./utils\";\r\n\r\nexport const compileSelectField = (\r\n  data: SelectParam\r\n): JSONSchemaType<string> => ({\r\n  type: \"string\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n  ...(data.options ? { enum: data.options.map((o): string => o.value) } : {}),\r\n});\r\n\r\nexport const compileSelectFieldWithXparam = (\r\n  data: SelectParam\r\n): JSONSchemaTypeWithRpgParam<SelectParam> => ({\r\n  type: \"string\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n  ...{ enum: data.options.map((o): string => o.value) },\r\n  ...xparamBaseData(data, {\r\n    options: data.options.map((o) => ({\r\n      value: o.value,\r\n      option: o.option,\r\n    })),\r\n  }),\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type { X_Param } from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { RpgDataIdParam, SystemDataIdParam } from \"./core/primitiveParams\";\r\nimport { lookupKind } from \"./core/rpgData/lookup\";\r\nimport { withDefault } from \"./utils\";\r\n\r\nexport const makeRpgIdField = (data: RpgDataIdParam | SystemDataIdParam) =>\r\n  ({\r\n    type: \"integer\",\r\n    ...withDefault(data.default),\r\n    ...withTexts(data),\r\n  } satisfies JSONSchemaType<number>);\r\n\r\nexport const makeRpgIdFieldWithXParam = (\r\n  data: RpgDataIdParam | SystemDataIdParam\r\n) => {\r\n  return {\r\n    type: \"integer\",\r\n    ...withDefault(data.default),\r\n    ...withTexts(data),\r\n    ...(xparamBaseData(data, lookupKind(data.kind)) satisfies X_Param),\r\n  } satisfies JSONSchemaType<number>;\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type {\r\n  JSONSchemaTypeWithRpgParam,\r\n  X_Param,\r\n} from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { BooleanParam } from \"./core/primitiveParams\";\r\nimport { withDefault } from \"./utils\";\r\n\r\nexport const compileBooleanField = (\r\n  data: BooleanParam\r\n): JSONSchemaType<boolean> => ({\r\n  type: \"boolean\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n});\r\n\r\nexport const compileBooleanFieldWithXParam = (\r\n  data: BooleanParam\r\n): JSONSchemaTypeWithRpgParam<BooleanParam> => ({\r\n  type: \"boolean\",\r\n  ...withDefault(data.default),\r\n  ...withTexts(data),\r\n  ...(xparamBoolean(data) satisfies X_Param),\r\n});\r\n\r\nconst xparamBoolean = (data: BooleanParam) =>\r\n  xparamBaseData(data, {\r\n    ...(typeof data.on === \"string\" ? { on: data.on } : {}),\r\n    ...(typeof data.off === \"string\" ? { off: data.off } : {}),\r\n  });\r\n","import { withTexts } from \"./core/paramBase/basicMetaField\";\r\nimport type { X_RPG_PARM, X_RmmzParam } from \"./core/paramBase/x-rpg-param\";\r\nimport { xparamBaseData } from \"./core/paramBase/x-rpg-param\";\r\nimport type { StructRefParam } from \"./core/primitiveParams\";\r\n\r\nexport interface JSONSchemaStructRef {\r\n  $ref: string;\r\n  description?: string;\r\n  title?: string;\r\n}\r\n\r\nexport const makeStructRef = (ref: StructRefParam): JSONSchemaStructRef => ({\r\n  $ref: `#/definitions/${ref.struct}`,\r\n  ...withTexts(ref),\r\n});\r\n\r\ntype SchemaType = JSONSchemaStructRef & {\r\n  [X_RPG_PARM]: X_RmmzParam<{ struct: string }>;\r\n};\r\n\r\nexport const makeStructRefWithXParam = (ref: StructRefParam) =>\r\n  ({\r\n    $ref: `#/definitions/${ref.struct}`,\r\n    ...withTexts(ref),\r\n    ...xparamBaseData(ref, {\r\n      struct: ref.struct,\r\n    }),\r\n  } satisfies SchemaType);\r\n","export type MappingTable<T> = {\r\n  [K in Extract<keyof T, string>]: (value: string) => T[K];\r\n};\r\n\r\ntype TableConcept = {\r\n  [key: string]: (tokens: string) => unknown;\r\n};\r\n\r\nexport const applyMappingTable = <T extends TableConcept>(\r\n  tokens: Record<string, string>,\r\n  fnTable: T\r\n): {\r\n  [K in keyof T]?: ReturnType<T[K]>;\r\n} => {\r\n  return Object.entries(fnTable).reduce((acc, [key, fn]) => {\r\n    if (key in tokens) {\r\n      const value = tokens[key as string];\r\n      if (typeof value === \"string\") {\r\n        return {\r\n          ...acc,\r\n          [key]: fn(value),\r\n        };\r\n      }\r\n    }\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const compileParam = <Kind extends string, T>(\r\n  kind: Kind,\r\n  defaultValue: T,\r\n  tokens: Record<string, string>,\r\n  fnTable: TableConcept\r\n): {\r\n  kind: Kind;\r\n  default: T;\r\n} & {\r\n  [K in keyof TableConcept]?: ReturnType<TableConcept[K]>;\r\n} => {\r\n  return {\r\n    default: defaultValue,\r\n    ...applyMappingTable(tokens, fnTable),\r\n    kind,\r\n  };\r\n};\r\n\r\nexport const compileArrayParam = <\r\n  T extends TableConcept & { default: (s: string) => unknown[] },\r\n  Kind extends string\r\n>(\r\n  kind: Kind,\r\n  tokens: Record<string, string>,\r\n  fnTable: T\r\n): {\r\n  kind: Kind;\r\n  default: ReturnType<T[\"default\"]>;\r\n} & {\r\n  [K in keyof T]?: ReturnType<T[K]>;\r\n} => {\r\n  return {\r\n    default: [],\r\n    ...applyMappingTable(tokens, fnTable),\r\n    kind,\r\n  };\r\n};\r\n","export const KEYWORD_TARGET = \"target\" as const;\r\nexport const KEYWORD_PLUGINDESC = \"plugindesc\" as const;\r\nexport const KEYWORD_AUTHOR = \"author\" as const;\r\nexport const KEYWORD_HELP = \"help\" as const;\r\nexport const KEYWORD_URL = \"url\" as const;\r\n\r\nexport const KEYWORD_KIND = \"kind\" as const;\r\nexport const KEYWORD_TYPE = \"type\" as const;\r\n\r\nexport const KEYWORD_PARAM = \"param\" as const;\r\nexport const KEYWORD_DESC = \"desc\" as const;\r\nexport const KEYWORD_TEXT = \"text\" as const;\r\nexport const KEYWORD_PARENT = \"parent\" as const;\r\nexport const KEYWORD_DEFAULT = \"default\" as const;\r\n\r\nexport const KEYWORD_ON = \"on\" as const;\r\nexport const KEYWORD_OFF = \"off\" as const;\r\n\r\nexport const KEYWORD_MAX = \"max\" as const;\r\nexport const KEYWORD_MIN = \"min\" as const;\r\nexport const KEYWORD_DECIMALS = \"decimals\" as const;\r\n\r\nexport const KEYWORD_DIR = \"dir\" as const;\r\n\r\nexport const KEYWORD_OPTION = \"option\" as const;\r\nexport const KEYWORD_VALUE = \"value\" as const;\r\n\r\nexport const KEYWORD_COMMAND = \"command\" as const;\r\nexport const KEYWORD_ARG = \"arg\" as const;\r\n\r\nexport const KEYWORD_BASE = \"base\" as const;\r\nexport const KEYWORD_ORDERAFTER = \"orderAfter\" as const;\r\nexport const KEYWORD_ORDERBEFORE = \"orderBefore\" as const;\r\n\r\nexport const KEYWORD_STRUCT = \"struct\" as const;\r\n","export const parseDeepJSON = (json: string): unknown => {\r\n  const parsed = JSON.parse(json);\r\n  if (Array.isArray(parsed)) {\r\n    return parsed.map(parseDeepValue);\r\n  }\r\n  if (typeof parsed === \"object\" && parsed !== null) {\r\n    return Object.fromEntries(\r\n      Object.entries(parsed).map(([k, v]) => [k, parseDeepValue(v)])\r\n    );\r\n  }\r\n  return parsed;\r\n};\r\n\r\nconst parseDeepValue = (value: unknown): unknown => {\r\n  if (typeof value !== \"string\") {\r\n    return value;\r\n  }\r\n  try {\r\n    const parsed = JSON.parse(value);\r\n    // 配列の場合、各要素を再帰的にparseDeepValue\r\n    if (Array.isArray(parsed)) {\r\n      return parsed.map(parseDeepValue);\r\n    }\r\n    // オブジェクトの場合、各プロパティを再帰的にparseDeepValue\r\n    if (typeof parsed === \"object\" && parsed !== null) {\r\n      return Object.fromEntries(\r\n        Object.entries(parsed).map(([k, v]) => [k, parseDeepValue(v)])\r\n      );\r\n    }\r\n    return parsed;\r\n  } catch {\r\n    // JSON.parseに失敗した場合はそのまま返す\r\n    return value;\r\n  }\r\n};\r\n","import type { MappingTable } from \"./mapping/mapping\";\r\nimport { compileParam, compileArrayParam } from \"./mapping/mapping\";\r\nimport { KEYWORD_KIND } from \"./parse/keyword/constants\";\r\nimport type { OptionItem } from \"./parse/selectOption\";\r\nimport type { PluginParamTokens } from \"./parse/types\";\r\nimport type {\r\n  BooleanParam,\r\n  NumberParam,\r\n  PrimitiveParam,\r\n  FileParam,\r\n  GenericIdParam,\r\n  NumberArrayParam,\r\n  StringArrayParam,\r\n  FileArrayParam,\r\n  StringParam,\r\n  ComboParam,\r\n  SelectParam,\r\n} from \"./primitiveParams\";\r\nimport { parseDeepJSON } from \"./rmmzJSON\";\r\nimport type {\r\n  DataKind_RpgUnion,\r\n  DataKind_SystemUnion,\r\n} from \"./rpgData/rpgDataTypesNames\";\r\n\r\ntype MappingTableEx<T> = MappingTable<Omit<T, \"kind\">>;\r\n\r\nexport type ParamSoruceRecord<T> = Partial<Record<keyof T, string>>;\r\n\r\nexport const compileAttributes = (\r\n  tokens: PluginParamTokens\r\n): PrimitiveParam => {\r\n  if (KEYWORD_KIND in tokens.attr) {\r\n    const func = TABLE2[tokens.attr.kind as keyof typeof TABLE2];\r\n    if (func) {\r\n      return func(tokens);\r\n    }\r\n  }\r\n  return compileParam(\"any\", \"\", tokens.attr, STRING);\r\n};\r\n\r\nconst attrString = (value: string): string => value;\r\nconst numberArray = (value: string): number[] => {\r\n  const numbers = value\r\n    .replace(\"[\", \"\")\r\n    .replace(\"]\", \"\")\r\n    .split(\",\")\r\n    .map((v) => parseFloat(v.replaceAll(`\"`, \"\").trim()));\r\n  return numbers.filter((n) => !isNaN(n));\r\n};\r\n\r\nconst STRING = {\r\n  default: attrString,\r\n  text: attrString,\r\n  desc: attrString,\r\n  parent: attrString,\r\n} as const satisfies MappingTableEx<StringParam>;\r\n\r\nconst compileComboParam = (tokens: PluginParamTokens): ComboParam => {\r\n  const option: string[] = tokens.options?.map((o) => o.option) ?? [];\r\n\r\n  return {\r\n    ...compileParam(\"combo\", \"\", tokens.attr, STRING),\r\n    options: option,\r\n  };\r\n};\r\nconst compileSelectParam = (tokens: PluginParamTokens): SelectParam => {\r\n  const options: OptionItem[] =\r\n    tokens.options?.map((o) => ({\r\n      option: o.option,\r\n      value: o.value,\r\n    })) ?? [];\r\n\r\n  return {\r\n    ...compileParam(\"select\", \"\", tokens.attr, STRING),\r\n    options,\r\n  };\r\n};\r\n\r\nconst compileBooleanParam = (tokens: PluginParamTokens): BooleanParam => {\r\n  const BOOLEAN = {\r\n    default: (value: string) => value === \"true\",\r\n    text: attrString,\r\n    desc: attrString,\r\n    on: attrString,\r\n    off: attrString,\r\n    parent: attrString,\r\n  } as const satisfies MappingTableEx<BooleanParam>;\r\n  return compileParam(\"boolean\", true, tokens.attr, BOOLEAN);\r\n};\r\n\r\nconst compileNumberParam = (tokens: PluginParamTokens): NumberParam => {\r\n  const NUMBER = {\r\n    default: (value: string) => parseFloat(value),\r\n    text: attrString,\r\n    desc: attrString,\r\n    decimals: (value: string) => parseInt(value, 10),\r\n    min: (value: string) => parseFloat(value),\r\n    max: (value: string) => parseFloat(value),\r\n    parent: attrString,\r\n  } as const satisfies MappingTableEx<NumberParam>;\r\n  return compileParam(\"number\", 0, tokens.attr, NUMBER);\r\n};\r\n\r\nconst compileNumberArrayParam = (\r\n  tokens: PluginParamTokens\r\n): NumberArrayParam => {\r\n  const NUMBER_ARRAY = {\r\n    default: numberArray,\r\n    text: attrString,\r\n    desc: attrString,\r\n    decimals: (value: string) => parseInt(value, 10),\r\n    min: (value: string) => parseFloat(value),\r\n    max: (value: string) => parseFloat(value),\r\n    parent: attrString,\r\n  } as const satisfies MappingTableEx<NumberArrayParam>;\r\n  return compileArrayParam(\"number[]\", tokens.attr, NUMBER_ARRAY);\r\n};\r\n\r\nconst compileStringParam = (tokens: PluginParamTokens) => {\r\n  return compileParam(\"string\", \"\", tokens.attr, STRING);\r\n};\r\n\r\nconst compileStringArrayParam = (\r\n  tokens: PluginParamTokens\r\n): StringArrayParam => {\r\n  const STRING_ARRAY = {\r\n    default: (value: string): string[] => parseDeepJSON(value) as string[],\r\n    text: attrString,\r\n    desc: attrString,\r\n    parent: attrString,\r\n  } as const satisfies MappingTableEx<StringArrayParam>;\r\n  return compileArrayParam(\"string[]\", tokens.attr, STRING_ARRAY);\r\n};\r\n\r\nconst compileFileParam = (tokens: PluginParamTokens): FileParam => {\r\n  const FILE = {\r\n    default: attrString,\r\n    text: attrString,\r\n    desc: attrString,\r\n    parent: attrString,\r\n    dir: attrString,\r\n  } as const satisfies MappingTableEx<FileParam>;\r\n  return {\r\n    dir: \"\",\r\n    ...compileParam(\"file\", \"\", tokens.attr, FILE),\r\n  };\r\n};\r\n\r\nconst compileFileArrayParam = (tokens: PluginParamTokens): FileArrayParam => {\r\n  const FILE_ARRAY = {\r\n    default: (value: string): string[] => parseDeepJSON(value) as string[],\r\n    text: attrString,\r\n    desc: attrString,\r\n    parent: attrString,\r\n    dir: attrString,\r\n  } as const satisfies MappingTableEx<FileArrayParam>;\r\n  return {\r\n    dir: \"\",\r\n    ...compileArrayParam(\"file[]\", tokens.attr, FILE_ARRAY),\r\n  };\r\n};\r\n\r\nconst compileDataIdArray = <\r\n  Kind extends DataKind_RpgUnion | DataKind_SystemUnion\r\n>(\r\n  tokens: PluginParamTokens,\r\n  kind: `${Kind}[]`\r\n) => {\r\n  const DATA_ID_ARRAY = {\r\n    default: numberArray,\r\n    text: attrString,\r\n    desc: attrString,\r\n    parent: attrString,\r\n  } as const;\r\n  return compileArrayParam(kind, tokens.attr, DATA_ID_ARRAY);\r\n};\r\n\r\nconst compileDataId = <Kind extends DataKind_RpgUnion | DataKind_SystemUnion>(\r\n  tokens: PluginParamTokens,\r\n  kind: Kind\r\n) => {\r\n  const DATA_ID = {\r\n    default: (value: string) => parseInt(value, 10),\r\n    text: attrString,\r\n    desc: attrString,\r\n    parent: attrString,\r\n  } as const satisfies MappingTableEx<GenericIdParam>;\r\n  return compileParam(kind, 0, tokens.attr, DATA_ID);\r\n};\r\n\r\nconst TABLE2 = {\r\n  number: (tokens) => compileNumberParam(tokens),\r\n  \"number[]\": compileNumberArrayParam,\r\n  string: compileStringParam,\r\n  \"string[]\": compileStringArrayParam,\r\n  multiline_string: compileStringParam,\r\n  \"multiline_string[]\": compileStringArrayParam,\r\n  combo: compileComboParam,\r\n  select: compileSelectParam,\r\n  actor: (tokens) => compileDataId(tokens, \"actor\"),\r\n  \"actor[]\": (tokens) => compileDataIdArray(tokens, \"actor[]\"),\r\n  class: (tokens) => compileDataId(tokens, \"class\"),\r\n  \"class[]\": (tokens) => compileDataIdArray(tokens, \"class[]\"),\r\n  skill: (tokens) => compileDataId(tokens, \"skill\"),\r\n  \"skill[]\": (tokens) => compileDataIdArray(tokens, \"skill[]\"),\r\n  item: (tokens) => compileDataId(tokens, \"item\"),\r\n  \"item[]\": (tokens) => compileDataIdArray(tokens, \"item[]\"),\r\n  weapon: (tokens) => compileDataId(tokens, \"weapon\"),\r\n  \"weapon[]\": (tokens) => compileDataIdArray(tokens, \"weapon[]\"),\r\n  armor: (tokens) => compileDataId(tokens, \"armor\"),\r\n  \"armor[]\": (tokens) => compileDataIdArray(tokens, \"armor[]\"),\r\n  state: (tokens) => compileDataId(tokens, \"state\"),\r\n  \"state[]\": (tokens) => compileDataIdArray(tokens, \"state[]\"),\r\n  enemy: (tokens) => compileDataId(tokens, \"enemy\"),\r\n  \"enemy[]\": (tokens) => compileDataIdArray(tokens, \"enemy[]\"),\r\n  common_event: (tokens) => compileDataId(tokens, \"common_event\"),\r\n  \"common_event[]\": (tokens) => compileDataIdArray(tokens, \"common_event[]\"),\r\n  switch: (tokens) => compileDataId(tokens, \"switch\"),\r\n  \"switch[]\": (tokens) => compileDataIdArray(tokens, \"switch[]\"),\r\n  variable: (tokens) => compileDataId(tokens, \"variable\"),\r\n  \"variable[]\": (tokens) => compileDataIdArray(tokens, \"variable[]\"),\r\n  troop: (tokens) => compileDataId(tokens, \"troop\"),\r\n  \"troop[]\": (tokens) => compileDataIdArray(tokens, \"troop[]\"),\r\n  boolean: compileBooleanParam,\r\n  file: compileFileParam,\r\n  \"file[]\": compileFileArrayParam,\r\n} as const satisfies Partial<{\r\n  [K in PrimitiveParam[\"kind\"]]: (tokens: PluginParamTokens) => PrimitiveParam;\r\n}>;\r\n","export interface Block {\r\n  structs: PlguinStructBlock[];\r\n  bodies: PlguinBodyBlock[];\r\n}\r\n\r\nexport interface PlguinStructBlock {\r\n  locale?: string;\r\n  struct: string;\r\n  lines: string[];\r\n}\r\n\r\nexport interface PlguinBodyBlock {\r\n  locale?: string;\r\n  lines: string[];\r\n}\r\n\r\ninterface BlockState {\r\n  structs: PlguinStructBlock[];\r\n  bodies: PlguinBodyBlock[];\r\n  structName?: string;\r\n  locale?: string;\r\n  lines: string[];\r\n  blockType?:\r\n    | typeof BLCOK_BODY\r\n    | typeof BLCOK_STRUCT\r\n    | typeof BLOCK_INVALID\r\n    | typeof BLOCK_NONE;\r\n}\r\n\r\nconst BLCOK_BODY = \"BODY\" as const;\r\nconst BLCOK_STRUCT = \"STRUCT\" as const;\r\nconst BLOCK_INVALID = \"INVALID\" as const;\r\nconst BLOCK_NONE = \"NONE\" as const;\r\n\r\nexport const splitBlock = (block: string): Block => {\r\n  const lines = block.split(\"\\n\");\r\n\r\n  const initialState: BlockState = {\r\n    structs: [],\r\n    bodies: [],\r\n    structName: undefined,\r\n    locale: undefined,\r\n    lines: [],\r\n    blockType: BLOCK_NONE,\r\n  };\r\n\r\n  const finalState = lines.reduce<BlockState>((state, line) => {\r\n    const trimmed = line.trim();\r\n    const structMatch = trimmed.match(\r\n      /^\\/\\*~struct~([A-Za-z0-9_]+)(?::([A-Za-z0-9_-]+))?/\r\n    );\r\n\r\n    if (structMatch) {\r\n      return handleStructMatch(state, structMatch);\r\n    }\r\n    if (trimmed === \"/*:\") {\r\n      return handleBlockStart(state);\r\n    }\r\n    if (trimmed === \"*/\") {\r\n      return state.lines.length > 0 ? handleBlockEnd(state) : state;\r\n    }\r\n    return {\r\n      ...state,\r\n      lines: state.lines.concat([trimmed]),\r\n    };\r\n  }, initialState);\r\n\r\n  return {\r\n    structs: finalState.structs,\r\n    bodies: finalState.bodies,\r\n  };\r\n};\r\n\r\nconst handleStructMatch = (\r\n  state: BlockState,\r\n  structMatch: RegExpMatchArray\r\n): BlockState => {\r\n  const flushed = state.lines.length > 0 ? handleBlockEnd(state) : state;\r\n  // struct名が空文字の場合はstructNameをundefinedにする\r\n  const structName = structMatch[1] || undefined;\r\n  return {\r\n    ...flushed,\r\n    structName,\r\n    blockType: structName ? BLCOK_STRUCT : BLOCK_INVALID,\r\n    locale: structMatch[2],\r\n    lines: [],\r\n  };\r\n};\r\n\r\nconst handleBlockStart = (state: BlockState): BlockState => {\r\n  const flushed = state.lines.length > 0 ? handleBlockEnd(state) : state;\r\n  return {\r\n    ...flushed,\r\n    blockType: BLCOK_BODY,\r\n    structName: undefined,\r\n    locale: undefined,\r\n    lines: [],\r\n  };\r\n};\r\nconst handleBlockEnd = (state: BlockState): BlockState => {\r\n  if (state.blockType === BLCOK_BODY) {\r\n    return {\r\n      ...state,\r\n      bodies: state.bodies.concat([{ lines: [...state.lines] }]),\r\n      lines: [],\r\n      blockType: BLOCK_NONE,\r\n    };\r\n  }\r\n\r\n  if (state.structName && state.blockType === BLCOK_STRUCT) {\r\n    return {\r\n      ...state,\r\n      structs: state.structs.concat([\r\n        {\r\n          struct: state.structName,\r\n          locale: state.locale,\r\n          lines: [...state.lines],\r\n        },\r\n      ]),\r\n      blockType: BLOCK_NONE,\r\n      structName: undefined,\r\n      locale: undefined,\r\n      lines: [],\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    blockType: BLOCK_NONE,\r\n    structName: undefined,\r\n    lines: [],\r\n  };\r\n};\r\n","import type { OptionsState } from \"./internalTypes\";\r\n\r\nexport const addValue = (state: OptionsState, value: string): OptionsState => {\r\n  return state.currentOption\r\n    ? {\r\n        items: state.items.concat({\r\n          option: state.currentOption,\r\n          value: value,\r\n        }),\r\n      }\r\n    : {\r\n        items: state.items,\r\n      };\r\n};\r\n\r\nexport const addOption = (\r\n  state: OptionsState,\r\n  option: string\r\n): OptionsState => {\r\n  return state.currentOption\r\n    ? {\r\n        items: state.items.concat({\r\n          option: state.currentOption,\r\n          value: state.currentOption,\r\n        }),\r\n        currentOption: option,\r\n      }\r\n    : {\r\n        items: state.items,\r\n        currentOption: option,\r\n      };\r\n};\r\n\r\nexport const finalizeOptions = (state: OptionsState) => {\r\n  if (state.currentOption) {\r\n    return {\r\n      items: state.items.concat({\r\n        option: state.currentOption,\r\n        value: state.currentOption,\r\n      }),\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","import type { ParseState } from \"./internalTypes\";\r\nimport { finalizeOptions } from \"./option\";\r\nimport type { PluginCommandTokens } from \"./types\";\r\n\r\nexport const withTexts = (command: { desc?: string; text?: string }) => {\r\n  return {\r\n    ...(typeof command.desc === \"string\" ? { desc: command.desc } : {}),\r\n    ...(typeof command.text === \"string\" ? { text: command.text } : {}),\r\n  };\r\n};\r\n\r\nexport const flashCurrentItem = (state: ParseState): ParseState => {\r\n  // 1. optionをflush\r\n  const p = flushOptionsToParam(state);\r\n  // 2. commandをflush\r\n  const c = flushCurrentCommand(p);\r\n  // 3. paramをflush\r\n  return flushCurrentParam(c);\r\n};\r\n\r\nconst flushOptionsToParam = (state: ParseState): ParseState => {\r\n  if (state.currentParam && state.currentOption) {\r\n    const kind = state.currentParam.attr.kind;\r\n    if (kind === \"select\" || kind === \"combo\") {\r\n      return {\r\n        ...state,\r\n        currentParam: {\r\n          ...state.currentParam,\r\n          options: finalizeOptions(state.currentOption).items,\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nconst flushCurrentParam = (state: ParseState): ParseState => {\r\n  if (state.currentParam) {\r\n    return {\r\n      ...state,\r\n      params: [...state.params, state.currentParam],\r\n      currentParam: null,\r\n      currentContext: null,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst flushCurrentCommand = (state: ParseState): ParseState => {\r\n  if (state.currentCommand) {\r\n    const newArgs = state.currentParam\r\n      ? [...state.currentCommand.args, state.currentParam]\r\n      : state.currentCommand.args;\r\n    const newCommand: PluginCommandTokens = {\r\n      ...withTexts(state.currentCommand),\r\n      command: state.currentCommand.command,\r\n      args: newArgs,\r\n    };\r\n    return {\r\n      ...state,\r\n      commands: [...state.commands, newCommand],\r\n      currentCommand: null,\r\n      currentParam: null,\r\n      currentContext: null,\r\n      currentOption: null,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","import type { Block, PlguinBodyBlock, PlguinStructBlock } from \"./block\";\r\nimport { splitBlock } from \"./block\";\r\nimport { flashCurrentItem, withTexts } from \"./flashState\";\r\nimport type { ParseState } from \"./internalTypes\";\r\nimport {\r\n  KEYWORD_TEXT,\r\n  KEYWORD_DESC,\r\n  KEYWORD_DEFAULT,\r\n  KEYWORD_ON,\r\n  KEYWORD_OFF,\r\n  KEYWORD_MIN,\r\n  KEYWORD_MAX,\r\n  KEYWORD_PARAM,\r\n  KEYWORD_ARG,\r\n  KEYWORD_HELP,\r\n  KEYWORD_KIND,\r\n  KEYWORD_AUTHOR,\r\n  KEYWORD_PLUGINDESC,\r\n  KEYWORD_URL,\r\n  KEYWORD_STRUCT,\r\n} from \"./keyword/constants\";\r\nimport type { KeywordEnum } from \"./keyword/types\";\r\nimport {\r\n  handleBase,\r\n  handleOption,\r\n  handleOrderAfter,\r\n  handleOrderBefore,\r\n  handleValue,\r\n} from \"./state\";\r\nimport { typeIsStruct } from \"./struct\";\r\nimport type {\r\n  ParsedPlugin,\r\n  PluginCommandTokens,\r\n  PluginMeta,\r\n  StructParseState,\r\n} from \"./types\";\r\n\r\nexport const parsePlugin = (text: string) => {\r\n  return parsePluginCore(text, KEYWORD_FUNC_TABLE);\r\n};\r\n\r\nconst getBody = (block: Block): PlguinBodyBlock | undefined => {\r\n  if (block.bodies.length === 0) {\r\n    return undefined;\r\n  }\r\n  return block.bodies[0];\r\n};\r\n\r\nconst parseBodyBlock = (\r\n  body: PlguinBodyBlock,\r\n  table: Record<string, (state: ParseState, value: string) => ParseState>\r\n): ParseState => {\r\n  const state = body.lines.reduce<ParseState>((acc, line) => {\r\n    const trimmed = line.trim().replace(/^\\*\\s?/, \"\");\r\n    if (!trimmed.startsWith(\"@\")) {\r\n      if (acc.currentContext === KEYWORD_HELP) {\r\n        // キーワードが来ない場合はヘルプ行として追加\r\n        return { ...acc, helpLines: acc.helpLines.concat(trimmed) };\r\n      }\r\n      // コメントモード以外 & キーワードが来ない場合は無視\r\n      return acc;\r\n    }\r\n\r\n    const [tag, ...rest] = trimmed.slice(1).split(\" \");\r\n    const value = rest.join(\" \").trim();\r\n    const fn = table[tag as keyof typeof table];\r\n\r\n    if (fn) {\r\n      return fn(acc, value);\r\n    }\r\n    return acc;\r\n  }, makeParseState());\r\n  return flashCurrentItem(state);\r\n};\r\n\r\nconst parseStructBlock = (body: PlguinStructBlock): StructParseState => {\r\n  const state = parseBodyBlock(body, KEYWORD_FUNC_TABLE);\r\n  return {\r\n    name: body.struct,\r\n    params: state.params,\r\n  };\r\n};\r\n\r\nconst parsePluginCore = (\r\n  text: string,\r\n  table: Record<string, (state: ParseState, value: string) => ParseState>\r\n): ParsedPlugin => {\r\n  const blocks: Block = splitBlock(text);\r\n  const structs = blocks.structs.map((s) => parseStructBlock(s));\r\n  const body = getBody(blocks);\r\n  if (!body) {\r\n    return {\r\n      params: [],\r\n      commands: [],\r\n      meta: {},\r\n      helpLines: [],\r\n      structs: structs,\r\n    };\r\n  }\r\n\r\n  const finalState = parseBodyBlock(body, table);\r\n  return {\r\n    params: finalState.params,\r\n    commands: finalState.commands,\r\n    meta: finalState.meta,\r\n    helpLines: finalState.helpLines,\r\n    structs: structs,\r\n  };\r\n};\r\n\r\nconst makeParseState = (): ParseState => ({\r\n  helpLines: [],\r\n  params: [],\r\n  commands: [],\r\n  currentParam: null,\r\n  currentCommand: null,\r\n  currentContext: null,\r\n  currentOption: null,\r\n  dependencies: {\r\n    base: [],\r\n    orderBefore: [],\r\n    orderAfter: [],\r\n  },\r\n  meta: {},\r\n});\r\n\r\nconst handleHelpContext = (oldstate: ParseState): ParseState => {\r\n  const state = flashCurrentItem(oldstate);\r\n  return {\r\n    ...state,\r\n    currentContext: KEYWORD_HELP,\r\n  };\r\n};\r\n\r\nconst handleParamContext = (\r\n  oldstate: ParseState,\r\n  value: string\r\n): ParseState => {\r\n  const state = flashCurrentItem(oldstate);\r\n  // すでに同名のparamが存在する場合は新しいparamを作らない\r\n  if (state.params.some((p) => p.name === value)) {\r\n    return state;\r\n  }\r\n  return {\r\n    ...state,\r\n    currentContext: KEYWORD_PARAM,\r\n    currentParam: { name: value, attr: {} },\r\n  };\r\n};\r\n\r\nconst handleText = (state: ParseState, value: string): ParseState => {\r\n  if (state.currentParam) {\r\n    return addParamField(state, KEYWORD_TEXT, value);\r\n  }\r\n  if (state.currentCommand) {\r\n    if (!(KEYWORD_TEXT in state.currentCommand)) {\r\n      return {\r\n        ...state,\r\n        currentCommand: {\r\n          ...withTexts(state.currentCommand),\r\n          command: state.currentCommand.command,\r\n          args: state.currentCommand.args,\r\n          [KEYWORD_TEXT]: value,\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nconst handleDesc = (state: ParseState, value: string): ParseState => {\r\n  if (state.currentParam) {\r\n    return addParamField(state, KEYWORD_DESC, value);\r\n  }\r\n  if (state.currentCommand) {\r\n    return {\r\n      ...state,\r\n      currentCommand: {\r\n        ...state.currentCommand,\r\n        desc: value,\r\n      },\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst handleCommandContext = (\r\n  oldstate: ParseState,\r\n  value: string\r\n): ParseState => {\r\n  const state: ParseState = flashCurrentItem(oldstate);\r\n  if (state.commands.some((c) => c.command === value)) {\r\n    // すでに同名のcommandが存在する場合は新しいcommandを作らない\r\n    return state;\r\n  }\r\n  return {\r\n    ...state,\r\n    currentCommand: { command: value, args: [] },\r\n    currentParam: null,\r\n  };\r\n};\r\n\r\nconst handleArgContext = (state: ParseState, value: string): ParseState => {\r\n  if (!state.currentCommand) {\r\n    return state;\r\n  }\r\n  if (state.currentParam) {\r\n    const argAddedCommand: PluginCommandTokens = {\r\n      ...withTexts(state.currentCommand),\r\n      command: state.currentCommand.command,\r\n      args: state.currentCommand.args.concat(state.currentParam),\r\n    };\r\n    return {\r\n      ...state,\r\n      commands: state.commands,\r\n      currentCommand: argAddedCommand,\r\n      currentContext: KEYWORD_ARG,\r\n      currentParam: {\r\n        name: value,\r\n        attr: {},\r\n      },\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    currentParam: {\r\n      name: value,\r\n      attr: {},\r\n    },\r\n  };\r\n};\r\nconst handlerType = (state: ParseState, value: string): ParseState => {\r\n  if (typeIsStruct(value)) {\r\n    const structName = value.slice(7, -1);\r\n    const addSturct = addParamField(state, KEYWORD_STRUCT, structName);\r\n    return addParamField(addSturct, KEYWORD_KIND, KEYWORD_STRUCT);\r\n  }\r\n  if (state.currentParam) {\r\n    return addParamField(state, KEYWORD_KIND, value);\r\n  }\r\n  return state;\r\n};\r\n\r\nconst addParamField = (\r\n  state: ParseState,\r\n  key: string,\r\n  value: string\r\n): ParseState => {\r\n  if (state.currentParam) {\r\n    if (!(key in state.currentParam.attr)) {\r\n      return {\r\n        ...state,\r\n        currentParam: {\r\n          ...state.currentParam,\r\n          attr: { ...state.currentParam.attr, [key]: value },\r\n        },\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nconst addMetaField = (\r\n  state: ParseState,\r\n  key: keyof PluginMeta,\r\n  value: string\r\n): ParseState => {\r\n  return {\r\n    ...state,\r\n    meta: { [key]: value, ...state.meta },\r\n  };\r\n};\r\n\r\nconst KEYWORD_FUNC_TABLE = {\r\n  param: handleParamContext,\r\n  text: handleText,\r\n  desc: handleDesc,\r\n  command: handleCommandContext,\r\n  arg: handleArgContext,\r\n  help: handleHelpContext,\r\n  option: handleOption,\r\n  value: handleValue,\r\n  type: handlerType,\r\n  default: (state, value) => addParamField(state, KEYWORD_DEFAULT, value),\r\n  on: (state, value) => addParamField(state, KEYWORD_ON, value),\r\n  off: (state, value) => addParamField(state, KEYWORD_OFF, value),\r\n  min: (state, value) => addParamField(state, KEYWORD_MIN, value),\r\n  max: (state, value) => addParamField(state, KEYWORD_MAX, value),\r\n  base: handleBase,\r\n  orderAfter: handleOrderAfter,\r\n  orderBefore: handleOrderBefore,\r\n  author: (state, val) => addMetaField(state, KEYWORD_AUTHOR, val),\r\n  plugindesc: (s, val) => addMetaField(s, KEYWORD_PLUGINDESC, val),\r\n  url: (state, val) => addMetaField(state, KEYWORD_URL, val),\r\n} as const satisfies {\r\n  [K in KeywordEnum]?: (state: ParseState, value: string) => ParseState;\r\n};\r\n","import { addBasePlugin, addOrderAfter, addOrderBefore } from \"./dependencies\";\r\nimport type { OptionsState, ParseState } from \"./internalTypes\";\r\nimport { addOption, addValue } from \"./option\";\r\n\r\nexport const handleBase = (state: ParseState, value: string): ParseState => {\r\n  return { ...state, dependencies: addBasePlugin(state.dependencies, value) };\r\n};\r\n\r\nexport const handleOrderAfter = (\r\n  state: ParseState,\r\n  value: string\r\n): ParseState => {\r\n  return {\r\n    ...state,\r\n    dependencies: addOrderAfter(state.dependencies, value),\r\n  };\r\n};\r\n\r\nexport const handleOrderBefore = (\r\n  state: ParseState,\r\n  value: string\r\n): ParseState => {\r\n  return {\r\n    ...state,\r\n    dependencies: addOrderBefore(state.dependencies, value),\r\n  };\r\n};\r\n\r\nexport const handleOption = (state: ParseState, value: string): ParseState => {\r\n  if (!state.currentParam) {\r\n    return state;\r\n  }\r\n\r\n  const newOption: OptionsState = addOption(\r\n    state.currentOption ?? { items: [] },\r\n    value\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    currentOption: newOption,\r\n  };\r\n};\r\n\r\nexport const handleValue = (state: ParseState, value: string): ParseState => {\r\n  if (!state.currentOption) {\r\n    return state;\r\n  }\r\n  const newOption: OptionsState = addValue(state.currentOption, value);\r\n  return {\r\n    ...state,\r\n    currentOption: newOption,\r\n  };\r\n};\r\n","export const structName = (value: string): string => {\r\n  if (value.endsWith(\">\") && value.startsWith(\"struct<\")) {\r\n    return value.slice(7, -1);\r\n  }\r\n  return \"\";\r\n};\r\nexport const typeIsStruct = (value: string): value is `struct<${string}>` => {\r\n  return value.endsWith(\">\") && value.startsWith(\"struct<\");\r\n};\r\n","export interface PluginDependencies {\r\n  base: string[];\r\n  orderBefore: string[];\r\n  orderAfter: string[];\r\n}\r\n\r\nexport const addBasePlugin = (\r\n  dep: PluginDependencies,\r\n  base: string\r\n): PluginDependencies => {\r\n  return {\r\n    orderAfter: dep.orderAfter,\r\n    orderBefore: dep.orderBefore,\r\n    base: dep.base.concat(base),\r\n  };\r\n};\r\n\r\nexport const addOrderBefore = (\r\n  dep: PluginDependencies,\r\n  order: string\r\n): PluginDependencies => {\r\n  return {\r\n    base: dep.base,\r\n    orderAfter: dep.orderAfter,\r\n    orderBefore: dep.orderBefore.concat(order),\r\n  };\r\n};\r\n\r\nexport const addOrderAfter = (\r\n  dep: PluginDependencies,\r\n  order: string\r\n): PluginDependencies => {\r\n  return {\r\n    base: dep.base,\r\n    orderBefore: dep.orderBefore,\r\n    orderAfter: dep.orderAfter.concat(order),\r\n  };\r\n};\r\n","import { compileAttributes } from \"./attributes\";\r\nimport { parsePlugin as parse } from \"./parse/parse\";\r\nimport type {\r\n  ParsedPlugin,\r\n  PluginCommandTokens,\r\n  PluginParamTokens,\r\n} from \"./parse/types\";\r\nimport type { PluginCommandBody, PluginJSON } from \"./pluginJSONTypes\";\r\nimport type { PrimitiveParam } from \"./primitiveParams\";\r\n\r\nexport interface PluginParam {\r\n  name: string;\r\n  attr: PrimitiveParam;\r\n}\r\n\r\nexport const parsePlugin = (text: string) => {\r\n  return compilePlugin(parse(text));\r\n};\r\n\r\nconst compilePlugin = (parsedPlugin: ParsedPlugin): PluginJSON => {\r\n  return {\r\n    target: \"MZ\",\r\n    meta: parsedPlugin.meta,\r\n    commands: reduceCommands(parsedPlugin.commands),\r\n    params: reduceParams(parsedPlugin.params),\r\n  };\r\n};\r\n\r\nconst reduceParams = (\r\n  params: ReadonlyArray<PluginParamTokens>\r\n): { [key: string]: PrimitiveParam } => {\r\n  return params.reduce<{ [key: string]: PrimitiveParam }>((acc, param) => {\r\n    return {\r\n      [param.name]: compileAttributes(param),\r\n      ...acc,\r\n    };\r\n  }, {});\r\n};\r\n\r\nconst reduceCommands = (\r\n  tokens: ReadonlyArray<PluginCommandTokens>\r\n): Record<string, PluginCommandBody> => {\r\n  return tokens.reduce((acc, token) => {\r\n    const body: PluginCommandBody = {\r\n      desc: token.desc,\r\n      text: token.text,\r\n      args: reduceParams(token.args),\r\n    };\r\n    return {\r\n      [token.command]: body,\r\n      ...acc,\r\n    };\r\n  }, {});\r\n};\r\n","import type { PrimitiveParam } from \"./schema/compile/kinds\";\r\nimport type { PrimitiveStructSchema } from \"./schema/compile/kinds/compileFlatStruct\";\r\nimport { compileFlatStruct } from \"./schema/compile/kinds/compileFlatStruct\";\r\nimport { parsePlugin } from \"./schema/compile/kinds/core/parsePlugin\";\r\nimport type { PluginJSON } from \"./schema/compile/kinds/core/pluginJSONTypes\";\r\n\r\nexport const pluginSourceToJSON = (text: string): PluginJSON => {\r\n  return parsePlugin(text);\r\n};\r\n\r\nexport const structToJSONSchema = <T extends object>(\r\n  params: Record<keyof T, PrimitiveParam>\r\n): PrimitiveStructSchema<T> => {\r\n  return compileFlatStruct(params);\r\n};\r\n","import { compilePrimitiveField } from \"./compileField\";\r\nimport type { PrimitiveParam } from \"./core/primitiveParams\";\r\nimport type { AnyParamSchema } from \"./pluginMeta/anyParamSchema\";\r\n\r\nexport interface PrimitiveStructSchema<T extends object> {\r\n  type: \"object\";\r\n  properties: Record<keyof T, AnyParamSchema>;\r\n  required: (keyof T)[];\r\n  additionalProperties: false;\r\n}\r\n\r\nexport const compileFlatStruct = <T extends object>(\r\n  params: Record<keyof T, PrimitiveParam>\r\n): PrimitiveStructSchema<T> => {\r\n  const properties = Object.entries<PrimitiveParam>(params).reduce(\r\n    (acc, [key, value]) => {\r\n      const field: AnyParamSchema = compilePrimitiveField(value);\r\n      return {\r\n        ...acc,\r\n        [key]: field,\r\n      };\r\n    },\r\n    {}\r\n  ) as Record<keyof T, AnyParamSchema>;\r\n  return {\r\n    type: \"object\",\r\n    properties,\r\n    required: Object.keys(properties) as (keyof T)[],\r\n    additionalProperties: false,\r\n  };\r\n};\r\n"],"names":["createControlCharFormat","char","id","fromStringArray","array","map","text","index","controlChar","getControlChars","Array","from","matchAll","match","parseInt","createActorControlChars","actors","actor","name","createSystemVariableControlChars","system","variables","filter","pair","makeCommonEventData","data","trigger","list","switchId","makeTroopData","members","pages","makeTroopMember","enemyId","x","y","hidden","makeTroopEventConditions","actorHp","actorId","enemyValid","switchValid","makeEventPageCondition","arg","switch1Id","switch1Valid","switch2Id","switch2Valid","variableId","variableValid","variableValue","selfSwitchCh","selfSwitchValid","itemId","itemValid","actorValid","NO_OPERATION","SHOW_MESSAGE","SHOW_MESSAGE_BODY","SHOW_CHOICES","SHOW_CHOICES_ITEM","INPUT_NUMBER","SELECT_ITEM","SHOW_SCROLLING_TEXT","SHOW_SCROLLING_TEXT_BODY","COMMENT_HEAD","COMMENT_BODY","SKIP","CONDITIONAL_BRANCH","CONDITIONAL_BRANCH_ELSE","LOOP","LOOP_BREAK","EXIT_EVENT_PROCESSING","COMMON_EVENT","LABEL","LABEL_JUMP","CONTROL_SWITCHES","CONTROL_VARIABLES","CONTROL_SELF_SWITCH","CONTROL_TIMER","CHANGE_GOLD","CHANGE_ITEMS","CHANGE_WEAPONS","CHANGE_ARMORS","CHANGE_PARTY_MEMBER","CHANGE_BATTLE_BGM","CHANGE_VICTORY_ME","CHANGE_SAVE_ACCESS","CHANGE_MENU_ACCESS","CHANGE_ENCOUNTER","CHANGE_FORMATION_ACCESS","CHANGE_WINDOW_COLOR","CHANGE_DEFEAT_ME","CHANGE_VEHICLE_BGM","TRANSFER_PLAYER","SET_VEHICLE_LOCATION","SET_EVENT_LOCATION","SCROLL_MAP","SET_MOVEMENT_ROUTE","GET_ONOFF_VEHICLE","CHANGE_TRANSPARENCY","SHOW_ANIMATION","SHOW_BALLOON_ICON","ERASE_EVENT","CHANGE_PLAYER_FOLLOWERS","GATHER_FOLLOWERS","FADEOUT_SCREEN","FADEIN_SCREEN","TINT_SCREEN","FLASH_SCREEN","SHAKE_SCREEN","WAIT","SHOW_PICTURE","MOVE_PICTURE","ROTATE_PICTURE","TINT_PICTURE","ERASE_PICTURE","SET_WEATHER_EFFECT","PLAY_BGM","FADEOUT_BGM","SAVE_BGM","RESUME_BGM","PLAY_BGS","FADEOUT_BGS","PLAY_ME","PLAY_SE","STOP_SE","PLAY_MOVIE","CHANGE_TILESET","CHANGE_BATTLE_BACKGROUND","CHANGE_PARALLAX","GET_LOCATION_INFO","BATTLE_PROCESSING","SHOP_PROCESSING","SHOP_PROCESSING_BODY","NAME_INPUT_PROCESSING","CHANGE_HP","CHANGE_MP","CHANGE_TP","RECOVER_ALL","CHANGE_EXP","CHANGE_NAME","CHANGE_CLASS","CHANGE_ACTOR_IMAGES","CHANGE_VEHICLE_IMAGE","CHANGE_NICKNAME","CHANGE_PROFILE","CHANGE_ENEMY_HP","CHANGE_ENEMY_MP","CHANGE_ENEMY_STATE","ENEMY_RECOVER_ALL","ENEMY_APPEAR","ENEMY_TRANSFORM","SHOW_BATTLE_ANIMATION","FORCE_ACTION","ABORT_BATTLE","OPEN_MENU_SCREEN","CHANGE_ENEMY_TP","OPEN_SAVE_SCREEN","GAME_OVER","RETURN_TO_TITLE_SCREEN","SCRIPT_EVAL","SCRIPT_EVAL_BODY","PLUGIN_COMMAND_MV","PLUGIN_COMMAND_MZ","createEventCommand","code","param","indent","parameters","ROUTE_END","ROUTE_MOVE_DOWN","ROUTE_MOVE_LEFT","ROUTE_MOVE_RIGHT","ROUTE_MOVE_UP","ROUTE_MOVE_LOWER_L","ROUTE_MOVE_LOWER_R","ROUTE_MOVE_UPPER_L","ROUTE_MOVE_UPPER_R","ROUTE_MOVE_RANDOM","ROUTE_MOVE_TOWARD","ROUTE_MOVE_AWAY","ROUTE_MOVE_FORWARD","ROUTE_MOVE_BACKWARD","ROUTE_JUMP","ROUTE_WAIT","ROUTE_TURN_DOWN","ROUTE_TURN_LEFT","ROUTE_TURN_RIGHT","ROUTE_TURN_UP","ROUTE_TURN_90D_R","ROUTE_TURN_90D_L","ROUTE_TURN_180D","ROUTE_TURN_90D_R_L","ROUTE_TURN_RANDOM","ROUTE_TURN_TOWARD","ROUTE_TURN_AWAY","ROUTE_SWITCH_ON","ROUTE_SWITCH_OFF","ROUTE_CHANGE_SPEED","ROUTE_CHANGE_FREQ","ROUTE_WALK_ANIME_ON","ROUTE_WALK_ANIME_OFF","ROUTE_STEP_ANIME_ON","ROUTE_STEP_ANIME_OFF","ROUTE_DIR_FIX_ON","ROUTE_DIR_FIX_OFF","ROUTE_THROUGH_ON","ROUTE_THROUGH_OFF","ROUTE_TRANSPARENT_ON","ROUTE_TRANSPARENT_OFF","ROUTE_CHANGE_IMAGE","ROUTE_CHANGE_OPACITY","ROUTE_CHANGE_BLEND_MODE","ROUTE_PLAY_SE","ROUTE_SCRIPT","makeMapEvent","note","makeMapEventIamge","characterIndex","characterName","direction","pattern","tileId","makeMapEventPage","conditions","directionFix","image","moveFrequency","moveRoute","repeat","skippable","wait","makeMapData","battleback1Name","battleback2Name","autoplayBgm","autoplayBgs","parallaxLoopX","parallaxLoopY","parallaxName","parallaxShow","parallaxSx","parallaxSy","width","height","bgm","pan","pitch","volume","bgs","disableDashing","displayName","encounterList","events","makeMapInfoData","info","mapId","toString","padStart","expanded","order","parentId","scrollX","scrollY","SCHEMA_DATA_MAP","type","required","properties","items","minimum","regionSet","troopId","weight","enum","oneOf","ajv","Ajv","strict","mapInfo","compile","mapData","isDataMapInfo","isDataMap","LABEL_SET_DATA","title","options","initialEquipments","faceImage","characterImage","svBattlerImage","nickname","profile","classId","initialLevel","maxLevel","class","params","learnings","expParams","armor","armorTypeId","slotTypeId","enemy","dropItems","battlerHue","battlerName","gold","item","consumable","skill","requiredWeaponTypeId1","requiredWeaponTypeId2","mpCost","tpCost","state","restriction","priority","motion","overlay","removeAtBattleEnd","removeByRestriction","autoRemovalTiming","minTurns","maxTurns","removeByDamage","chanceByDamage","removeByWalking","stepsToRemove","weapon","weaponTypeId","usableItem","scope","speed","successRate","commonEvent","DEFAULT_DAMAGE_LABELS","makeDamage","damage","elementId","formula","variance","critical","makeActorData","faceName","faceIndex","traits","equips","normalizeDataActor","makeArmorData","iconIndex","description","atypeId","etypeId","price","makeClassData","makeDropItem","dropItem","dataId","denominator","kind","makeEnemyAction","action","conditionParam1","conditionParam2","conditionType","rating","skillId","makeEnemyData","exp","actions","makeStateData","message1","message2","message3","message4","messageType","releaseByDamage","FORMAT_NAME","FORMAT_PARAM_RATE_MUL","FORMAT_PARAM_RATE_PLUS","FORMAT_PARAM_VALUE","LABEL_SET_TRAIT","regularParam","format","maxHp","maxMp","atk","def","matk","mdef","agi","luk","extraParam","hitRate","evasionRate","criticalRate","criticalEvasionRate","magicEvasionRate","magicReflectionRate","counterAttackRate","hpRegenerationRate","mpRegenerationRate","tpRegenerationRate","specialParam","targetRate","guardEffectRate","recoveryEffectRate","pharmacology","mpCostRate","tpChargeRate","physicalDamageRate","magicDamageRate","floorDamageRate","experienceRate","specialFlag","autoBattle","guard","substitute","preventEscape","collaps","bossCollaps","instantCollaps","noneCollaps","partyAbility","cancelSurprise","dropItemDouble","encounterHalf","encounterNone","goldDouble","raisePreemptive","elementRate","debuffRate","stateRate","stateResist","attackElement","attackState","attackSpeed","attackTimes","actionPlus","attackSkill","equipWeaponType","equipArmorType","equipLock","equipSeal","slotType","skillAdd","skillSeal","skillTypeAdd","skillTypeSeal","RULE_TRAIT","itemMapper","placeHolder","dataIdKey","kindKey","numbers","formatTraitText","descriptor","trait","rule","compileFormatRule","applyFormatRule","t","makeWeaponData","animationId","wtypeId","LABELS_DATA_WEAPON","HITTYPE_CERTAIN","HITTYPE_PHYSICAL","HITTYPE_MAGICAL","FORMAT_STATE","FORMAT_RECOVER","FORMAT_ADD_BUFF","LABEL_SET_ITEM_EFFECT","addBuff","desc","domainName","addDebuff","gainTp","grow","learnSkill","recoverHp","recoverMp","removeBuff","removeDebuff","removeState","special","addState","SPECIAL_EFFECT_ESCAPE","formatItemEffectText","effectDefine","effect","find","replaceAll","value1","value2","DEFAULT_ITEM_LABELS","DEFAULT_SKILL_LABELS","DEFAULT_USABLE_ITEM_LABELS","makeItemData","itypeId","occasion","repeats","tpGain","hitType","effects","makeSkillData","stypeId","requiredWtypeId1","requiredWtypeId2","SCHEMA_INTEGER","SCHEMA_POSITIVE_INTEGER","SCHEMA_STRING","SCHEMA_DAMATE","additionalProperties","SCHEMA_EFFECT","SCHEMA_DATA_SKILL","SCHEMA_DATA_ITEM","isDataItem","isDataSkill","minItems","maxItems","maximum","default","value","isDataWeapon","createNoteEntity","key","makeRegex","readNoteObject","fn","readNoteEx","readNote","regex","replaceNote","transformFunction","length","Error","_subString","newText","getNoteValue","targetKey","m","setNoteValue","newValue","replace","MODULE_DATA","SRC_DATA_ACTOR","SRC_DATA_MAP","SRC_DATA_ENEMY","SRC_DATA_STATE","SRC_DATA_SKILL","SRC_DATA_ITEMS","SRC_DATA_WEAPON","SRC_DATA_ARMOR","SRC_DATA_CLASS","SRC_DATA_COMMON_EVNET","SRC_DATA_TROOP","DEFAULT_GLOBAL_LABELS","displayType","effectName","flashTimings","offsetX","offsetY","rotation","scale","soundTimings","unknownCode","content","apply","turn","normal","dualWield","escape","labelsRegistry","rpg","itemEffect","global","makeSystemAdvanced","advanced","gameId","screenWidth","screenHeight","uiAreaWidth","uiAreaHeight","windowOpacity","screenScale","numberFontFilename","mainFontFilename","fallbackFonts","fontSize","makeSoundsArray","sounds","makeAudioFileParams","cursor","ok","cancel","buzzer","equip","save","load","battleStart","enemyAttack","enemyDamage","enemyCollapse","bossCollapes1","bossCollapes2","actorDamage","actorCollapse","playRecovery","playMiss","playEvasion","playMagicEvasion","playReflection","shop","useItem","useSkill","makeSoundsObject","getItemCommandEnabled","menuCommands","getSkillCommandEnabled","getEquipCommandEnabled","getStatusCommandEnabled","getFormationCommandEnabled","getSaveCommandEnabled","getItemCategoryEnabled","itemCategories","getWeaponCategoryEnabled","getArmorCategoryEnabled","getKeyItemCategoryEnabled","makeItemCategories","keyItem","makeItemCategoriesFromArray","makeMenuCommandsEnabled","status","formation","makeMenuCommandsEnabledFromArray","SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS","makeBooleanOptions","optAutosave","optDisplayTp","optDrawTitle","optExtraExp","optFloorDeath","optFollowers","optKeyItemsNumber","optSideView","optSlipDeath","optTransparent","optMessageSkip","optSplashScreen","SCHEMA_BOOLEAN","SCHEMA_SYSTEM_BOOLEAN_OPTIONS","makeGameInitial","gameInitial","startMapId","startX","startY","partyMembersArray","makeDataNames","armorTypes","cloneStringArray","elements","equipTypes","weaponTypes","skillTypes","switches","makeParamNamesArray","mhp","mmp","mat","mdf","hit","eva","getParamNames","terms","makeTitleCommandWindow","background","makeVehicleData","vehicle","makeEditorSetting","jsonFormatLevel","messageWidth1","messageWidth2","DEFAULT_SYSTEM_LABELS_BOOLEAN","DEFAULT_SYSTEM_LABELS_DATA_TYPES","LABELS_SYSTEM_BATTLER_PARAMS","LABELS_SYSTEM_GAME_COMMANDS","gameEnd","newGame","attack","fight","buy","sell","clear","continue_","equip2","optimize","toTitle","SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION","weaponImageId","SCHEMA_SYSTEM_IMAGE_SIZE","tileSize","faceSize","iconSize","SCHEMA_SYSTEM_TEST_BATTLER","level","audioFileParamsSchema","SCHEMA_SYSTEM_AUDIOFILES","battleBgm","victoryMe","gameoverMe","titleBgm","defeatMe","SCHEMA_SYSTEM_BATTLE_RULE_RMMZ","magicSkills","uniqueItems","battleSystem","SCHEMA_SYSTEM_GAME_INITIAL","SCHEMA_SYSTEM_TITLE_IMAGES","title1Name","title2Name","SCHEMA_SYSTEM_OTHER_DATA","locale","versionId","windowTone","stringArraySchema","SCHEMA_SYSTEM_RPG_DATA_NAMES","SCHEMA_STRING_NULL","nullable","SCHEMA_SYSTEM_TERMS_BUNDLE","currencyUnit","gameTitle","messages","actionFailure","actorNoDamage","actorRecovery","actorGain","actorLoss","actorDrain","alwaysDash","bgmVolume","bgsVolume","commandRemember","criticalToActor","criticalToEnemy","counterAttack","debuffAdd","defeat","enemyNoDamage","enemyRecovery","enemyGain","enemyLoss","enemyDrain","evasion","expNext","expTotal","escapeFailure","escapeStart","file","loadMessage","meVolume","magicEvasion","magicReflection","obtainExp","obtainGold","obtainItem","obtainSkill","partyName","preemptive","saveMessage","seVolume","touchUI","victory","buffAdd","buffRemove","actorNoHit","enemyNoHit","autosave","emerge","levelUp","possession","surprise","commands","basic","minLength","SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE","testBattlers","testTroopId","editMapId","editor","SCHEMA_SYSTEM_VEHICLE","SCHEMA_SYSTEM_PARTIAL_BUNDLE","airship","boat","ship","attackMotions","reduce","acc","schema","reducedList","Set","systemValidate","isDataSystem","testBattler","imageSize","makeTermsBasic","levelA","hp","hpA","mp","mpA","tp","tpA","experience","makeTermsCommandArrayWithNulls","empty","validate","msg","fallback","makeSystemData","fragments","size","cloneSize","texts","editing","images","dataNames","cloneNumberArray","vehicles","me","battleTest","cloneObjectArray","cloneTestBattler","editorTemporary","gameInit","makeTerms","menuComamnds","isImageSize","makeCommandChangeActorName","makeCommandChangeActorNickName","makeCommandChangeActorProfile","makeAudioCommand","filename","makeCommandAudioAny","audio","makeCommandPlayBGM","makeCommandPlayBGS","makeCommandPlayME","makeCommandPlaySE","makeCommandChangeBattleBGM","makeCommandChangeVictoryME","makeCommandChangeDefeatME","makeCommandCommonEvent","toArrayCommonEvent","fromArrayCommonEvent","eventId","object","fromArrayControlSwitches","min","max","toArrayControlSwitches","makeCommandControlSwitches","makeCommentArray","comment","convertCommentArrayToObject","paramArray","makeCommandCommentHeader","makeCommandCommentBody","makeCommentCommandArray","comments","toArrayInputNumber","digits","fromArrayInputNumber","makeCommandInputNumber","makeCommandShowChoiceItem","fromArraySetupChoiceItem","toArraySetupChoiceItem","fromArraySetupChoice","choices","cancelType","defaultType","positionType","toArraySetupChoice","makeCommandSetupChoice","cloneChoices","command","makeCommandShowMessage","facename","speakerName","fromArrayShowMessageHeader","toArrayShowMessageHeader","makeCommandShowMessageBody","makeCommandScriptHeader","script","makeCommandScriptBody","makeCommandScriptArray","lines","line","OPERAND_CONSTANT","OPERAND_VARIABLE","OPERAND_RANDOM","OPERAND_GAMEDATA","OPERAND_SCRIPT","ENEMY_PARAM_INDEX","HP","MP","MHP","MMP","ATK","DEF","MAT","MDF","AGI","LUK","TP","toArrayOperandConstant","target","operation","startId","endId","toArrayOperandVariable","toArrayOperandRandom","toArrayOperandScript","toArrayOperandItemData","toArrayOperandActorStatus","toArrayOperandEnemyStatus","getEnemyValue","getActorValue","currentExp","cloneParameters","cloneEventCommand","isPrimitive","isCloneableCommand","every","changeActorText","isCommandChangeActorText","scrollTextHead","const","isCommandScrollTextHead","emptyParam","isCommandNonParam","textBody","isCommandTextBody","commonVent","isCommandCommonEvent","showChoices","isCommandShowChoices","showChoiceItem","isCommandShowChoiceItem","inputNumber","isCommandInputNumber","showMessage","isCommandShowMessage","isCommandShowMessageBody","isCommandShowScrollingTextBody","isCommandCommentHeader","isCommandCommentBody","isCommandScriptHeader","isCommandScriptBody","FOLDER_AUDIO_BGM","FOLDER_AUDIO_SE","FOLDER_AUDIO_ME","FOLDER_AUDIO_BGS","FOLDER_IMG_BATTLEBACK1","FOLDER_IMG_BATTLEBACK2","FOLDER_IMG_CHACTERS","FOLDER_IMG_ENEMIES","FOLDER_IMG_FACES","FOLDER_IMG_PARALLACES","FOLDER_IMG_PICTURES","FOLDER_IMG_SV_ACTORS","FOLDER_IMG_SV_ENEMIES","FOLDER_IMG_SYSTEM","FOLDER_IMG_TILESETS","FOLDER_IMG_TITLES1","FOLDER_IMG_TITLES2","FILENAME_SYSTEM","FILENAME_ACTORS","FILENAME_CLASSES","FILENAME_SKILLS","FILENAME_ITEMS","FILENAME_WEAPONS","FILENAME_ARMORS","FILENAME_ENEMIES","FILENAME_TROOPS","FILENAME_STATES","FILENAME_ANIMATIONS","FILENAME_TILESET","FILENAME_COMMON_EVENTS","FILENAME_MAP_INFOS","FOLDER_DATA","FOLDER_IMG","FOLDER_AUDIO","FOLDER_JS","compileArrayField","itemSchema","withTexts","withDefault","isIntegerKind","digit","makeStringArrayField","compilePrimitiveField","compileStringField","o","compileSelectField","decimals","compileNumberField","compileBooleanField","$ref","ref","struct","applyMappingTable","tokens","fnTable","Object","entries","compileParam","defaultValue","compileArrayParam","KEYWORD_HELP","KEYWORD_KIND","KEYWORD_TEXT","KEYWORD_STRUCT","parseDeepJSON","json","parsed","JSON","parse","isArray","parseDeepValue","fromEntries","k","v","compileAttributes","attr","func","TABLE2","STRING","attrString","numberArray","split","parseFloat","trim","n","isNaN","parent","compileStringParam","compileStringArrayParam","STRING_ARRAY","compileDataIdArray","DATA_ID_ARRAY","compileDataId","DATA_ID","number","NUMBER","compileNumberParam","NUMBER_ARRAY","string","multiline_string","combo","option","select","common_event","switch","variable","troop","boolean","BOOLEAN","on","off","FILE","dir","FILE_ARRAY","BLCOK_BODY","BLCOK_STRUCT","BLOCK_NONE","handleStructMatch","structMatch","flushed","handleBlockEnd","structName","blockType","handleBlockStart","bodies","concat","structs","finalizeOptions","currentOption","flashCurrentItem","p","flushOptionsToParam","c","flushCurrentCommand","flushCurrentParam","currentParam","currentContext","currentCommand","newArgs","args","newCommand","parseBodyBlock","body","table","trimmed","startsWith","helpLines","tag","rest","slice","join","makeParseState","parsePluginCore","blocks","block","initialState","finalState","s","KEYWORD_FUNC_TABLE","parseStructBlock","getBody","meta","dependencies","base","orderBefore","orderAfter","addParamField","addMetaField","oldstate","some","argAddedCommand","help","newOption","addOption","addValue","endsWith","typeIsStruct","addSturct","dep","author","val","plugindesc","url","parsePlugin","compilePlugin","parsedPlugin","reduceCommands","reduceParams","token","pluginSourceToJSON","structToJSONSchema","field","keys"],"mappings":";;AAAa,MAAAA,IAA0B,CACrCC,IACAC,OAEO,KAAKD,EAAQC,IAAAA,EAAAA,KAGTC,IAAkB,CAC7BF,IACAG,OAEOA,GAAMC,IAAI,CAACC,IAAMC,QAAW;AAAA,EACjCD,MAAAA;AAAAA,EACAE,aAAaR,EAAwBC,IAAMM,EAAAA;ACNlCE,EAAAA,GAAAA,IAAmBH,CAAAA,OAGvBI,MAAMC,KAAKL,GAAKM,SADT,wBAAA,CAAA,EAC0BP,IACrCQ,CAAAA,QAA6B,EAC5BZ,MAAMY,GAAM,CAAA,GACZX,IAAIY,SAASD,GAAM,CAAA,GAAI,ECPhBE,EAAAA,EAAAA,GAAAA,IACXC,CAAAA,OAEOA,GAAOX,IAAsBY,CAAAA,QAAW;AAAA,EAC7CX,MAAMW,GAAMC;AAAAA,EACZV,aAAaR,ECXc,KDW2BiB,GAAMf,EAAAA;AAInDiB,EAAAA,GAAAA,IACXC,CAAAA,OAEOA,GAAOC,UACXhB,IAAqB,CAACa,IAAMX,QAAW,EACtCD,MAAMY,MAAQ,IACdV,aAAaR,ECpBe,KDoB6BO,QAE1De,OAAQC,CAAAA,OAAuB,OAAdA,GAAKjB,IAAAA,GEpBdkB,IAAsB,CACjCC,KAAkC,QACZ;AAAA,EACtBvB,IAAIuB,GAAKvB,MAAM;AAAA,EACfgB,MAAMO,GAAKP,QAAQ;AAAA,EACnBQ,SAASD,GAAKC,WAAW;AAAA,EACzBC,MAAMF,GAAKE,QAAQ,CAAA;AAAA,EACnBC,UAAUH,GAAKG,YAAY;AAGhBC,IAAAA,IAAgB,CAACJ,KAA4B,QAAoB,EAC5EvB,IAAIuB,GAAKvB,MAAM,GACfgB,MAAMO,GAAKP,QAAQ,IACnBY,SAASL,GAAKK,WAAW,CACzBC,GAAAA,OAAON,GAAKM,SAAS,CAAA,EAAA,IAGVC,IAAkB,CAC7BP,KAA8B,QACZ;AAAA,EAClBQ,SAASR,GAAKQ,WAAW;AAAA,EACzBC,GAAGT,GAAKS,KAAK;AAAA,EACbC,GAAGV,GAAKU,KAAK;AAAA,EACbC,QAAQX,GAAKW,UAAU;AAGZC,IAAAA,IAA2B,CACtCZ,KAAuC,QACZ,EAC3Ba,SAASb,GAAKa,WAAW,GACzBC,SAASd,GAAKc,WAAW,GACzBC,YAAYf,GAAKe,cAAc,GAC/BC,aAAahB,GAAKgB,eAAe,ECjCtBC,IAAAA,IAAyB,CACpCC,KAAiC,QAE1B;AAAA,EACLC,WAAWD,GAAIC,aAAa;AAAA,EAC5BC,cAAAA,WAAcF,GAAIC;AAAAA,EAClBE,WAAWH,GAAIG,aAAa;AAAA,EAC5BC,cAAAA,WAAcJ,GAAIG;AAAAA,EAClBE,YAAYL,GAAIK,cAAc;AAAA,EAC9BC,eAAAA,WAAeN,GAAIK;AAAAA,EACnBE,eAAeP,GAAIO,iBAAiB;AAAA,EACpCC,cAAcR,GAAIQ,gBAAgB;AAAA,EAClCC,4BAAiBT,GAAIQ;AAAAA,EACrBE,QAAQV,GAAIU,UAAU;AAAA,EACtBC,WAAAA,WAAWX,GAAIU;AAAAA,EACfd,SAASI,GAAIJ,WAAW;AAAA,EACxBgB,YAAAA,WAAYZ,GAAIJ;IClBPiB,IAAe,GACfC,IAAe,KACfC,IAAoB,KACpBC,IAAe,KACfC,IAAoB,KACpBC,IAAe,KACfC,IAAc,KACdC,IAAsB,KACtBC,IAA2B,KAC3BC,IAAe,KACfC,IAAe,KACfC,IAAO,KACPC,IAAqB,KACrBC,IAA0B,KAC1BC,IAAO,KACPC,IAAa,KACbC,IAAwB,KACxBC,IAAe,KACfC,IAAQ,KACRC,IAAa,KACbC,IAAmB,KACnBC,IAAoB,KACpBC,IAAsB,KACtBC,IAAgB,KAChBC,IAAc,KACdC,IAAe,KACfC,IAAiB,KACjBC,IAAgB,KAChBC,IAAsB,KACtBC,IAAoB,KACpBC,IAAoB,KACpBC,IAAqB,KACrBC,IAAqB,KACrBC,IAAmB,KACnBC,IAA0B,KAC1BC,IAAsB,KAEtBC,IAAmB,KACnBC,IAAqB,KAErBC,IAAkB,KAClBC,IAAuB,KACvBC,KAAqB,KACrBC,KAAa,KACbC,KAAqB,KACrBC,KAAoB,KACpBC,KAAsB,KACtBC,KAAiB,KACjBC,KAAoB,KACpBC,KAAc,KACdC,KAA0B,KAC1BC,KAAmB,KACnBC,KAAiB,KACjBC,KAAgB,KAChBC,KAAc,KACdC,KAAe,KACfC,KAAe,KAEfC,KAAO,KACPC,KAAe,KACfC,KAAe,KACfC,KAAiB,KACjBC,KAAe,KACfC,KAAgB,KAChBC,KAAqB,KAErBC,KAAW,KACXC,KAAc,KACdC,KAAW,KACXC,KAAa,KAEbC,KAAW,KACXC,KAAc,KACdC,KAAU,KACVC,KAAU,KACVC,KAAU,KAEVC,KAAa,KAEbC,KAAiB,KACjBC,KAA2B,KAC3BC,KAAkB,KAClBC,KAAoB,KAEpBC,KAAoB,KAEpBC,KAAkB,KAClBC,KAAuB,KACvBC,KAAwB,KACxBC,KAAY,KACZC,KAAY,KACZC,KAAY,KACZC,KAAc,KACdC,KAAa,KAEbC,KAAc,KACdC,KAAe,KACfC,KAAsB,KACtBC,KAAuB,KACvBC,KAAkB,KAClBC,KAAiB,KAEjBC,KAAkB,KAClBC,KAAkB,KAElBC,KAAqB,KACrBC,KAAoB,KACpBC,KAAe,KACfC,KAAkB,KAClBC,KAAwB,KACxBC,KAAe,KACfC,KAAe,KACfC,KAAmB,KAEnBC,KAAkB,KAElBC,KAAmB,KACnBC,KAAY,KACZC,KAAyB,KACzBC,KAAc,KACdC,KAAmB,KACnBC,KAAoB,KACpBC,KAAoB,KCtHpBC,KAAqB,CAIhCC,IACAC,IACAC,KAAiB,OAEV;AAAA,EACLF,MAAAA;AAAAA,EACAE;EACAC,YAAYF;ICfHG,KAAY,GACZC,KAAkB,GAClBC,KAAkB,GAClBC,KAAmB,GACnBC,KAAgB,GAChBC,KAAqB,GACrBC,KAAqB,GACrBC,KAAqB,GACrBC,KAAqB,GACrBC,KAAoB,GACpBC,KAAoB,IACpBC,KAAkB,IAClBC,KAAqB,IACrBC,KAAsB,IACtBC,KAAa,IACbC,KAAa,IACbC,KAAkB,IAClBC,KAAkB,IAClBC,KAAmB,IACnBC,KAAgB,IAChBC,KAAmB,IACnBC,KAAmB,IACnBC,KAAkB,IAClBC,KAAqB,IACrBC,KAAoB,IACpBC,KAAoB,IACpBC,KAAkB,IAClBC,KAAkB,IAClBC,KAAmB,IACnBC,KAAqB,IACrBC,KAAoB,IACpBC,KAAsB,IACtBC,KAAuB,IACvBC,KAAsB,IACtBC,KAAuB,IACvBC,KAAmB,IACnBC,KAAoB,IACpBC,KAAmB,IACnBC,KAAoB,IACpBC,KAAuB,IACvBC,KAAwB,IACxBC,KAAqB,IACrBC,KAAuB,IACvBC,KAA0B,IAC1BC,KAAgB,IAChBC,KAAe,ICxCfC,KAAe,OACnB;AAAA,EACLtN,IAAI;AAAA,EACJgB,MAAM;AAAA,EACNa,OAAO;EACP0L,MAAM;AAAA,EACNvL,GAAG;AAAA,EACHC,GAAG;AAAA,IAIMuL,KAAoB,OACxB,EACLC,gBAAgB,GAChBC,eAAe,IACfC,WAAW,GACXC,SAAS,GACTC,QAAQ,EAICC,IAAAA,KAAmB,OACvB,EACLC,YAAYvL,EACZf,GAAAA,MAAM,CACNuM,GAAAA,cAAAA,OACAC,OAdK;AAAA,EACLR,gBAAgB;AAAA,EAChBC,eAAe;AAAA,EACfC,WAAW;AAAA,EACXC,SAAS;AAAA,EACTC,QAAQ;AAURK,GAAAA,eAAe,GACfC,WAAW,EACT1M,MAAM,CACN2M,GAAAA,QAAAA,OACAC,WAAAA,OACAC,MAAAA,MCnCOC,EAAAA,IAAAA,KAAc,CAACpO,KAAyB,QAC5C;AAAA,EACLoB,MAAMpB,GAAIoB,QAAQ,CAAA;AAAA,EAClBiN,iBAAiBrO,GAAIqO,mBAAmB;AAAA,EACxCC,iBAAiBtO,GAAIsO,mBAAmB;AAAA,EAExCC,aAAavO,GAAIuO,eAAAA;AAAAA,EACjBC,aAAaxO,GAAIwO;EACjBC,eAAezO,GAAIyO,iBAAiB;AAAA,EACpCC,eAAe1O,GAAI0O,iBAAiB;AAAA,EACpCC,cAAc3O,GAAI2O,gBAAgB;AAAA,EAClCC,cAAc5O,GAAI4O,gBAAAA;AAAAA,EAClBC,YAAY7O,GAAI6O,cAAc;AAAA,EAC9BC,YAAY9O,GAAI8O,cAAc;AAAA,EAE9BjN,GAAG7B,GAAI6B,KAAK;AAAA,EACZC,GAAG9B,GAAI8B,KAAK;AAAA,EACZiN,OAAO/O,GAAI+O,SAAS;AAAA,EACpBC,QAAQhP,GAAIgP,UAAU;AAAA,EACtB5B,MAAMpN,GAAIoN,QAAQ;AAAA,EAElB6B,KAAKjP,GAAIiP,OAAO,EAAEpO,MAAM,IAAIqO,KAAK,GAAGC,OAAO,KAAKC,QAAQ;EACxDC,KAAKrP,GAAIqP,OAAO,EAAExO,MAAM,IAAIqO,KAAK,GAAGC,OAAO,KAAKC,QAAQ,IAAA;AAAA,EACxDE,gBAAgBtP,GAAIsP,kBAAkB;AAAA,EACtCC,aAAavP,GAAIuP,eAAe;AAAA,EAChCC,eAAexP,GAAIwP,iBAAiB,CAAA;AAAA,EACpCC,QAAQzP,GAAIyP,UAAU,CAAA;AAAA,ICtBbC,KAAkB,CAC7BC,KAA+C,EAAE9P,IAAI,EAAA,MAAA;AAE9C,SAAA,EACLgB,MAAM8O,GAAK9O,SARM+O,KAQcD,GAAK9P,IAP/B+P,GAAMC,SAAWC,EAAAA,SAAS,GAAG,GAAA,IAQlCjQ,IAAI8P,GAAK9P,IACTkQ,UAAUJ,GAAKI,YAAAA,OACfC,OAAOL,GAAKK,SAAS,GACrBC,UAAUN,GAAKM,YAAY,GAC3BC,SAASP,GAAKO,WAAW,GACzBC,SAASR,GAAKQ,WAAW,EAdT;AAAA,MAACP;ACKfQ,GAAAA,KAAkB;AAAA,EACtBC,MAAM;AAAA,EAENC,UAAU,CACR,mBACA,mBACA,QACA,SACA,UACA,KACA,KACA,cACA,cACA,iBACA,iBACA,kBACA,gBACA,gBACA,eACA,QACA,eACA,OACA,eACA,KAAA;AAAA,EAEFC,YAAY;AAAA,IACVnP,MAAM,EAAEiP,MAAM,SAASG,OAAO,EAAEH,MAAM,UAAA,EAAA;AAAA,IACtChC,iBAAiB,EAAEgC,MAAM,SACzB/B;AAAAA,IAAAA,iBAAiB,EAAE+B,MAAM,SAEzB3B;AAAAA,IAAAA,eAAe,EAAE2B,MAAM,UAAA;AAAA,IACvB5B,eAAe;AAAA,MAAE4B,MAAM;AAAA;IACvB1B,cAAc,EAAE0B,MAAM,SAAA;AAAA,IACtBzB,cAAc,EAAEyB,MAAM,UACtBvB;AAAAA,IAAAA,YAAY,EAAEuB,MAAM,UACpBxB;AAAAA,IAAAA,YAAY,EAAEwB,MAAM,UAAA;AAAA,IAEpBxO,GAAG,EAAEwO,MAAM,WAAWI,SAAS,EAAA;AAAA,IAC/B3O,GAAG,EAAEuO,MAAM,WAAWI,SAAS,EAAA;AAAA,IAC/B1B,OAAO,EAAEsB,MAAM,WAAWI,SAAS,EAAA;AAAA,IACnCzB,QAAQ,EAAEqB,MAAM,WAAWI,SAAS,EACpCrD;AAAAA,IAAAA,MAAM,EAAEiD,MAAM,SAAA;AAAA,IAEdd,aAAa,EAAEc,MAAM,SAAA;AAAA,IACrBf,gBAAgB,EAAEe,MAAM,UAAA;AAAA,IAExB9B,aAAa,EAAE8B,MAAM,UAAA;AAAA,IACrBpB,KAAK,EACHoB,MAAM,UACNC,UAAU,CAAC,QAAQ,OAAO,SAAS,QAAA,GACnCC,YAAY,EACV1P,MAAM,EAAEwP,MAAM,SAAA,GACdnB,KAAK,EAAEmB,MAAM,UAAA,GACblB,OAAO,EAAEkB,MAAM,UAAA,GACfjB,QAAQ,EAAEiB,MAAM,UAAA,EAAA,EAAA;AAAA,IAIpB7B,aAAa;AAAA,MAAE6B,MAAM;AAAA,IAAA;AAAA,IACrBhB,KAAK,EACHgB,MAAM,UACNC,UAAU,CAAC,QAAQ,OAAO,SAAS,QAAA,GACnCC,YAAY,EACV1P,MAAM,EAAEwP,MAAM,SAAA,GACdnB,KAAK,EAAEmB,MAAM,UAAA,GACblB,OAAO,EAAEkB,MAAM,UAAA,GACfjB,QAAQ,EAAEiB,MAAM,UAAA,EAAA,EAAA;AAAA,IAIpBb,eAAe,EACba,MAAM,SACNG,OAAO,EACLH,MAAM,UACNC,UAAU,CAAC,aAAa,WAAW,QAAA,GACnCC,YAAY;AAAA,MACVG,WAAW,EAAEL,MAAM,SAASG,OAAO,EAAEH,MAAM,UAAA,EAAA;AAAA,MAC3CM,SAAS,EAAEN,MAAM,UAAA;AAAA,MACjBO,QAAQ,EAAEP,MAAM,UAItBZ;AAAAA,IAAAA,EAAAA,EAAAA;AAAAA,IAAAA,QAAQ,EACNY,MAAM,SACNG,OAAO,EACLH,MAAM,UACNC,UAAU,CACR,MACA,QACA,KACA,KACA,OAEFC,GAAAA,YAAY;AAAA,MACV1Q,IAAI,EAAEwQ,MAAM,UACZxP;AAAAA,MAAAA,MAAM,EAAEwP,MAAM,SACdxO;AAAAA,MAAAA,GAAG,EAAEwO,MAAM,UAAA;AAAA,MACXvO,GAAG,EAAEuO,MAAM,UACXjD;AAAAA,MAAAA,MAAM,EAAEiD,MAAM,SAAA;AAAA,MACd3O,OAAO,EACL2O,MAAM,SACNG,OCnGkB,EAC5BH,MAAM,UACNC,UAAU,CACR,SACA,aACA,cACA,gBACA,eAAA,GAEFC,YAAY;AAAA,QACVxC,eAAe,EAAEsC,MAAM,UACvBxC;AAAAA,QAAAA,cAAc,EAAEwC,MAAM,UAAA;AAAA,QACtBzC,YClBoC;AAAA,UACtCyC,MAAM;AAAA,UACNC,UAAU,CACR,aACA,gBACA,aACA,gBACA,cACA,iBACA,gBACA,mBACA,iBACA,UACA,aACA,WACA,YAAA;AAAA,UAEFC,YAAY,EACVhO,WAAW,EAAE8N,MAAM,WAAWI,SAAS,EAAA,GACvCjO,cAAc,EAAE6N,MAAM,UAAA,GACtB5N,WAAW,EAAE4N,MAAM,WAAWI,SAAS,EACvC/N,GAAAA,cAAc,EAAE2N,MAAM,UAAA,GACtB1N,YAAY;AAAA,YAAE0N,MAAM;AAAA,YAAWI,SAAS;AAAA,UAAA,GACxC7N,eAAe,EAAEyN,MAAM,aACvBvN,cAAc,EAAEuN,MAAM,SAAA,GACtBtN,iBAAiB,EAAEsN,MAAM,UACzBxN,GAAAA,eAAe,EAAEwN,MAAM,UACvBrN,GAAAA,QAAQ,EAAEqN,MAAM,WAAWI,SAAS,EAAA,GACpCxN,WAAW;AAAA,YAAEoN,MAAM;AAAA,UAAA,GACnBnO,SAAS,EAAEmO,MAAM,aACjBnN,YAAY,EAAEmN,MAAM,UDTpBvC,EAAAA;AAAAA,QAAAA;AAAAA,QAAAA,OErB2B,EAC7BuC,MAAM,UACNC,UAAU,CACR,kBACA,iBACA,aACA,WACA,WAEFC,YAAY;AAAA,UACVjD,gBAAgB,EAAE+C,MAAM,WAAWI,SAAS,EAAA;AAAA,UAC5ClD,eAAe,EAAE8C,MAAM,SAAA;AAAA,UACvB7C,WAAW,EAAE6C,MAAM,WAAWQ,MAAM,CAAC,GAAG,GAAG,GAAG,CAAA,EAAA;AAAA,UAC9CpD,SAAS,EAAE4C,MAAM,UAAA;AAAA,UACjB3C,QAAQ,EAAE2C,MAAM,UAAA;AAAA,QAAA,EAAA;AAAA,QFQhBrC,WGrB0B;AAAA,UAC5BqC,MAAM;AAAA,UACNC,UAAU,CAAC,QAAQ,UAAU,aAAa,MAC1CC;AAAAA,UAAAA,YAAY,EACVpC,MAAM,EAAEkC,MAAM,aACdpC,QAAQ,EAAEoC,MAAM,UAAA,GAChBnC,WAAW,EAAEmC,MAAM,UAAA,GACnB/O,MAAM,EACJ+O,MAAM,SACNG,OAAO;AAAA,YACLH,MAAM;AAAA,YACNC,UAAU,CAAC,QAAQ,YAAA;AAAA,YACnBC,YAAY,EACVtG,MAAM,EAAEoG,MAAM,UAAA,GACdjG,YAAY,EACViG,MAAM,SACNG,OAAO,EACLM,OAAO,CACL,EAAET,MAAM,SAAA,GACR,EAAEA,MAAM,SACR,GAAA;AAAA,cACEA,MAAM;AAAA,cACNC,UAAU,CAAC,QAAQ,OAAO,SAAS,QAAA;AAAA,cACnCC,YAAY,EACV1P,MAAM,EAAEwP,MAAM,SAAA,GACdnB,KAAK,EAAEmB,MAAM,UAAA,GACblB,OAAO,EAAEkB,MAAM,UAAA,GACfjB,QAAQ,EAAEiB,MAAM,UAAA,EAAA;AAAA,YAAA,CAAA,EAAA,EAAA,EAAA;AAAA,UAAA,EAAA,EAAA;AAAA,QAAA;AAAA,MAAA,EAAA,EAAA;AAAA,IAAA,EAAA,EAAA;AAAA,EAAA;AAAA,GC1B9BU,KAAM,IAAIC,EAAI;AAAA,EAClBC,QAAQ;IAGJC,KAAUH,GAAII,QCNS,EAC3Bd,MAAM,UACNC,UAAU,CACR,QACA,MACA,YACA,SACA,YACA,WACA,YAEFC,YAAY,EACV1P,MAAM,EAAEwP,MAAM,SAAA,GACdxQ,IAAI,EAAEwQ,MAAM,WAAWI,SAAS,EAAA,GAChCV,UAAU;AAAA,EAAEM,MAAM;AAClBL,GAAAA,OAAO,EAAEK,MAAM,UACfJ,GAAAA,UAAU,EAAEI,MAAM,UAClBH,GAAAA,SAAS,EAAEG,MAAM,YACjBF,SAAS,EAAEE,MAAM,SAAA,EAAA,EAAA,CAAA,GDVfe,KAAUL,GAAII,QAAQf,EAAAA,GAEfiB,KAAiBjQ,CAAAA,OACrB8P,GAAQ9P,EAGJkQ,GAAAA,KAAalQ,CAAAA,OACjBgQ,GAAQhQ,EENJmQ,GAAAA,KAAiB;AAAA,EAC5B3Q,OAAO;AAAA,IACL4Q,OAAO;AAAA,IACPC,SAAS;AAAA,MACPC,mBAAmB;AAAA,MACnBC,WAAW;AAAA,MACXC,gBAAgB;AAAA,MAChBC,gBAAgB;AAAA,MAChBC,UAAU;AAAA,MACVC,SAAS;AAAA,MACTC,SAAS;AAAA,MACTC,cAAc;AAAA,MACdC,UAAU;AAAA,IAGdC;AAAAA,EAAAA;AAAAA,EAAAA,OAAO,EACLX,OAAO,MACPC,SAAS,EACPW,QAAQ,SACRC,WAAW,SACXC,WAAW,WAGfC,EAAAA;AAAAA,EAAAA,OAAO,EACLf,OAAO,MACPC,SAAS;AAAA,IACPe,aAAa;AAAA,IACbC,YAAY;AAAA,EAAA,EAAA;AAAA,EAGhBC,OAAO,EACLlB,OAAO,QACPC,SAAS,EACPkB,WAAW,YACXC,YAAY,WACZC,aAAa,SACbC,MAAM,OAGVC,EAAAA;AAAAA,EAAAA,MAAM,EACJvB,OAAO,QACPC,SAAS,EACPuB,YAAY,MAAA,EAAA;AAAA,EAGhBC,OAAO,EACLzB,OAAO,OACPC,SAAS,EACPyB,uBAAuB,YACvBC,uBAAuB,YACvBC,QAAQ,QACRC,QAAQ;EAGZC,OAAO,EACL9B,OAAO,QACPC,SAAS;AAAA,IACP8B,aAAa;AAAA,IACbC,UAAU;AAAA,IACVC,QAAQ;AAAA,IACRC,SAAS;AAAA,IACTC,mBAAmB;AAAA,IACnBC,qBAAqB;AAAA,IACrBC,mBAAmB;AAAA,IACnBC,UAAU;AAAA,IACVC,UAAU;AAAA,IACVC,gBAAgB;AAAA,IAChBC,gBAAgB;AAAA,IAChBC,iBAAiB;AAAA,IACjBC,eAAe;AAAA,EAAA,EAAA;AAAA,EAGnBC,QAAQ,EACN5C,OAAO,MACPC,SAAS,EACP4C,cAAc;EAGlBC,YAAY;AAAA,IACV9C,OAAO;AAAA,IACPC,SAAS,EACP8C,OAAO,MACPC,OAAO,QACPC,aAAa,MAGjBC;AAAAA,EAAAA;AAAAA,EAAAA,aAAa,EACXlD,OAAO,WACPC,SAAS,EACPpQ,SAAS,QACTE,UAAU,UACVV,MAAM,MACNhB,IAAI,MACJyB,MAAM,UAAA,EAAA;AAAA,GCtGCqT,KAAwB;AAAA,EACnCnD,OAAO;AAAA,EACPC,SAAS,CAAA;ACHEmD,GAAAA,KAAa,CAACC,KAA0B,QAAgB,EACnExE,MAAMwE,GAAOxE,QAAQ,GACrByE,WAAWD,GAAOC,aAAa,GAC/BC,SAASF,GAAOE,WAAW,IAC3BC,UAAUH,GAAOG,YAAY,GAC7BC,UAAUJ,GAAOI,YAAAA,MCLNC,IAAAA,KAAgB,CAACtU,KAA6B,QAAoB;AAAA,EAC7EC,MAAMD,GAAMC,QAAQ;AAAA,EACpBhB,IAAIe,GAAMf,MAAM;AAAA,EAChBgT,aAAajS,GAAMiS,eAAe;AAAA,EAClCtF,eAAe3M,GAAM2M,iBAAiB;AAAA,EACtCD,gBAAgB1M,GAAM0M,kBAAkB;AAAA,EACxC6H,UAAUvU,GAAMuU,YAAY;AAAA,EAC5BC,WAAWxU,GAAMwU,aAAa;AAAA,EAC9BC,QAAQ,CAAA;AAAA,EACRjI,MAAMxM,GAAMwM,QAAQ;AAAA,EACpB4E,SAASpR,GAAMoR,WAAW;AAAA,EAC1BF,UAAUlR,GAAMkR,YAAY;AAAA,EAC5BC,SAASnR,GAAMmR,WAAW;AAAA,EAC1BuD,QAAQ,CAAA;AAAA,EACRrD,cAAcrR,GAAMqR,gBAAgB;AAAA,EACpCC,UAAUtR,GAAMsR,YAAY;AAAA,IAGjBqD,KAAsBnU,CAAAA,QAC1B;AAAA,EACLP,MAAMO,GAAKP,QAAQ;AAAA,EACnBhB,IAAIuB,GAAKvB,MAAM;AAAA,EACfgT,aAAazR,GAAKyR,eAAe;AAAA,EACjCtF,eAAenM,GAAKmM,iBAAiB;AAAA,EACrCD,gBAAgBlM,GAAKkM,kBAAkB;AAAA,EACvC6H,UAAU/T,GAAK+T,YAAY;AAAA,EAC3BC,WAAWhU,GAAKgU,aAAa;AAAA,EAC7BC,QAAQ,CAAA;AAAA,EACRjI,MAAMhM,GAAKgM,QAAQ;AAAA,EACnB4E,SAAS5Q,GAAK4Q,WAAW;AAAA,EACzBF,UAAU1Q,GAAK0Q,YAAY;AAAA,EAC3BC,SAAS3Q,GAAK2Q,WAAW;AAAA,EACzBuD,QAAQ,CACRrD;AAAAA,EAAAA,cAAc7Q,GAAK6Q,gBAAgB;AAAA,EACnCC,UAAU9Q,GAAK8Q,YAAY;AAAA,IClClBsD,KAAgB,CAACjD,KAA6B,QAAoB;AAAA,EAC7E1S,IAAI0S,GAAM1S,MAAM;AAAA,EAChBgB,MAAM0R,GAAM1R,QAAQ;AAAA,EACpB4U,WAAWlD,GAAMkD,aAAa;AAAA,EAC9BC,aAAanD,GAAMmD,eAAe;AAAA,EAClCL,QAAQ9C,GAAM8C,UAAU,CACxBjI;AAAAA,EAAAA,MAAMmF,GAAMnF,QAAQ;AAAA,EACpBuI,SAASpD,GAAMoD,WAAW;AAAA,EAC1BvD,QAAQG,GAAMH,UAAU,CACtB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CAAA;AAAA,EAEFwD,SAASrD,GAAMqD,WAAW;AAAA,EAC1BC,OAAOtD,GAAMsD,SAAS;ACnBXC,IAAAA,KAAgB,CAAC1U,KAA4B,QAAoB;AAAA,EAC5EP,MAAMO,GAAKP,QAAQ;AAAA,EACnBhB,IAAIuB,GAAKvB,MAAM;AAAA,EACfwV,QAAQ,CACRjI;AAAAA,EAAAA,MAAMhM,GAAKgM,QAAQ;AAAA,EACnBgF,QAAQ,CACN,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CAEFC;AAAAA,EAAAA,WAAWjR,GAAKiR,aAAa,CAAA;AAAA,EAC7BC,WAAWlR,GAAKkR,aAAa,CChBlByD;AAAAA,IAAAA,KAAe,CAACC,KAA8B,QAAkB,EAC3EC,QAAQD,GAASC,UAAU,GAC3BC,aAAaF,GAASE,eAAe,GACrCC,MAAMH,GAASG,QAAQ,EAGZC,IAAAA,KAAkB,CAC7BC,KAAgC,QACd;AAAA,EAClBC,iBAAiBD,GAAOC,mBAAmB;AAAA,EAC3CC,iBAAiBF,GAAOE,mBAAmB;AAAA,EAC3CC,eAAeH,GAAOG,iBAAiB;AAAA,EACvCC,QAAQJ,GAAOI,UAAU;AAAA,EAEzBC,SAASL,GAAOK,WAAW;AAAA,IAGhBC,KAAgB,CAACvV,KAA4B,OAAoB;;AAAA;AAAA,IAC5EP,MAAMO,GAAKP,QAAQ;AAAA,IACnBhB,IAAIuB,GAAKvB,MAAM;AAAA,IACfgT,aAAazR,GAAKyR,eAAe;AAAA,IACjCD,YAAYxR,GAAKwR,cAAc;AAAA,IAC/BD,aAAWvR,MAAAA,GAAKuR,cAALvR,gBAAAA,IAAgBpB,IAAI,MAAM+V,GAAAA,OAAmB,CACxDa;AAAAA,IAAAA,KAAKxV,GAAKwV,OAAO;AAAA,IACjB9D,MAAM1R,GAAK0R,QAAQ;AAAA,IACnBuC,QAAQ,CACRjI;AAAAA,IAAAA,MAAMhM,GAAKgM,QAAQ;AAAA,IACnBgF,QAAQ,CACN,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CAAA;AAAA,IAEFyE,SAAS,CCrCEC;AAAAA,EAAAA;AAAAA,GAAAA,KAAgB,CAAC1V,KAA4B,QAAoB;AAAA,EAC5EP,MAAMO,GAAKP,QAAQ;AAAA,EACnBhB,IAAIuB,GAAKvB,MAAM;AAAA,EACf4V,WAAWrU,GAAKqU,aAAa;AAAA,EAC7BsB,UAAU3V,GAAK2V,YAAY;AAAA,EAC3BC,UAAU5V,GAAK4V,YAAY;AAAA,EAC3BC,UAAU7V,GAAK6V,YAAY;AAAA,EAC3BC,UAAU9V,GAAK8V,YAAY;AAAA,EAC3B7B,QAAQ,CAAA;AAAA,EACRjI,MAAMhM,GAAKgM,QAAQ;AAAA,EAEnB+J,aAAa/V,GAAK+V,eAAe;AAAA,EACjCC,iBAAiBhW,GAAKgW;EACtB7D,aAAanS,GAAKmS,eAAe;AAAA,EACjCC,UAAUpS,GAAKoS,YAAY;AAAA,EAC3BC,QAAQrS,GAAKqS,UAAU;AAAA,EACvBC,SAAStS,GAAKsS,WAAW;AAAA,EACzBC,mBAAmBvS,GAAKuS;EACxBC,qBAAqBxS,GAAKwS,uBAAAA;AAAAA,EAC1BC,mBAAmBzS,GAAKyS,qBAAqB;AAAA,EAC7CC,UAAU1S,GAAK0S,YAAY;AAAA,EAC3BC,UAAU3S,GAAK2S,YAAY;AAAA,EAC3BC,gBAAgB5S,GAAK4S;EACrBC,gBAAgB7S,GAAK6S,kBAAkB;AAAA,EACvCC,iBAAiB9S,GAAK8S;EACtBC,eAAe/S,GAAK+S,iBAAiB;ICdjCkD,KAAc,UACdC,KAAwB,qBACxBC,KAAyB,qBACzBC,KAAqB,WAEdC,KAAkB,EAC7BjG,OAAO,MACPC,SAAS;AAAA,EACPiG,cAAc,EACZlG,OAAO,SACPmG,QAAQL,IACR7F,SAAS;AAAA,IACPmG,OAAO;AAAA,IACPC,OAAO;AAAA,IACPC,KAAK;AAAA,IACLC,KAAK;AAAA,IACLC,MAAM;AAAA,IACNC,MAAM;AAAA,IACNC,KAAK;AAAA,IACLC,KAAK;AAAA,EAAA,EAAA;AAAA,EAGTC,YAAY,EACV5G,OAAO,SACPmG,QAAQJ,IACR9F,SAAS;AAAA,IACP4G,SAAS;AAAA,IACTC,aAAa;AAAA,IACbC,cAAc;AAAA,IACdC,qBAAqB;AAAA,IACrBC,kBAAkB;AAAA,IAClBC,qBAAqB;AAAA,IACrBC,mBAAmB;AAAA,IACnBC,oBAAoB;AAAA,IACpBC,oBAAoB;AAAA,IACpBC,oBAAoB;AAAA,EAGxBC,EAAAA;AAAAA,EAAAA,cAAc,EACZvH,OAAO,SACPmG,QAAQL,IACR7F,SAAS;AAAA,IACPuH,YAAY;AAAA,IACZC,iBAAiB;AAAA,IACjBC,oBAAoB;AAAA,IACpBC,cAAc;AAAA,IACdC,YAAY;AAAA,IACZC,cAAc;AAAA,IACdC,oBAAoB;AAAA,IACpBC,iBAAiB;AAAA,IACjBC,iBAAiB;AAAA,IACjBC,gBAAgB;AAAA,EAGpBC,EAAAA;AAAAA,EAAAA,aAAa;AAAA,IACXlI,OAAO;AAAA,IACPmG,QAAQN;AAAAA,IACR5F,SAAS,EACPkI,YAAY,QACZC,OAAO,MACPC,YAAY,QACZC,eAAe;;EAGnBC,SAAS,EACPvI,OAAO,WACPmG,QAAQN,IACR5F,SAAS;AAAA,IACPuI,aAAa;AAAA,IACbC,gBAAgB;AAAA,IAChBC,aAAa;AAAA,EAGjBC,EAAAA;AAAAA,EAAAA,cAAc,EACZ3I,OAAO,UACPmG,QAAQN,IACR5F,SAAS;AAAA,IACP2I,gBAAgB;AAAA,IAChBC,gBAAgB;AAAA,IAChBC,eAAe;AAAA,IACfC,eAAe;AAAA,IACfC,YAAY;AAAA,IACZC,iBAAiB;AAAA,EAGrBC,EAAAA;AAAAA,EAAAA,aAAa,EACXlJ,OAAO,SACPmG,QAAQL,GAEVqD;AAAAA,EAAAA,YAAY,EACVnJ,OAAO,SACPmG,QAAQL,GAEVsD;AAAAA,EAAAA,WAAW,EACTpJ,OAAO,WACPmG,QAAQL,GAAAA;AAAAA,EAEVuD,aAAa;AAAA,IACXrJ,OAAO;AAAA,IACPmG,QAAQN;AAAAA,EAAAA;AAAAA,EAEVyD,eAAe,EACbtJ,OAAO,QACPmG,QAAQN,GAEV0D;AAAAA,EAAAA,aAAa,EACXvJ,OAAO,UACPmG,QAAQJ,GAAAA;AAAAA,EAEVyD,aAAa,EACXxJ,OAAO,UACPmG,QAAQH,GAAAA;AAAAA,EAEVyD,aAAa;AAAA,IACXzJ,OAAO;AAAA,IACPmG,QAAQH;AAAAA;EAEV0D,YAAY,EACV1J,OAAO,QACPmG,QAAQL;EAEV6D,aAAa,EACX3J,OAAO,SACPmG,QAAQN,GAAAA;AAAAA,EAEV+D,iBAAiB,EACf5J,OAAO,WACPmG,QAAQN,GAEVgE;AAAAA,EAAAA,gBAAgB,EACd7J,OAAO,WACPmG,QAAQN,GAAAA;AAAAA,EAEViE,WAAW;AAAA,IACT9J,OAAO;AAAA,IACPmG,QAAQN;AAAAA,EAAAA;AAAAA,EAEVkE,WAAW,EACT/J,OAAO,QACPmG,QAAQN,GAEVmE;AAAAA,EAAAA,UAAU,EACRhK,OAAO,WACPmG,QAAQN,GAAAA;AAAAA,EAEVoE,UAAU,EACRjK,OAAO,SACPmG,QAAQN,GAAAA;AAAAA,EAEVqE,WAAW,EACTlK,OAAO,YACPmG,QAAQN,GAAAA;AAAAA,EAEVsE,cAAc,EACZnK,OAAO,YACPmG,QAAQN;EAEVuE,eAAe,EACbpK,OAAO,YACPmG,QAAQN;KC7JRwE,KAAa,EACjBC,YAAY,EACVC,aAAa,QACbC,WAAW,UACXC,SAAS,OAAA,GAEXF,aAAa;AAAA,EACXG,SAAS,CAAC,OAIDC;AAAAA,EAAAA,GAAAA,KAAkB,CAC7BC,IACAC,IACA7L,OAEM;AAAA,QAAA8L,KAAOC,EAAkBV;AACxB,SAAAW,EACLH,IACA7L,IACA8L,IACAF,GAAW3O,SACVgP,CAAAA,OAAMA,GAAExG;GClCAyG,KAAiB,CAC5BtI,KAA+B,QACd;AAAA,EACjBvU,IAAIuU,GAAOvU,MAAM;AAAA,EACjBgB,MAAMuT,GAAOvT,QAAQ;AAAA,EACrB4U,WAAWrB,GAAOqB,aAAa;AAAA,EAC/BC,aAAatB,GAAOsB,eAAe;AAAA,EACnCL,QAAQjB,GAAOiB,UAAU,CAAA;AAAA,EACzBjI,MAAMgH,GAAOhH,QAAQ;AAAA,EACrBuP,aAAavI,GAAOuI,eAAe;AAAA,EACnCvK,QAAQgC,GAAOhC,UAAU,CACvB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,CAAA;AAAA,EAEFwD,SAASxB,GAAOwB,WAAW;AAAA,EAC3BC,OAAOzB,GAAOyB,SAAS;AAAA,EACvBhB,QAAQD,GAAWR,GAAOS,UAAU,CAAA;EACpC+H,SAASxI,GAAOwI,WAAW;AAAA,ICvBhBC,KAAqB;AAAA,EAChCrL,OAAO;AAAA,EACPC,SAAS,EACP4C,cAAc,UAAA;GCNLyI,KAAkB,GAClBC,KAAmB,GACnBC,KAAkB,GCEzBC,KAAe,oBACfC,KAAiB,wBACjBC,KAAkB,sBAClB9F,KAAc,UAEP+F,KAAwB,EACnC5L,OAAO,QACPC,SAAS;AAAA,EACP4L,SAAS,EACPC,MAAM,WACNC,YAAY,QACZ5F,QAAQwF,GAAAA;AAAAA,EAEVK,WAAW,EACTF,MAAM,YACNC,YAAY,SACZ5F,QAAQwF;EAEVM,QAAQ,EACNH,MAAM,qBACNC,YAAY,QACZ5F,QAAQuF,GAAAA;AAAAA,EAEVQ,MAAM;AAAA,IACJJ,MAAM;AAAA,IACNC,YAAY;AAAA,IACZ5F,QA3Bc;AAAA,EAAA;AAAA,EA6BhBgG,YAAY,EACVL,MAAM,YACNC,YAAY,SACZ5F,QAAQN,GAAAA;AAAAA,EAEVuG,WAAW;AAAA,IACTN,MAAM;AAAA,IACNC,YAAY;AAAA,IACZ5F,QAAQuF;AAAAA,EAEVW;AAAAA,EAAAA,WAAW,EACTP,MAAM,6EACNC,YAAY,QACZ5F,QAAQuF,GAEVY;AAAAA,EAAAA,YAAY;AAAA,IACVR,MAAM;AAAA,IACNC,YAAY;AAAA,IACZ5F,QAAQN;AAAAA,EAEV0G;AAAAA,EAAAA,cAAc,EACZT,MAAM,YACNC,YAAY,SACZ5F,QAAQN;EAEV2G,aAAa,EACXV,MAAM,mBACNC,YAAY,UACZ5F,QAAQsF,GAAAA;AAAAA,EAEVgB,SAAS;AAAA,IACPX,MAAM;AAAA,IACNC,YAAY;AAAA,IACZ5F,QAAQN;AAAAA,EAAAA;AAAAA,EAEV6G,UAAU,EACRZ,MAAM,aACNC,YAAY,UACZ5F,QAAQsF,GAEVvI;AAAAA,EAAAA,aAAa,EACX4I,MAAM,gBACNC,YAAY,WACZ5F,QAAQN,GAAAA;AAAAA,EAAAA,GC3ED8G,KAAwB,GCOxBC,KAAuB,CAClCC,IACAC,IACA9N,OAAAA;AAEM,QAAAuC,KAAOvC,GAAM+N,KAAMxL,CAAAA,OAASA,GAAKlT,OAAOye,GAAOrI,MAC/CpV,GAAAA,KAAekS,KAAOA,GAAKlS,OAAO;AACxC,SAAOwd,GAAa5Q,QACjB+Q,WAXiB,YAWSF,GAAOG,OAAO5O,SAAAA,CAAAA,EACxC2O,WAXiB,YAWSF,GAAOI,OAAO7O,YACxC2O,WAde,UAcS3d,ECdhB8d;AAAAA,GAAAA,KAAsB,EACjCnN,OAAO,QACPC,SAAS,EACPuB,YAAY,MAAA,EAAA,GCHH4L,KAAuB;AAAA,EAClCpN,OAAO;AAAA,EACPC,SAAS,EACPyB,uBAAuB,YACvBC,uBAAuB,YACvBC,QAAQ,QACRC,QAAQ;GCNCwL,KAA6B,EACxCrN,OAAO,IACPC,SAAS;AAAA,EACP8C,OAAO;AAAA,EACPC,OAAO;AAAA,EACPC,aAAa;ACLJqK,EAAAA,GAAAA,KAAe,CAAC/L,KAA2B,QAAmB;AAAA,EACzE4J,aAAa5J,GAAK4J,eAAe;AAAA,EACjC9c,IAAIkT,GAAKlT,MAAM;AAAA,EACfgB,MAAMkS,GAAKlS,QAAQ;AAAA,EACnB4U,WAAW1C,GAAK0C,aAAa;AAAA,EAC7BC,aAAa3C,GAAK2C,eAAe;AAAA,EACjCqJ,SAAShM,GAAKgM,WAAW;AAAA,EAEzB3R,MAAM2F,GAAK3F,QAAQ;AAAA,EACnB4F,YAAYD,GAAKC,cAAAA;AAAAA,EACjBuB,OAAOxB,GAAKwB,SAAS;AAAA,EACrByK,UAAUjM,GAAKiM,YAAY;AAAA,EAC3BxK,OAAOzB,GAAKyB,SAAS;AAAA,EACrBC,aAAa1B,GAAK0B,eAAe;AAAA,EACjCwK,SAASlM,GAAKkM,WAAW;AAAA,EACzBC,QAAQnM,GAAKmM,UAAU;AAAA,EACvBC,SAASpM,GAAKoM,WAAW;AAAA,EACzBtK,QAAQD,GAAW7B,GAAK8B,UAAU,CAAA,CAAA;AAAA,EAClCuK,SAAS,CACTvJ;AAAAA,EAAAA,OAAO;ACnBIwJ,IAAAA,KAAgB,CAACpM,KAA6B,QAAoB;AAAA,EAC7EqM,SAASrM,GAAMqM,WAAW;AAAA,EAC1BC,kBAAkBtM,GAAMsM,oBAAoB;AAAA,EAC5CC,kBAAkBvM,GAAMuM,oBAAoB;AAAA,EAC5C7C,aAAa1J,GAAM0J,eAAe;AAAA,EAClC9H,QAAQD,GAAW3B,GAAM4B,UAAU,CAAA,CACnCa;AAAAA,EAAAA,aAAazC,GAAMyC,eAAe;AAAA,EAClC0J,SAAS,CACTD;AAAAA,EAAAA,SAASlM,GAAMkM,WAAW;AAAA,EAC1B1J,WAAWxC,GAAMwC,aAAa;AAAA,EAC9B5V,IAAIoT,GAAMpT,MAAM;AAAA,EAChBkX,UAAU9D,GAAM8D,YAAY;AAAA,EAC5BC,UAAU/D,GAAM+D,YAAY;AAAA,EAC5BG,aAAalE,GAAMkE,eAAe;AAAA,EAClCtW,MAAMoS,GAAMpS,QAAQ;AAAA,EACpBuM,MAAM6F,GAAM7F,QAAQ;AAAA,EACpBgG,QAAQH,GAAMG,UAAU;AAAA,EACxB4L,UAAU/L,GAAM+L,YAAY;AAAA,EAC5BC,SAAShM,GAAMgM,WAAW;AAAA,EAC1B1K,OAAOtB,GAAMsB,SAAS;AAAA,EACtBC,OAAOvB,GAAMuB,SAAS;AAAA,EACtBC,aAAaxB,GAAMwB,eAAe;AAAA,EAClCpB,QAAQJ,GAAMI,UAAU;AAAA,EACxB6L,QAAQjM,GAAMiM,UAAU;AAAA,ICxBpBO,KAAiB,EACrBpP,MAAM,UAAA,GCDFqP,KAA0B,EAC9BrP,MAAM,WACNI,SAAS,ECFLkP,GAAAA,KAAgB,EACpBtP,MAAM,SCIFuP,GAAAA,KAAgB;AAAA,EACpBvP,MAAM;AAAA,EACNE,YAAY,EACVF,MAAM,EAAEA,MAAM,aACdyE,WAAW4K,IACX3K,SAAS4K,IACT3K,UAAUyK,IACVxK,UAAU,EAAE5E,MAAM,UAEpBC,EAAAA;AAAAA,EAAAA,UAAU,CAAC,QAAQ,aAAa,WAAW,YAAY,UAAA;AAAA,EACvDuP,sBAAsB;AAAA,GAGlBC,KAAgB,EACpBzP,MAAM,UACNE,YAAY,EACVtG,MAAMwV,IACNxJ,QAAQyJ,IACRjB,QAAQgB,IACRf,QAAQe,GAEVnP,GAAAA,UAAU,CAAC,QAAQ,UAAU,UAAU,QAAA,GACvCuP,sBAAsB,MAAA,GAGlBE,KAAoB;AAAA,EACxB1P,MAAM;AAAA,EACNC,UAAU,CACR,QACA,MACA,eACA,aACA,YACA,YACA,eACA,UACA,oBACA,oBACA,WACA,UACA,eACA,WACA,YACA,WACA,SACA,SACA,eACA,UACA,QACA,SAAA;AAAA,EAGFC,YAAY;AAAA,IACV1P,MAAM8e;AAAAA,IACN9f,IAAI6f;AAAAA,IACJhK,aAAaiK;AAAAA,IACblK,WAAWiK;AAAAA,IACX3I,UAAU4I;AAAAA,IACV3I,UAAU2I;AAAAA,IAEVxI,aAAauI;AAAAA,IACbtM,QAAQqM;AAAAA,IACRF,kBAAkBG;AAAAA,IAClBF,kBAAkBE;AAAAA,IAClBJ,SAASI;AAAAA,IACTrM,QAAQoM;AAAAA,IAER9C,aAAa+C;AAAAA,IACbP,SAASO;AAAAA,IACTV,UAAU,EAAE3O,MAAM,UAAA;AAAA,IAClB4O,SAASS;AAAAA,IACTnL,OAAOkL;AAAAA,IACPjL,OAAOiL;AAAAA,IACPhL,aAAagL;AAAAA,IACbP,QAAQO;AAAAA,IAERrS,MAAMuS;AAAAA,IAENP,SAAS,EACP/O,MAAM,SACNG,OAAOsP,GAAAA;AAAAA,IAETjL,QAAQ+K;AAAAA,EAAAA;AAAAA,EAGVC,sBAAsB;AAAA,GAGlBG,KAAmB;AAAA,EACvB3P,MAAM;AAAA,EACNC,UAAU,CACR,QACA,MACA,eACA,aACA,QACA,eACA,WACA,YACA,WACA,SACA,SACA,eACA,UACA,cACA,SACA,SAAA;AAAA,EAGFC,YAAY,EACV1P,MAAM8e,IACN9f,IAAI6f,IACJhK,aAAaiK,IACblK,WAAWiK,IACXtS,MAAMuS,IACNhD,aAAa+C,IACbP,SAASM,IACTT,UAAUS,IACVR,SAASQ,IACTlL,OAAOkL,IACPjL,OAAOiL,IACPhL,aAAagL,IACbP,QAAQO,IACRzM,YAAY;AAAA,IAAE3C,MAAM;AAAA,EACpBwF,GAAAA,OAAO6J,IACPX,SAASW,IACTN,SAAS,EACP/O,MAAM,SACNG,OAAOsP,GAETjL,GAAAA,QAAQ+K;GCnIN7O,KAAM,IAAIC,EAAI,EAClBC,aAEI8B,CAAAA,GAAAA,KAAOhC,GAAII,QAAQ6O,KAEZC,KAAc7e,CAAAA,OAClB2R,GAAK3R,EAAAA,GAGR6R,KAAQlC,GAAII,QAAQ4O,EACbG,GAAAA,KAAe9e,CAAAA,OACnB6R,GAAM7R,EAAAA,GAGTgT,KAASrD,GAAII,QCjBQ;AAAA,EACzBd,MAAM;AAAA,EACNC,UAAU,CACR,QACA,MACA,eACA,aACA,SACA,UACA,UACA,QACA,WACA;EAGFC,YAAY;AAAA,IACV1P,MAAM,EAAEwP,MAAM;IACdxQ,IAAI,EAAEwQ,MAAM,WAAWI,SAAS,EAAA;AAAA,IAChCiF,aAAa,EAAErF,MAAM,SAAA;AAAA,IACrBoF,WAAW,EAAEpF,MAAM,WAAWI,SAAS,EAAA;AAAA,IACvCoF,OAAO,EAAExF,MAAM,WAAWI,SAAS,EAAA;AAAA,IACnCrD,MAAM,EAAEiD,MAAM,SAAA;AAAA,IACduF,SAAS,EAAEvF,MAAM,WAAWI,SAAS,EAAA;AAAA,IACrCmM,SAAS;AAAA,MAAEvM,MAAM;AAAA,MAAWI,SAAS;AAAA,IACrCkM;AAAAA,IAAAA,aAAa,EAAEtM,MAAM,WAAWI,SAAS,EACzC2B;AAAAA,IAAAA,QAAQ,EACN/B,MAAM,SACNG,OAAO,CACL,EAAEH,MAAM,UAAA,GACR,EAAEA,MAAM,UACR,GAAA,EAAEA,MAAM,UAAA,GACR,EAAEA,MAAM,UACR,GAAA,EAAEA,MAAM,UAAA,GACR;AAAA,MAAEA,MAAM;AAAA,OACR,EAAEA,MAAM,UACR,GAAA,EAAEA,MAAM,UAAA,CAAA,GAEV8P,UAAU,GACVC,UAAU,EAAA;AAAA,IAEZvL,QAAQ,EACNxE,MAAM,UACNE,YAAY,EACVF,MAAM,EAAEA,MAAM,WAAWI,SAAS,EAAA,GAClCqE,WAAW,EAAEzE,MAAM,WAAWI,SAAS,EAAA,GACvCsE,SAAS;AAAA,MAAE1E,MAAM;AAAA,IAAA,GACjB2E,UAAU,EAAE3E,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA,GAClDpL,UAAU,EAAE5E,MAAM,WAAWiQ,SAAAA,WAE/BhQ,UAAU,CAAC,QAAQ,aAAa,WAAW,YAAY,UAAA,EAAA;AAAA,IAEzD+E,QAAQ;AAAA,MACNhF,MAAM;AAAA,MACNG,OAAO,EACLH,MAAM,UACNE,YAAY,EACVtG,MAAM,EAAEoG,MAAM,UAAA,GACd4F,QAAQ,EAAE5F,MAAM,aAChBkQ,OAAO,EAAElQ,MAAM,UAEjBC,EAAAA,GAAAA,UAAU,CAAC,QAAQ,UAAU,OAAA,EAAA;AAAA,IAAA;AAAA,EAAA;AD1CxBkQ,CAAAA,GAAAA,KAAgBpf,CAAAA,OACpBgT,GAAOhT,EAAAA,GEpBHqf,KAAmB,CAACC,IAAaH,OACrC,IAAIG,EAAOH,IAAAA,EAAAA,KAGPI,KAAY,MAAM,qCAElBC,KAAiB,CAC5Bxf,IACAyf,OACaC,GAAW1f,GAAKgM,MAAM,CAACsT,IAAKH,OAAUM,GAAGH,IAAKH,IAAOnf,EAAAA,CAAAA,GAEvD2f,KAAY3T,CAAAA,OAChB0T,GAAW1T,IAAM,CAACsT,IAAKH,OAAU,CAACG,IAAKH,EAM1CO,CAAAA,GAAAA,KAAa,CACjB1T,IACAyT,OAAAA;AAEA,QAAMG,KAlBuB;AAmB7B,SAAO3gB,MAAMC,KAAK8M,GAAK7M,SAASygB,EAAAA,GAASxgB,CAAAA,OAAUqgB,GAAGrgB,GAAM,CAAIA,GAAAA,GAAM,CAS3DygB,CAAAA,CAAAA;AAAAA,GAAAA,KAAc,CACzB7T,IACA8T,OAAAA;AAEI,MAAA9T,GAAK+T,UAAU,IACX,OAAA,IAAIC,MAAM;AAGlB,SAAOhU,GAAKoR,WApCiB,qCAsC3B,CAAC6C,IAAYX,IAAaH;AAClB,UAAAe,KAAUJ,GAAkBR,IAAKH,EAAAA;AACnC,QAAAe,GAAQH,UAAU,IACd,OAAA,IAAIC,MAAM,2CAEX;AAAA,WAAAX,GAAiBC,IAAKY,EAKtBC;AAAAA,EAAAA,CAAAA;AAAAA,GAAAA,KAAe,CAC1BnU,IACAoU,OAAAA;AAEA,QAAMR,KApDuB,qCAqDvBxgB,KAAQH,MAAMC,KAAK8M,GAAK7M,SAASygB,EAAAA,CAAAA,EAAQzC,KAC5CkD,CAAAA,OAAMA,GAAE,CAAA,MAAOD;AAEX,SAAAhhB,KAAQA,GAAM,CAAA,IAAA;AAGVkhB,GAAAA,KAAe,CAC1BtU,IACAoU,IACAG,OAEA;AAAA,QAAMX,KAhEuB;AAkE7B,SAAO5T,GAAKwU,QAAQZ,IAAO,CAACxgB,IAAOkgB,OAC7BA,OAAQc,KACHf,GAAiBC,IAAKiB,EAExBnhB,IAAAA,EAAAA;AC5EEqhB,GAAAA,KAAc,QAEdC,KAAiB,SACjBC,KAAe,OACfC,KAAiB,SACjBC,KAAiB,SACjBC,KAAiB,SACjBC,KAAiB,QACjBC,KAAkB,UAClBC,KAAiB,SACjBC,KAAiB,SACjBC,KAAwB,gBACxBC,KAAiB,SCVjBC,KAAwB;AAAA,EACnC5iB,IAAI;AAAA,EACJgB,MAAM;AAAA,EACNuM,MAAM;AAAA,EACNsI,aAAa;AAAA,EACbD,WAAW;AAAA,EACXuJ,UAAU;AAAA,EACV5M,QAAQ;AAAA,EACR6M,SAAS;AAAA,EACT1K,OAAO;AAAA,EACPC,OAAO;AAAA,EACPC,aAAa;AAAA,EACbkI,aAAa;AAAA,EACb+F,aAAa;AAAA,EACbpV,gBAAgB;AAAA,EAChBC,eAAe;AAAA,EACfoV,YAAY;AAAA,EACZvN,WAAW;AAAA,EACXD,UAAU;AAAA,EACVyN,cAAc;AAAA,EACdthB,MAAM;AAAA,EACN6V,aAAa;AAAA,EACb0L,SAAS;AAAA,EACTC,SAAS;AAAA,EACTpP,SAAS;AAAA,EACTF,UAAU;AAAA,EACVD,aAAa;AAAA,EACbwP,UAAU;AAAA,EACVC,OAAO;AAAA,EACPC,cAAc;AAAA,EACd9O,eAAe;AAAA,EACf9D,MAAM;AAAA,EACN2E,UAAU;AAAA,EACVkO,aAAa;AAAA,EACbC,SAAS;AAAA,EACTC,OAAO;AAAA,EACPC,MAAM;AAAA,EACN3O,aAAa;AAAA,EACb4O,QAAQ;AAAA,EACRC,WAAW;AAAA,EACXvJ,aAAa;AAAA,EACbC,gBAAgB;AAAA,EAChBC,aAAa;AAAA,EACbsJ,QAAQ;ACpCGC,GAAAA,KAAiB,OACrB,EACLC,KAAK,EACH7O,QAAQF,IACRvT,MAAMmQ,IACN8D,QAAQoC,IACRkM,YAAYvG,GAEdwG,GAAAA,QAAQnB,GCFCoB,IAAAA,KAAqB,CAChCC,KAAqC,QAE9B;AAAA,EACLC,QAAQD,GAASC,UAAU;AAAA,EAC3BC,aAAaF,GAASE,eAAe;AAAA,EACrCC,cAAcH,GAASG,gBAAgB;AAAA,EACvCC,aAAaJ,GAASI,eAAe;AAAA,EACrCC,cAAcL,GAASK,gBAAgB;AAAA,EACvCC,eAAeN,GAASM,iBAAiB;AAAA,EACzCC,aAAaP,GAASO,eAAe;AAAA,EAErCC,oBAAoBR,GAASQ,sBAAsB;AAAA,EACnDC,kBAAkBT,GAASS,oBAAoB;AAAA,EAC/CC,eAAeV,GAASU,iBAAiB;AAAA,EACzCC,UAAUX,GAASW,YAAY;AC3BtBC,IAAAA,KAAkB,CAC7BC,KAAuC,OAEhC,CACLC,EAAoBD,GAAOE,MAAAA,GAC3BD,EAAoBD,GAAOG,KAC3BF,EAAoBD,GAAOI,MAC3BH,GAAAA,EAAoBD,GAAOK,MAC3BJ,GAAAA,EAAoBD,GAAOM,KAAAA,GAC3BL,EAAoBD,GAAOO,IAAAA,GAC3BN,EAAoBD,GAAOQ,OAC3BP,EAAoBD,GAAOS,WAC3BR,GAAAA,EAAoBD,GAAOnB,MAC3BoB,GAAAA,EAAoBD,GAAOU,WAC3BT,GAAAA,EAAoBD,GAAOW,WAC3BV,GAAAA,EAAoBD,GAAOY,aAAAA,GAC3BX,EAAoBD,GAAOa,aAAAA,GAC3BZ,EAAoBD,GAAOc,gBAC3Bb,EAAoBD,GAAOe,WAC3Bd,GAAAA,EAAoBD,GAAOgB,aAC3Bf,GAAAA,EAAoBD,GAAOiB,YAAAA,GAC3BhB,EAAoBD,GAAOkB,QAAAA,GAC3BjB,EAAoBD,GAAOmB,cAC3BlB,EAAoBD,GAAOoB,gBAC3BnB,GAAAA,EAAoBD,GAAOqB,cAC3BpB,GAAAA,EAAoBD,GAAOsB,IAAAA,GAC3BrB,EAAoBD,GAAOuB,OAAAA,GAC3BtB,EAAoBD,GAAOwB,QAAAA,CAAAA,GAIlBC,KACXzB,CAAAA,QAEO;AAAA,EACLE,QAAQF,GAAO,CACfG;AAAAA,EAAAA,IAAIH,GAAO,CAAA;AAAA,EACXI,QAAQJ,GAAO,CAAA;AAAA,EACfK,QAAQL,GAAO;EACfM,OAAON,GAAO,CACdO;AAAAA,EAAAA,MAAMP,GAAO,CACbQ;AAAAA,EAAAA,MAAMR,GAAO,CAAA;AAAA,EACbS,aAAaT,GAAO,CAAA;AAAA,EACpBnB,QAAQmB,GAAO;EACfU,aAAaV,GAAO,CACpBW;AAAAA,EAAAA,aAAaX,GAAO,EACpBY;AAAAA,EAAAA,eAAeZ,GAAO,EAAA;AAAA,EACtBa,eAAeb,GAAO,EAAA;AAAA,EACtBc,eAAed,GAAO,EACtBe;AAAAA,EAAAA,aAAaf,GAAO,EAAA;AAAA,EACpBgB,eAAehB,GAAO,EACtBiB;AAAAA,EAAAA,cAAcjB,GAAO,EAAA;AAAA,EACrBkB,UAAUlB,GAAO,EACjBmB;AAAAA,EAAAA,aAAanB,GAAO,EAAA;AAAA,EACpBoB,kBAAkBpB,GAAO,EACzBqB;AAAAA,EAAAA,gBAAgBrB,GAAO,EAAA;AAAA,EACvBsB,MAAMtB,GAAO,EACbuB;AAAAA,EAAAA,SAASvB,GAAO,EAAA;AAAA,EAChBwB,UAAUxB,GAAO,EAAA;AC3DR0B,IAAAA,KACXtlB,CAAAA,OAEOA,GAAOulB,aAAa,CAAA,GAGhBC,KACXxlB,CAAAA,OAEOA,GAAOulB,aAAa,CAAA,GAGhBE,KACXzlB,CAAAA,OAEOA,GAAOulB,aAAa,IAGhBG,KACX1lB,CAAAA,OAEOA,GAAOulB,aAAa,CAGhBI,GAAAA,KACX3lB,CAAAA,OAEOA,GAAOulB,aAAa,CAGhBK,GAAAA,KACX5lB,CAAAA,OAEOA,GAAOulB,aAAa,CAAA,GAGhBM,KACX7lB,CAAAA,OAEOA,GAAO8lB,eAAe,CAAA,GAGlBC,KACX/lB,CAAAA,OAEOA,GAAO8lB,eAAe,CAGlBE,GAAAA,KACXhmB,CAAAA,OAEOA,GAAO8lB,eAAe,CAGlBG,GAAAA,KACXjmB,CAAAA,OAEOA,GAAO8lB,eAAe,CAAA,GCzDlBI,KAAqB,CAChC/c,KAAiC,OAE1B,CACLA,GAAM6I,QAAQ,MACd7I,GAAMkK,UAAU,MAChBlK,GAAMqI,SAAAA,MACNrI,GAAMgd,WAAW,IAAA,GAGRC,KACXjd,CAAAA,QAEO;AAAA,EACL6I,MAAM7I,GAAM;EACZkK,QAAQlK,GAAM;EACdqI,OAAOrI,GAAM;EACbgd,SAAShd,GAAM;IChBNkd,KAA0B,CACrCld,KAAsC,OAE/B,CACLA,GAAM6I,QAAAA,MACN7I,GAAM+I,SAAAA,MACN/I,GAAM+a,SAAAA,MACN/a,GAAMmd,UAAAA,MACNnd,GAAMod,aAAAA,MACNpd,GAAMgb,QAAAA,OAIGqC,KACXxnB,CAAAA,QAEO;AAAA,EACLgT,MAAMhT,GAAM;EACZkT,OAAOlT,GAAM,CACbklB;AAAAA,EAAAA,OAAOllB,GAAM,CAAA;AAAA,EACbsnB,QAAQtnB,GAAM,CACdunB;AAAAA,EAAAA,WAAWvnB,GAAM,CAAA;AAAA,EACjBmlB,MAAMnlB,GAAM,CAAA;AAAA,ICpBVynB,KAAyC,EAC7ClX,UAAU,CAAC,kBAAkB,cAC7BuP,GAAAA,sBAAAA,OACAxP,MAAM,UACNE,YAAY,EACVsW,gBCRkC;AAAA,EACpCxW,MAAM;AAAA,EACN+P,UAAU;AAAA,EACVD,UAAU;AAAA,EACV3P,OAAO,EACLH,MAAM,UAAA;AAAA,GDINiW,cETwC,EAC1CjW,MAAM,SACN+P,UAAU,GACVD,UAAU,GACV3P,OAAO,EACLH,MAAM,UAAA,EAAA,EAAA,EAAA,GCLGoX,KAAqB,CAChChW,KAA8C,QAEvC;AAAA,EACLiW,aAAajW,GAAQiW,eAAe;AAAA,EACpCC,cAAclW,GAAQkW,gBAAgB;AAAA,EACtCC,cAAcnW,GAAQmW;EACtBC,aAAapW,GAAQoW,eAAAA;AAAAA,EACrBC,eAAerW,GAAQqW;EACvBC,cAActW,GAAQsW,gBAAgB;AAAA,EACtCC,mBAAmBvW,GAAQuW,qBAAqB;AAAA,EAChDC,aAAaxW,GAAQwW;EACrBC,cAAczW,GAAQyW,gBAAAA;AAAAA,EACtBC,gBAAgB1W,GAAQ0W;EACxBC,gBAAgB3W,GAAQ2W,kBAAkB;AAAA,EAC1CC,iBAAiB5W,GAAQ4W,mBAAmB;AAAA,ICd1CC,KAAiB,EACrBjY,MAAM,UAAA,GAGFkY,KAAgC;AAAA,EACpClY,MAAM;AAAA,EACNwP,sBAAsB;AAAA,EACtBvP,UAAU,CACR,eACA,gBACA,gBACA,eACA,iBACA,gBACA,qBACA,eACA,gBACA,kBACA,kBACA,iBAAA;AAAA,EAEFC,YAAY;AAAA,IACVmX,aAAaY;AAAAA,IACbX,cAAcW;AAAAA,IACdV,cAAcU;AAAAA,IACdT,aAAaS;AAAAA,IACbR,eAAeQ;AAAAA,IACfP,cAAcO;AAAAA,IACdN,mBAAmBM;AAAAA,IACnBL,aAAaK;AAAAA,IACbJ,cAAcI;AAAAA,IACdH,gBAAgBG;AAAAA,IAChBF,gBAAgBE;AAAAA,IAChBD,iBAAiBC;AAAAA,EAAAA;AAAAA,GClCRE,KAAkB,CAC7BC,KAA2C,QACnB;AAAA,EACxBC,YAAYD,GAAYC,cAAc;AAAA,EACtCC,QAAQF,GAAYE,UAAU;AAAA,EAC9BC,QAAQH,GAAYG,UAAU;AAAA,EAC9BC,mBAAmBJ,GAAYI,oBAC3BxoB,MAAMC,KAAKmoB,GAAYI,iBACvB,IAAA,CAAC;ICRMC,KACX1nB,CAAAA,QAC0B;AAAA,EAC1B2nB,YAAYC,GAAiB5nB,GAAK2nB,UAClCE;AAAAA,EAAAA,UAAUD,GAAiB5nB,GAAK6nB,QAAAA;AAAAA,EAChCC,YAAYF,GAAiB5nB,GAAK8nB,UAAAA;AAAAA,EAClCC,aAAaH,GAAiB5nB,GAAK+nB,WACnCC;AAAAA,EAAAA,YAAYJ,GAAiB5nB,GAAKgoB,UAClCpoB;AAAAA,EAAAA,WAAWgoB,GAAiB5nB,GAAKJ,SACjCqoB;AAAAA,EAAAA,UAAUL,GAAiB5nB,GAAKioB,QAAAA;IAG5BL,KAAoBjpB,CAAAA,OACjBA,KAAQ,CAAIA,GAAAA,EAAAA,IAAS,ICRjBupB,KACXpf,CAAAA,OAEO,CACLA,GAAMqf,OAAO,IACbrf,GAAMsf,OAAO,IACbtf,GAAM4N,OAAO,IACb5N,GAAM6N,OAAO,IACb7N,GAAMuf,OAAO,IACbvf,GAAMwf,OAAO,IACbxf,GAAMgO,OAAO,IACbhO,GAAMiO,OAAO,IACbjO,GAAMyf,OAAO,IACbzf,GAAM0f,OAAO,KAIJC,KACX9oB,CAAAA,OAEOA,GAAO+oB,MAAM1X,OAAOpS,IAAI,CAACa,IAAMX,QAAW;AAAA,EAC/CW,MAAAA;AAAAA,EACAhB,IAAIK;KC3BK6pB,KACX7f,CAAAA,QAEO,EACL8f,YAAY9f,GAAM8f,cAAc,GAChCnH,SAAS3Y,GAAM2Y,WAAW,GAC1BC,SAAS5Y,GAAM4Y,WAAW,MCLjBmH,KAAkB,CAC7BC,KAAiC,QACf;AAAA,EAClB5c,gBAAgB4c,GAAQ5c,kBAAkB;AAAA,EAC1CC,eAAe2c,GAAQ3c,iBAAiB;AAAA,EACxC0B,KAAK2V,EAAoBsF,GAAQjb,OAAO,CAAA,CACxCyZ;AAAAA,EAAAA,YAAYwB,GAAQxB,cAAc;AAAA,EAClCC,QAAQuB,GAAQvB,UAAU;AAAA,EAC1BC,QAAQsB,GAAQtB,UAAU;ACTfuB,IAAAA,KAAoB,CAC/BjgB,KAAiC,QAE1B;AAAA,EACLkgB,iBAAiBlgB,GAAMkgB,mBAAmB;AAAA,EAC1CC,eAAengB,GAAMmgB,iBAAiB;AAAA,EACtCC,eAAepgB,GAAMogB,iBAAiB;ACS7BC,IAAAA,KAAgC,EAC3C/Y,OAAO,SACPC,SAAS;AAAA,EACPmW,cAAc;AAAA,EACdD,cAAc;AAAA,EACdG,eAAe;AAAA,EACfI,cAAc;AAAA,EACdR,aAAa;AAAA,EACbG,aAAa;AAAA,EACbE,cAAc;AAAA,EACdE,aAAa;AAAA,EACbD,mBAAmB;AAAA,EACnBG,gBAAgB;AAAA,EAChBC,gBAAgB;AAAA,EAChBC,iBAAiB;AAAA,EAAA,GAIRmC,KAAmC,EAC9ChZ,OAAO,OAEPmG,QAAQ,UAERlG,SAAS;AAAA,EACPwX,UAAU;AAAA,EACVC,YAAY;AAAA,EACZE,YAAY;AAAA,EACZD,aAAa;AAAA,EACbJ,YAAY;AAAA,EACZM,UAAU;AAAA,EACVroB,WAAW;AAIFypB,EAAAA,GAAAA,KAA+B;AAAA,EAC1CjZ,OAAO;AAAA,EACPC,SAAS,EACPyG,KAAK,MACLJ,KAAK,OACLC,KAAK,OACL6R,KAAK,MACLD,KAAK,MACLxR,KAAK,KACLsR,KAAK,SACLC,KAAK,SACLH,KAAK,QACLC,KAAK,OAAA;GAIIkB,KAA8B,EACzClZ,OAAO,QACPC,SAAS;AAAA,EACPsB,MAAM;AAAA,EACNE,OAAO;AAAA,EACPgS,OAAO;AAAA,EACPoC,QAAQ;AAAA,EACRC,WAAW;AAAA,EACX7V,SAAS;AAAA,EACTyT,MAAM;AAAA,EACNyF,SAAS;AAAA,EACTpY,OAAO;AAAA,EACP6B,QAAQ;AAAA,EACRwW,SAAS;AAAA,EACTC,QAAQ;AAAA,EACRjR,OAAO;AAAA,EACP4J,QAAQ;AAAA,EACRsH,OAAO;AAAA,EACPC,KAAK;AAAA,EACLC,MAAM;AAAA,EACNjG,QAAQ;AAAA,EACRkG,OAAO;AAAA,EACPC,WAAW;AAAA,EACXC,QAAQ;AAAA,EACRjE,SAAS;AAAA,EACTkE,UAAU;AAAA,EACVC,SAAS;AAAA,EAAA,GC1FPC,KAAsC;AAAA,EAC1Cjb,MAAM;AAAA,EACNwP;EACAvP,UAAU,CAAC,QAAQ,eAAA;AAAA,EACnBC,YAAY,EACVF,MAAM,EAAEA,MAAM,SAAA,GACdkb,eAAe,EAAElb,MAAM;GCNrBmb,KAA2B;AAAA,EAC/B3L,sBAAsB;AAAA,EACtBxP,MAAM;AAAA,EACNC,UAAU,CAAC,YAAY,YAAY,UACnCC;AAAAA,EAAAA,YAAY,EACVkb,UAAU,EAAEpb,MAAM,WAAWI,SAAS,EAAA,GACtCib,UAAU,EAAErb,MAAM,WAAWI,SAAS,EACtCkb,GAAAA,UAAU,EAAEtb,MAAM,WAAWI,SAAS,EAAA,EAAA;AAAA,GCPpCmb,KAA6B;AAAA,EACjC/L,sBAAsB;AAAA,EACtBxP,MAAM;AAAA,EACNC,UAAU,CAAC,WAAW,UAAU,OAAA;AAAA,EAChCC,YAAY,EACVrO,SAAS,EAAEmO,MAAM,UAEjBwb,GAAAA,OAAO,EAAExb,MAAM,WAAWI,SAAS,KACnC6E,QAAQ,EACNjF,MAAM,SACNG,OAAO;AAAA,IAAEH,MAAM;AAAA,EAAA,EAAA,EAAA;AAAA,GCRfyb,KAAwB,EAC5Bzb,MAAM,UACNE,YAAY,EACV1P,MAAM,EAAEwP,MAAM,SAAA,GACdjB,QAAQ,EAAEiB,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA,GAChDlR,OAAO,EAAEkB,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA,GAC/CnR,KAAK;AAAA,EAAEmB,MAAM;AAAA,EAAWI,SAAS;AAAA,EAAM4P,SAAS;AAAA,EAAA,GAElD/P,UAAU,CAAC,QAAQ,UAAU,SAAS,QACtCuP,sBAAsB,MAAA,GAIlBkM,KAA2B;AAAA,EAC/BlM,sBAAAA;AAAAA,EACAxP,MAAM;AAAA,EACNC,UAAU,CACR,aACA,aACA,cACA,YACA,YACA,QAAA;AAAA,EAEFC,YAAY,EACVyb,WAAWF,IACXG,WAAWH,IACXI,YAAYJ,IACZK,UAAUL,IACVM,UAAUN,IACVnH,QAAQ;AAAA,IACNtU,MAAM;AAAA,IACNG,OAAOsb;AAAAA,IACP3L,UAAU;AAAA,IACVC,UAAU;AAAA;GCpCViM,KAAiC,EACrChc,MAAM,UACNwP,sBAAsB,OACtBvP,UAAU,CAAC,eAAe,cAC1BC,GAAAA,YAAY,EACV+b,aAAa;AAAA,EACXjc,MAAM;AAAA,EACNG,OAAO,EAAEH,MAAM,SAAA;AAAA,EACf8P,UAAU;AAAA,EACVoM,aAAa;AAAA,GAEfC,cAAc,EAAEnc,MAAM,gBCXpBoc,KAA6B,EACjC5M,6BACAxP,MAAM,UACNC,UAAU,CAAC,cAAc,UAAU,UAAU,sBAC7CC,YAAY;AAAA,EACVmY,YAAY,EAAErY,MAAM,WAAWI,SAAS,EAAA;AAAA,EACxCkY,QAAQ,EAAEtY,MAAM,WAAWI,SAAS,EAAA;AAAA,EACpCmY,QAAQ,EAAEvY,MAAM,WAAWI,SAAS,EAAA;AAAA,EACpCoY,mBAAmB,EACjBxY,MAAM,SACNG,OAAO,EAAEH,MAAM,WAAWI,SAAS,EAAA,EAAA;AAAA,EAAA,GCVnCic,KAA6B;AAAA,EACjC7M,sBAAAA;AAAAA,EAEAxP,MAAM;AAAA,EACNC,UAAU,CAAC,cAAc;EACzBC,YAAY,EACVoc,YAAY,EAAEtc,MAAM,YACpBuc,YAAY,EAAEvc,MAAM,SCPlBwc,EAAAA;AAAAA,GAAAA,KAA2B;AAAA,EAC/Bxc,MAAM;AAAA,EACNwP,sBAAsB;AAAA,EACtBvP,UAAU,CAAC,UAAU,aAAa,YAClCC;AAAAA,EAAAA,YAAY,EACVuc,QAAQ,EAAEzc,MAAM,YAChB0c,WAAW,EAAE1c,MAAM,SACnB2c,GAAAA,YAAY;AAAA,IACV3c,MAAM;AAAA,IACNG,OAAO,EAAEH,MAAM,SAAA;AAAA,IACf8P,UAAU;AAAA,IACVC,UAAU;AAAA,ECXV6M,EAAAA;AAAAA,GAAAA,KAAoB,EACxB5c,MAAM,SACNG,OAAO,EAAEH,MAAM,SAGX6c,EAAAA,GAAAA,KAA+B;AAAA,EACnCrN,sBAAAA;AAAAA,EACAxP,MAAM;AAAA,EACNC,UAAU,CACR,eACA,cACA,YACA,aACA,cACA,YACA,YAEFC;AAAAA,EAAAA,YAAY;AAAA,IACV4Y,aAAa8D;AAAAA,IACb7D,YAAY6D;AAAAA,IACZhE,UAAUgE;AAAAA,IACVjsB,WAAWisB;AAAAA,IACX/D,YAAY+D;AAAAA,IACZ5D,UAAU4D;AAAAA,IACVlE,YAAYkE;AAAAA,EAAAA;AAAAA,GCzBVtN,KAAgB,EACpBtP,MAAM,SAEF8c,GAAAA,KAAqB,EACzB9c,MAAM,UACN+c,UAAAA,QCJIzN,KAAgB,EACpBtP,MAAM,SAAA,GCAFgd,KAA6B;AAAA,EACjC/c,UAAU,CACR,SACA,gBACA,WAAA;AAAA,EAEFuP,sBAAsB;AAAA,EACtBxP,MAAM;AAAA,EACNE,YAAY,EACV+c,cAAc,EAAEjd,MAAM,SAAA,GACtBkd,WAAW,EAAEld,MAAM,YACnByZ,OCR6B;AAAA,IAC/BjK;IACAxP,MAAM;AAAA,IACNC,UAAU,CACR,YACA,YACA,SACA,QAAA;AAAA,IAEFC,YAAY,EACVid,UFViC;AAAA,MACnCnd,MAAM;AAAA,MACNwP,sBAAsB;AAAA,MACtBvP,UAAU,CACR,iBACA,eACA,iBACA,iBACA,aACA,aACA,cACA,cACA,aACA,aACA,mBACA,mBACA,mBACA,iBACA,aACA,UACA,eACA,iBACA,iBACA,aACA,aACA,cACA,WACA,WACA,YACA,iBACA,eACA,QACA,eACA,YACA,gBACA,mBACA,aACA,cACA,cACA,eACA,aACA,cACA,eACA,YACA,cACA,WACA,WACA,SAAA;AAAA,MAEFC,YAAY;AAAA,QACVkd,eAAe9N;AAAAA,QACf+F,aAAa/F;AAAAA,QACb+N,eAAe/N;AAAAA,QACfgO,eAAehO;AAAAA,QACfiO,WAAWjO;AAAAA,QACXkO,WAAWlO;AAAAA,QACXmO,YAAYnO;AAAAA,QACZoO,YAAYpO;AAAAA,QACZqO,WAAWrO;AAAAA,QACXsO,WAAWtO;AAAAA,QACXuO,iBAAiBvO;AAAAA,QACjBwO,iBAAiBxO;AAAAA,QACjByO,iBAAiBzO;AAAAA,QACjB0O,eAAe1O;AAAAA,QACf2O,WAAW3O;AAAAA,QACX4O,QAAQ5O;AAAAA,QACR2F,aAAa3F;AAAAA,QACb6O,eAAe7O;AAAAA,QACf8O,eAAe9O;AAAAA,QACf+O,WAAW/O;AAAAA,QACXgP,WAAWhP;AAAAA,QACXiP,YAAYjP;AAAAA,QACZkP,SAASlP;AAAAA,QACTmP,SAASnP;AAAAA,QACToP,UAAUpP;AAAAA,QACVqP,eAAerP;AAAAA,QACfsP,aAAatP;AAAAA,QACbuP,MAAMvP;AAAAA,QACNwP,aAAaxP;AAAAA,QACbyP,UAAUzP;AAAAA,QACV0P,cAAc1P;AAAAA,QACd2P,iBAAiB3P;AAAAA,QACjB4P,WAAW5P;AAAAA,QACX6P,YAAY7P;AAAAA,QACZ8P,YAAY9P;AAAAA,QACZ+P,aAAa/P;AAAAA,QACbgQ,WAAWhQ;AAAAA,QACXiQ,YAAYjQ;AAAAA,QACZkQ,aAAalQ;AAAAA,QACbmQ,UAAUnQ;AAAAA,QACV9F,YAAY8F;AAAAA,QACZoQ,SAASpQ;AAAAA,QACTqQ,SAASrQ;AAAAA,QACTuG,SAASvG;AAAAA,QACTsQ,SAAStQ;AAAAA,QACTuQ,YAAYvQ;AAAAA,QACZwQ,YAAYxQ;AAAAA,QACZyQ,YAAYzQ;AAAAA,QACZ0Q,UAAU1Q;AAAAA,QACV2Q,QAAQ3Q;AAAAA,QACR4Q,SAAS5Q;AAAAA,QACT6Q,YAAY7Q;AAAAA,QACZ8Q,UAAU9Q;AAAAA,ME3FV+Q;AAAAA,IAAAA,GAAAA,UHR+C;AAAA,MACjDrgB,MAAM;AAAA,MACNG,OAAO,CACLmP,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAwN,IACAxN,IACAA,IACAwN,IACAxN,IACAA,EAAAA;AAAAA,MAEFQ,UAAU;AAAA,MACVC,UAAU;AAAA,IAAA,GGtBRuQ,OCjB4C,EAC9CtgB,MAAM,SACNG,OAAO,EAAEH,MAAM,SAAA,GACf8P,UAAU,IACVC,UAAU,GAAA,GDcRhO,QElBmC;AAAA,MACrC/B,MAAM;AAAA,MACNG,OAAO,EACLH,MAAM,UACNugB,WAAW,EAAA;AAAA,MAEbzQ,UAAU;AAAA,MACVC,UAAU;AAAA,MACVmM,aAAAA;AAAAA,ICLIsE,EAAAA;AAAAA,EAAAA,EAAAA;AAAAA,GAAAA,KAAmC;AAAA,EACvChR,sBAAAA;AAAAA,EACAxP,MAAM;AAAA,EACNC,UAAU,CACR,mBACA,mBACA,cACA,eACA,aACA,UACA,gBACA,aAAA;AAAA,EAEFC,YAAY;AAAA,IACVugB,cAAc,EACZzgB,MAAM,SACNG,OAAOob,GAAAA;AAAAA,IAETmF,aAAa,EAAE1gB,MAAM,WAAWI,SAAS;IACzCpC,iBAAiB,EAAEgC,MAAM,SAAA;AAAA,IACzB/B,iBAAiB,EAAE+B,MAAM,SACzB2gB;AAAAA,IAAAA,WAAW,EAAE3gB,MAAM,WAAWI,SAAS;IACvCmC,YAAY,EAAEvC,MAAM,WAAWI,SAAS,EAAA;AAAA,IACxCoC,aAAa,EAAExC,MAAM,SAAA;AAAA,IACrB4gB,QC1BkE,EACpEpR,sBAAAA,OACAxP,MAAM,UACNC,UAAU,CAAC,iBAAiB,iBAAiB,iBAAA,GAC7CC,YAAY,EACV8Z,eAAe;AAAA,MAAEha,MAAM;AAAA,MAAWI,SAAS;AAAA,MAAG4P,SAAS;AAAA,IACvDiK,GAAAA,eAAe,EAAEja,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA,GACvD+J,iBAAiB,EAAE/Z,MAAM,WAAWI,SAAS,GAAG4P,SAAS;;GCPvD6Q,KAAwB;AAAA,EAC5BrR,sBAAsB;AAAA,EACtBxP,MAAM;AAAA,EACNC,UAAU,CACR,kBACA,iBACA,OACA,cACA,UACA;EAEFC,YAAY;AAAA,IACVjD,gBAAgB,EAAE+C,MAAM,WAAWI,SAAS,GAAG4P,SAAS,EACxD9S;AAAAA,IAAAA,eAAe;AAAA,MAAE8C,MAAM;AAAA,MAAUugB,WAAW;AAAA,IAAA;AAAA,IAC5C3hB,KAAK,EACHoB,MAAM,UACNwP,6BACAvP,UAAU,CAAC,QAAQ,UAAU,SAAS,QACtCC,YAAY;AAAA,MACV1P,MAAM,EAAEwP,MAAM,SAAA;AAAA,MACdjB,QAAQ,EAAEiB,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA;AAAA,MAChDlR,OAAO,EAAEkB,MAAM,WAAWI,SAAS,IAAI4P,SAAS,IAAA;AAAA,MAChDnR,KAAK,EAAEmB,MAAM,WAAWI,SAAS,MAAM4P,SAAS,IAAA;AAAA,IAAA,EAAA;AAAA,IAGpDqI,YAAY,EAAErY,MAAM,WAAWI,SAAS,EAAA;AAAA,IACxCkY,QAAQ,EAAEtY,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA;AAAA,IAChDuI,QAAQ,EAAEvY,MAAM,WAAWI,SAAS,GAAG4P,SAAS,IAAA;AAAA,EAAA;AAAA,GCvB9C8Q,KAA+B,EACnCtR,sBAAsB,OACtBvP,UAAU,CAAC,WAAW,QAAQ,QAAQ,YAAY,kBAClDD,MAAM,UACNE,YAAY;AAAA,EACV6gB,SAASF;AAAAA,EACTG,MAAMH;AAAAA,EACNI,MAAMJ;AAAAA,EACNpN,UCZ2B;AAAA,IAC7BzT,MAAM;AAAA,IACNE,YAAY;AAAA,MACVwT,QAAQ,EAAE1T,MAAM;MAChB2T,aAAa,EAAE3T,MAAM,UAAA;AAAA,MACrB4T,cAAc,EAAE5T,MAAM,UAAA;AAAA,MACtB6T,aAAa,EAAE7T,MAAM,UAAA;AAAA,MACrB8T,cAAc;AAAA,QAAE9T,MAAM;AAAA;MACtB+T,eAAe,EAAE/T,MAAM,UACvBgU;AAAAA,MAAAA,aAAa,EAAEhU,MAAM,SAAA;AAAA,MAErBiU,oBAAoB,EAAEjU,MAAM;MAC5BkU,kBAAkB,EAAElU,MAAM,SAC1BmU;AAAAA,MAAAA,eAAe,EAAEnU,MAAM,SAAA;AAAA,MACvBoU,UAAU,EAAEpU,MAAM,UAAA;AAAA,IAAA;AAAA,IAEpBC,UAAU,CACR,UACA,eACA,gBACA,eACA,gBACA,iBACA,eACA,sBACA,oBACA,iBACA,UAAA;AAAA,IAEFuP,sBAAsB;AAAA,EAAA;AAAA,EDhBpB0R,eAAe,EACblhB,MAAM,SACNG,OAAO8a,GAAAA;AAAAA,EAAAA,GE8BPkG,KAAUlwB,CAAAA,OAEPA,GAAKkwB,OACV,CAACC,IAAK1e,QAAU,EACdzC,UAAU,CAAImhB,GAAAA,GAAInhB,UAAayC,GAAAA,GAAKzC,QACpCC,GAAAA,YAAY,EAAKkhB,GAAAA,GAAIlhB,YAAewC,GAAAA,GAAKxC,WAE3C,EAAA,IAAA;AAAA,EAAED,UAAU,CAAIC;AAAAA,EAAAA,YAAY,CAAG;AAAA,CAAA,GC9C7BQ,KAAM,IAAIC,EAAI,EAAEC,QAAQ,KAAA,CAAA,GAExBygB,MD0BJpwB,CAAAA,OAEM;AAAA,QAAAqwB,KAAcH,GAAOlwB,EACpB;AAAA,SAAA;AAAA,IACLue,sBAAAA;AAAAA,IACAxP,MAAM;AAAA,IACNC,UAAUjQ,MAAMC,KAAK,IAAIsxB,IAAID,GAAYrhB,QAAAA,CAAAA;AAAAA,IACzCC,YAAYohB,GAAYphB;AAAAA,EAAAA;AAAAA,GAvBS,CACnC4gB,IACApF,IACAM,IACA7E,IACAe,IACAkE,IACAjB,IACAqB,IACAK,IACAG,IACAX,IACAmE,EAAAA,CAAAA,GCrBIgB,KAAiB9gB,GAAII,QAAQugB,EAAAA,GAEtBI,KAAgB1wB,CAAAA,OACpBywB,GAAezwB,EAAAA,GAGlB2wB,KAAchhB,GAAII,QAAQya,EAAAA;AAMX7a,GAAII,QAAQma,EAAAA;AAKjC,MAAM0G,KAAYjhB,GAAII,QAAQqa,EAAAA,GC3BjByG,KACXnI,CAAAA,OAEO,CACLA,GAAM+B,SAAS,SACf/B,GAAMoI,UAAU,SAChBpI,GAAMqI,MAAM,MACZrI,GAAMsI,OAAO,MACbtI,GAAMuI,MAAM,MACZvI,GAAMwI,OAAO,MACbxI,GAAMyI,MAAM,MACZzI,GAAM0I,OAAO,MACb1I,GAAM2I,cAAc,OACpB3I,GAAMlT,OAAO,KCNJ8b,GAAAA,KAAiC,CAC5CxoB,IACAyoB,OAEO,CACLzoB,GAAM4gB,SAAS,SACf5gB,GAAMsZ,UAAU,UAChBtZ,GAAM2gB,UAAU,UAChB3gB,GAAM0P,SAAS,SACf1P,GAAM6I,QAAQ,QACd7I,GAAM+I,SAAS,SACf/I,GAAM+a,SAAS,SACf/a,GAAMmd,UAAU,UAChBnd,GAAMod,aAAa,aACnBpd,GAAMgb,QAAQ,QACdhb,GAAMygB,WAAW,YACjBzgB,GAAMuH,WAAW,WACjBvH,GAAMkK,UAAU,UAChBlK,GAAMqI,SAAS,SACfrI,GAAMgd,WAAW,YACjBhd,GAAMihB,UAAU,UAChBjhB,GAAMkhB,YAAY,YAClBlhB,GAAM+gB,SAAS,SACf/gB,GAAM0gB,WAAW,YACjB1gB,GAAMghB,aAAa,YACnByH,IACAzoB,GAAMmhB,WAAW,YACjBnhB,GAAM6a,UAAU,UAChB4N,IACAzoB,GAAM6gB,OAAO,OACb7gB,GAAM8gB,QAAQ,MAAA,GCrCZ4H,KAAW,CAACC,IAAcC,OACR,YAARD,OAAAA,KAAmBA,KAAMC,IC2B5BC,KACXC,CAAAA,OAAAA;;AAEM,QAAAC,KAAOC,GAAUF,GAAUC,IAAAA;AAE1B,SAAA;AAAA,IAAA,GACDxL,GAAmBuL,GAAUvhB,OAIjC6b;AAAAA,IAAAA,gBAAc0F,MAAAA,GAAUG,UAAVH,gBAAAA,IAAiB1F,iBAAgB;AAAA,IAC/CC,aAAWyF,KAAAA,GAAUG,UAAVH,mBAAiBzF,cAAa;AAAA,IACzC5I,QAAQD,GAAgBsO,GAAUrO,MAClCsM;AAAAA,IAAAA,QAAQ9G,GAAkB6I,GAAUI,OAIpCtP;AAAAA,IAAAA,UAAUD,GAAmBmP,GAAUlP,QAAAA;AAAAA,IACvC6I,cAAYqG,KAAAA,GAAUK,WAAVL,mBAAkBrG,eAAc;AAAA,IAC5CC,cAAYoG,KAAAA,GAAUK,WAAVL,mBAAkBpG,eAAc;AAAA,IACxC9D,GAAAA,GAAckK,GAAUM,aAAa,EAIzChH;AAAAA,IAAAA,aAAaiH,GAAiB,CAAA,CAAA;AAAA,IAC9BnC,SAASnH,IAAgB+I,MAAAA,GAAUQ,aAAVR,gBAAAA,IAAoB5B,OAC7CC;AAAAA,IAAAA,MAAMpH,IAAgB+I,KAAAA,GAAUQ,aAAVR,mBAAoB3B,IAAAA;AAAAA,IAC1CC,MAAMrH,IAAgB+I,KAAAA,GAAUQ,aAAVR,mBAAoB1B,IAC1ClF;AAAAA,IAAAA,UAAUxH,GAAoBoO,KAAAA,GAAUS,OAAVT,mBAAc5G,QAAAA;AAAAA,IAC5CF,YAAYtH,GAAoBoO,MAAAA,GAAUS,OAAVT,gBAAAA,IAAc9G;IAC9CC,UAAUvH,GAAoBoO,KAAAA,GAAU/jB,QAAV+jB,mBAAe7G,QAE7CV;AAAAA,IAAAA,UAAUwH,GAAKxH;AAAAA,IACfC,UAAUuH,GAAKvH;AAAAA,IACfC,UAAUsH,GAAKtH;AAAAA,IACfoB,WAAW;AAAA,IACXwE,eAAe,CAAA;AAAA,IACfljB,mBAAiB2kB,KAAAA,GAAUU,eAAVV,mBAAsB3kB,oBAAmB;AAAA,IAC1DC,mBAAiB0kB,KAAAA,GAAUU,eAAVV,mBAAsB1kB,oBAAmB;AAAA,IAC1DyiB,eAAaiC,KAAAA,GAAUU,eAAVV,mBAAsBjC,gBAAe;AAAA,IAClDD,cAAc6C,IACZX,MAAAA,GAAUU,eAAVV,gBAAAA,IAAsBlC,cACtB8C,EAEF5H;AAAAA,IAAAA,WAAWpH,GAAoBoO,MAAAA,GAAU/jB,QAAV+jB,gBAAAA,IAAehH,SAC9CC;AAAAA,IAAAA,WAAWrH,GAAoBoO,KAAAA,GAAUS,OAAVT,mBAAc/G;IAC7C+E,aAAWgC,KAAAA,GAAUa,oBAAVb,mBAA2BhC,cAAa;AAAA,IACnDne,eAAamgB,MAAAA,GAAUa,oBAAVb,gBAAAA,IAA2BngB,gBAAe;AAAA,IACvDia,QAAQ;AAAA,IACRpE,cAAYsK,MAAAA,GAAUc,aAAVd,gBAAAA,IAAoBtK,eAAc;AAAA,IAC9CC,UAAQqK,MAAAA,GAAUc,aAAVd,gBAAAA,IAAoBrK,WAAU;AAAA,IACtCC,UAAQoK,KAAAA,GAAUc,aAAVd,mBAAoBpK,WAAU;AAAA,IACtCoE,YAAY,CAAC,GAAG,GAAG,GAAG,CAAA;AAAA,IACtBlD,OAAOiK,GAAUf,GAAUlJ,SAAS,CAAA;IACpCjD,gBAAgBI,GACd+L,GAAUnM,cAAAA;AAAAA,IAEZgC,mBAAmB0K,IAAiBP,KAAAA,GAAUc,aAAVd,mBAAoBnK,iBAAAA;AAAAA,IACxD2D,cAAc;AAAA,IACd5Z,YAAY;AAAA,IACZ0T,cAAcc,GACZ4L,GAAUgB,YAAAA;AAAAA,EAAAA;AAAAA,GAOVD,KAAajK,CAAAA,OAAAA;AACV,SAAA,EACL6G,OAAOsB,GAAenI,GAAM6G,SAAS,CAAA,CAAA,GACrCD,WFjGFxmB,KEiG6B4f,GAAM4G,YAAY,CAAA,GF/FxCgC,GAA+BxoB,IAAO,EAAA,IEgG3CkI,QAAQkX,GAAoBQ,GAAM1X,UAAU,CAAA,CAAA,GAC5Cob,WDhGFqF,KCgG8B/I,GAAM0D,YAAY,CAAE,GD9F3C;AAAA,IACLC,eAAemF,GAASC,GAAIpF,eAAe,gBAAA;AAAA,IAC3C/H,aAAakN,GAASC,GAAInN,aAAa,oBAAA;AAAA,IACvCiI,eAAeiF,GAASC,GAAIlF,eAAe,qBAC3CC;AAAAA,IAAAA,WAAWgF,GAASC,GAAIjF,WAAW,eAAA;AAAA,IACnCC,WAAW+E,GAASC,GAAIhF,WAAW,aAAA;AAAA,IACnCC,YAAY8E,GAASC,GAAI/E,YAAY,mBACrCJ;AAAAA,IAAAA,eAAekF,GAASC,GAAInF,eAAe,qBAAA;AAAA,IAC3CyC,YAAYyC,GAASC,GAAI1C,YAAY,iBACrCpC;AAAAA,IAAAA,YAAY6E,GAASC,GAAI9E,YAAY,cACrCC;AAAAA,IAAAA,WAAW4E,GAASC,GAAI7E,WAAW;IACnCC,WAAW2E,GAASC,GAAI5E,WAAW,YAAA;AAAA,IACnCC,iBAAiB0E,GAASC,GAAI3E,iBAAiB;IAC/CC,iBAAiByE,GAASC,GAAI1E,iBAAiB,2BAAA;AAAA,IAC/CC,iBAAiBwE,GAASC,GAAIzE,iBAAiB,2BAAA;AAAA,IAC/CC,eAAeuE,GAASC,GAAIxE,eAAe,eAC3CC;AAAAA,IAAAA,WAAWsE,GAASC,GAAIvE,WAAW,sBAAA;AAAA,IACnCC,QAAQqE,GAASC,GAAItE,QAAQ,SAC7BjJ;AAAAA,IAAAA,aAAasN,GAASC,GAAIvN,aAAa,oBACvCsJ;AAAAA,IAAAA,YAAYgE,GAASC,GAAIjE,YAAY;IACrCF,WAAWkE,GAASC,GAAInE,WAAW,eAAA;AAAA,IACnCC,WAAWiE,GAASC,GAAIlE,WAAW,aAAA;AAAA,IACnCH,eAAeoE,GAASC,GAAIrE,eAAe,qBAC3C4B;AAAAA,IAAAA,YAAYwC,GAASC,GAAIzC,YAAY,iBAAA;AAAA,IACrC3B,eAAemE,GAASC,GAAIpE,eAAe,qBAAA;AAAA,IAC3CI,SAAS+D,GAASC,GAAIhE,SAAS,uBAC/BwB;AAAAA,IAAAA,UAAUuC,GAASC,GAAIxC,UAAU,UAAA;AAAA,IACjCrB,eAAe4D,GAASC,GAAI7D,eAAe,gBAAA;AAAA,IAC3CC,aAAa2D,GAASC,GAAI5D,aAAa,uBACvCqB;AAAAA,IAAAA,QAAQsC,GAASC,GAAIvC,QAAQ,cAAA;AAAA,IAC7BxB,SAAS8D,GAASC,GAAI/D,SAAS,uBAC/BC;AAAAA,IAAAA,UAAU6D,GAASC,GAAI9D,UAAU,eACjCG;AAAAA,IAAAA,MAAM0D,GAASC,GAAI3D,MAAM;IACzBe,SAAS2C,GAASC,GAAI5C,SAAS,qBAAA;AAAA,IAC/BC,YAAY0C,GAASC,GAAI3C,YAAY,sBAAA;AAAA,IACrCX,WAAWqD,GAASC,GAAItD,WAAW,kBACnCC;AAAAA,IAAAA,YAAYoD,GAASC,GAAIrD,YAAY,mBAAA;AAAA,IACrCC,YAAYmD,GAASC,GAAIpD,YAAY,iBACrCC;AAAAA,IAAAA,aAAakD,GAASC,GAAInD,aAAa,gBACvCa;AAAAA,IAAAA,SAASqC,GAASC,GAAItC,SAAS;IAC/BZ,WAAWiD,GAASC,GAAIlD,WAAW,OAAA;AAAA,IACnCR,aAAayD,GAASC,GAAI1D,aAAa,UACvCC;AAAAA,IAAAA,UAAUwD,GAASC,GAAIzD,UAAU,WACjCoB;AAAAA,IAAAA,YAAYoC,GAASC,GAAIrC,YAAY;IACrCZ,YAAYgD,GAASC,GAAIjD,YAAY,oBAAA;AAAA,IACrCC,aAAa+C,GAASC,GAAIhD,aAAa,UAAA;AAAA,IACvCC,UAAU8C,GAASC,GAAI/C,UAAU,WACjCT;AAAAA,IAAAA,cAAcuD,GAASC,GAAIxD,cAAc,sBAAA;AAAA,IACzCC,iBAAiBsD,GAASC,GAAIvD,iBAAiB,yBAAA;AAAA,IAC/CzV,YAAY+Y,GAASC,GAAIhZ,YAAY,kBACrC4W;AAAAA,IAAAA,UAAUmC,GAASC,GAAIpC,UAAU,yBAAA;AAAA,IACjCV,SAAS6C,GAASC,GAAI9C,SAAS,UAAA;AAAA,IAC/B7J,SAAS0M,GAASC,GAAI3M,SAAS,aAAA;AAAA,IAC/B8J,SAAS4C,GAASC,GAAI7C,SAAS;;AAxDF,MAC/B6C,IDHA3oB;AE0GIqpB,GAAAA,KAAoBxzB,CAAAA,OACjBA,KAAQ,CAAIA,GAAAA,EAAAA,IAAS,IAGxBmzB,KAAa9xB,CAAAA,QJpFSA,CAAAA,OACnB4wB,GAAU5wB,EIoFV6yB,GAAY7yB,EACf,IAAA;AAAA,EACEqqB,UAAUrqB,GAAKqqB;AAAAA,EACfC,UAAUtqB,GAAKsqB;AAAAA,EACfC,UAAUvqB,GAAKuqB;AAAAA,IAEjB,EACEF,UAAU,IACVC,UAAU,KACVC,UAAU,GAIZgI,GAAAA,KAAmB,CACvB5zB,IACA8gB,OAEO9gB,KAAQA,GAAMC,IAAI6gB,EAAM,IAAA,CAAA,GAG3B+S,KAAoBxyB,CAAAA,QJnHIA,CAAAA,OACrB2wB,GAAY3wB,EAAAA,GImHEA,EACjB,IAAA,EACEc,SAASd,GAAKc,SACdoT,QAAQie,GAAiBnyB,GAAKkU,MAC9BuW,GAAAA,OAAOzqB,GAAKyqB,MAEd,IAAA;AAAA,EACE3pB,SAAS;AAAA,EACToT,QAAQ,CAAA;AAAA,EACRuW,OAAO;AAAA,GCvIFqI,KAA6B,CACxChqB,IACAC,KAAiB,OACY,EAC7BF,MvFiFyB,KuFhFzBG,YAAY,CAACF,GAAMhI,SAASgI,GAAMrJ,IAAAA,GAClCsJ,QAGWgqB,GAAAA,IAAAA,KAAiC,CAC5CjqB,IACAC,KAAiB,OACgB,EACjCF,MvF4E6B,KuF3E7BG,YAAY,CAACF,GAAMhI,SAASgI,GAAM4H,QAClC3H,GAAAA,QAAAA,GAAAA,IAGWiqB,KAAgC,CAC3ClqB,IACAC,KAAiB,OACe;AAAA,EAChCF,MvFoE4B;AAAA,EuFnE5BG,YAAY,CAACF,GAAMhI,SAASgI,GAAM6H,OAClC5H;AAAAA,EAAAA,QAAAA;AAAAA,ICbWkqB,KAAmB,CAC9BpqB,IACAqqB,OAEOC,GAAoBtqB,IAAM2a,EAAoB,EAAE/jB,MAAMyzB,GAAAA,CAAAA,CAAAA,GAGlDC,KAAsB,CACjCtqB,IACAuqB,IACArqB,KAAiB,OAEV;AAAA,EACLF,MAAAA;AAAAA,EACAG,YAAY,CAACwa,EAAoB4P,EACjCrqB,CAAAA;AAAAA,EAAAA,QAAAA;AAISsqB,IAAAA,KAAqB,CAChCD,IACArqB,KAAiB,MACGoqB,GxFuBE,KwFvB4BC,IAAOrqB,EAAAA,GAE9CuqB,KAAqB,CAChCF,IACArqB,KAAiB,MACGoqB,GxFuBE,KwFvB4BC,IAAOrqB,EAAAA,GAE9CwqB,KAAoB,CAC/BH,IACArqB,KAAiB,MACEoqB,GxFoBE,KwFpB2BC,IAAOrqB,EAAAA,GAE5CyqB,KAAoB,CAC/BJ,IACArqB,KAAiB,MACEoqB,GxFgBE,KwFhB2BC,IAAOrqB,EAAAA,GAE5C0qB,KAA6B,CACxCL,IACArqB,KAAiB,MAEjBoqB,GxFnC+B,KwFmCQC,IAAOrqB,EAEnC2qB,GAAAA,KAA6B,CACxCN,IACArqB,KAAiB,MAEjBoqB,GxFxC+B,KwFwCQC,IAAOrqB,EAEnC4qB,GAAAA,KAA4B,CACvCP,IACArqB,KAAiB,MAEjBoqB,GxFvC8B,KwFuCQC,IAAOrqB,ECxElC6qB,GAAAA,KAAyB,CACpC9qB,IACAC,KAAiB,OACQ;AAAA,EACzBF,MzFS0B;AAAA,EyFR1BE;EACAC,YAAY6qB,GAAmB/qB,MAAS,CAAE,CAAA;AAAA,IAG/BgrB,KACXn1B,CAAAA,QAC6B,EAC7Bo1B,SAASp1B,GAAM,CAAA,EAAA,IAGJk1B,KACXG,CAAAA,OAC2B,CAACA,GAAOD,WAAW,CAAA,GCdnCE,KACXnrB,CAAAA,QAEO,EACLorB,KAAKprB,GAAM,CACXqrB,GAAAA,KAAKrrB,GAAM,CACXqW,GAAAA,OAAOrW,GAAM,CAIJsrB,EAAAA,IAAAA,KACXJ,CAAAA,OAEO,CAACA,GAAOE,KAAKF,GAAOG,KAAKH,GAAO7U,KAG5BkV,GAAAA,KAA6B,CACxCvrB,IACAC,KAAS,OACoB;AAAA,EAC7BF,M1FP8B;AAAA,E0FQ9BE,QAAAA;AAAAA,EACAC,YAAYorB,GAAuBtrB,ECrBxBwrB;AAAAA,IAAAA,KAAoBC,CAAAA,OACxB,CAACA,EAAAA,GAGGC,KACXC,CAAAA,QACyB,EACzBF,SAASE,GAAW,CAGTC,EAAAA,IAAAA,KAA2B,CACtCH,IACAxrB,KAAiB,OACU,EAC3BF,M3Fb0B,K2Fc1BE,QAAAA,IACAC,YAAYsrB,GAAiBC,QAGlBI,KAAyB,CACpCJ,IACAxrB,KAAiB,OACQ;AAAA,EACzBF,M3FrB0B;AAAA,E2FsB1BE,QAAAA;AAAAA,EACAC,YAAYsrB,GAAiBC,EAAAA;IAGlBK,KAA0B,CACrCC,IACA9rB,KAAiB,MAEV8rB,GAASj2B,IAAI,CAAC21B,IAASz1B,OAClB,MAAVA,KACI41B,GAAyBH,IAASxrB,MAClC4rB,GAAuBJ,IAASxrB,MCpC3B+rB,KACXhsB,CAAAA,OAC2B,CAACA,GAAMvH,cAAc,GAAGuH,GAAMisB,UAAU,CAAA,GAExDC,KACXr2B,CAAAA,QAC6B,EAC7B4C,YAAY5C,GAAM,CAAA,GAClBo2B,QAAQp2B,GAAM,CAGHs2B,EAAAA,IAAAA,KAAyB,CACpCnsB,IACAC,KAAiB,OACQ;AAAA,EACzBF,M5FjB0B;AAAA,E4FkB1BE,QACAC;AAAAA,EAAAA,YAAY8rB,GAAmBhsB,MAAS,CAAE,CAAA;ACZ/BosB,IAAAA,KAA4B,CACvCpsB,IACAC,KAAiB,OACW,EAC5BF,MAAM,KACNE,QACAC,IAAAA,YAAY,EAACF,MAAAA,gBAAAA,GAAOhK,UAAS,IAAGgK,MAAAA,gBAAAA,GAAOrJ,SAAQ,EAGpC01B,EAAAA,IAAAA,KACXx2B,CAAAA,QACgC,EAChCG,OAAOH,GAAM,CAAA,GACbc,MAAMd,GAAM,CAAA,EAAA,IAGDy2B,KACXpB,CAAAA,OAC8B,CAACA,GAAOl1B,SAAS,GAAGk1B,GAAOv0B,QAAQ,EAAA,GAEtD41B,KACX12B,CAAAA,QAC6B;AAAA,EAC7B22B,SAAS32B,GAAM,CAAA;AAAA,EACf42B,YAAY52B,GAAM,CAAA;AAAA,EAClB62B,aAAa72B,GAAM,CAAA;AAAA,EACnB82B,cAAc92B,GAAM;EACpBiqB,YAAYjqB,GAAM,CAGP+2B;AAAAA,IAAAA,KACX1B,CAAAA,OAC2B,CAC3BA,GAAOsB,WAAW,IAClBtB,GAAOuB,cAAc,GACrBvB,GAAOwB,eAAe,GACtBxB,GAAOyB,gBAAgB,GACvBzB,GAAOpL,cAAc,CAGV+M,GAAAA,KAAyB,CACpC7sB,IACAC,KAAiB,OACQ;AAAA,EACzBF,MAAM;AAAA,EACNE,QAAAA;AAAAA,EACAC,YAAY,EACVF,MAAAA,gBAAAA,GAAOwsB,YAAW,CAAA,IAClBxsB,MAAAA,gBAAAA,GAAOysB,eAAc,IACrBzsB,MAAAA,gBAAAA,GAAO0sB,gBAAe,IACtB1sB,MAAAA,gBAAAA,GAAO2sB,iBAAgB,IACvB3sB,MAAAA,gBAAAA,GAAO8f,eAAc,CAAA;AAAA,IAIZgN,KACXC,CAAAA,QAEO;AAAA,EACLhtB,MAAMgtB,GAAQhtB;AAAAA,EACdE,QAAQ8sB,GAAQ9sB;AAAAA,EAChBC,YAAY,CACV,CAAI6sB,GAAAA,GAAQ7sB,WAAW,CAAA,CAAA,GACvB6sB,GAAQ7sB,WAAW,CAAA,GACnB6sB,GAAQ7sB,WAAW,CACnB6sB,GAAAA,GAAQ7sB,WAAW,CACnB6sB,GAAAA,GAAQ7sB,WAAW,CAAA,CAAA;AAAA,ICtEZ8sB,KAAyB,CACpChtB,IACAC,KAAiB,OACc;AAAA,EAC/BF,M9FX0B;AAAA,E8FY1BE,QAAAA;AAAAA,EACAC,YAAY,EACVF,MAAAA,gBAAAA,GAAOitB,aAAY,KACnBjtB,MAAAA,gBAAAA,GAAOkL,cAAa,IACpBlL,MAAAA,gBAAAA,GAAO8f,eAAc,IACrB9f,MAAAA,gBAAAA,GAAO2sB,iBAAgB,IACvB3sB,MAAAA,gBAAAA,GAAOktB,gBAAe,EAAA;AAAA,IAIbC,KACXt3B,CAAAA,QAEO;AAAA,EACLo3B,UAAUp3B,GAAM,CAAA;AAAA,EAChBqV,WAAWrV,GAAM,CACjBiqB;AAAAA,EAAAA,YAAYjqB,GAAM,CAAA;AAAA,EAClB82B,cAAc92B,GAAM,CAAA;AAAA,EACpBq3B,aAAar3B,GAAM,CAAA;AAAA,IAIVu3B,KACXlC,CAAAA,OAEO,CACLA,GAAO+B,UACP/B,GAAOhgB,WACPggB,GAAOpL,YACPoL,GAAOyB,cACPzB,GAAOgC,cAIEG,KAA6B,CACxCt3B,IACAkK,KAAiB,OACY,EAC7BF,M9FjD+B,K8FkD/BE,YACAC,YAAY,CAACnK,EClDFu3B,EAAAA,IAAAA,KAA0B,CACrCC,IACAttB,KAAiB,OAEV;AAAA,EACLF,M/F+GuB;AAAA,E+F9GvBE,QAAAA;AAAAA,EACAC,YAAY,CAACqtB,EAIJC;AAAAA,IAAAA,KAAwB,CACnCD,IACAttB,KAAiB,OAEV,EACLF,M/FqG4B,K+FpG5BE,QACAC,IAAAA,YAAY,CAACqtB,EAGJE,EAAAA,IAAAA,KAAyB,CACpCC,IACAztB,KAAiB,MAEVytB,GAAM53B,IAAI,CAAC63B,IAAM33B,OACZ,MAAVA,KACIs3B,GAAwBK,IAAM1tB,EAC9ButB,IAAAA,GAAsBG,IAAM1tB,EAAAA,CAAAA,GC/BvB2tB,KAAmB,GACnBC,KAAmB,GACnBC,KAAiB,GACjBC,KAAmB,GACnBC,KAAiB,GCJjBC,KAAoB;AAAA,EAC/BC,IAAI;AAAA,EACJC,IAAI;AAAA,EACJC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,KAAK;AAAA,EACLC,IAAI;ACDOC,GAAAA,KAAyB,CACpCC,IACAzY,IACA0Y,KAAoB,MACQ,CAC5BD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IFjB8B,GEmB9B1Y,GAAMA,KAAAA,GAGK6Y,KAAyB,CACpCJ,IACAzY,IACA0Y,KAAoB,MACM,CAC1BD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IF5B8B,GE8B9B1Y,GAAM5d,UAAAA,GAEK02B,KAAuB,CAClCL,IACAzY,IACA0Y,KAAoB,MACI,CACxBD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IFtC4B,GEwC5B1Y,GAAM+U,KACN/U,GAAMgV,GAAAA,GAGK+D,KAAuB,CAClCN,IACAzY,IACA0Y,KAAoB,MACI,CACxBD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IFjD4B,GEmD5B1Y,GAAMtW,IAAAA,GAEKsvB,KAAyB,CACpCP,IACAzY,IACA0Y,KAAoB,MACM,CAC1BD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IF7D8B,GE+D9B1Y,GAAMlQ,MACNkQ,GAAMvd,MAAAA,GAGKw2B,KAA4B,CACvCR,IACAzY,IACA0Y,KAAoB,MACS,CAC7BD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IF1E8B,GE4E9B,GACA1Y,GAAMrgB,OACNqgB,GAAMrW,KAGKuvB,GAAAA,KAA4B,CACvCT,IACAzY,IACA0Y,KAAoB,MACS,CAC7BD,GAAOE,SACPF,GAAOG,SAASH,GAAOE,SACvBD,IFxF8B,GE0F9B,GACA1Y,GAAMrgB,OACNi4B,GAAkB5X,GAAMrW,KCxFbwvB,CAAAA,GAAAA,KAAgB,CAC3BhnB,IACAxI,OAAAA;AAEQ,UAAAA,GAAM,CACZ,GAAA;AAAA,IAAA,KAAK;AACH,aAAOwI,GAAMyf;AAAAA,IACf,KAAK;AACH,aAAOzf,GAAM2f;AAAAA,IACf,KAAK;AACH,aAAO3f,GAAM6f;AAAAA,EAEjB;AAAA,SAAIroB,GAAM,CAAM,KAAA,KAAKA,GAAM,CAAA,KAAM,IACxBwI,GAAMxI,MAAMA,GAAM,CAAK,IAAA,CAAA,IAEzB;GAGIyvB,KAAgB,CAC3B/4B,IACAsJ,OAEQ;AAAA,UAAAA,GAAM,CACZ,GAAA;AAAA,IAAA,KAAK;AACH,aAAOtJ,GAAMirB;AAAAA,IACf,KAAK;AACH,aAAOjrB,GAAMg5B,WACf;AAAA,IAAA,KAAK;AACH,aAAOh5B,GAAMuxB;AAAAA,IACf,KAAK;AACH,aAAOvxB,GAAMyxB;AAAAA,IACf,KAAK;AACH,aAAOzxB,GAAM2xB;AAAAA,EAAAA;AAEjB,SAAIroB,GAAM,CAAA,KAAM,KAAKA,GAAM,MAAM,KACxBtJ,GAAMsJ,MAAMA,GAAM,CAAA,IAAK,KAEzB;ACvCI2vB,GAAAA,KAGX3vB,CAAAA,OAEO,CAAIA,GAAAA,EAAAA,GAGA4vB,KAGX7C,CAAAA,QAEO;AAAA,EACLhtB,MAAMgtB,GAAQhtB;AAAAA,EACdE,QAAQ8sB,GAAQ9sB;AAAAA,EAChBC,YAAYyvB,GAAuB5C,GAAQ7sB,UAAAA;AAAAA,IAIzC2vB,KAAexZ,CAAAA,OACF,YAAVA,OAAAA,MACU,YAAVA,OAAAA,MACU,aAAVA,OAAAA,IAEIyZ,KACXzZ,CAAAA,OAEOA,GAAMnW,WAAW6vB,MAAMF,EAAAA,GCR1BhpB,KAAM,IAAIC,EAAI,EAAEC,QAAQ,KAAA,CAAA,GAMxBipB,KAAkBnpB,GAAII,QC5Ba;AAAA,EACvCd,MAAM;AAAA,EACNC,UAAU,CAAC,QAAQ,cAAc,QAAA;AAAA,EAEjCC,YAAY,EACVtG,MAAM,EACJoG,MAAM,WACNQ,MAAM,CAAC,KAAK,KAAK,GAEnB1G,EAAAA,GAAAA,QAAQ,EAAEkG,MAAM,UAChBjG,GAAAA,YAAY,EACViG,MAAM,SACN8P,UAAU,GACVC,UAAU,GACV5P,OAAO,CACL;AAAA,IAAEH,MAAM;AAAA,IAAWI,SAAS;AAAA,EAC5B,GAAA,EAAEJ,MAAM,SAAA,CAAA,EAAA,EAAA;AAAA,EAIdwP,sBAAsB;AAAA,CAAA,GDSXsa,KACX/4B,CAAAA,OAEO84B,GAAgB94B,EAAAA,GAGnBg5B,KAAiBrpB,GAAII,QEnCa,EACtCd,MAAM,UACNE,YAAY,EACVtG,MAAM,EAAEoG,MAAM,UAAUgqB,OAAO,IAAA,GAC/BlwB,QAAQ;AAAA,EAAEkG,MAAM;AAAA,EAAWI,SAAS;AACpCrG,GAAAA,YAAY,EACViG,MAAM,SACN8P,UAAU,GACVC,UAAU,GACV5P,OAAO,CACL,EAAEH,MAAM,SAAA,GACR,EAAEA,MAAM,UAIdC,CAAAA,EAAAA,EAAAA,GAAAA,UAAU,CAAC,QAAQ,UAAU,YAAA,EAAA,CAAA,GFqBlBgqB,KACXl5B,CAAAA,OAEOg5B,GAAeh5B,EAAAA,GAGlBm5B,KAAaxpB,GAAII,QG3CY;AAAA,EACjCd,MAAM;AAAA,EACNC,UAAU,CAAC,QAAQ,cAAc;EACjCC,YAAY,EACVpG,QAAQ,EAAEkG,MAAM,WAAWI,SAAS,EACpCrG,GAAAA,YAAY,EAAEiG,MAAM,SAAS8P,UAAU,GAAGC,UAAU,EAAA,GACpDnW,MAAM;AAAA,IACJoG,MAAM;AAAA,IACNQ,MAAM,CACJ,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KACpE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;;EAI9CgP,sBAAsB;AAAA,CAAA,GH8BX2a,KACXp5B,CAAAA,OAEOm5B,GAAWn5B,EAGdq5B,GAAAA,KAAW1pB,GAAII,QIhDY;AAAA,EAC/Bd,MAAM;AAAA,EACNC,UAAU,CAAC,QAAQ,cAAc,QAAA;AAAA,EAEjCC,YAAY,EACVtG,MAAM,EACJoG,MAAM,WACNQ,MAAM,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAA,EAAA,GAIlC1G,QAAQ,EAAEkG,MAAM,WAAWI,SAAS,EAAA,GACpCrG,YAAY;AAAA,IACViG,MAAM;AAAA,IACN8P,UAAU;AAAA,IACVC,UAAU;AAAA,IACV5P,OAAO,CAAC,EAAEH,MAAM,SAAA,CAAA;AAAA,EAAA,EAAA;AAAA,EAGpBwP,sBAAsB;AAAA,CAAA,GJ8BX6a,KACXzD,CAAAA,OAEOwD,GAASxD,EAAAA,GAGZ0D,KAAa5pB,GAAII,QKxDkB,EACvCd,MAAM,UACNE,YAAY,EACVtG,MAAM,EAAEoG,MAAM,UAAUgqB,OAAO,IAC/BlwB,GAAAA,QAAQ;AAAA,EAAEkG,MAAM;AAAA,EAAWI,SAAS;AACpCrG,GAAAA,YAAY,EACViG,MAAM,SACN8P,UAAU,GACVC,UAAU,GACV5P,OAAO,CAAC,EAAEH,MAAM,UAAUI,SAAS,GAAG6P,SAAS,EAAA,CAAA,EAAA,EAAA,GAGnDhQ,UAAU,CAAC,QAAQ,UAAU,YL6ClBsqB,EAAAA,CAAAA,GAAAA,KACXx5B,CAAAA,OAEOu5B,GAAWv5B,EAGdy5B,GAAAA,KAAc9pB,GAAII,QM/DY;AAAA,EAClCd,MAAM;AAAA,EACNE,YAAY,EACVtG,MAAM,EAAEoG,MAAM,UAAUgqB,OAAO,IAC/BlwB,GAAAA,QAAQ,EAAEkG,MAAM,WAAWI,SAAS,EACpCrG,GAAAA,YAAY,EACViG,MAAM,SACN8P,UAAU,GACVC,UAAU,GACV5P,OAAO,CACL,EAAEH,MAAM,SAASG,OAAO,EAAEH,MAAM,SAChC,EAAA,GAAA;AAAA,IAAEA,MAAM;AAAA,EAAA,GACR,EAAEA,MAAM,UACR,GAAA,EAAEA,MAAM,UAAA,GACR,EAAEA,MAAM,UAIdC,CAAAA,EAAAA,EAAAA;AAAAA,EAAAA,UAAU,CAAC,QAAQ,UAAU,YAAA;AAAA,CAAA,GN8ClBwqB,KACX15B,CAAAA,OAEOy5B,GAAYz5B,EAAAA,GAGf25B,KAAiBhqB,GAAII,QOtEa;AAAA,EACtCd,MAAM;AAAA,EACNE,YAAY,EACVtG,MAAM;AAAA,IAAEoG,MAAM;AAAA,IAAUgqB,OAAO;AAAA,EAC/BlwB,GAAAA,QAAQ,EAAEkG,MAAM,WAAWI,SAAS,EAAA,GACpCrG,YAAY,EACViG,MAAM,SACN8P,UAAU,GACVC,UAAU,GACV5P,OAAO,CACL,EAAEH,MAAM,UACR,GAAA,EAAEA,MAAM,SAAA,CAAA,EAAA,EAAA;AAAA,EAIdC,UAAU,CAAC,QAAQ,UAAU,YAAA;AAAA,CAAA,GPwDlB0qB,KACX55B,CAAAA,OAEO25B,GAAe35B,EAAAA,GAGlB65B,KAAclqB,GAAII,QQ7EY,EAClCd,MAAM,UACNE,YAAY,EACVtG,MAAM,EAAEoG,MAAM,UAAUgqB,OAAO,IAAA,GAC/BlwB,QAAQ,EAAEkG,MAAM,WAAWI,SAAS,EAAA,GACpCrG,YAAY;AAAA,EACViG,MAAM;AAAA,EACN8P,UAAU;AAAA,EACVC,UAAU;AAAA,EACV5P,OAAO,CACL,EAAEH,MAAM,SACR,GAAA,EAAEA,MAAM,SAAA,CAAA;AAAA,EAAA,GAIdC,UAAU,CAAC,QAAQ,UAAU,YAAA,EAAA,CAAA,GR+DlB4qB,KACX95B,CAAAA,OAEO65B,GAAY75B,EAAAA,GAGf+5B,KAAcpqB,GAAII,QSpFY;AAAA,EAClCd,MAAM;AAAA,EACNC,UAAU,CAAC,QAAQ,cAAc,QACjCC;AAAAA,EAAAA,YAAY,EACVtG,MAAM,EAAEoG,MAAM,WAAWgqB,OAAO,IAChClwB,GAAAA,QAAQ,EAAEkG,MAAM,WAAWI,SAAS,EAAA,GACpCrG,YAAY,EACViG,MAAM,SACNG,OAAO,CACL,EAAEH,MAAM,SACR,GAAA;AAAA,IAAEA,MAAM;AAAA,IAAWI,SAAS;AAAA,IAAG4P,SAAS;AAAA,EAAA,GACxC,EAAEhQ,MAAM,WAAWI,SAAS,GAAG4P,SAAS,EAAA,GACxC,EAAEhQ,MAAM,WAAWI,SAAS,GAAG4P,SAAS,EAAA,GACxC,EAAEhQ,MAAM,SAAA,CAAA,GAGV8P,UAAU,GACVC,UAAU,EAAA,EAAA;IToEHgb,KACXh6B,CAAAA,OAEO+5B,GAAY/5B,EAAAA,GUzERi6B,KACXpE,CAAAA,OAEOyD,GAAkBzD,EAAAA,K/GnBM,Q+GmBMA,GAAQhtB,MAGlCqxB,KACXrE,CAAAA,OAGEyD,GAAkBzD,O/GpBkB,Q+GoBNA,GAAQhtB,MAI7BsxB,KACXtE,CAAAA,OAEOyD,GAAkBzD,E/G1BC,KAAA,Q+G0BWA,GAAQhtB,MAGlCuxB,KACXvE,CAAAA,OAEOyD,GAAkBzD,EAAAA,K/G/BC,Q+G+BWA,GAAQhtB,MAGlCwxB,KACXxE,CAAAA,OAEOyD,GAAkBzD,EAAAA,K/GwEA,Q+GxEYA,GAAQhtB,MAGlCyxB,KACXzE,CAAAA,OAEOyD,GAAkBzD,E/GmEK,KAAA,Q+GnEOA,GAAQhtB,MCrDlC0xB,KAAmB,OACnBC,KAAkB,MAClBC,KAAkB,MAClBC,KAAmB,OCHnBC,KAAyB,gBACzBC,KAAyB,gBACzBC,KAAsB,cACtBC,KAAqB,WACrBC,KAAmB,SACnBC,KAAwB,cACxBC,KAAsB,YACtBC,KAAuB,aACvBC,KAAwB,cACxBC,KAAoB,UACpBC,KAAsB,YACtBC,KAAqB,WACrBC,KAAqB,WCZrBC,KAAkB,eAClBC,KAAkB,eAClBC,KAAmB,gBACnBC,KAAkB,eAClBC,KAAiB,cACjBC,KAAmB,gBACnBC,KAAkB,eAClBC,KAAmB,gBACnBC,KAAkB,eAClBC,KAAkB,eAClBC,KAAsB,mBACtBC,KAAmB,iBACnBC,KAAyB,qBACzBC,KAAqB,iBCbrBC,KAAc,QACdC,KAAa,OACbC,KAAe,SACfC,KAAY,MCAZC,KAAoB,CAC/B18B,IACA28B,QAEC;AAAA,EACC1tB,MAAM;AAAA,EACNG,OAAOutB;AAAAA,EACJC,GAAAA,GAAU58B;KACV68B,GAAY78B,GAAKkf,OAMX0d;AAAAA,IAAAA,KACX9zB,CAAAA,QAII,EAAA,GACsB,YAAfA,OAAAA,GAAMjK,OAAoB,EAAEuR,OAAOtH,GAAMjK,KAAAA,IAAS,CAAC,GAAA,GACpC,YAAfiK,OAAAA,GAAMoT,OAAoB,EAAE5H,aAAaxL,GAAMoT,KAAAA,IAAS,CAAA,EAAA,IAMxD2gB,KACX1d,CAAAA,OAAAA,WAKQA,KAAsB;AAAA,EAAED,SAASC;AAAU,IAAA,CAAC,GC1BhD2d,KAAiBC,CAAAA,kBACdA,MAAiC,MAAVA,ICM1BC,KACJh9B,CAAAA,OACG08B,GAAkB18B,IAAM,EAAEiP,MAAM,SAMxBguB,CAAAA,GAAAA,KAAyBj9B,CAAAA,OACpC;AAAA,UAAQA,GAAK+U,MAAAA;AAAAA,IACX,KAAK;AAAA,IACL,KAAK;AACH,cCrBJ/U,CAAAA,QAC4B;AAAA,QAC5BiP,MAAM;AAAA,QAAA,GACH2tB,GAAU58B,EAAAA;AAAAA,QAAAA,GACV68B,GAAY78B,GAAKkf,OAAAA;AAAAA,MDiBTge,IAAmBl9B,EAC5B;AAAA,IAAA,KAAK;AAAA,IAEL,KAAK;AACH,cEzBJA,CAAAA,QAC4B,EAC5BiP,MAAM,UAAA,GACH4tB,GAAY78B,GAAKkf,aACjB0d,GAAU58B,EAAAA,EAAAA,IFqBgBA,EAAAA;AAAAA,IAC3B,KAAK;AACH,cG3BJA,CAAAA,QAC4B,EAC5BiP,MAAM,UACH4tB,GAAAA,GAAY78B,GAAKkf,OAAAA,GAAAA,GACjB0d,GAAU58B,EAAAA,GAAAA,GACTA,GAAKqQ,UAAU;AAAA,QAAEZ,MAAMzP,GAAKqQ,QAAQzR,IAAKu+B,CAAAA,OAAcA,GAAEhe,KAAW;AAAA,MAAA,IAAA,CAAA,EHsB7Die,IAAmBp9B,EAC5B;AAAA,IAAA,KAAK;AAAA,IAEL,KAAK;AAAA,IACL,KAAK;AACH,aAAOg9B,GAAqBh9B,EAAAA;AAAAA,IAC9B,KAAK;AACH,cDrBJA,CAAAA,QAC8B,EAC9BiP,MAAM,SACNG,OAAO;AAAA,QACLH,MAAM6tB,GAAc98B,GAAKq9B,QAAAA,IAAY,YAAY;AAAA,MAAA,GAAA,GAEhDR,GAAY78B,GAAKkf,OAAAA,GAAAA,GACjB0d,GAAU58B,EAAAA,EAAAA,ICcsBA,EAAAA;AAAAA,IACjC,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,cA9BJA,CAAAA,OACG08B,GAAkB18B,IAAM,EAAEiP,MAAM,UAAA,CAAA,GA6BHjP,EAAAA;AAAAA,IAC9B,KAAK;AACH,cDxCJA,CAAAA,QAC4B,EAC5BiP,MAAM6tB,GAAc98B,GAAKq9B,YAAY,YAAY,UAAA,GAC9CR,GAAY78B,GAAKkf,OACjB0d,GAAAA,GAAAA,GAAU58B,ECoCFs9B,EAAAA,IAAmBt9B;IAC5B,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,cIxDyBA,CAAAA,QAC5B,EACCiP,MAAM,WACH4tB,GAAAA,GAAY78B,GAAKkf,OAAAA,GAAAA,GACjB0d,GAAU58B,EAAAA,EAAAA,IJoDWA,EAAAA;AAAAA,IACxB,KAAK;AACH,cKvDJA,CAAAA,QAC6B,EAC7BiP,MAAM,WAAA,GACH4tB,GAAY78B,GAAKkf,OACjB0d,GAAAA,GAAAA,GAAU58B,ELmDFu9B,EAAAA,IAAoBv9B,EAC7B;AAAA,IAAA,KAAK;AACH,aMzDsE,EAC1Ew9B,MAAM,kBADsBC,KNyDHz9B,IMxDE09B,MAAAA,IAAAA,GACxBd,GAAUa,EAAAA,EAAAA;AAAAA,INwDX;AACE,aAAO,CAAC;AAAA,EAAA;AM3De,MAACA;GCHjBE,KAAoB,CAC/BC,IACAC,OAIOC,OAAOC,QAAQF,EAASzN,EAAAA,OAAO,CAACC,IAAM/Q,CAAAA,IAAKG;AAChD,MAAIH,MAAOse,IAAQ;AACX,UAAAze,KAAQye,GAAOte,EAAAA;AACjB,QAAiB,YAAVH,OAAAA,GACF,QAAA,EACFkR,GAAAA,IACH/Q,CAACA,EAAMG,GAAAA,GAAGN;EAEd;AAEK,SAAAkR;GACN,KAGQ2N,KAAe,CAC1BjpB,IACAkpB,IACAL,IACAC,QAOO;AAAA,EACL3e,SAAS+e;AAAAA,EAAAA,GACNN,GAAkBC,IAAQC,EAC7B9oB;AAAAA,EAAAA,MAAAA;IAISmpB,KAAoB,CAI/BnpB,IACA6oB,IACAC,QAOO,EACL3e,SAAS,CACNye,GAAAA,GAAAA,GAAkBC,IAAQC,EAAAA,GAC7B9oB,MC3DSopB,GAAAA,IAAAA,KAAe,QAGfC,KAAe,QAKfC,KAAe,QAuBfC,KAAiB,UClCjBC,KAAiBC,CAAAA,OACtB;AAAA,QAAAC,KAASC,KAAKC,MAAMH,EAAAA;AACtB,SAAAv/B,MAAM2/B,QAAQH,EACTA,IAAAA,GAAO7/B,IAAIigC,EAAAA,IAEE,YAAXJ,OAAAA,MAAkC,SAAXA,KACzBX,OAAOgB,YACZhB,OAAOC,QAAQU,EAAAA,EAAQ7/B,IAAI,CAAA,CAAEmgC,IAAGC,EAAAA,MAAO,CAACD,IAAGF,GAAeG,EAAAA,CAAAA,CAAAA,CAAAA,IAGvDP;AAGHI,GAAAA,KAAkB1f,CAAAA,OAClB;AAAA,MAAiB,YAAVA,OAAAA,GACF,QAAAA;AAEL,MAAA;AACI,UAAAsf,KAASC,KAAKC,MAAMxf,EAAAA;AAEtB,WAAAlgB,MAAM2/B,QAAQH,EACTA,IAAAA,GAAO7/B,IAAIigC,EAGE,IAAA,YAAA,OAAXJ,MAAkC,SAAXA,KACzBX,OAAOgB,YACZhB,OAAOC,QAAQU,EAAQ7/B,EAAAA,IAAI,CAAEmgC,CAAAA,IAAGC,QAAO,CAACD,IAAGF,GAAeG,EAAAA,CAAAA,CAAAA,CAAAA,IAGvDP;AAAAA,EAAA,QACD;AAEC,WAAAtf;AAAAA,EAAA;GCJE8f,KACXrB,CAAAA,OAAAA;AAEI,MAAAQ,MAAgBR,GAAOsB,MAAM;AAC/B,UAAMC,KAAOC,GAAOxB,GAAOsB,KAAKnqB,IAAAA;AAChC,QAAIoqB,GACF,QAAOA,GAAKvB,EACd;AAAA,EAAA;AAEF,SAAOI,GAAa,OAAO,IAAIJ,GAAOsB,MAAMG,EAAAA;AAGxCC,GAAAA,KAAcngB,CAAAA,OAA0BA,IACxCogB,KAAepgB,CAAAA,OACHA,GACbqB,QAAQ,KAAK,EACbA,EAAAA,QAAQ,KAAK,EAAA,EACbgf,MAAM,GAAA,EACN5gC,IAAKogC,CAAAA,OAAMS,WAAWT,GAAE5hB,WAAW,KAAK,EAAA,EAAIsiB,KAChC7/B,CAAAA,CAAAA,EAAAA,OAAQ8/B,CAAAA,QAAOC,MAAMD,EAAAA,CAAAA,GAGhCN,KAAS;AAAA,EACbngB,SAASogB;AAAAA,EACTzgC,MAAMygC;AAAAA,EACNpjB,MAAMojB;AAAAA,EACNO,QAAQP;AAgEJQ,GAAAA,KAAsBlC,CAAAA,OACnBI,GAAa,UAAU,IAAIJ,GAAOsB,MAAMG,EAG3CU,GAAAA,KACJnC,CAAAA,OAEA;AAAA,QAAMoC,KAAe,EACnB9gB,SAAUC,CAAAA,OAA4Bof,GAAcpf,EAAAA,GACpDtgB,MAAMygC,IACNpjB,MAAMojB,IACNO,QAAQP;AAEV,SAAOpB,GAAkB,YAAYN,GAAOsB,MAAMc;GA+B9CC,KAAqB,CAGzBrC,IACA7oB,OAAAA;AAEA,QAAMmrB,KAAgB;AAAA,IACpBhhB,SAASqgB;AAAAA,IACT1gC,MAAMygC;AAAAA,IACNpjB,MAAMojB;AAAAA,IACNO,QAAQP;AAAAA;AAEV,SAAOpB,GAAkBnpB,IAAM6oB,GAAOsB,MAAMgB,EAGxCC;AAAAA,GAAAA,KAAgB,CACpBvC,IACA7oB;AAEA,QAAMqrB,KAAU,EACdlhB,SAAUC,CAAAA,OAAkB9f,SAAS8f,IAAO,EAAA,GAC5CtgB,MAAMygC,IACNpjB,MAAMojB,IACNO,QAAQP;AAEV,SAAOtB,GAAajpB,IAAM,GAAG6oB,GAAOsB,MAAMkB,EAAAA;AAAAA,GAGtChB,KAAS;AAAA,EACbiB,QAASzC,CAAAA,QArGiBA,CAAAA,OAAAA;AAC1B,UAAM0C,KAAS;AAAA,MACbphB,SAAUC,CAAAA,OAAkBsgB,WAAWtgB,EACvCtgB;AAAAA,MAAAA,MAAMygC;AAAAA,MACNpjB,MAAMojB;AAAAA,MACNjC,UAAWle,CAAAA,OAAkB9f,SAAS8f,IAAO,EAAA;AAAA,MAC7C+U,KAAM/U,CAAAA,OAAkBsgB,WAAWtgB,EACnCgV;AAAAA,MAAAA,KAAMhV,CAAAA,OAAkBsgB,WAAWtgB,EACnC0gB;AAAAA,MAAAA,QAAQP;AAAAA;AAEV,WAAOtB,GAAa,UAAU,GAAGJ,GAAOsB,MAAMoB,EA2F1BC;AAAAA,EAAAA,GAAmB3C;EACvC,YAxFAA,CAAAA,OAAAA;AAEA,UAAM4C,KAAe,EACnBthB,SAASqgB,IACT1gC,MAAMygC,IACNpjB,MAAMojB,IACNjC,UAAWle,CAAAA,OAAkB9f,SAAS8f,IAAO,KAC7C+U,KAAM/U,CAAAA,OAAkBsgB,WAAWtgB,EAAAA,GACnCgV,KAAMhV,CAAAA,OAAkBsgB,WAAWtgB,EAAAA,GACnC0gB,QAAQP,GAEV;AAAA,WAAOpB,GAAkB,YAAYN,GAAOsB,MAAMsB,EA8ElDC;AAAAA,EAAAA;AAAAA,EAAAA,QAAQX;AAAAA,EACR,YAAYC;AAAAA,EACZW,kBAAkBZ;AAAAA,EAClB,sBAAsBC;AAAAA,EACtBY,OA5IyB/C,CAAAA,OAAAA;;AACnB,UAAAgD,OAAmBhD,MAAAA,GAAOvtB,YAAPutB,gBAAAA,IAAgBh/B,IAAKu+B,CAAAA,OAAMA,GAAEyD,YAAW,CAE1D;AAAA,WAAA,EACF5C,GAAAA,GAAa,SAAS,IAAIJ,GAAOsB,MAAMG,EAAAA,GAC1ChvB,SAASuwB,GAAAA;AAAAA,EAAAA;AAAAA,EAwIXC,QArI0BjD,CAAAA,OAAAA;;AAC1B,UAAMvtB,OACJutB,MAAAA,GAAOvtB,YAAPutB,gBAAAA,IAAgBh/B,IAAKu+B,CAAAA,QAAO,EAC1ByD,QAAQzD,GAAEyD,QACVzhB,OAAOge,GAAEhe,MAAAA,QACJ;AAEF,WAAA,EAAA,GACF6e,GAAa,UAAU,IAAIJ,GAAOsB,MAAMG,EAAAA,GAC3ChvB,SA6HF7Q,GAAAA;AAAAA,EAAAA;AAAAA,EAAAA,OAAQo+B,CAAAA,OAAWuC,GAAcvC,IAAQ,OAAA;AAAA,EACzC,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAAA;AAAA,EAClD7sB,OAAQ6sB,CAAAA,OAAWuC,GAAcvC,IAAQ,OAAA;AAAA,EACzC,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAAA;AAAA,EAClD/rB,OAAQ+rB,CAAAA,OAAWuC,GAAcvC,IAAQ;EACzC,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAClDjsB;AAAAA,EAAAA,MAAOisB,CAAAA,OAAWuC,GAAcvC,IAAQ,MACxC;AAAA,EAAA,UAAWA,CAAAA,OAAWqC,GAAmBrC,IAAQ,QAAA;AAAA,EACjD5qB,QAAS4qB,CAAAA,OAAWuC,GAAcvC,IAAQ,QAAA;AAAA,EAC1C,YAAaA,CAAAA,OAAWqC,GAAmBrC,IAAQ,UACnDzsB;AAAAA,EAAAA,OAAQysB,CAAAA,OAAWuC,GAAcvC,IAAQ,OAAA;AAAA,EACzC,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAClD1rB;AAAAA,EAAAA,OAAQ0rB,CAAAA,OAAWuC,GAAcvC,IAAQ,OAAA;AAAA,EACzC,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAClDtsB;AAAAA,EAAAA,OAAQssB,CAAAA,OAAWuC,GAAcvC,IAAQ,OAAA;AAAA,EACzC,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAAA;AAAA,EAClDkD,cAAelD,CAAAA,OAAWuC,GAAcvC,IAAQ,cAAA;AAAA,EAChD,kBAAmBA,CAAAA,OAAWqC,GAAmBrC,IAAQ,gBAAA;AAAA,EACzDmD,QAASnD,CAAAA,OAAWuC,GAAcvC,IAAQ,QAC1C;AAAA,EAAA,YAAaA,CAAAA,OAAWqC,GAAmBrC,IAAQ,UAAA;AAAA,EACnDoD,UAAWpD,CAAAA,OAAWuC,GAAcvC,IAAQ,UAAA;AAAA,EAC5C,cAAeA,CAAAA,OAAWqC,GAAmBrC,IAAQ,YACrDqD;AAAAA,EAAAA,OAAQrD,CAAAA,OAAWuC,GAAcvC,IAAQ,OACzC;AAAA,EAAA,WAAYA,CAAAA,OAAWqC,GAAmBrC,IAAQ,SAAA;AAAA,EAClDsD,SAjJ2BtD,CAAAA,OAAAA;AAC3B,UAAMuD,KAAU;AAAA,MACdjiB,SAAUC,CAAAA,OAA4B,WAAVA;AAAAA,MAC5BtgB,MAAMygC;AAAAA,MACNpjB,MAAMojB;AAAAA,MACN8B,IAAI9B;AAAAA,MACJ+B,KAAK/B;AAAAA,MACLO,QAAQP;AAAAA,IAAAA;AAEV,WAAOtB,GAAa,WAAA,MAAiBJ,GAAOsB,MAAMiC,EAyIlDrT;AAAAA,EAAAA;AAAAA,EAAAA,MA1FwB8P,CAAAA,OACxB;AAAA,UAAM0D,KAAO,EACXpiB,SAASogB,IACTzgC,MAAMygC,IACNpjB,MAAMojB,IACNO,QAAQP,IACRiC,KAAKjC,GAEA;AAAA,WAAA,EACLiC,KAAK,OACFvD,GAAa,QAAQ,IAAIJ,GAAOsB,MAAMoC;;EAiF3C,UA7E6B1D,CAAAA,OAAAA;AAC7B,UAAM4D,KAAa,EACjBtiB,SAAUC,CAAAA,OAA4Bof,GAAcpf,EAAAA,GACpDtgB,MAAMygC,IACNpjB,MAAMojB,IACNO,QAAQP,IACRiC,KAAKjC,GAEA;AAAA,WAAA,EACLiC,KAAK,IACFrD,GAAAA,GAAkB,UAAUN,GAAOsB,MAAMsC,ECjI1CC,EAAAA;AAAAA,EAAAA;AAAAA,GAAAA,KAAa,QACbC,KAAe,UAEfC,KAAa,QAyCbC,KAAoB,CACxB1vB,IACA2vB,OAAAA;AAEA,QAAMC,KAAU5vB,GAAMskB,MAAMzW,SAAS,IAAIgiB,GAAe7vB,EAAAA,IAASA,IAE3D8vB,KAAaH,GAAY,CAAM,KAAA;AAC9B,SAAA,EAAA,GACFC,IACHE,YACAC,IAAAA,WAAWD,KAAaN,KApDN,WAqDlBhW,QAAQmW,GAAY,CACpBrL,GAAAA,OAAO;GAIL0L,KAAoBhwB,CAAAA,QAEjB;AAAA,EADSA,GAAAA,GAAMskB,MAAMzW,SAAS,IAAIgiB,GAAe7vB,EAAAA,IAASA;AAAAA,EAG/D+vB,WAAWR;AAAAA,EACXO,YAAAA;AAAAA,EACAtW,QAAAA;AAAAA,EACA8K,OAAO,CAGLuL;AAAAA,IAAAA,KAAkB7vB,CAAAA,OAClBA,GAAM+vB,cAAcR,KACf,EACFvvB,GAAAA,IACHiwB,QAAQjwB,GAAMiwB,OAAOC,OAAO,CAAC,EAAE5L,OAAO,CAAItkB,GAAAA,GAAMskB,YAChDA,OAAO,CAAA,GACPyL,WAAWN,GAAAA,IAIXzvB,GAAM8vB,cAAc9vB,GAAM+vB,cAAcP,KACnC;AAAA,EACFxvB,GAAAA;AAAAA,EACHmwB,SAASnwB,GAAMmwB,QAAQD,OAAO,CAC5B,EACE1E,QAAQxrB,GAAM8vB,YACdtW,QAAQxZ,GAAMwZ,QACd8K,OAAO,CAAA,GAAItkB,GAAMskB,KAAAA,EAAAA,CAAAA,CAAAA;AAAAA,EAGrByL,WAAWN;AAAAA,EACXK,YAAY;AAAA,EACZtW,QAAQ;AAAA,EACR8K,OAAO,CAAA;AAAA,IAIJ;AAAA,EACFtkB,GAAAA;AAAAA,EACH+vB,WAAWN;AAAAA,EACXK,YAAY;AAAA,EACZxL,OAAO,CCjGE8L;AAAAA,GAAAA,KAAmBpwB,CAAAA,OAC1BA,GAAMqwB,gBACD,EACLnzB,OAAO8C,GAAM9C,MAAMgzB,OAAO,EACxBxB,QAAQ1uB,GAAMqwB,eACdpjB,OAAOjN,GAAMqwB,cAIZrwB,CAAAA,EAAAA,IAAAA,ICtCI0qB,KAAa/G,CAAAA,QACjB;AAAA,EACuB,GAAA,YAAA,OAAjBA,GAAQ3Z,OAAoB,EAAEA,MAAM2Z,GAAQ3Z,KAAAA,IAAS,CAAC;AAAA,EACrC,GAAA,YAAA,OAAjB2Z,GAAQh3B,OAAoB,EAAEA,MAAMg3B,GAAQh3B,KAAS,IAAA,CAAA;AAIvD2jC,IAAAA,KAAoBtwB,CAAAA,OAEzB;AAAA,QAAAuwB,KAAIC,GAAoBxwB,KAExBywB,KAAIC,GAAoBH,EAE9B;AAAA,SAAOI,GAAkBF,EAAAA;AAAAA,GAGrBD,KAAuBxwB,CAAAA,OAAAA;AACvB,MAAAA,GAAM4wB,gBAAgB5wB,GAAMqwB,eAAe;AACvC,UAAAxtB,KAAO7C,GAAM4wB,aAAa5D,KAAKnqB;AACjC,QAAS,aAATA,MAA8B,YAATA,GAChB,QAAA,EACF7C,GAAAA,IACH4wB,cAAc,EAAA,GACT5wB,GAAM4wB,cACTzyB,SAASiyB,GAAgBpwB,GAAMqwB,aAAenzB,EAAAA,MAAAA,EAAAA;AAAAA,EAGpD;AAEK,SAAA8C;GAGH2wB,KAAqB3wB,CAAAA,OACrBA,GAAM4wB,eACD;AAAA,EACF5wB,GAAAA;AAAAA,EACHlB,QAAQ,CAAIkB,GAAAA,GAAMlB,QAAQkB,GAAM4wB;EAChCA,cAAc;AAAA,EACdC,gBAAgB;AAAA,IAGb7wB,IAGH0wB,KAAuB1wB,CAAAA,OAC3B;AAAA,MAAIA,GAAM8wB,gBAAgB;AACxB,UAAMC,KAAU/wB,GAAM4wB,eAClB,CAAI5wB,GAAAA,GAAM8wB,eAAeE,MAAMhxB,GAAM4wB,YACrC5wB,IAAAA,GAAM8wB,eAAeE,MACnBC,KAAkC,EACnCvG,GAAAA,GAAU1qB,GAAM8wB,cAAAA,GACnBnN,SAAS3jB,GAAM8wB,eAAenN,SAC9BqN,MAAMD,GAED;AAAA,WAAA;AAAA,MACF/wB,GAAAA;AAAAA,MACHod,UAAU,CAAA,GAAIpd,GAAMod,UAAU6T,EAC9BH;AAAAA,MAAAA,gBAAgB;AAAA,MAChBF,cAAc;AAAA,MACdC,gBAAgB;AAAA,MAChBR,eAAe;AAAA,IAAA;AAAA,EACjB;AAEK,SAAArwB;AAAAA,GCnBHkxB,KAAiB,CACrBC,IACAC,OAAAA;AAEA,QAAMpxB,KAAQmxB,GAAK7M,MAAMpG,OAAmB,CAACC,IAAKoG,OAAAA;AAChD,UAAM8M,KAAU9M,GAAKiJ,KAAOlf,EAAAA,QAAQ,UAAU,EAC9C;AAAA,QAAA,CAAK+iB,GAAQC,WAAW,GAAA,EAClB,QAAAnT,GAAI0S,mBAAmB5E,KAElB,EAAK9N,GAAAA,IAAKoT,WAAWpT,GAAIoT,UAAUrB,OAAOmB,EAG5ClT,EAAAA,IAAAA;AAGH,UAAA,CAACqT,OAAQC,EAAQJ,IAAAA,GAAQK,MAAM,CAAGpE,EAAAA,MAAM,MACxCrgB,KAAQwkB,GAAKE,KAAK,GAAKnE,EAAAA,KAAAA,GACvBjgB,KAAK6jB,GAAMI,EAAAA;AAEjB,WAAIjkB,KACKA,GAAG4Q,IAAKlR,EAEVkR,IAAAA;AAAAA,EAAAA,GACNyT,GACH,CAAA;AAAA,SAAOtB,GAAiBtwB,EAWpB6xB;AAAAA,GAAAA,KAAkB,CACtBllC,IACAykC,OAAAA;AAEM,QAAAU,MHrDmBC,CAAAA;AACnB,UAAAzN,KAAQyN,GAAMzE,MAAM,IAAA,GAEpB0E,KAA2B;AAAA,MAC/B7B,SAAS;MACTF,QAAQ,CAAA;AAAA,MACRH,YAAAA;AAAAA,MACAtW,QAAQ;AAAA,MACR8K,OAAO,CACPyL;AAAAA,MAAAA,WAAWN;AAAAA,OAGPwC,KAAa3N,GAAMpG,OAAmB,CAACle,IAAOukB;AAC5C,YAAA8M,KAAU9M,GAAKiJ,KACfmC,GAAAA,KAAc0B,GAAQnkC,MAC1B,oDAAA;AAGF,aAAIyiC,KACKD,GAAkB1vB,IAAO2vB,MAElB,UAAZ0B,KACKrB,GAAiBhwB,EAEV,IAAA,SAAZqxB,KACKrxB,GAAMskB,MAAMzW,SAAS,IAAIgiB,GAAe7vB,EAASA,IAAAA,KAEnD,KACFA,IACHskB,OAAOtkB,GAAMskB,MAAM4L,OAAO,CAACmB,EAAAA,CAAAA,EAAAA;AAAAA,IAAAA,GAE5BW;AAEI,WAAA,EACL7B,SAAS8B,GAAW9B,SACpBF,QAAQgC,GAAWhC,OAAAA;AAAAA,EAAAA,GGkBYtjC,EAC3BwjC,GAAAA,KAAU2B,GAAO3B,QAAQzjC,IAAKwlC,CAAAA,QAbZf,CAAAA,OAAAA;AAClB,UAAAnxB,KAAQkxB,GAAeC,IAAMgB,EAC5B;AAAA,WAAA,EACL5kC,MAAM4jC,GAAK3F,QACX1sB,QAAQkB,GAAMlB,OAS0BszB;AAAAA,EAAAA,GAAiBF,MACrDf,MAhDSY,CAAAA;AACX,QAAwB,MAAxBA,GAAM9B,OAAOpiB,OAGV,QAAAkkB,GAAM9B,OAAO,CA4CPoC;AAAAA,EAAAA,GAAQP;AACrB,MAAKX,CAAAA,GACI,QAAA;AAAA,IACLryB,QAAQ,CACRse;AAAAA,IAAAA,UAAU;IACVkV,MAAM,CAAC;AAAA,IACPf,WAAW,CAAA;AAAA,IACXpB,SAAAA;AAAAA,EAAAA;AAIE,QAAA8B,KAAaf,GAAeC,IAAMC,EACjC;AAAA,SAAA,EACLtyB,QAAQmzB,GAAWnzB,QACnBse,UAAU6U,GAAW7U,UACrBkV,MAAML,GAAWK,MACjBf,WAAWU,GAAWV,WACtBpB,SAAAA,GAAAA;AAAAA,GAIEyB,KAAiB,OAAmB;AAAA,EACxCL,WAAW,CACXzyB;AAAAA,EAAAA,QAAQ,CACRse;AAAAA,EAAAA,UAAU;EACVwT,cAAc;AAAA,EACdE,gBAAgB;AAAA,EAChBD,gBAAgB;AAAA,EAChBR,eAAe;AAAA,EACfkC,cAAc,EACZC,MAAM,CAAA,GACNC,aAAa,CAAA,GACbC,YAAY,CAAA,EAAA;AAAA,EAEdJ,MAAM,CAAA;AAAA,IAwHFK,KAAgB,CACpB3yB,IACAoN,IACAH,OAEIjN,GAAM4wB,gBACFxjB,EAAAA,MAAOpN,GAAM4wB,aAAa5D,QACvB;AAAA,EACFhtB,GAAAA;AAAAA,EACH4wB,cAAc,EAAA,GACT5wB,GAAM4wB,cACT5D,MAAM,EAAKhtB,GAAAA,GAAM4wB,aAAa5D,MAAM5f,CAACA,EAAMH,GAAAA,GAAAA,EAAAA;AAAAA,IAK5CjN,IAGH4yB,KAAe,CACnB5yB,IACAoN,IACAH,QAEO,EAAA,GACFjN,IACHsyB,MAAM,EAAEllB,CAACA,EAAAA,GAAMH,OAAUjN,GAAMsyB,KAAAA,EAAAA,IAI7BH,KAAqB;AAAA,EACzBv7B,OA5IyB,CACzBi8B,IACA5lB,OAEM;AAAA,UAAAjN,KAAQswB,GAAiBuC,EAAAA;AAE3B,WAAA7yB,GAAMlB,OAAOg0B,KAAMvC,CAAAA,OAAMA,GAAEhjC,SAAS0f,EAC/BjN,IAAAA,KAEF,EACFA,GAAAA,IACH6wB,gBNxIyB,SMyIzBD,cAAc,EAAErjC,MAAM0f,IAAO+f,MAAM,CAAG,EAAA,EAAA;AAAA,EAAA;AAAA,EAiIxCrgC,MA7HiB,CAACqT,IAAmBiN,OACjCjN,GAAM4wB,eACD+B,GAAc3yB,IAAOmsB,IAAclf,EAAAA,IAExCjN,GAAM8wB,kBAAAA,EACF3E,MAAgBnsB,GAAM8wB,kBACnB,EACF9wB,GAAAA,IACH8wB,gBAAgB;AAAA,IAAA,GACXpG,GAAU1qB,GAAM8wB,cAAAA;AAAAA,IACnBnN,SAAS3jB,GAAM8wB,eAAenN;AAAAA,IAC9BqN,MAAMhxB,GAAM8wB,eAAeE;AAAAA,IAC3B7E,CAACA,KAAelf;AAAAA,EAKjBjN,EAAAA,IAAAA;AAAAA,EA6GPgK,MA1GiB,CAAChK,IAAmBiN,OACjCjN,GAAM4wB,eACD+B,GAAc3yB,INlKG,QMkKkBiN,EAAAA,IAExCjN,GAAM8wB,iBACD,EACF9wB,GAAAA,IACH8wB,gBAAgB,EAAA,GACX9wB,GAAM8wB,gBACT9mB,MAAMiD,GAILjN,EAAAA,IAAAA;AAAAA,EA8FP2jB,SA3F2B,CAC3BkP,IACA5lB,OAEM;AAAA,UAAAjN,KAAoBswB,GAAiBuC,EAAAA;AACvC,WAAA7yB,GAAMod,SAAS0V,KAAMrC,CAAAA,OAAMA,GAAE9M,YAAY1W,EAAAA,IAEpCjN,KAEF,EAAA,GACFA,IACH8wB,gBAAgB,EAAEnN,SAAS1W,IAAO+jB,MAAM,CAAA,EAAA,GACxCJ,cAAc,KAAA;AAAA,EAAA;AAAA,EAgFhB5hC,KA5EuB,CAACgR,IAAmBiN,OAAAA;AACvC,SAACjN,GAAM8wB,eACF,QAAA9wB;AAET,QAAIA,GAAM4wB,cAAc;AACtB,YAAMmC,KAAuC;AAAA,WACxCrI,GAAU1qB,GAAM8wB;QACnBnN,SAAS3jB,GAAM8wB,eAAenN;AAAAA,QAC9BqN,MAAMhxB,GAAM8wB,eAAeE,KAAKd,OAAOlwB,GAAM4wB,YAAAA;AAAAA,MAAAA;AAExC,aAAA;AAAA,QACF5wB,GAAAA;AAAAA,QACHod,UAAUpd,GAAMod;AAAAA,QAChB0T,gBAAgBiC;AAAAA,QAChBlC,gBN5LqB;AAAA,QM6LrBD,cAAc,EACZrjC,MAAM0f,IACN+f,MAAM,CAAA,EAAA;AAAA,MAAA;AAAA,IAEV;AAEK,WAAA,EACFhtB,GAAAA,IACH4wB,cAAc,EACZrjC,MAAM0f,IACN+f,MAAM,CAAA,EAAA,EAAA;AAAA,EAAA;AAAA,EAoDVgG,MAzJyBH,CAAAA,QAElB,EADOvC,GAAAA,GAAiBuC,KAG7BhC,gBAAgB5E,GAAAA;AAAAA,EAsJlByC,QC5P0B,CAAC1uB,IAAmBiN,OAAAA;AAC1C,QAACjN,CAAAA,GAAM4wB,aACF,QAAA5wB;AAGT,UAAMizB,MHlBiB,CACvBjzB,IACA0uB,OAEO1uB,GAAMqwB,gBACT,EACEnzB,OAAO8C,GAAM9C,MAAMgzB,OAAO,EACxBxB,QAAQ1uB,GAAMqwB,eACdpjB,OAAOjN,GAAMqwB,cAEfA,CAAAA,GAAAA,eAAe3B,GAEjB,IAAA,EACExxB,OAAO8C,GAAM9C,OACbmzB,eAAe3B,GGIWwE,GAC9BlzB,GAAMqwB,iBAAiB;AAAA,MAAEnzB,OAAO,CAAA;AAAA,IAChC+P,GAAAA,EAAAA;AAGK,WAAA,EAAA,GACFjN,IACHqwB,eAAe4C,GDiPjBhmB;AAAAA,EAAAA;AAAAA,EAAAA,OC7OyB,CAACjN,IAAmBiN,OACzC;AAAA,QAAA,CAACjN,GAAMqwB,cACF,QAAArwB;AAET,UAAMizB,MH9CgB,CAACjzB,IAAqBiN,OACrCjN,GAAMqwB,gBACT,EACEnzB,OAAO8C,GAAM9C,MAAMgzB,OAAO,EACxBxB,QAAQ1uB,GAAMqwB,eACdpjB,OAGJ9D,GAAA,CAAA,EAAA,IAAA;AAAA,MACEjM,OAAO8C,GAAM9C;AAAAA,IGqCai2B,GAASnzB,GAAMqwB,eAAepjB;AACvD,WAAA,EAAA,GACFjN,IACHqwB,eAAe4C;;EDuOjBl2B,MAnDkB,CAACiD,IAAmBiN,OAAAA;AAClC,SElOuBA,CAAAA,OACpBA,GAAMmmB,SAAS,QAAQnmB,GAAMqkB,WAAW,SFiO3C+B,GAAapmB,KAAQ;AACvB,YAAM6iB,KAAa7iB,GAAMykB,MAAM,GAAG,EAAA,GAC5B4B,KAAYX,GAAc3yB,IAAOosB,IAAgB0D,EAAAA;AAChD,aAAA6C,GAAcW,IAAWpH,IAAcE;IAAc;AAE9D,WAAIpsB,GAAM4wB,eACD+B,GAAc3yB,IAAOksB,IAAcjf,EAAAA,IAErCjN;AAAAA;EA2CPgN,SAAS,CAAChN,IAAOiN,OAAU0lB,GAAc3yB,IN9QZ,WM8QoCiN,EAAAA;AAAAA,EACjEiiB,IAAI,CAAClvB,IAAOiN,OAAU0lB,GAAc3yB,IN7QZ,MM6Q+BiN,EACvDkiB;AAAAA,EAAAA,KAAK,CAACnvB,IAAOiN,OAAU0lB,GAAc3yB,IN7QZ,OM6QgCiN;EACzD+U,KAAK,CAAChiB,IAAOiN,OAAU0lB,GAAc3yB,IN3QZ,OM2QgCiN,EAAAA;AAAAA,EACzDgV,KAAK,CAACjiB,IAAOiN,OAAU0lB,GAAc3yB,IN7QZ,OM6QgCiN,EAAAA;AAAAA,EACzDulB,MC5RwB,CAACxyB,IAAmBiN,OAAAA;AACrC,WAAA,EAAA,GAAKjN,IAAOuyB,eEEnBgB,KFF+CvzB,GAAMuyB,cEGrDC,KFHmEvlB,IEK5D,EACLylB,YAAYa,GAAIb,YAChBD,aAAac,GAAId,aACjBD,MAAMe,GAAIf,KAAKtC,OAAOsC,EAAAA,EAAAA,GAAAA;AAPG,QAC3Be,IACAf;AAAAA,EAAAA;AAAAA,EHyRAE,YCzR8B,CAC9B1yB,IACAiN,OAEO;AAAA,WAAA,EACFjN,GAAAA,IACHuyB,eEeFgB,KFf8BvzB,GAAMuyB,cEgBpC71B,KFhBkDuQ,IEkB3C,EACLulB,MAAMe,GAAIf,MACVC,aAAac,GAAId,aACjBC,YAAYa,GAAIb,WAAWxC,OAAOxzB,EAAAA,EAAAA,GAAAA;AAPT,QAC3B62B,IACA72B;AAAAA,EHoQA+1B;AAAAA,EAAAA,aChR+B,CAC/BzyB,IACAiN;AAEO,WAAA;AAAA,SACFjN;AAAAA,MACHuyB,eENFgB,KFM+BvzB,GAAMuyB,cELrC71B,KFKmDuQ,IEH5C,EACLulB,MAAMe,GAAIf,MACVE,YAAYa,GAAIb,YAChBD,aAAac,GAAId,YAAYvC,OAAOxzB,EAPV,EAAA;AAAA,IAAA;AAAA,QAC5B62B,IACA72B;AAAAA,EAAAA;AAAAA,EHgRA82B,QAAQ,CAACxzB,IAAOyzB,OAAQb,GAAa5yB,INjST,UMiSgCyzB,EAAAA;AAAAA,EAC5DC,YAAY,CAACxB,IAAGuB,OAAQb,GAAaV,INnSL,cMmS4BuB,EAC5DE;AAAAA,EAAAA,KAAK,CAAC3zB,IAAOyzB,OAAQb,GAAa5yB,INjST,OMiS6ByzB,EItR3CG;AAAAA,GAAAA,KAAejnC,CAAAA,OACnBknC,IJqBmBlnC,CAAAA,OACnBklC,GAAgBllC,IAAMwlC,EItBR1F,GAAM9/B,MAGvBknC,KAAiBC,CAAAA,QACd;AAAA,EACLpO,QAAQ;AAAA,EACR4M,MAAMwB,GAAaxB;AAAAA,EACnBlV,UAAU2W,GAAeD,GAAa1W,QACtCte;AAAAA,EAAAA,QAAQk1B,GAAaF,GAAah1B,MAAAA;AAIhCk1B,IAAAA,KACJl1B,CAAAA,OAEOA,GAAOof,OAA0C,CAACC,IAAKvnB,QACrD,EACL,CAACA,GAAMrJ,IAAOw/B,GAAAA,GAAkBn2B,QAC7BunB,GAEJ,IAAA,KAGC4V,KACJrI,CAAAA,OAEOA,GAAOxN,OAAO,CAACC,IAAK8V,OAAAA;AACzB,QAAM9C,KAA0B,EAC9BnnB,MAAMiqB,GAAMjqB,MACZrd,MAAMsnC,GAAMtnC,MACZqkC,MAAMgD,GAAaC,GAAMjD,IAEpB,EAAA;AAAA,SAAA,EACL,CAACiD,GAAMtQ,UAAUwN,IACdhT,GAAAA,GAAAA;AAEJ,GAAA,KC9CQ+V,KAAsBvnC,CAAAA,OAC1BinC,GAAYjnC,EAAAA,GAGRwnC,KACXr1B,CAAAA,QCCAA,CAAAA,OAEA;AAAA,QAAM7B,KAAa2uB,OAAOC,QAAwB/sB,IAAQof,OACxD,CAACC,KAAM/Q,IAAKH,EAAAA,MAAAA;AACJ,UAAAmnB,KAAwBrJ,GAAsB9d,EAC7C;AAAA,WAAA,EACFkR,GAAAA,IACH/Q,CAACA,EAAMgnB,GAAAA,GAAAA;AAAAA,EAAAA,GAGX,CAAA,CAAA;AAEK,SAAA;AAAA,IACLr3B,MAAM;AAAA,IACNE,YACAD;AAAAA,IAAAA,UAAU4uB,OAAOyI,KAAKp3B,EAAAA;AAAAA,IACtBsP,sBAAAA;AAAAA;GDfuBzN,EAAAA;"}