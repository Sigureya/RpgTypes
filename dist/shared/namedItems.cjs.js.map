{"version":3,"file":"namedItems.cjs.js","sources":["../../src/rmmz/rpg/data/gameData.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/collaps/collaps.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/collaps/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramExtra/extraParam.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramExtra/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramRegular/regularParam.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramRegular/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramSpecial/specialParam.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramSpecial/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/partyAbility/partyAbility.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/partyAbility/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/specialFlags/specialFlags.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/specialFlags/constants.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/define.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/effectCode/constants.ts","../../src/rmmz/rpg/data/resolveTraitLabels.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/constants/traitCode.ts","../../src/rmmz/system/core/rpgDataTypes/getSystemTypeNames.ts","../../src/rmmz/system/core/rpgDataTypes/namedItems.ts","../../src/rmmz/system/core/rpgDataTypes/kindConstants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/namedItems.ts"],"sourcesContent":["import type { NamedItemSource } from \"src/namedItemSource\";\r\nimport type { Data_CommonEventLike } from \"./event\";\r\nimport type { GameData } from \"./gameDataTypes\";\r\nimport type {\r\n  DataLabels,\r\n  Data_Skill,\r\n  Data_Actor,\r\n  Data_State,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_Item,\r\n  Data_Weapon,\r\n} from \"./main\";\r\nimport type {\r\n  SourceId_DataSkill,\r\n  SourceId_DataState,\r\n  SourceId_DataActor,\r\n  SourceId_DataArmor,\r\n  SourceId_DataClass,\r\n  SourceId_DataEnemy,\r\n  SourceId_DataItem,\r\n  SourceId_DataWeapon,\r\n  SourceId_DataCommonEvent,\r\n} from \"./main/sourceIdTypes\";\r\n\r\nexport const defineGameDataSources = (\r\n  data: GameData,\r\n  dataLabels: DataLabels\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineSkill(data.skills, dataLabels),\r\n    defineActor(data.actors, dataLabels),\r\n    defineState(data.states, dataLabels),\r\n    defineArmor(data.armors, dataLabels),\r\n    defineClass(data.classes, dataLabels),\r\n    defineEnemy(data.enemies, dataLabels),\r\n    defineItem(data.items, dataLabels),\r\n    defineWeapon(data.weapons, dataLabels),\r\n    defineCommonEvent(data.commonEvents, dataLabels),\r\n  ];\r\n};\r\n\r\nconst defineSkill = (\r\n  skills: Data_Skill[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    label: labels.skill.title,\r\n    items: skills,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"skill\",\r\n    } satisfies SourceId_DataSkill,\r\n  };\r\n};\r\n\r\nconst defineActor = (\r\n  actors: Data_Actor[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: actors,\r\n    label: labels.actor.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"actor\",\r\n    } satisfies SourceId_DataActor,\r\n  };\r\n};\r\n\r\nconst defineState = (\r\n  states: Data_State[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: states,\r\n    label: labels.state.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"state\",\r\n    } satisfies SourceId_DataState,\r\n  };\r\n};\r\n\r\nconst defineArmor = (\r\n  armors: Data_Armor[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: armors,\r\n    label: labels.armor.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      kind: \"armor\",\r\n      module: \"data\",\r\n    } satisfies SourceId_DataArmor,\r\n  };\r\n};\r\n\r\nconst defineClass = (\r\n  classes: Data_Class[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: classes,\r\n    label: labels.class.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"class\",\r\n    } satisfies SourceId_DataClass,\r\n  };\r\n};\r\n\r\nconst defineEnemy = (\r\n  enemies: Data_Enemy[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: enemies,\r\n    label: labels.enemy.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"enemy\",\r\n    } satisfies SourceId_DataEnemy,\r\n  };\r\n};\r\n\r\nconst defineItem = (\r\n  items: Data_Item[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: items,\r\n  label: labels.item.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"item\",\r\n  } satisfies SourceId_DataItem,\r\n});\r\nconst defineWeapon = (\r\n  weapons: Data_Weapon[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: weapons,\r\n  label: labels.weapon.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"weapon\",\r\n  } satisfies SourceId_DataWeapon,\r\n});\r\n\r\nconst defineCommonEvent = (\r\n  commonEvents: Data_CommonEventLike[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: commonEvents,\r\n  label: labels.commonEvent.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"common_event\",\r\n  } satisfies SourceId_DataCommonEvent,\r\n});\r\n","import type { SourceId_TraitCollaps } from \"@RpgTypes/rpg\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./constants\";\r\nimport type { CollapsOptionLabels, NormalLabel } from \"./labels\";\r\n\r\nexport const defineTraitCollapseType = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: NormalLabel\r\n): NamedItemSource => ({\r\n  items: collapsOptionsToArray(labels.options, global),\r\n  label: labels.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"collaps\",\r\n  } satisfies SourceId_TraitCollaps,\r\n});\r\n\r\nexport const collapsOptionsToArray = (\r\n  options: CollapsOptionLabels,\r\n  global: NormalLabel\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitExtraParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n} from \"./constants\";\r\nimport type { ExtraParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitExtraParam = (\r\n  xparam: TraitLabelWithOption<ExtraParamLabels>\r\n): NamedItemSource => ({\r\n  items: extraParamsToArray(xparam.options),\r\n  label: xparam.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"xparams\",\r\n  } satisfies SourceId_TraitExtraParam,\r\n});\r\n\r\nexport const extraParamsToArray = (\r\n  xparam: ExtraParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitRegularParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./constants\";\r\nimport type { RegularParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitRegularParam = (\r\n  param: TraitLabelWithOption<RegularParamLabels>\r\n): NamedItemSource => ({\r\n  items: regularParamsToArray(param.options),\r\n  label: param.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"params\",\r\n  } satisfies SourceId_TraitRegularParam,\r\n});\r\n\r\nexport const regularParamsToArray = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitSpecialParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_EXR,\r\n} from \"./constants\";\r\nimport type { SpecialParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitSpecialParam = (\r\n  specialParam: TraitLabelWithOption<SpecialParamLabels>\r\n): NamedItemSource => ({\r\n  items: specialParamsToArray(specialParam.options),\r\n  label: specialParam.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sparams\",\r\n  } satisfies SourceId_TraitSpecialParam,\r\n});\r\n\r\nexport const specialParamsToArray = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guardEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guardEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitPartyAbility } from \"../sourceIdTypes\";\r\nimport {\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n} from \"./constants\";\r\nimport type { PartyAbilityOptionLabels } from \"./labels\";\r\n\r\nexport const defineTraitPartyAbility = (\r\n  options: DomainLabel<PartyAbilityOptionLabels>\r\n): NamedItemSource => ({\r\n  items: partyAbilityToArray(options.options),\r\n  label: options.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"partyAbility\",\r\n  } satisfies SourceId_TraitPartyAbility,\r\n});\r\n\r\nexport const partyAbilityToArray = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { DomainLabel } from \"src/templates\";\r\nimport type { SourceId_TraitSpecialFlag } from \"../sourceIdTypes\";\r\nimport {\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./constants\";\r\nimport type { SpecialFlagOptions } from \"./labels\";\r\n\r\nexport const defineTraitSpecialFlag = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => ({\r\n  items: specialFlagToArray(label.options),\r\n  label: label.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sflag\",\r\n  } satisfies SourceId_TraitSpecialFlag,\r\n});\r\n\r\nexport const specialFlagToArray = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","import {\r\n  EFFECT_SPECIAL,\r\n  type SourceId_DataCommonEvent,\r\n  type SourceId_DataSkill,\r\n  type SourceId_DataState,\r\n  type SourceId_TraitRegularParam,\r\n} from \"@RpgTypes/rpg\";\r\nimport type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./effectCode\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\n\r\nexport const resolveItemEffectLabels = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved[] => {\r\n  return [\r\n    defineEffectRecoverHp(labels),\r\n    defineEffectRecoverMp(labels),\r\n    defineEffectGainTp(labels),\r\n    defineEffectAddState(labels),\r\n    defineEffectRemoveState(labels),\r\n    defineEffectAddBuff(labels),\r\n    defineEffectAddDebuff(labels),\r\n    defineEffectRemoveBuff(labels),\r\n    defineEffectRemoveDebuff(labels),\r\n    defineEffectSpecial(labels),\r\n    defineEffectGrow(labels),\r\n    defineEffectLearnSkill(labels),\r\n    defineEffectCommonEvent(labels),\r\n  ];\r\n};\r\n\r\nconst regularParamSourceId = (): SourceId_TraitRegularParam => ({\r\n  author: \"rmmz\",\r\n  module: \"trait\",\r\n  kind: \"params\",\r\n});\r\n\r\nconst stateSourceId = (): SourceId_DataState => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"state\",\r\n});\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  dataSource?: SourceIdentifier\r\n): EffectDefinitionResolved => ({\r\n  kindId: code,\r\n  label: baseLabel.domainName,\r\n  pattern: baseLabel.format,\r\n  description: baseLabel.desc,\r\n  dataSource: dataSource,\r\n});\r\n\r\nconst defineEffectSpecial = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_SPECIAL, labels.special);\r\n\r\nconst defineEffectRecoverHp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_HP, labels.recoverHp);\r\n\r\nconst defineEffectRecoverMp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_MP, labels.recoverMp);\r\n\r\nconst defineEffectGainTp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_GAIN_TP, labels.gainTp);\r\n\r\nconst defineEffectAddState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_STATE, labels.addState, stateSourceId());\r\n\r\nconst defineEffectRemoveState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_STATE, labels.removeState, stateSourceId());\r\n\r\nconst defineEffectAddBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_BUFF, labels.addBuff, regularParamSourceId());\r\n\r\nconst defineEffectAddDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_DEBUFF, labels.addDebuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_BUFF, labels.removeBuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    labels.removeDebuff,\r\n    regularParamSourceId()\r\n  );\r\n\r\nconst defineEffectGrow = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_GROW, labels.grow, regularParamSourceId());\r\n\r\nconst defineEffectLearnSkill = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_LEARN_SKILL, labels.learnSkill, {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"skill\",\r\n  } satisfies SourceId_DataSkill);\r\n\r\nconst defineEffectCommonEvent = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_COMMON_EVENT, labels.commonEvent, {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"common_event\",\r\n  } satisfies SourceId_DataCommonEvent);\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","import type {\r\n  SourceId_SystemArmorTypes,\r\n  SourceId_SystemElements,\r\n  SourceId_SystemEquipTypes,\r\n  SourceId_SystemSkillTypes,\r\n  SourceId_SystemWeaponTypes,\r\n} from \"@RpgTypes/system\";\r\nimport type { SourceId_DataState, SourceId_DataSkill } from \"./main\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./main/traitContainers/trait/core/constants\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RawTraitLabel,\r\n  RegularParamLabels,\r\n  SourceId_TraitCollaps,\r\n  SourceId_TraitExtraParam,\r\n  SourceId_TraitPartyAbility,\r\n  SourceId_TraitRegularParam,\r\n  SourceId_TraitSpecialFlag,\r\n  SourceId_TraitSpecialParam,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  TraitLabelWithOption,\r\n} from \"./main/traitContainers/trait/core/items\";\r\nimport type { TraitLabelSet } from \"./main/traitContainers/trait/core/labelSet\";\r\nimport type { TraitFormat } from \"./main/traitContainers/trait/core/types\";\r\n\r\nexport const resolveTraitLabels = (labels: TraitLabelSet): TraitFormat[] => {\r\n  return [\r\n    elementRate(labels.elementRate),\r\n    debuffRate(labels.debuffRate),\r\n    stateRate(labels.stateRate),\r\n    stateResist(labels.stateResist),\r\n\r\n    regularParam(labels.regularParam),\r\n    extraParam(labels.extraParam),\r\n    specialParam(labels.specialParam),\r\n    attackElement(labels.attackElement),\r\n    atttackState(labels.attackState),\r\n    attackSpeed(labels.attackSpeed),\r\n    attackTimes(labels.attackTimes),\r\n    attackSkill(labels.attackSkill),\r\n\r\n    skillTypeAdd(labels.skillTypeAdd),\r\n    skillTypeSeal(labels.skillTypeSeal),\r\n    skillAdd(labels.skillAdd),\r\n    skillSeal(labels.skillSeal),\r\n\r\n    equipWeaponType(labels.equipWeaponType),\r\n    equipArmorType(labels.equipArmorType),\r\n    equipLock(labels.equipLock),\r\n    equipSeal(labels.equipSeal),\r\n    slotType(labels.slotType),\r\n\r\n    actionPlus(labels.actionPlus),\r\n    specialFlag(labels.specialFlag),\r\n    collaps(labels.collaps),\r\n    partyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst regularParamSourceId = (): SourceId_TraitRegularParam => ({\r\n  author: \"rmmz\",\r\n  module: \"trait\",\r\n  kind: \"params\",\r\n});\r\n\r\nconst elementRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ELEMENT_RATE,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst debuffRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_DEBUFF_RATE,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst stateRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_STATE_RATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst stateResist = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_STATE_RESIST,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst regularParam = (\r\n  labels: TraitLabelWithOption<RegularParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_PARAM,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst extraParam = (\r\n  labels: TraitLabelWithOption<ExtraParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_XPARAM,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"xparams\",\r\n  } satisfies SourceId_TraitExtraParam,\r\n});\r\n\r\nconst specialParam = (\r\n  labels: TraitLabelWithOption<SpecialParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_SPARAM,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sparams\",\r\n  } satisfies SourceId_TraitSpecialParam,\r\n});\r\n\r\nconst attackElement = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_ELEMENT,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst atttackState = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_STATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst attackSpeed = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_SPEED,\r\n});\r\n\r\nconst attackTimes = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_TIMES,\r\n});\r\n\r\nconst attackSkill = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_SKILL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillTypeAdd = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_TYPE_ADD,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillTypeSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_TYPE_SEAL,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillAdd = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_ADD,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_SEAL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst equipWeaponType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_WEAPON_TYPE,\r\n  dataSource: systemWeaponTypesSourceId(),\r\n});\r\n\r\nconst equipArmorType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_ARMOR_TYPE,\r\n  dataSource: systemArmorTypesSourceId(),\r\n});\r\n\r\nconst equipLock = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_LOCK,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst equipSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_SEAL,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst slotType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SLOT_TYPE,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst actionPlus = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ACTION_PLUS,\r\n});\r\n\r\nconst specialFlag = (\r\n  labels: TraitLabelWithOption<SpecialFlagOptions>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_SPECIAL_FLAG,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sflag\",\r\n  } satisfies SourceId_TraitSpecialFlag,\r\n});\r\n\r\nconst collaps = (\r\n  label: TraitLabelWithOption<CollapsOptionLabels>\r\n): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_COLLAPSE_TYPE,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"collaps\",\r\n  } satisfies SourceId_TraitCollaps,\r\n});\r\n\r\nconst partyAbility = (\r\n  labels: TraitLabelWithOption<PartyAbilityOptionLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_PARTY_ABILITY,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"partyAbility\",\r\n  } satisfies SourceId_TraitPartyAbility,\r\n});\r\n\r\nconst stateSourceId = (): SourceId_DataState => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"state\",\r\n});\r\n\r\nconst skillSourceId = (): SourceId_DataSkill => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"skill\",\r\n});\r\n\r\nconst systemElementsSourceId = (): SourceId_SystemElements => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"elements\",\r\n});\r\n\r\nconst systemSkillTypesSourceId = (): SourceId_SystemSkillTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"skillTypes\",\r\n});\r\n\r\nconst systemWeaponTypesSourceId = (): SourceId_SystemWeaponTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"weaponTypes\",\r\n});\r\n\r\nconst systemArmorTypesSourceId = (): SourceId_SystemArmorTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"armorTypes\",\r\n});\r\n\r\nconst systemEquipTypesSourceId = (): SourceId_SystemEquipTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"equipTypes\",\r\n});\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type { System_RPG_DataNames } from \"./types\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<System_RPG_DataNames, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<System_RPG_DataNames, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<System_RPG_DataNames, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<System_RPG_DataNames, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<System_RPG_DataNames, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<System_RPG_DataNames, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSwitches = (\r\n  system: Pick<System_RPG_DataNames, \"switches\">\r\n): Data_NamedItem[] => {\r\n  return system.switches.map(makeNamedItem);\r\n};\r\n","import type { NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  getElementTypes,\r\n  getEquipTypes,\r\n  getWeaponTypes,\r\n  getSkillTypes,\r\n  getArmorTypes,\r\n  getVariableNames,\r\n  getSwitches,\r\n} from \"./getSystemTypeNames\";\r\nimport {\r\n  SRC_SYSTEM_SWITCHES,\r\n  SRC_SYSTEM_WEAPON_TYPES,\r\n  SRC_SYSTEM_ARMOR_TYPES,\r\n  SRC_SYSTEM_ELEMENTS,\r\n  SRC_SYSTEM_EQUIP_TYPES,\r\n  SRC_SYSTEM_SKILL_TYPES,\r\n  SRC_SYSTEM_VARIABLES,\r\n} from \"./kindConstants\";\r\nimport type {\r\n  SourceId_SystemArmorTypes,\r\n  SourceId_SystemElements,\r\n  SourceId_SystemEquipTypes,\r\n  SourceId_SystemSkillTypes,\r\n  SourceId_SystemSwitches,\r\n  SourceId_SystemVariables,\r\n  SourceId_SystemWeaponTypes,\r\n} from \"./sourceIdTypes\";\r\nimport type { System_RPG_DataNames, SystemLabel_DataNames } from \"./types\";\r\n\r\nexport const defineSystemItems = (\r\n  system: System_RPG_DataNames,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource[] => {\r\n  return [\r\n    buildElementTypesSource(system, label),\r\n    buildEquipTypesSource(system, label),\r\n    buildWeaponTypesSource(system, label),\r\n    buildSkillTypesSource(system, label),\r\n    buildArmorTypesSource(system, label),\r\n    buildVariableNamesSource(system, label),\r\n    buildSwitchesSource(system, label),\r\n  ];\r\n};\r\nconst buildArmorTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"armorTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getArmorTypes(system),\r\n  label: label.options.armorTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_ARMOR_TYPES,\r\n  } satisfies SourceId_SystemArmorTypes,\r\n});\r\n\r\nconst buildElementTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"elements\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getElementTypes(system),\r\n  label: label.options.elements,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_ELEMENTS,\r\n  } satisfies SourceId_SystemElements,\r\n});\r\n\r\nconst buildEquipTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"equipTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getEquipTypes(system),\r\n  label: label.options.equipTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_EQUIP_TYPES,\r\n  } satisfies SourceId_SystemEquipTypes,\r\n});\r\n\r\nconst buildSkillTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"skillTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSkillTypes(system),\r\n  label: label.options.skillTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_SKILL_TYPES,\r\n  } satisfies SourceId_SystemSkillTypes,\r\n});\r\n\r\nconst buildVariableNamesSource = (\r\n  system: Pick<System_RPG_DataNames, \"variables\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getVariableNames(system),\r\n  label: label.options.variables,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_VARIABLES,\r\n  } satisfies SourceId_SystemVariables,\r\n});\r\n\r\nconst buildSwitchesSource = (\r\n  system: Pick<System_RPG_DataNames, \"switches\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSwitches(system),\r\n  label: label.options.switches,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_SWITCHES,\r\n  } satisfies SourceId_SystemSwitches,\r\n});\r\n\r\nconst buildWeaponTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"weaponTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getWeaponTypes(system),\r\n  label: label.options.weaponTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_WEAPON_TYPES,\r\n  } satisfies SourceId_SystemWeaponTypes,\r\n});\r\n","export const SRC_SYSTEM_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_SYSTEM_ELEMENTS = \"elements\" as const;\r\nexport const SRC_SYSTEM_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SYSTEM_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_SYSTEM_VARIABLES = \"variable\" as const;\r\nexport const SRC_SYSTEM_SWITCHES = \"switch\" as const;\r\nexport const SRC_SYSTEM_WEAPON_TYPES = \"weaponTypes\" as const;\r\n","import type { GlobalLabel, TraitLabelSet } from \"@RpgTypes/rpg\";\r\nimport type { NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  defineTraitRegularParam,\r\n  defineTraitExtraParam,\r\n  defineTraitSpecialParam,\r\n  defineTraitCollapseType,\r\n  defineTraitSpecialFlag,\r\n  defineTraitPartyAbility,\r\n} from \"./items\";\r\n\r\nexport const defineTraitItems = (\r\n  set: TraitLabelSet,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineTraitRegularParam(set.regularParam),\r\n    defineTraitExtraParam(set.extraParam),\r\n    defineTraitSpecialParam(set.specialParam),\r\n    defineTraitCollapseType(set.collaps, global),\r\n    defineTraitSpecialFlag(set.specialFlag),\r\n    defineTraitPartyAbility(set.partyAbility),\r\n  ];\r\n};\r\n"],"names":["defineSkill","skills","labels","label","skill","title","items","source","author","module","kind","defineActor","actors","actor","defineState","states","state","defineArmor","armors","armor","defineClass","classes","class","defineEnemy","enemies","enemy","defineItem","item","defineWeapon","weapons","weapon","defineCommonEvent","commonEvents","commonEvent","defineTraitCollapseType","global","collapsOptionsToArray","options","id","name","normal","bossCollaps","instantCollaps","noneCollaps","defineTraitExtraParam","xparam","extraParamsToArray","hitRate","evasionRate","criticalRate","criticalEvasionRate","magicEvasionRate","magicReflectionRate","counterAttackRate","hpRegenerationRate","mpRegenerationRate","tpRegenerationRate","defineTraitRegularParam","param","regularParamsToArray","maxHp","maxMp","atk","def","matk","mdef","agi","luk","defineTraitSpecialParam","specialParam","specialParamsToArray","specialParams","targetRate","guardEffectRate","recoveryEffectRate","pharmacology","mpCostRate","tpChargeRate","physicalDamageRate","magicDamageRate","floorDamageRate","experienceRate","defineTraitPartyAbility","partyAbilityToArray","encounterHalf","encounterNone","cancelSurprise","raisePreemptive","goldDouble","dropItemDouble","defineTraitSpecialFlag","specialFlagToArray","autoBattle","guard","substitute","preventEscape","defineEffect","code","baseLabel","dataSource","kindId","domainName","pattern","format","description","desc","defineEffectSpecial","special","defineEffectRecoverHp","recoverHp","defineEffectRecoverMp","recoverMp","defineEffectGainTp","gainTp","defineEffectAddState","addState","defineEffectRemoveState","removeState","defineEffectAddBuff","addBuff","defineEffectAddDebuff","addDebuff","defineEffectRemoveBuff","removeBuff","defineEffectRemoveDebuff","removeDebuff","defineEffectGrow","grow","defineEffectLearnSkill","learnSkill","defineEffectCommonEvent","elementRate","systemElementsSourceId","debuffRate","stateRate","stateSourceId","stateResist","regularParam","extraParam","attackElement","atttackState","attackSpeed","attackTimes","attackSkill","skillSourceId","skillTypeAdd","systemSkillTypesSourceId","skillTypeSeal","skillAdd","skillSeal","equipWeaponType","systemWeaponTypesSourceId","equipArmorType","systemArmorTypesSourceId","equipLock","systemEquipTypesSourceId","equipSeal","slotType","actionPlus","specialFlag","collaps","partyAbility","makeNamedItem","index","getVariableNames","system","variables","map","getElementTypes","elements","getEquipTypes","equipTypes","getSkillTypes","skillTypes","getWeaponTypes","weaponTypes","getArmorTypes","armorTypes","getSwitches","switches","buildArmorTypesSource","buildElementTypesSource","buildEquipTypesSource","buildSkillTypesSource","buildVariableNamesSource","buildSwitchesSource","buildWeaponTypesSource","data","dataLabels","set","paramIndex","attackState"],"mappings":"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"}