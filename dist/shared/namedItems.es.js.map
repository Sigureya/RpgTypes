{"version":3,"file":"namedItems.es.js","sources":["../../src/rmmz/rpg/data/gameData.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/constants/traitCode.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/collaps/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/collaps/collaps.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramExtra/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramExtra/extraParam.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramRegular/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramRegular/regularParam.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramSpecial/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramSpecial/specialParam.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/partyAbility/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/partyAbility/partyAbility.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/specialFlags/constants.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/items/specialFlags/specialFlags.ts","../../src/rmmz/rpg/data/main/traitContainers/trait/core/namedItems.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/effectCode/constants.ts","../../src/rmmz/rpg/data/main/usableItems/core/itemEffect/define.ts","../../src/rmmz/rpg/data/resolveTraitLabels.ts","../../src/rmmz/system/core/rpgDataTypes/getSystemTypeNames.ts","../../src/rmmz/system/core/rpgDataTypes/namedItems.ts","../../src/rmmz/system/core/rpgDataTypes/kindConstants.ts"],"sourcesContent":["import type { NamedItemSource } from \"src/namedItemSource\";\r\nimport type { Data_CommonEventLike } from \"./event\";\r\nimport type { GameData } from \"./gameDataTypes\";\r\nimport type {\r\n  DataLabels,\r\n  Data_Skill,\r\n  Data_Actor,\r\n  Data_State,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_Item,\r\n  Data_Weapon,\r\n} from \"./main\";\r\nimport type {\r\n  SourceId_DataSkill,\r\n  SourceId_DataState,\r\n  SourceId_DataActor,\r\n  SourceId_DataArmor,\r\n  SourceId_DataClass,\r\n  SourceId_DataEnemy,\r\n  SourceId_DataItem,\r\n  SourceId_DataWeapon,\r\n  SourceId_DataCommonEvent,\r\n} from \"./main/sourceIdTypes\";\r\n\r\nexport const defineGameDataSources = (\r\n  data: GameData,\r\n  dataLabels: DataLabels\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineSkill(data.skills, dataLabels),\r\n    defineActor(data.actors, dataLabels),\r\n    defineState(data.states, dataLabels),\r\n    defineArmor(data.armors, dataLabels),\r\n    defineClass(data.classes, dataLabels),\r\n    defineEnemy(data.enemies, dataLabels),\r\n    defineItem(data.items, dataLabels),\r\n    defineWeapon(data.weapons, dataLabels),\r\n    defineCommonEvent(data.commonEvents, dataLabels),\r\n  ];\r\n};\r\n\r\nconst defineSkill = (\r\n  skills: Data_Skill[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    label: labels.skill.title,\r\n    items: skills,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"skill\",\r\n    } satisfies SourceId_DataSkill,\r\n  };\r\n};\r\n\r\nconst defineActor = (\r\n  actors: Data_Actor[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: actors,\r\n    label: labels.actor.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"actor\",\r\n    } satisfies SourceId_DataActor,\r\n  };\r\n};\r\n\r\nconst defineState = (\r\n  states: Data_State[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: states,\r\n    label: labels.state.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"state\",\r\n    } satisfies SourceId_DataState,\r\n  };\r\n};\r\n\r\nconst defineArmor = (\r\n  armors: Data_Armor[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: armors,\r\n    label: labels.armor.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      kind: \"armor\",\r\n      module: \"data\",\r\n    } satisfies SourceId_DataArmor,\r\n  };\r\n};\r\n\r\nconst defineClass = (\r\n  classes: Data_Class[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: classes,\r\n    label: labels.class.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"class\",\r\n    } satisfies SourceId_DataClass,\r\n  };\r\n};\r\n\r\nconst defineEnemy = (\r\n  enemies: Data_Enemy[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: enemies,\r\n    label: labels.enemy.title,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"enemy\",\r\n    } satisfies SourceId_DataEnemy,\r\n  };\r\n};\r\n\r\nconst defineItem = (\r\n  items: Data_Item[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: items,\r\n  label: labels.item.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"item\",\r\n  } satisfies SourceId_DataItem,\r\n});\r\nconst defineWeapon = (\r\n  weapons: Data_Weapon[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: weapons,\r\n  label: labels.weapon.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"weapon\",\r\n  } satisfies SourceId_DataWeapon,\r\n});\r\n\r\nconst defineCommonEvent = (\r\n  commonEvents: Data_CommonEventLike[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: commonEvents,\r\n  label: labels.commonEvent.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"common_event\",\r\n  } satisfies SourceId_DataCommonEvent,\r\n});\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","import type { SourceId_TraitCollaps } from \"@RpgTypes/rpg\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./constants\";\r\nimport type { CollapsOptionLabels, NormalLabel } from \"./labels\";\r\n\r\nexport const defineTraitCollapseType = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: NormalLabel\r\n): NamedItemSource => ({\r\n  items: collapsOptionsToArray(labels.options, global),\r\n  label: labels.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"collaps\",\r\n  } satisfies SourceId_TraitCollaps,\r\n});\r\n\r\nexport const collapsOptionsToArray = (\r\n  options: CollapsOptionLabels,\r\n  global: NormalLabel\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitExtraParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n} from \"./constants\";\r\nimport type { ExtraParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitExtraParam = (\r\n  xparam: TraitLabelWithOption<ExtraParamLabels>\r\n): NamedItemSource => ({\r\n  items: extraParamsToArray(xparam.options),\r\n  label: xparam.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"xparams\",\r\n  } satisfies SourceId_TraitExtraParam,\r\n});\r\n\r\nexport const extraParamsToArray = (\r\n  xparam: ExtraParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitRegularParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./constants\";\r\nimport type { RegularParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitRegularParam = (\r\n  param: TraitLabelWithOption<RegularParamLabels>\r\n): NamedItemSource => ({\r\n  items: regularParamsToArray(param.options),\r\n  label: param.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"params\",\r\n  } satisfies SourceId_TraitRegularParam,\r\n});\r\n\r\nexport const regularParamsToArray = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitSpecialParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_EXR,\r\n} from \"./constants\";\r\nimport type { SpecialParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitSpecialParam = (\r\n  specialParam: TraitLabelWithOption<SpecialParamLabels>\r\n): NamedItemSource => ({\r\n  items: specialParamsToArray(specialParam.options),\r\n  label: specialParam.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sparams\",\r\n  } satisfies SourceId_TraitSpecialParam,\r\n});\r\n\r\nexport const specialParamsToArray = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guardEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guardEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitPartyAbility } from \"../sourceIdTypes\";\r\nimport {\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n} from \"./constants\";\r\nimport type { PartyAbilityOptionLabels } from \"./labels\";\r\n\r\nexport const defineTraitPartyAbility = (\r\n  options: DomainLabel<PartyAbilityOptionLabels>\r\n): NamedItemSource => ({\r\n  items: partyAbilityToArray(options.options),\r\n  label: options.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"partyAbility\",\r\n  } satisfies SourceId_TraitPartyAbility,\r\n});\r\n\r\nexport const partyAbilityToArray = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { DomainLabel } from \"src/templates\";\r\nimport type { SourceId_TraitSpecialFlag } from \"../sourceIdTypes\";\r\nimport {\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./constants\";\r\nimport type { SpecialFlagOptions } from \"./labels\";\r\n\r\nexport const defineTraitSpecialFlag = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => ({\r\n  items: specialFlagToArray(label.options),\r\n  label: label.title,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sflag\",\r\n  } satisfies SourceId_TraitSpecialFlag,\r\n});\r\n\r\nexport const specialFlagToArray = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","import type { GlobalLabel, TraitLabelSet } from \"@RpgTypes/rpg\";\r\nimport type { NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  defineTraitRegularParam,\r\n  defineTraitExtraParam,\r\n  defineTraitSpecialParam,\r\n  defineTraitCollapseType,\r\n  defineTraitSpecialFlag,\r\n  defineTraitPartyAbility,\r\n} from \"./items\";\r\n\r\nexport const defineTraitItems = (\r\n  set: TraitLabelSet,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineTraitRegularParam(set.regularParam),\r\n    defineTraitExtraParam(set.extraParam),\r\n    defineTraitSpecialParam(set.specialParam),\r\n    defineTraitCollapseType(set.collaps, global),\r\n    defineTraitSpecialFlag(set.specialFlag),\r\n    defineTraitPartyAbility(set.partyAbility),\r\n  ];\r\n};\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","import {\r\n  EFFECT_SPECIAL,\r\n  type SourceId_DataCommonEvent,\r\n  type SourceId_DataSkill,\r\n  type SourceId_DataState,\r\n  type SourceId_TraitRegularParam,\r\n} from \"@RpgTypes/rpg\";\r\nimport type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./effectCode\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\n\r\nexport const resolveItemEffectLabels = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved[] => {\r\n  return [\r\n    defineEffectRecoverHp(labels),\r\n    defineEffectRecoverMp(labels),\r\n    defineEffectGainTp(labels),\r\n    defineEffectAddState(labels),\r\n    defineEffectRemoveState(labels),\r\n    defineEffectAddBuff(labels),\r\n    defineEffectAddDebuff(labels),\r\n    defineEffectRemoveBuff(labels),\r\n    defineEffectRemoveDebuff(labels),\r\n    defineEffectSpecial(labels),\r\n    defineEffectGrow(labels),\r\n    defineEffectLearnSkill(labels),\r\n    defineEffectCommonEvent(labels),\r\n  ];\r\n};\r\n\r\nconst regularParamSourceId = (): SourceId_TraitRegularParam => ({\r\n  author: \"rmmz\",\r\n  module: \"trait\",\r\n  kind: \"params\",\r\n});\r\n\r\nconst stateSourceId = (): SourceId_DataState => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"state\",\r\n});\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  dataSource?: SourceIdentifier\r\n): EffectDefinitionResolved => ({\r\n  kindId: code,\r\n  label: baseLabel.domainName,\r\n  pattern: baseLabel.format,\r\n  description: baseLabel.desc,\r\n  dataSource: dataSource,\r\n});\r\n\r\nconst defineEffectSpecial = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_SPECIAL, labels.special);\r\n\r\nconst defineEffectRecoverHp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_HP, labels.recoverHp);\r\n\r\nconst defineEffectRecoverMp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_MP, labels.recoverMp);\r\n\r\nconst defineEffectGainTp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_GAIN_TP, labels.gainTp);\r\n\r\nconst defineEffectAddState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_STATE, labels.addState, stateSourceId());\r\n\r\nconst defineEffectRemoveState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_STATE, labels.removeState, stateSourceId());\r\n\r\nconst defineEffectAddBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_BUFF, labels.addBuff, regularParamSourceId());\r\n\r\nconst defineEffectAddDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_DEBUFF, labels.addDebuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_BUFF, labels.removeBuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    labels.removeDebuff,\r\n    regularParamSourceId()\r\n  );\r\n\r\nconst defineEffectGrow = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_GROW, labels.grow, regularParamSourceId());\r\n\r\nconst defineEffectLearnSkill = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_LEARN_SKILL, labels.learnSkill, {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"skill\",\r\n  } satisfies SourceId_DataSkill);\r\n\r\nconst defineEffectCommonEvent = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_COMMON_EVENT, labels.commonEvent, {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"common_event\",\r\n  } satisfies SourceId_DataCommonEvent);\r\n","import type {\r\n  SourceId_SystemArmorTypes,\r\n  SourceId_SystemElements,\r\n  SourceId_SystemEquipTypes,\r\n  SourceId_SystemSkillTypes,\r\n  SourceId_SystemWeaponTypes,\r\n} from \"@RpgTypes/system\";\r\nimport type { SourceId_DataState, SourceId_DataSkill } from \"./main\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./main/traitContainers/trait/core/constants\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RawTraitLabel,\r\n  RegularParamLabels,\r\n  SourceId_TraitCollaps,\r\n  SourceId_TraitExtraParam,\r\n  SourceId_TraitPartyAbility,\r\n  SourceId_TraitRegularParam,\r\n  SourceId_TraitSpecialFlag,\r\n  SourceId_TraitSpecialParam,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  TraitLabelWithOption,\r\n} from \"./main/traitContainers/trait/core/items\";\r\nimport type { TraitLabelSet } from \"./main/traitContainers/trait/core/labelSet\";\r\nimport type { TraitFormat } from \"./main/traitContainers/trait/core/types\";\r\n\r\nexport const resolveTraitLabels = (labels: TraitLabelSet): TraitFormat[] => {\r\n  return [\r\n    elementRate(labels.elementRate),\r\n    debuffRate(labels.debuffRate),\r\n    stateRate(labels.stateRate),\r\n    stateResist(labels.stateResist),\r\n\r\n    regularParam(labels.regularParam),\r\n    extraParam(labels.extraParam),\r\n    specialParam(labels.specialParam),\r\n    attackElement(labels.attackElement),\r\n    atttackState(labels.attackState),\r\n    attackSpeed(labels.attackSpeed),\r\n    attackTimes(labels.attackTimes),\r\n    attackSkill(labels.attackSkill),\r\n\r\n    skillTypeAdd(labels.skillTypeAdd),\r\n    skillTypeSeal(labels.skillTypeSeal),\r\n    skillAdd(labels.skillAdd),\r\n    skillSeal(labels.skillSeal),\r\n\r\n    equipWeaponType(labels.equipWeaponType),\r\n    equipArmorType(labels.equipArmorType),\r\n    equipLock(labels.equipLock),\r\n    equipSeal(labels.equipSeal),\r\n    slotType(labels.slotType),\r\n\r\n    actionPlus(labels.actionPlus),\r\n    specialFlag(labels.specialFlag),\r\n    collaps(labels.collaps),\r\n    partyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst regularParamSourceId = (): SourceId_TraitRegularParam => ({\r\n  author: \"rmmz\",\r\n  module: \"trait\",\r\n  kind: \"params\",\r\n});\r\n\r\nconst elementRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ELEMENT_RATE,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst debuffRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_DEBUFF_RATE,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst stateRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_STATE_RATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst stateResist = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_STATE_RESIST,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst regularParam = (\r\n  labels: TraitLabelWithOption<RegularParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_PARAM,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst extraParam = (\r\n  labels: TraitLabelWithOption<ExtraParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_XPARAM,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"xparams\",\r\n  } satisfies SourceId_TraitExtraParam,\r\n});\r\n\r\nconst specialParam = (\r\n  labels: TraitLabelWithOption<SpecialParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_SPARAM,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sparams\",\r\n  } satisfies SourceId_TraitSpecialParam,\r\n});\r\n\r\nconst attackElement = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_ELEMENT,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst atttackState = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_STATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst attackSpeed = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_SPEED,\r\n});\r\n\r\nconst attackTimes = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_TIMES,\r\n});\r\n\r\nconst attackSkill = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ATTACK_SKILL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillTypeAdd = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_TYPE_ADD,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillTypeSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_TYPE_SEAL,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillAdd = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_ADD,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SKILL_SEAL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst equipWeaponType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_WEAPON_TYPE,\r\n  dataSource: systemWeaponTypesSourceId(),\r\n});\r\n\r\nconst equipArmorType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_ARMOR_TYPE,\r\n  dataSource: systemArmorTypesSourceId(),\r\n});\r\n\r\nconst equipLock = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_LOCK,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst equipSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_EQUIP_SEAL,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst slotType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_SLOT_TYPE,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst actionPlus = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_ACTION_PLUS,\r\n});\r\n\r\nconst specialFlag = (\r\n  labels: TraitLabelWithOption<SpecialFlagOptions>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_SPECIAL_FLAG,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sflag\",\r\n  } satisfies SourceId_TraitSpecialFlag,\r\n});\r\n\r\nconst collaps = (\r\n  label: TraitLabelWithOption<CollapsOptionLabels>\r\n): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.title,\r\n  kindId: TRAIT_COLLAPSE_TYPE,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"collaps\",\r\n  } satisfies SourceId_TraitCollaps,\r\n});\r\n\r\nconst partyAbility = (\r\n  labels: TraitLabelWithOption<PartyAbilityOptionLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.title,\r\n  kindId: TRAIT_PARTY_ABILITY,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"partyAbility\",\r\n  } satisfies SourceId_TraitPartyAbility,\r\n});\r\n\r\nconst stateSourceId = (): SourceId_DataState => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"state\",\r\n});\r\n\r\nconst skillSourceId = (): SourceId_DataSkill => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"skill\",\r\n});\r\n\r\nconst systemElementsSourceId = (): SourceId_SystemElements => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"elements\",\r\n});\r\n\r\nconst systemSkillTypesSourceId = (): SourceId_SystemSkillTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"skillTypes\",\r\n});\r\n\r\nconst systemWeaponTypesSourceId = (): SourceId_SystemWeaponTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"weaponTypes\",\r\n});\r\n\r\nconst systemArmorTypesSourceId = (): SourceId_SystemArmorTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"armorTypes\",\r\n});\r\n\r\nconst systemEquipTypesSourceId = (): SourceId_SystemEquipTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"equipTypes\",\r\n});\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type { System_RPG_DataNames } from \"./types\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<System_RPG_DataNames, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<System_RPG_DataNames, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<System_RPG_DataNames, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<System_RPG_DataNames, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<System_RPG_DataNames, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<System_RPG_DataNames, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSwitches = (\r\n  system: Pick<System_RPG_DataNames, \"switches\">\r\n): Data_NamedItem[] => {\r\n  return system.switches.map(makeNamedItem);\r\n};\r\n","import type { NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  getElementTypes,\r\n  getEquipTypes,\r\n  getWeaponTypes,\r\n  getSkillTypes,\r\n  getArmorTypes,\r\n  getVariableNames,\r\n  getSwitches,\r\n} from \"./getSystemTypeNames\";\r\nimport {\r\n  SRC_SYSTEM_SWITCHES,\r\n  SRC_SYSTEM_WEAPON_TYPES,\r\n  SRC_SYSTEM_ARMOR_TYPES,\r\n  SRC_SYSTEM_ELEMENTS,\r\n  SRC_SYSTEM_EQUIP_TYPES,\r\n  SRC_SYSTEM_SKILL_TYPES,\r\n  SRC_SYSTEM_VARIABLES,\r\n} from \"./kindConstants\";\r\nimport type {\r\n  SourceId_SystemArmorTypes,\r\n  SourceId_SystemElements,\r\n  SourceId_SystemEquipTypes,\r\n  SourceId_SystemSkillTypes,\r\n  SourceId_SystemSwitches,\r\n  SourceId_SystemVariables,\r\n  SourceId_SystemWeaponTypes,\r\n} from \"./sourceIdTypes\";\r\nimport type { System_RPG_DataNames, SystemLabel_DataNames } from \"./types\";\r\n\r\nexport const defineSystemItems = (\r\n  system: System_RPG_DataNames,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource[] => {\r\n  return [\r\n    buildElementTypesSource(system, label),\r\n    buildEquipTypesSource(system, label),\r\n    buildWeaponTypesSource(system, label),\r\n    buildSkillTypesSource(system, label),\r\n    buildArmorTypesSource(system, label),\r\n    buildVariableNamesSource(system, label),\r\n    buildSwitchesSource(system, label),\r\n  ];\r\n};\r\nconst buildArmorTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"armorTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getArmorTypes(system),\r\n  label: label.options.armorTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_ARMOR_TYPES,\r\n  } satisfies SourceId_SystemArmorTypes,\r\n});\r\n\r\nconst buildElementTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"elements\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getElementTypes(system),\r\n  label: label.options.elements,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_ELEMENTS,\r\n  } satisfies SourceId_SystemElements,\r\n});\r\n\r\nconst buildEquipTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"equipTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getEquipTypes(system),\r\n  label: label.options.equipTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_EQUIP_TYPES,\r\n  } satisfies SourceId_SystemEquipTypes,\r\n});\r\n\r\nconst buildSkillTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"skillTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSkillTypes(system),\r\n  label: label.options.skillTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_SKILL_TYPES,\r\n  } satisfies SourceId_SystemSkillTypes,\r\n});\r\n\r\nconst buildVariableNamesSource = (\r\n  system: Pick<System_RPG_DataNames, \"variables\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getVariableNames(system),\r\n  label: label.options.variables,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_VARIABLES,\r\n  } satisfies SourceId_SystemVariables,\r\n});\r\n\r\nconst buildSwitchesSource = (\r\n  system: Pick<System_RPG_DataNames, \"switches\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSwitches(system),\r\n  label: label.options.switches,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_SWITCHES,\r\n  } satisfies SourceId_SystemSwitches,\r\n});\r\n\r\nconst buildWeaponTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"weaponTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getWeaponTypes(system),\r\n  label: label.options.weaponTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_WEAPON_TYPES,\r\n  } satisfies SourceId_SystemWeaponTypes,\r\n});\r\n","export const SRC_SYSTEM_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_SYSTEM_ELEMENTS = \"elements\" as const;\r\nexport const SRC_SYSTEM_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SYSTEM_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_SYSTEM_VARIABLES = \"variable\" as const;\r\nexport const SRC_SYSTEM_SWITCHES = \"switch\" as const;\r\nexport const SRC_SYSTEM_WEAPON_TYPES = \"weaponTypes\" as const;\r\n"],"names":["defineGameDataSources","data","dataLabels","defineSkill","skills","defineActor","actors","defineState","states","defineArmor","armors","defineClass","classes","defineEnemy","enemies","defineItem","items","defineWeapon","weapons","defineCommonEvent","commonEvents","labels","label","skill","title","source","author","module","kind","actor","state","armor","class","enemy","item","weapon","commonEvent","TRAIT_ELEMENT_RATE","TRAIT_DEBUFF_RATE","TRAIT_STATE_RATE","TRAIT_STATE_RESIST","TRAIT_PARAM","TRAIT_XPARAM","TRAIT_SPARAM","TRAIT_ATTACK_ELEMENT","TRAIT_ATTACK_STATE","TRAIT_ATTACK_SPEED","TRAIT_ATTACK_TIMES","TRAIT_ATTACK_SKILL","TRAIT_SKILL_TYPE_ADD","TRAIT_SKILL_TYPE_SEAL","TRAIT_SKILL_ADD","TRAIT_SKILL_SEAL","TRAIT_EQUIP_WEAPON_TYPE","TRAIT_EQUIP_ARMOR_TYPE","TRAIT_EQUIP_LOCK","TRAIT_EQUIP_SEAL","TRAIT_SLOT_TYPE","TRAIT_ACTION_PLUS","TRAIT_SPECIAL_FLAG","TRAIT_COLLAPSE_TYPE","TRAIT_PARTY_ABILITY","COLLAPS_NORMAL","COLLAPS_BOSS","COLLAPS_INSTANT","COLLAPS_NONE","defineTraitCollapseType","global","collapsOptionsToArray","options","id","name","normal","bossCollaps","instantCollaps","noneCollaps","EXTRA_PARAM_HIT","EXTRA_PARAM_EVA","EXTRA_PARAM_CRI","EXTRA_PARAM_CEV","EXTRA_PARAM_MEV","EXTRA_PARAM_MRF","EXTRA_PARAM_CNT","EXTRA_PARAM_HRG","EXTRA_PARAM_MRG","EXTRA_PARAM_TRG","defineTraitExtraParam","xparam","extraParamsToArray","hitRate","evasionRate","criticalRate","criticalEvasionRate","magicEvasionRate","magicReflectionRate","counterAttackRate","hpRegenerationRate","mpRegenerationRate","tpRegenerationRate","extraParamName","paramIndex","REGULAR_PARAM_MAX_HP","REGULAR_PARAM_MAX_MP","REGULAR_PARAM_ATK","REGULAR_PARAM_DEF","REGULAR_PARAM_MATK","REGULAR_PARAM_MDEF","REGULAR_PARAM_AGI","REGULAR_PARAM_LUK","defineTraitRegularParam","param","regularParamsToArray","maxHp","maxMp","atk","def","matk","mdef","agi","luk","regularParamName","SPECIAL_PARAM_TGR","SPECIAL_PARAM_GRD","SPECIAL_PARAM_REC","SPECIAL_PARAM_PHA","SPECIAL_PARAM_MCR","SPECIAL_PARAM_TCR","SPECIAL_PARAM_PDR","SPECIAL_PARAM_MDR","SPECIAL_PARAM_FDR","SPECIAL_PARAM_EXR","defineTraitSpecialParam","specialParam","specialParamsToArray","specialParams","targetRate","guardEffectRate","recoveryEffectRate","pharmacology","mpCostRate","tpChargeRate","physicalDamageRate","magicDamageRate","floorDamageRate","experienceRate","specialParamName","PARTY_ABILITY_ENCOUNTER_HALF","PARTY_ABILITY_ENCOUNTER_NONE","PARTY_ABILITY_CANCEL_SURPRISE","PARTY_ABILITY_RAISE_PREEMPTIVE","PARTY_ABILITY_GOLD_DOUBLE","PARTY_ABILITY_DROP_ITEM_DOUBLE","defineTraitPartyAbility","partyAbilityToArray","encounterHalf","encounterNone","cancelSurprise","raisePreemptive","goldDouble","dropItemDouble","FLAG_ID_AUTO_BATTLE","FLAG_ID_GUARD","FLAG_ID_SUBSTITUTE","FLAG_ID_PRESERVE_TP","defineTraitSpecialFlag","specialFlagToArray","autoBattle","guard","substitute","preventEscape","defineTraitItems","set","regularParam","extraParam","collaps","specialFlag","partyAbility","EFFECT_RECOVER_HP","EFFECT_RECOVER_MP","EFFECT_GAIN_TP","EFFECT_ADD_STATE","EFFECT_REMOVE_STATE","EFFECT_ADD_BUFF","EFFECT_ADD_DEBUFF","EFFECT_REMOVE_BUFF","EFFECT_REMOVE_DEBUFF","EFFECT_SPECIAL","EFFECT_GROW","EFFECT_LEARN_SKILL","EFFECT_COMMON_EVENT","resolveItemEffectLabels","defineEffectRecoverHp","defineEffectRecoverMp","defineEffectGainTp","defineEffectAddState","defineEffectRemoveState","defineEffectAddBuff","defineEffectAddDebuff","defineEffectRemoveBuff","defineEffectRemoveDebuff","defineEffectSpecial","defineEffectGrow","defineEffectLearnSkill","defineEffectCommonEvent","defineEffect","code","baseLabel","dataSource","kindId","domainName","pattern","format","description","desc","special","recoverHp","recoverMp","gainTp","addState","removeState","addBuff","addDebuff","removeBuff","removeDebuff","grow","learnSkill","resolveTraitLabels","elementRate","debuffRate","stateRate","stateResist","attackElement","atttackState","attackState","attackSpeed","attackTimes","attackSkill","skillTypeAdd","skillTypeSeal","skillAdd","skillSeal","equipWeaponType","equipArmorType","equipLock","equipSeal","slotType","actionPlus","systemElementsSourceId","stateSourceId","skillSourceId","systemSkillTypesSourceId","systemWeaponTypesSourceId","systemArmorTypesSourceId","systemEquipTypesSourceId","makeNamedItem","index","getVariableNames","system","variables","map","getElementTypes","elements","getEquipTypes","equipTypes","getSkillTypes","skillTypes","getWeaponTypes","weaponTypes","getArmorTypes","armorTypes","getSwitches","switches","defineSystemItems","buildElementTypesSource","buildEquipTypesSource","buildWeaponTypesSource","buildSkillTypesSource","buildArmorTypesSource","buildVariableNamesSource","buildSwitchesSource"],"mappings":"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"}