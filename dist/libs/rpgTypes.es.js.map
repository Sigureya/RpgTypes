{"version":3,"file":"rpgTypes.es.js","sources":["../../src/libs/folderNames/asset/audio.ts","../../src/libs/folderNames/asset/images.ts","../../src/libs/folderNames/data/fileNames.ts","../../src/libs/folderNames/folderName.ts","../../src/libs/namedItemSource/labels/mergeLabel.ts","../../src/libs/namedItemSource/transformers/data/system/getSystemTypeNames.ts","../../src/libs/namedItemSource/transformers/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/constants/traitCode.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/collaps/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/partyAbility/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/specialFlags/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramExtra/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramRegular/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramSpecial/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/battlerParam.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/makeOptions.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/buildSource.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/default.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/traitLabelDescriptor.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/labelDefine.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/types/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/actor/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/actor/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/armor/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/armor/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/class/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/class/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/state/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/state/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/weaponDefault.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/enemy/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/enemy/schema.ts","../../src/libs/schema/data/rpg/main/usableItems/make.ts","../../src/libs/schema/data/rpg/main/usableItems/schema.ts","../../src/libs/schema/data/rpg/main/usableItems/types/hitType/constants.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/labels/defaultLabelSet.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/constants/effectCode.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/constants/specialEffect.ts","../../src/libs/schema/namedItemSource/sourceIdentifier/make.ts","../../src/libs/schema/namedItemSource/lisrSrc/constants.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/itemEffectDescriptor.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/define.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/item/itemDefault.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/skill/skillDefault.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/usableItemDefault.ts","../../src/libs/schema/data/rpg/main/defaultDataLabels.ts","../../src/libs/schema/data/rpg/main/members/damage/damageDefault.ts","../../src/libs/schema/data/rpg/main/members/damage/make.ts","../../src/libs/schema/data/rpg/main/members/damage/schema.ts","../../src/libs/schema/data/rpg/main/validate.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/eventCommandCodes.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/types/domains/moveRoute/constants.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/make.ts","../../src/libs/schema/data/rpg/event/map/event/condition/make.ts","../../src/libs/schema/data/rpg/event/map/event/make.ts","../../src/libs/schema/data/rpg/event/map/mapInfo/schema.ts","../../src/libs/schema/data/rpg/event/map/mapInfo/make.ts","../../src/libs/schema/data/rpg/event/map/make.ts","../../src/libs/schema/data/rpg/event/makeEvent.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/moveRoute/schema.ts","../../src/libs/schema/data/rpg/event/map/event/condition/schema.ts","../../src/libs/schema/data/rpg/event/map/schema.ts","../../src/libs/schema/data/rpg/event/validate.ts","../../src/libs/schema/data/rpg/system/members/advanced/advanced.ts","../../src/libs/schema/data/rpg/system/members/advanced/schema.ts","../../src/libs/utils/types/audioFileParams/make.ts","../../src/libs/schema/data/rpg/system/members/soundArray/make.ts","../../src/libs/schema/data/rpg/system/systemLabels.ts","../../src/libs/schema/data/rpg/note/note.ts","../../src/libs/schema/data/rpg/controlChars/controlChars.ts","../../src/libs/schema/data/rpg/controlChars/getContolChars.ts","../../src/libs/schema/data/rpg/controlChars/constants.ts","../../src/libs/schema/data/rpg/dataToCtrlChar.ts","../../src/libs/schema/labelUtils/default.ts","../../src/libs/schema/labelRegistryDefault.ts","../../src/libs/eventCommand/commands/message/showMessage/schema.ts","../../src/libs/eventCommand/commands/message/inputNumber/schema.ts","../../src/libs/eventCommand/commands/audio/play/schema.ts","../../src/libs/eventCommand/commands/message/setupChoice/schema.ts","../../src/libs/eventCommand/commands/message/scrollText/schema.ts","../../src/libs/eventCommand/commands/actor/changeText/schema.ts","../../src/libs/eventCommand/commands/flow/callCommonEvent/schema.ts","../../src/libs/eventCommand/unionSchema.ts","../../src/libs/eventCommand/validate.ts","../../src/libs/eventCommand/validateTextBody.ts","../../src/libs/eventCommand/commands/actor/changeText/make.ts","../../src/libs/eventCommand/commands/audio/play/make.ts","../../src/libs/eventCommand/commands/message/comment/make.ts","../../src/libs/eventCommand/commands/message/inputNumber/make.ts","../../src/libs/eventCommand/commands/message/scrollText/make.ts","../../src/libs/eventCommand/commands/message/setupChoice/make.ts","../../src/libs/eventCommand/commands/message/showMessage/convert.ts","../../src/libs/eventCommand/commands/script/make.ts","../../src/libs/eventCommand/commands/variable/constants.ts","../../src/libs/eventCommand/commands/variable/getValue.ts","../../src/libs/eventCommand/commands/variable/types/enemy/dataSource.ts","../../src/libs/eventCommand/commands/variable/convert.ts","../../src/libs/eventCommand/commands/flow/controlSwtches/make.ts","../../src/libs/eventCommand/commands/flow/callCommonEvent/make.ts","../../src/libs/eventCommand/validateAudio.ts","../../src/libs/eventCommand/utils/clone/clone.ts"],"sourcesContent":["export const FOLDER_AUDIO_BGM = \"bgm\" as const;\r\nexport const FOLDER_AUDIO_SE = \"se\" as const;\r\nexport const FOLDER_AUDIO_ME = \"me\" as const;\r\nexport const FOLDER_AUDIO_BGS = \"bgs\" as const;\r\n","export const FOLDER_IMG_BATTLEBACK1 = \"battlebacks1\" as const;\r\nexport const FOLDER_IMG_BATTLEBACK2 = \"battlebacks2\" as const;\r\nexport const FOLDER_IMG_CHACTERS = \"characters\" as const;\r\nexport const FOLDER_IMG_ENEMIES = \"enemies\" as const;\r\nexport const FOLDER_IMG_FACES = \"faces\" as const;\r\nexport const FOLDER_IMG_PARALLACES = \"parallaxes\" as const;\r\nexport const FOLDER_IMG_PICTURES = \"pictures\" as const;\r\nexport const FOLDER_IMG_SV_ACTORS = \"sv_actors\" as const;\r\nexport const FOLDER_IMG_SV_ENEMIES = \"sv_enemies\" as const;\r\nexport const FOLDER_IMG_SYSTEM = \"system\" as const;\r\nexport const FOLDER_IMG_TILESETS = \"tilesets\" as const;\r\nexport const FOLDER_IMG_TITLES1 = \"titles1\" as const;\r\nexport const FOLDER_IMG_TITLES2 = \"titles2\" as const;\r\n","export const FILENAME_SYSTEM = \"System.json\";\r\nexport const FILENAME_ACTORS = \"Actors.json\";\r\nexport const FILENAME_CLASSES = \"Classes.json\";\r\nexport const FILENAME_SKILLS = \"Skills.json\";\r\nexport const FILENAME_ITEMS = \"Items.json\";\r\nexport const FILENAME_WEAPONS = \"Weapons.json\";\r\nexport const FILENAME_ARMORS = \"Armors.json\";\r\nexport const FILENAME_ENEMIES = \"Enemies.json\";\r\nexport const FILENAME_TROOPS = \"Troops.json\";\r\nexport const FILENAME_STATES = \"States.json\";\r\nexport const FILENAME_ANIMATIONS = \"Animations.json\";\r\nexport const FILENAME_TILESET = \"Tilesets.json\";\r\nexport const FILENAME_COMMON_EVENTS = \"CommonEvents.json\";\r\nexport const FILENAME_MAP_INFOS = \"MapInfos.json\";\r\n","export const FOLDER_DATA = \"data\" as const;\r\nexport const FOLDER_IMG = \"img\" as const;\r\nexport const FOLDER_AUDIO = \"audio\" as const;\r\nexport const FOLDER_JS = \"js\" as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\n\r\nexport type PrimitiveRecord<T> = Record<keyof T, string>;\r\n\r\nexport const mergeWithDefaults = <T>(\r\n  defaultLabels: Record<keyof T, string>,\r\n  labels: Partial<T>\r\n): {\r\n  [K in keyof T]: string;\r\n} => {\r\n  const reulst = { ...defaultLabels };\r\n  for (const key in defaultLabels) {\r\n    const value = labels[key];\r\n    if (typeof value === \"string\") {\r\n      reulst[key] = value;\r\n    }\r\n  }\r\n  return reulst;\r\n};\r\n\r\nexport const mergeDomainLabel = <T>(\r\n  base: DomainLabel<PrimitiveRecord<T>>,\r\n  override: Partial<DomainLabel<Partial<T>>>\r\n): DomainLabel<{ [K in keyof T]: string }> => {\r\n  return {\r\n    domainName: override.domainName ?? base.domainName,\r\n    options: mergeWithDefaults(base.options, override.options ?? {}),\r\n  };\r\n};\r\n\r\nexport const mergeNestedPrimitiveRecords = <T>(\r\n  base: T,\r\n  override: Partial<{ [K in keyof T]: Partial<PrimitiveRecord<T[K]>> }>\r\n): T => {\r\n  const result: Partial<T> = {};\r\n  for (const domain in base) {\r\n    const domainBase = base[domain];\r\n    const domainOverride = override[domain] ?? {};\r\n    result[domain] = mergeWithDefaults(\r\n      domainBase as Required<typeof domainOverride>,\r\n      domainOverride\r\n    ) as T[typeof domain];\r\n  }\r\n  return result as T;\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  Data_System,\r\n  System_ParamNames,\r\n} from \"@RpgTypes/schema\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<Data_System, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<Data_System, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<Data_System, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<Data_System, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<Data_System, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<Data_System, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getParamNames = (system: System_ParamNames): Data_NamedItem[] => {\r\n  return system.terms.params.map(makeNamedItem);\r\n};\r\n","export const AUTHOR_RMMZ = \"rmmz\" as const;\r\nexport const MODULE_TRAIT = \"trait\" as const;\r\nexport const MODULE_DATA = \"data\" as const;\r\nexport const MODULE_SYSTEM = \"system\" as const;\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type {\r\n  RegularParamLabels,\r\n  ExtraParamLabels,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_LUK,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_MDEF,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n} from \"./types\";\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guradEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","import type { Data_NamedItem, GlobalLabel } from \"@RpgTypes/schema/\";\r\nimport {\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./types/specialFlags\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./types/collaps\";\r\n\r\nimport {\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n} from \"./types/partyAbility\";\r\n\r\nimport {\r\n  EXTRA_PARAM_TRG,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n} from \"./types/paramExtra\";\r\nimport {\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_TGR,\r\n} from \"./types/paramSpecial\";\r\nimport {\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./types/paramRegular\";\r\n\r\nexport const foldCollapsOptions = (\r\n  options: CollapsOptionLabels,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldPartyAbilityOptions = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldRegularParam = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const foldExtraParam = (xparam: ExtraParamLabels): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialParams = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guradEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialFlag = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","import type { GlobalLabel, NamedItemSource } from \"@RpgTypes/schema\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  SRC_TRAIT_COLLAPS,\r\n  SRC_PARAMS_EXTRA,\r\n  SRC_PARAMS_REGULAR,\r\n  SRC_PARAMS_SPECIAL,\r\n  SRC_TRAIT_PARTY_ABILITY,\r\n  SRC_TRAIT_SPECIAL_FLAG,\r\n} from \"@RpgTypes/schema\";\r\n\r\nimport {\r\n  foldCollapsOptions,\r\n  foldExtraParam,\r\n  foldPartyAbilityOptions,\r\n  foldRegularParam,\r\n  foldSpecialFlag,\r\n  foldSpecialParams,\r\n} from \"./makeOptions\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport { AUTHOR_RMMZ, MODULE_TRAIT } from \"@RpgTypes/namedItemSource\";\r\n\r\nexport const traitDomain = <T>(\r\n  sourceKey: string,\r\n  labels: DomainLabel<T>,\r\n  fn: (options: T) => { name: string; id: number }[]\r\n): NamedItemSource => {\r\n  return {\r\n    items: fn(labels.options),\r\n    label: labels.domainName,\r\n    source: {\r\n      author: AUTHOR_RMMZ,\r\n      module: MODULE_TRAIT,\r\n      kind: sourceKey,\r\n    },\r\n  };\r\n};\r\n\r\nexport const buildCollapsSource = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_COLLAPS, labels, (col) =>\r\n    foldCollapsOptions(col, global)\r\n  );\r\n};\r\n\r\nexport const buildPartyAbilitySource = (\r\n  labels: DomainLabel<PartyAbilityOptionLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_PARTY_ABILITY, labels, foldPartyAbilityOptions);\r\n};\r\n\r\nexport const buildRegularParamSource = (\r\n  label: DomainLabel<RegularParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_REGULAR, label, foldRegularParam);\r\n};\r\n\r\nexport const buildExtraParamSource = (\r\n  label: DomainLabel<ExtraParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_EXTRA, label, foldExtraParam);\r\n};\r\n\r\nexport const buildSpecialParamSource = (\r\n  label: DomainLabel<SpecialParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_SPECIAL, label, foldSpecialParams);\r\n};\r\n\r\nexport const buildSpecialFlagSource = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_SPECIAL_FLAG, label, foldSpecialFlag);\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { TraitLabelSet } from \"./labelSet\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  RawTraitLabel,\r\n  TraitLabelWithOption,\r\n} from \"./types/\";\r\n\r\nconst FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_PARAM_RATE_MUL = \"{name} * {value}%\" as const;\r\nconst FORMAT_PARAM_RATE_PLUS = \"{name} + {value}%\" as const;\r\nconst FORMAT_PARAM_VALUE = \"{value}\" as const;\r\n\r\nexport const LABEL_SET_TRAIT = {\r\n  domainName: \"特徴\",\r\n  options: {\r\n    regularParam: {\r\n      domainName: \"基本能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        maxHp: \"最大HP\",\r\n        maxMp: \"最大MP\",\r\n        atk: \"攻撃力\",\r\n        def: \"防御力\",\r\n        matk: \"魔法攻撃力\",\r\n        mdef: \"魔法防御力\",\r\n        agi: \"敏捷性\",\r\n        luk: \"運\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<RegularParamLabels>,\r\n    extraParam: {\r\n      domainName: \"追加能力値\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n      options: {\r\n        hitRate: \"命中率\",\r\n        evasionRate: \"回避率\",\r\n        criticalRate: \"クリティカル率\",\r\n        criticalEvasionRate: \"クリティカル回避率\",\r\n        magicEvasionRate: \"魔法回避率\",\r\n        magicReflectionRate: \"魔法反射率\",\r\n        counterAttackRate: \"反撃率\",\r\n        hpRegenerationRate: \"HP再生率\",\r\n        mpRegenerationRate: \"MP再生率\",\r\n        tpRegenerationRate: \"TP再生率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<ExtraParamLabels>,\r\n    specialParam: {\r\n      domainName: \"特殊能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        targetRate: \"狙われ率\",\r\n        guradEffectRate: \"防御効果率\",\r\n        recoveryEffectRate: \"回復効果率\",\r\n        pharmacology: \"薬の知識\",\r\n        mpCostRate: \"MP消費率\",\r\n        tpChargeRate: \"TPチャージ率\",\r\n        physicalDamageRate: \"物理ダメージ率\",\r\n        magicDamageRate: \"魔法ダメージ率\",\r\n        floorDamageRate: \"床ダメージ率\",\r\n        experienceRate: \"経験値率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialParamLabels>,\r\n    specialFlag: {\r\n      domainName: \"特殊フラグ\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        autoBattle: \"自動戦闘\",\r\n        guard: \"防御\",\r\n        substitute: \"身代わり\",\r\n        preventEscape: \"逃走防止\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialFlagOptions>,\r\n    collaps: {\r\n      domainName: \"消滅エフェクト\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        bossCollaps: \"ボス崩壊\",\r\n        instantCollaps: \"即時崩壊\",\r\n        noneCollaps: \"崩壊なし\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<CollapsOptionLabels>,\r\n    partyAbility: {\r\n      domainName: \"パーティ能力\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        cancelSurprise: \"不意打ち無効\",\r\n        dropItemDouble: \"アイテムドロップ2倍\",\r\n        encounterHalf: \"エンカウント半減\",\r\n        encounterNone: \"エンカウントなし\",\r\n        goldDouble: \"ゴールド2倍\",\r\n        raisePreemptive: \"先制攻撃率アップ\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<PartyAbilityOptionLabels>,\r\n    elementRate: {\r\n      domainName: \"属性有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    debuffRate: {\r\n      domainName: \"弱体有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateRate: {\r\n      domainName: \"ステート有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateResist: {\r\n      domainName: \"ステート無効\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackElement: {\r\n      domainName: \"攻撃属性\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackState: {\r\n      domainName: \"攻撃ステート\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSpeed: {\r\n      domainName: \"攻撃速度補正\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    attackTimes: {\r\n      domainName: \"攻撃追加回数\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    actionPlus: {\r\n      domainName: \"行動追加\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSkill: {\r\n      domainName: \"攻撃スキル\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipWeaponType: {\r\n      domainName: \"装備武器タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipArmorType: {\r\n      domainName: \"装備防具タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipLock: {\r\n      domainName: \"装備固定\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipSeal: {\r\n      domainName: \"装備封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    slotType: {\r\n      domainName: \"スロットタイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillAdd: {\r\n      domainName: \"スキル追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeAdd: {\r\n      domainName: \"スキルタイプ追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n  },\r\n} as const satisfies DomainLabel<TraitLabelSet>;\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema\";\r\nimport type { TraitLabelResolved } from \"./options\";\r\nimport type { Trait } from \"./types\";\r\n\r\nconst PLACEHOLDER_VALUE = \"{value}\" as const;\r\nconst PLACEHOLDER_NAME = \"{name}\" as const;\r\n\r\nexport class TraitDescriptor implements TraitLabelResolved {\r\n  constructor(\r\n    public readonly code: number,\r\n    public readonly label: string,\r\n    public readonly format: string,\r\n    public readonly dataSource?: Readonly<SourceIdentifier>\r\n  ) {}\r\n  match(trait: Trait): boolean {\r\n    return this.code === trait.code;\r\n  }\r\n  testTraitCode(trait: Trait) {\r\n    if (this.match(trait)) {\r\n      return;\r\n    }\r\n    // throw new Error(\r\n    //   `${this.label} Trait code mismatch.  this.code:${this.code} trait.code:${trait.code}`\r\n    // );\r\n  }\r\n  formatText(\r\n    trait: Trait,\r\n    resolveName: (\r\n      dataSource: Readonly<SourceIdentifier>,\r\n      dataId: number\r\n    ) => string\r\n  ): string {\r\n    this.testTraitCode(trait);\r\n    const text = this.format.replaceAll(\r\n      PLACEHOLDER_VALUE,\r\n      trait.value.toString()\r\n    );\r\n    if (!this.dataSource) {\r\n      return text;\r\n    }\r\n    return text.replaceAll(\r\n      PLACEHOLDER_NAME,\r\n      resolveName(this.dataSource, trait.dataId)\r\n    );\r\n  }\r\n  requiresValue(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE);\r\n  }\r\n  requiresName(): boolean {\r\n    return this.format.includes(PLACEHOLDER_NAME);\r\n  }\r\n\r\n  invalidPlaceHolder(): string[] {\r\n    const allowed = [\"value\", \"name\"];\r\n    const matches: RegExpExecArray[] = [\r\n      ...this.format.matchAll(/\\{([^}]+)\\}/g),\r\n    ];\r\n    return matches.map((m) => m[1]).filter((key) => !allowed.includes(key));\r\n  }\r\n  isFormatValidForDataSource(): boolean {\r\n    if (this.dataSource && !this.requiresName()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  diagnose(): TraitLabelDiagnostic {\r\n    const soruceError = !this.isFormatValidForDataSource();\r\n    const nameError = this.requiresName() && !this.dataSource;\r\n    const invalidPlaceHolder = this.invalidPlaceHolder();\r\n\r\n    return {\r\n      code: this.code,\r\n      label: this.label,\r\n      format: this.format,\r\n      hasError: soruceError || nameError || invalidPlaceHolder.length > 0,\r\n      missingDataSourceError: soruceError,\r\n      sourceMismatchError: nameError,\r\n      invalidPlaceHolders: invalidPlaceHolder,\r\n    };\r\n  }\r\n}\r\n\r\nexport interface TraitLabelDiagnostic {\r\n  format: string;\r\n  code: number;\r\n  label: string;\r\n  hasError: boolean;\r\n  missingDataSourceError: boolean;\r\n  sourceMismatchError: boolean;\r\n  invalidPlaceHolders: string[];\r\n}\r\n","import type { SourceIdentifier } from \"src/libs\";\r\nimport {\r\n  SRC_ARMOR_TYPES,\r\n  SRC_DATA_SKILL,\r\n  SRC_DATA_STATE,\r\n  SRC_ELEMENTS,\r\n  SRC_PARAMS_EXTRA,\r\n  SRC_PARAMS_REGULAR,\r\n  SRC_PARAMS_SPECIAL,\r\n  SRC_TRAIT_COLLAPS,\r\n  SRC_TRAIT_PARTY_ABILITY,\r\n  SRC_TRAIT_SPECIAL_FLAG,\r\n  SRC_WEAPON_TYPES,\r\n} from \"src/libs\";\r\nimport type { RawTraitLabel, TraitLabelSet } from \"./options\";\r\nimport { LABEL_SET_TRAIT } from \"./options\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./constants\";\r\nimport {\r\n  AUTHOR_RMMZ,\r\n  MODULE_DATA,\r\n  MODULE_SYSTEM,\r\n  MODULE_TRAIT,\r\n} from \"@RpgTypes/namedItemSource\";\r\nimport { TraitDescriptor } from \"./traitLabelDescriptor\";\r\n\r\nexport const resolveTraitLabels = (\r\n  labels: TraitLabelSet\r\n): TraitDescriptor[] => {\r\n  return [\r\n    defineTraitElementRate(labels.elementRate),\r\n    defineTraitDebuffRate(labels.debuffRate),\r\n    defineTraitStateRate(labels.stateRate),\r\n    defineTraitStateResist(labels.stateResist),\r\n    defineTraitRegularParam(labels.regularParam),\r\n    defineTraitExtraParam(labels.extraParam),\r\n    defineTraitSpecialParam(labels.specialParam),\r\n    defineTraitAttackElement(labels.attackElement),\r\n    defineTraitAttackState(labels.attackState),\r\n    defineTraitAttackSpeed(labels.attackSpeed),\r\n    defineTraitAttackTimes(labels.attackTimes),\r\n    defineTraitAttackSkill(labels.attackSkill),\r\n    defineTraitSkillTypeAdd(labels.skillTypeAdd),\r\n    defineTraitSkillTypeSeal(labels.skillTypeSeal),\r\n    defineTraitSkillAdd(labels.skillAdd),\r\n    defineTraitSkillSeal(labels.skillSeal),\r\n    defineTraitEquipWeaponType(labels.equipWeaponType),\r\n    defineTraitEquipArmorType(labels.equipArmorType),\r\n    defineTraitEquipLock(labels.equipLock),\r\n    defineTraitEquipSeal(labels.equipSeal),\r\n    defineTraitSlotType(labels.slotType),\r\n    defineTraitActionPlus(labels.actionPlus),\r\n    defineTraitSpecialFlag(labels.specialFlag),\r\n    defineTraitCollapseType(labels.collaps),\r\n    defineTraitPartyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst validate = (base: string, override: string | undefined) =>\r\n  typeof override === \"string\" ? override : base;\r\n\r\nconst defineTrait = (\r\n  code: number,\r\n  base: RawTraitLabel,\r\n  override: Partial<RawTraitLabel>,\r\n  dataSource?: SourceIdentifier\r\n): TraitDescriptor => {\r\n  const label = validate(base.domainName, override.domainName);\r\n  const format = validate(base.format, override.format);\r\n  return new TraitDescriptor(code, label, format, dataSource);\r\n};\r\n\r\nconst srcElement = (): SourceIdentifier => {\r\n  return {\r\n    module: MODULE_SYSTEM,\r\n    author: AUTHOR_RMMZ,\r\n    kind: SRC_ELEMENTS,\r\n  };\r\n};\r\n\r\nconst srcData = (key: string): SourceIdentifier => {\r\n  return {\r\n    module: MODULE_DATA,\r\n    author: AUTHOR_RMMZ,\r\n    kind: key,\r\n  };\r\n};\r\n\r\nconst srcTrait = (src: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: src,\r\n});\r\n\r\nconst srcSystem = (src: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: src,\r\n});\r\n\r\nexport const defineTraitElementRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ELEMENT_RATE,\r\n    LABEL_SET_TRAIT.options.elementRate,\r\n    label,\r\n    srcElement()\r\n  );\r\n\r\nexport const defineTraitDebuffRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_DEBUFF_RATE,\r\n    LABEL_SET_TRAIT.options.debuffRate,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitStateRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_STATE_RATE,\r\n    LABEL_SET_TRAIT.options.stateRate,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitStateResist = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_STATE_RESIST,\r\n    LABEL_SET_TRAIT.options.stateResist,\r\n    label,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineTraitRegularParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_PARAM,\r\n    LABEL_SET_TRAIT.options.regularParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitExtraParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_XPARAM,\r\n    LABEL_SET_TRAIT.options.extraParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_EXTRA)\r\n  );\r\n\r\nexport const defineTraitSpecialParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SPARAM,\r\n    LABEL_SET_TRAIT.options.specialParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_SPECIAL)\r\n  );\r\n\r\nexport const defineTraitAttackElement = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_ELEMENT,\r\n    LABEL_SET_TRAIT.options.attackElement,\r\n    label,\r\n    srcElement()\r\n  );\r\n\r\nexport const defineTraitAttackState = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_STATE,\r\n    LABEL_SET_TRAIT.options.attackState,\r\n    label,\r\n    srcTrait(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineTraitAttackSpeed = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ATTACK_SPEED, LABEL_SET_TRAIT.options.attackSpeed, label);\r\n\r\nexport const defineTraitAttackTimes = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ATTACK_TIMES, LABEL_SET_TRAIT.options.attackTimes, label);\r\n\r\nexport const defineTraitAttackSkill = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_SKILL,\r\n    LABEL_SET_TRAIT.options.attackSkill,\r\n    label,\r\n    srcData(SRC_DATA_SKILL)\r\n  );\r\n\r\nexport const defineTraitActionPlus = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ACTION_PLUS, LABEL_SET_TRAIT.options.actionPlus, label);\r\n\r\nexport const defineTraitSpecialFlag = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SPECIAL_FLAG,\r\n    LABEL_SET_TRAIT.options.specialFlag,\r\n    label,\r\n    srcTrait(SRC_TRAIT_SPECIAL_FLAG)\r\n  );\r\n\r\nexport const defineTraitCollapseType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_COLLAPSE_TYPE,\r\n    LABEL_SET_TRAIT.options.collaps,\r\n    label,\r\n    srcTrait(SRC_TRAIT_COLLAPS)\r\n  );\r\n\r\nexport const defineTraitPartyAbility = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_PARTY_ABILITY,\r\n    LABEL_SET_TRAIT.options.partyAbility,\r\n    label,\r\n    srcTrait(SRC_TRAIT_PARTY_ABILITY)\r\n  );\r\n\r\nexport const defineTraitEquipWeaponType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_EQUIP_WEAPON_TYPE,\r\n    LABEL_SET_TRAIT.options.equipWeaponType,\r\n    label,\r\n    srcSystem(SRC_WEAPON_TYPES)\r\n  );\r\n\r\nexport const defineTraitEquipArmorType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_EQUIP_ARMOR_TYPE,\r\n    LABEL_SET_TRAIT.options.equipArmorType,\r\n    label,\r\n    srcSystem(SRC_ARMOR_TYPES)\r\n  );\r\n\r\nexport const defineTraitEquipLock = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_EQUIP_LOCK, LABEL_SET_TRAIT.options.equipLock, label);\r\n\r\nexport const defineTraitEquipSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_EQUIP_SEAL, LABEL_SET_TRAIT.options.equipSeal, label);\r\n\r\nexport const defineTraitSkillAdd = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SKILL_ADD, LABEL_SET_TRAIT.options.skillAdd, label);\r\n\r\nexport const defineTraitSkillSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SKILL_SEAL, LABEL_SET_TRAIT.options.skillSeal, label);\r\n\r\nexport const defineTraitSlotType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SLOT_TYPE, LABEL_SET_TRAIT.options.slotType, label);\r\n\r\nexport const defineTraitSkillTypeAdd = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SKILL_TYPE_ADD,\r\n    LABEL_SET_TRAIT.options.skillTypeAdd,\r\n    label\r\n  );\r\n\r\nexport const defineTraitSkillTypeSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SKILL_TYPE_SEAL,\r\n    LABEL_SET_TRAIT.options.skillTypeSeal,\r\n    label\r\n  );\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Trait } from \"./trait\";\r\n\r\nexport const TYPENAME_TRAIT = \"Trait\" as const;\r\n\r\nexport const SCHEMA_TRAIT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"dataId\", \"value\"],\r\n  properties: {\r\n    code: { type: \"integer\" },\r\n    dataId: { type: \"integer\" },\r\n    value: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Trait>;\r\n","import type { Data_Actor } from \"./actor\";\r\n\r\nexport const makeActorData = (actor: Partial<Data_Actor> = {}): Data_Actor => ({\r\n  name: actor.name ?? \"\",\r\n  id: actor.id ?? 0,\r\n  battlerName: actor.battlerName ?? \"\",\r\n  characterName: actor.characterName ?? \"\",\r\n  characterIndex: actor.characterIndex ?? 0,\r\n  faceName: actor.faceName ?? \"\",\r\n  faceIndex: actor.faceIndex ?? 0,\r\n  traits: [],\r\n  note: actor.note ?? \"\",\r\n  classId: actor.classId ?? 0,\r\n  nickname: actor.nickname ?? \"\",\r\n  profile: actor.profile ?? \"\",\r\n  equips: [],\r\n  initialLevel: actor.initialLevel ?? 0,\r\n  maxLevel: actor.maxLevel ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Actor } from \"./actor\";\r\n\r\nexport const SCHEMA_DATA_ACTOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"nickname\",\r\n    \"battlerName\",\r\n    \"characterName\",\r\n    \"characterIndex\",\r\n    \"faceName\",\r\n    \"faceIndex\",\r\n    \"classId\",\r\n    \"initialLevel\",\r\n    \"maxLevel\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    battlerName: { type: \"string\" },\r\n    characterName: { type: \"string\" },\r\n    characterIndex: { type: \"integer\" },\r\n    faceName: { type: \"string\" },\r\n    faceIndex: { type: \"integer\", minimum: 0, maximum: 7 },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    nickname: { type: \"string\" },\r\n\r\n    profile: { type: \"string\" },\r\n    initialLevel: { type: \"integer\", minimum: 0 },\r\n    maxLevel: { type: \"integer\" },\r\n    classId: { type: \"integer\", minimum: 0 },\r\n    equips: { type: \"array\", items: { type: \"integer\" } },\r\n    note: { type: \"string\" },\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Actor>;\r\n\r\nexport const normalizeDataActor = (data: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    name: data.name ?? \"\",\r\n    id: data.id ?? 0,\r\n    battlerName: data.battlerName ?? \"\",\r\n    characterName: data.characterName ?? \"\",\r\n    characterIndex: data.characterIndex ?? 0,\r\n    faceName: data.faceName ?? \"\",\r\n    faceIndex: data.faceIndex ?? 0,\r\n    traits: [],\r\n    note: data.note ?? \"\",\r\n    classId: data.classId ?? 0,\r\n    nickname: data.nickname ?? \"\",\r\n    profile: data.profile ?? \"\",\r\n    equips: [],\r\n    initialLevel: data.initialLevel ?? 0,\r\n    maxLevel: data.maxLevel ?? 0,\r\n  };\r\n};\r\n","import type { Data_Armor } from \"./armor\";\r\nexport const makeArmorData = (armor: Partial<Data_Armor> = {}): Data_Armor => ({\r\n  id: armor.id ?? 0,\r\n  name: armor.name ?? \"\",\r\n  iconIndex: armor.iconIndex ?? 0,\r\n  description: armor.description ?? \"\",\r\n  traits: armor.traits ?? [],\r\n  note: armor.note ?? \"\",\r\n  atypeId: armor.atypeId ?? 0,\r\n  params: armor.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: armor.etypeId ?? 0,\r\n  price: armor.price ?? 0,\r\n});\r\n","import type { ParamArray } from \"../members\";\r\nimport type { Trait } from \"../trait\";\r\nimport type { Data_Armor } from \"./armor\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_ARMMOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n    \"atypeId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    atypeId: { type: \"integer\", minimum: 0 },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Armor>;\r\n","import type { Data_Class } from \"./types\";\r\nexport const makeClassData = (data: Partial<Data_Class> = {}): Data_Class => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  learnings: data.learnings ?? [],\r\n  expParams: data.expParams ?? [],\r\n});\r\n","import type { Data_Class } from \"./types\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_CLASS = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"note\",\r\n    \"expParams\",\r\n    \"params\",\r\n    \"learnings\",\r\n    \"traits\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    expParams: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<Data_Class[\"params\"]>,\r\n    learnings: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          level: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n        },\r\n        required: [\"level\", \"skillId\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"learnings\"]>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"traits\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} satisfies JSONSchemaType<Data_Class>;\r\n","import type { Data_State } from \"./state\";\r\nexport const makeStateData = (data: Partial<Data_State> = {}): Data_State => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  iconIndex: data.iconIndex ?? 0,\r\n  message1: data.message1 ?? \"\",\r\n  message2: data.message2 ?? \"\",\r\n  message3: data.message3 ?? \"\",\r\n  message4: data.message4 ?? \"\",\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n\r\n  messageType: data.messageType ?? 0,\r\n  releaseByDamage: data.releaseByDamage ?? false,\r\n  restriction: data.restriction ?? 0,\r\n  priority: data.priority ?? 0,\r\n  motion: data.motion ?? 0,\r\n  overlay: data.overlay ?? 0,\r\n  removeAtBattleEnd: data.removeAtBattleEnd ?? false,\r\n  removeByRestriction: data.removeByRestriction ?? false,\r\n  autoRemovalTiming: data.autoRemovalTiming ?? 0,\r\n  minTurns: data.minTurns ?? 0,\r\n  maxTurns: data.maxTurns ?? 0,\r\n  removeByDamage: data.removeByDamage ?? false,\r\n  chanceByDamage: data.chanceByDamage ?? 0,\r\n  removeByWalking: data.removeByWalking ?? false,\r\n  stepsToRemove: data.stepsToRemove ?? 0,\r\n});\r\n","import type { Data_State } from \"./state\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_STATE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n    \"restriction\",\r\n    \"priority\",\r\n    \"motion\",\r\n    \"overlay\",\r\n    \"removeAtBattleEnd\",\r\n    \"removeByDamage\",\r\n    \"removeByWalking\",\r\n    \"removeByRestriction\",\r\n    \"autoRemovalTiming\",\r\n    \"minTurns\",\r\n    \"maxTurns\",\r\n    \"chanceByDamage\",\r\n    \"stepsToRemove\",\r\n    \"note\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n    message3: { type: \"string\" },\r\n    message4: { type: \"string\" },\r\n\r\n    restriction: { type: \"integer\" },\r\n    priority: { type: \"integer\" },\r\n    motion: { type: \"integer\" },\r\n    overlay: { type: \"integer\" },\r\n\r\n    removeAtBattleEnd: { type: \"boolean\" },\r\n    removeByDamage: { type: \"boolean\" },\r\n\r\n    removeByWalking: { type: \"boolean\" },\r\n    removeByRestriction: { type: \"boolean\" },\r\n\r\n    messageType: { type: \"integer\" },\r\n    releaseByDamage: { type: \"boolean\" },\r\n    autoRemovalTiming: { type: \"integer\" },\r\n\r\n    minTurns: { type: \"integer\" },\r\n    maxTurns: { type: \"integer\" },\r\n\r\n    chanceByDamage: { type: \"integer\" },\r\n    stepsToRemove: { type: \"integer\" },\r\n    note: { type: \"string\" },\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Data_State[\"traits\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_State>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { WeaponLabels } from \"./weaponLabels\";\r\n\r\nexport const LABELS_DATA_WEAPON = {\r\n  domainName: \"武器\",\r\n  options: {\r\n    weaponTypeId: \"武器タイプID\",\r\n  },\r\n} as const satisfies DomainLabel<WeaponLabels>;\r\n","import { makeDamage } from \"@RpgTypes/schema\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\n\r\nexport const makeWeaponData = (\r\n  weapon: Partial<Data_Weapon> = {}\r\n): Data_Weapon => ({\r\n  id: weapon.id ?? 0,\r\n  name: weapon.name ?? \"\",\r\n  iconIndex: weapon.iconIndex ?? 0,\r\n  description: weapon.description ?? \"\",\r\n  traits: weapon.traits ?? [],\r\n  note: weapon.note ?? \"\",\r\n  animationId: weapon.animationId ?? 0,\r\n  params: weapon.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: weapon.etypeId ?? 0,\r\n  price: weapon.price ?? 0,\r\n  damage: makeDamage(weapon.damage ?? {}),\r\n  wtypeId: weapon.wtypeId ?? 0,\r\n});\r\n","import type { Damage, ParamArray, Trait } from \"src/libs\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_WEAPON = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n    \"animationId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    wtypeId: { type: \"integer\", minimum: 0 },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\", minimum: 0 },\r\n        elementId: { type: \"integer\", minimum: 0 },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        critical: { type: \"boolean\", default: false },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n    } satisfies JSONSchemaType<Damage>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Weapon>;\r\n","import type { Data_Enemy } from \"./enemy\";\r\nimport type { DropItem, Enemy_Action } from \"./enemyMembers\";\r\n\r\nexport const makeDropItem = (dropItem: Partial<DropItem> = {}): DropItem => ({\r\n  dataId: dropItem.dataId ?? 0,\r\n  denominator: dropItem.denominator ?? 0,\r\n  kind: dropItem.kind ?? 0,\r\n});\r\n\r\nexport const makeEnemyAction = (\r\n  action: Partial<Enemy_Action> = {}\r\n): Enemy_Action => ({\r\n  conditionParam1: action.conditionParam1 ?? 0,\r\n  conditionParam2: action.conditionParam2 ?? 0,\r\n  conditionType: action.conditionType ?? 0,\r\n  rating: action.rating ?? 0,\r\n\r\n  skillId: action.skillId ?? 0,\r\n});\r\n\r\nexport const makeEnemyData = (data: Partial<Data_Enemy> = {}): Data_Enemy => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  battlerName: data.battlerName ?? \"\",\r\n  battlerHue: data.battlerHue ?? 0,\r\n  dropItems: data.dropItems?.map(() => makeDropItem()) ?? [],\r\n  exp: data.exp ?? 0,\r\n  gold: data.gold ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  actions: [],\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Enemy } from \"./enemy\";\r\nimport type { DropItem, Enemy_Action } from \"./enemyMembers\";\r\nimport type { ParamArray, Trait } from \"src/libs\";\r\n\r\nexport const SCHEMA_DATA_ENEMY = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"battlerName\",\r\n    \"battlerHue\",\r\n    \"exp\",\r\n    \"gold\",\r\n    \"note\",\r\n    \"params\",\r\n    \"dropItems\",\r\n    \"traits\",\r\n    \"actions\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    battlerHue: { type: \"integer\", minimum: 0 },\r\n    battlerName: { type: \"string\" },\r\n    exp: { type: \"integer\", minimum: 0 },\r\n    gold: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } as const satisfies JSONSchemaType<ParamArray>,\r\n    actions: {\r\n      type: \"array\",\r\n\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"conditionParam1\",\r\n          \"conditionParam2\",\r\n          \"conditionType\",\r\n          \"skillId\",\r\n          \"rating\",\r\n        ],\r\n        properties: {\r\n          conditionParam1: { type: \"integer\" },\r\n          conditionParam2: { type: \"integer\" },\r\n          conditionType: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          rating: { type: \"integer\" },\r\n        },\r\n      },\r\n    } satisfies JSONSchemaType<Enemy_Action[]>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n\r\n    dropItems: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          kind: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          denominator: { type: \"integer\", minimum: 0 },\r\n          rate: { type: \"number\" },\r\n        },\r\n        required: [\"kind\", \"dataId\", \"denominator\"],\r\n      },\r\n    } satisfies JSONSchemaType<DropItem[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Enemy>;\r\n","import type { Data_Item, Data_Skill } from \"@RpgTypes/schema\";\r\nimport { makeDamage } from \"@RpgTypes/schema\";\r\n\r\nexport const makeItemData = (item: Partial<Data_Item> = {}): Data_Item => ({\r\n  animationId: item.animationId ?? 0,\r\n  id: item.id ?? 0,\r\n  name: item.name ?? \"\",\r\n  iconIndex: item.iconIndex ?? 0,\r\n  description: item.description ?? \"\",\r\n  itypeId: item.itypeId ?? 0,\r\n\r\n  note: item.note ?? \"\",\r\n  consumable: item.consumable ?? false,\r\n  scope: item.scope ?? 0,\r\n  occasion: item.occasion ?? 0,\r\n  speed: item.speed ?? 0,\r\n  successRate: item.successRate ?? 0,\r\n  repeats: item.repeats ?? 0,\r\n  tpGain: item.tpGain ?? 0,\r\n  hitType: item.hitType ?? 0,\r\n  damage: makeDamage(item.damage ?? {}),\r\n  effects: [],\r\n  price: 0,\r\n});\r\n\r\nexport const makeSkillData = (skill: Partial<Data_Skill> = {}): Data_Skill => ({\r\n  stypeId: skill.stypeId ?? 0,\r\n  requiredWtypeId1: skill.requiredWtypeId1 ?? 0,\r\n  requiredWtypeId2: skill.requiredWtypeId2 ?? 0,\r\n  animationId: skill.animationId ?? 0,\r\n  damage: makeDamage(skill.damage ?? {}),\r\n  description: skill.description ?? \"\",\r\n  effects: [],\r\n  hitType: skill.hitType ?? 0,\r\n  iconIndex: skill.iconIndex ?? 0,\r\n  id: skill.id ?? 0,\r\n  message1: skill.message1 ?? \"\",\r\n  message2: skill.message2 ?? \"\",\r\n  messageType: skill.messageType ?? 0,\r\n  name: skill.name ?? \"\",\r\n  note: skill.note ?? \"\",\r\n  mpCost: skill.mpCost ?? 0,\r\n  occasion: skill.occasion ?? 0,\r\n  repeats: skill.repeats ?? 0,\r\n  scope: skill.scope ?? 0,\r\n  speed: skill.speed ?? 0,\r\n  successRate: skill.successRate ?? 0,\r\n  tpCost: skill.tpCost ?? 0,\r\n  tpGain: skill.tpGain ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Item, Data_Skill } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_SKILL = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"messageType\",\r\n    \"mpCost\",\r\n    \"requiredWtypeId1\",\r\n    \"requiredWtypeId2\",\r\n    \"stypeId\",\r\n    \"tpCost\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"note\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n\r\n    messageType: { type: \"integer\" },\r\n    mpCost: { type: \"integer\" },\r\n    requiredWtypeId1: { type: \"integer\" },\r\n    requiredWtypeId2: { type: \"integer\" },\r\n    stypeId: { type: \"integer\" },\r\n    tpCost: { type: \"integer\" },\r\n\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n\r\n    note: { type: \"string\" },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<Data_Skill>;\r\n\r\nexport const SCHEMA_DATA_ITEM = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"note\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"consumable\",\r\n    \"price\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    note: { type: \"string\" },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n    consumable: { type: \"boolean\" },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    itypeId: { type: \"integer\" },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Item>;\r\n","export const HITTYPE_CERTAIN = 0 as const;\r\nexport const HITTYPE_PHYSICAL = 1 as const;\r\nexport const HITTYPE_MAGICAL = 2 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { EffectLabelDefinition, ItemEffectLabelSet } from \"./types\";\r\n\r\nconst FORMAT_GROW = \"{name} + {value1}\" as const;\r\nconst FORMAT_STATE = \"{name} {value1}%\" as const;\r\nconst FORMAT_RECOVER = \"{value1}% + {value2}\" as const;\r\nconst FORMAT_ADD_BUFF = \"{name} {value1}ターン\" as const;\r\nconst FORMAT_NAME = \"{name}\" as const;\r\n\r\nexport const LABEL_SET_ITEM_EFFECT = {\r\n  domainName: \"使用効果\",\r\n  options: {\r\n    addBuff: {\r\n      desc: \"バフを付与する\",\r\n      domainName: \"バフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addDebuff: {\r\n      desc: \"デバフを付与する\",\r\n      domainName: \"デバフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    gainTp: {\r\n      desc: \"TPを指定した量だけ増加させます。\",\r\n      domainName: \"TP増加\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    grow: {\r\n      desc: \"成長効果\",\r\n      domainName: \"成長効果\",\r\n      format: FORMAT_GROW,\r\n    } as const satisfies EffectLabelDefinition,\r\n    learnSkill: {\r\n      desc: \"スキルを習得する\",\r\n      domainName: \"スキル習得\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverHp: {\r\n      desc: \"HPを回復します。最大HPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"HP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverMp: {\r\n      desc: \"MPを回復します。最大MPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"MP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeBuff: {\r\n      desc: \"バフを解除する\",\r\n      domainName: \"バフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeDebuff: {\r\n      desc: \"デバフを解除する\",\r\n      domainName: \"デバフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeState: {\r\n      desc: \"指定したステートを付加します。\",\r\n      domainName: \"ステート付加\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    special: {\r\n      desc: \"特殊効果\",\r\n      domainName: \"特殊効果\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addState: {\r\n      desc: \"状態異常を解除する\",\r\n      domainName: \"ステート解除\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    commonEvent: {\r\n      desc: \"コモンイベントを実行する\",\r\n      domainName: \"コモンイベント\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n  },\r\n} as const satisfies DomainLabel<ItemEffectLabelSet>;\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","export const SPECIAL_EFFECT_ESCAPE = 0 as const;\r\n","import type { SourceIdentifier } from \"./types\";\r\n\r\nconst validAsciiKey = /^[a-zA-Z0-9]+$/;\r\n\r\nexport const sanitizeKey = (value: string): string | undefined => {\r\n  return validAsciiKey.test(value) ? value : undefined;\r\n};\r\n\r\nexport const testUnknonwKey = (value: unknown): value is string => {\r\n  return typeof value === \"string\" ? validAsciiKey.test(value) : false;\r\n};\r\n\r\nexport const joinSourceKey = (key: SourceIdentifier): string => {\r\n  return [key.author, key.module, key.kind].join(\".\");\r\n};\r\n\r\nexport const isValid = (\r\n  source: Partial<SourceIdentifier>\r\n): source is SourceIdentifier => {\r\n  return (\r\n    testUnknonwKey(source.author) &&\r\n    testUnknonwKey(source.module) &&\r\n    testUnknonwKey(source.kind)\r\n  );\r\n};\r\n// TODO:ソース選択画面のデザイン\r\n","export const SRC_PARAMS_REGULAR = \"params\" as const;\r\nexport const SRC_PARAMS_EXTRA = \"xparams\" as const;\r\nexport const SRC_PARAMS_SPECIAL = \"sparams\" as const;\r\nexport const SRC_TRAIT_COLLAPS = \"collaps\" as const;\r\nexport const SRC_TRAIT_PARTY_ABILITY = \"partyAbiility\" as const;\r\nexport const SRC_TRAIT_SPECIAL_FLAG = \"sflag\";\r\n\r\nexport const SRC_DATA_ACTOR = \"actor\" as const;\r\nexport const SRC_DATA_VARIABLE = \"variables\" as const;\r\nexport const SRC_DATA_MAP = \"map\" as const;\r\nexport const SRC_DATA_ENEMY = \"enemy\" as const;\r\nexport const SRC_DATA_STATE = \"state\" as const;\r\nexport const SRC_DATA_SKILL = \"skill\" as const;\r\nexport const SRC_DATA_ITEMS = \"items\" as const;\r\nexport const SRC_DATA_WEAPON = \"weapon\" as const;\r\nexport const SRC_DATA_ARMOR = \"armor\" as const;\r\nexport const SRC_DATA_CLASS = \"class\" as const;\r\nexport const SRC_DATA_COMMON_EVNET = \"common_event\" as const;\r\nexport const SRC_DATA_TROOP = \"troop\" as const;\r\nexport const SRC_COLOR = \"colors\" as const;\r\n\r\nexport const SRC_WEAPON_TYPES = \"weaponTypes\" as const;\r\nexport const SRC_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SWITCHES = \"switches\" as const;\r\nexport const SRC_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_ELEMENTS = \"elements\" as const;\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema/namedItemSource\";\r\nimport type { EffectDefinitionResolved } from \"./labels\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\n\r\nconst PLACEHOLDER_VALUE1 = \"{value1}\";\r\nconst PLACEHOLDER_VALUE2 = \"{value2}\";\r\nconst PLACEHOLDER_NAME = \"{name}\";\r\n\r\nexport class ItemEffectDescriptor implements EffectDefinitionResolved {\r\n  constructor(\r\n    public readonly codeId: number,\r\n    public readonly label: string,\r\n    public readonly format: string,\r\n    public readonly description: string,\r\n    public readonly dataSource?: SourceIdentifier\r\n  ) {}\r\n  formatText(\r\n    effect: ItemEffect,\r\n    resolveName: (\r\n      dataSource: Readonly<SourceIdentifier>,\r\n      dataId: number\r\n    ) => string\r\n  ) {\r\n    const text = this.format\r\n      .replaceAll(PLACEHOLDER_VALUE1, effect.value1.toString())\r\n      .replaceAll(PLACEHOLDER_VALUE2, effect.value2.toString());\r\n    if (!this.dataSource) {\r\n      return text;\r\n    }\r\n    return text.replaceAll(\r\n      PLACEHOLDER_NAME,\r\n      resolveName(this.dataSource, effect.dataId)\r\n    );\r\n  }\r\n  requiresValue1(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE1);\r\n  }\r\n  requiresValue2(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE2);\r\n  }\r\n  requiresName(): boolean {\r\n    return this.format.includes(PLACEHOLDER_NAME);\r\n  }\r\n  invalidPlaceHolder(): string[] {\r\n    const allowed = [\"value1\", \"value2\", \"name\"];\r\n    const matches: RegExpExecArray[] = [\r\n      ...this.format.matchAll(/\\{([^}]+)\\}/g),\r\n    ];\r\n    return matches.map((m) => m[1]).filter((key) => !allowed.includes(key));\r\n  }\r\n  isFormatValidForDataSource(): boolean {\r\n    if (this.dataSource && !this.requiresName()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema/\";\r\nimport {\r\n  SRC_DATA_COMMON_EVNET,\r\n  SRC_DATA_SKILL,\r\n  SRC_DATA_STATE,\r\n  SRC_PARAMS_REGULAR,\r\n} from \"@RpgTypes/schema/namedItemSource\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./constants/\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\nimport { LABEL_SET_ITEM_EFFECT } from \"./labels\";\r\nimport {\r\n  AUTHOR_RMMZ,\r\n  MODULE_DATA,\r\n  MODULE_TRAIT,\r\n} from \"@RpgTypes/namedItemSource/\";\r\nimport { ItemEffectDescriptor } from \"./itemEffectDescriptor\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\n/**\r\n * @deprecated\r\n */\r\nexport const formatItemEffectText = (\r\n  effectDefine: EffectDefinitionResolved,\r\n  effect: ItemEffect,\r\n  name: string\r\n) => {\r\n  return effectDefine.format\r\n    .replaceAll(`{value1}`, effect.value1.toString())\r\n    .replaceAll(`{value2}`, effect.value2.toString())\r\n    .replaceAll(\"{name}\", name);\r\n};\r\n\r\nexport const resolveItemEffectLabels = (\r\n  label: DomainLabel<ItemEffectLabelSet>\r\n): ItemEffectDescriptor[] => {\r\n  return [\r\n    defineEffectRecoverHp(label.options.recoverHp),\r\n    defineEffectRecoverMp(label.options.recoverMp),\r\n    defineEffectGainTp(label.options.gainTp),\r\n    defineEffectAddState(label.options.addState),\r\n    defineEffectRemoveState(label.options.removeState),\r\n    defineEffectAddBuff(label.options.addBuff),\r\n    defineEffectAddDebuff(label.options.addDebuff),\r\n    defineEffectRemoveBuff(label.options.removeBuff),\r\n    defineEffectRemoveDebuff(label.options.removeDebuff),\r\n    defineEffectLearnSkill(label.options.learnSkill),\r\n    defineEffectCommonEvent(label.options.commonEvent),\r\n  ];\r\n};\r\n\r\nconst regularParam = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_PARAMS_REGULAR,\r\n});\r\n\r\nconst srcData = (sourceKey: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: sourceKey,\r\n});\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  override: Partial<EffectLabelDefinition>,\r\n  dataSource?: SourceIdentifier\r\n): ItemEffectDescriptor => {\r\n  const label = override.domainName ?? baseLabel.domainName;\r\n  const format = override.format ?? baseLabel.format;\r\n  const description = override.desc ?? baseLabel.desc;\r\n  return new ItemEffectDescriptor(code, label, format, description, dataSource);\r\n};\r\n\r\nexport const defineEffectRecoverHp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_RECOVER_HP,\r\n    LABEL_SET_ITEM_EFFECT.options.recoverHp,\r\n    labels\r\n  );\r\n\r\nexport const defineEffectRecoverMp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_RECOVER_MP,\r\n    LABEL_SET_ITEM_EFFECT.options.recoverMp,\r\n    labels\r\n  );\r\n\r\nexport const defineEffectGainTp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(EFFECT_GAIN_TP, LABEL_SET_ITEM_EFFECT.options.gainTp, labels);\r\n\r\nexport const defineEffectGrow = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(EFFECT_GROW, LABEL_SET_ITEM_EFFECT.options.grow, labels);\r\n\r\nexport const defineEffectAddState = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_STATE,\r\n    LABEL_SET_ITEM_EFFECT.options.addState,\r\n    labels,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineEffectRemoveState = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_STATE,\r\n    LABEL_SET_ITEM_EFFECT.options.removeState,\r\n    labels,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineEffectAddBuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_BUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.addBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectRemoveBuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_BUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.removeBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectLearnSkill = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_LEARN_SKILL,\r\n    LABEL_SET_ITEM_EFFECT.options.learnSkill,\r\n    labels,\r\n    srcData(SRC_DATA_SKILL)\r\n  );\r\n\r\nexport const defineEffectAddDebuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_DEBUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.addBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectRemoveDebuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.removeDebuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectCommonEvent = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_COMMON_EVENT,\r\n    LABEL_SET_ITEM_EFFECT.options.commonEvent,\r\n    labels,\r\n    srcData(SRC_DATA_COMMON_EVNET)\r\n  );\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { ItemLabels } from \"./itemLabels\";\r\n\r\nexport const DEFAULT_ITEM_LABELS = {\r\n  domainName: \"アイテム\",\r\n  options: {\r\n    consumable: \"消耗品\",\r\n  },\r\n} as const satisfies DomainLabel<ItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { SkillLabels } from \"./skillLabels\";\r\n\r\nexport const DEFAULT_SKILL_LABELS = {\r\n  domainName: \"スキル\",\r\n  options: {\r\n    requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n    requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n    mpCost: \"MP消費\",\r\n    tpCost: \"TP消費\",\r\n  },\r\n} as const satisfies DomainLabel<SkillLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { UsableItemLabels } from \"./usableItemLabels\";\r\n\r\nexport const DEFAULT_USABLE_ITEM_LABELS = {\r\n  domainName: \"\",\r\n  options: {\r\n    scope: \"範囲\",\r\n    speed: \"速度補正\",\r\n    successRate: \"成功率\",\r\n  },\r\n} as const satisfies DomainLabel<UsableItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DataLabels } from \"./dataLabels\";\r\nimport type {\r\n  ActorLabels,\r\n  ArmorLabels,\r\n  ClassLabels,\r\n  EnemyLabels,\r\n  StateLabels,\r\n  WeaponLabels,\r\n} from \"./traitContainers\";\r\nimport type { ItemLabels, SkillLabels, UsableItemLabels } from \"./usableItems\";\r\n\r\nexport const LABEL_SET_DATA = {\r\n  actor: {\r\n    domainName: \"アクター\",\r\n    options: {\r\n      initialEquipments: \"初期装備\",\r\n      faceImage: \"顔画像\",\r\n      characterImage: \"キャラクター画像\",\r\n      svBattlerImage: \"SVバトラー画像\",\r\n      nickname: \"ニックネーム\",\r\n      profile: \"プロフィール\",\r\n      classId: \"職業ID\",\r\n      initialLevel: \"初期レベル\",\r\n      maxLevel: \"最大レベル\",\r\n    },\r\n  } as const satisfies DomainLabel<ActorLabels>,\r\n  class: {\r\n    domainName: \"職業\",\r\n    options: {\r\n      params: \"パラメータ\",\r\n      learnings: \"習得スキル\",\r\n      expParams: \"経験値パラメータ\",\r\n    },\r\n  } as const satisfies DomainLabel<ClassLabels>,\r\n  armor: {\r\n    domainName: \"防具\",\r\n    options: {\r\n      armorTypeId: \"防具タイプID\",\r\n      slotTypeId: \"スロットタイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<ArmorLabels>,\r\n  enemy: {\r\n    domainName: \"敵キャラ\",\r\n    options: {\r\n      dropItems: \"ドロップアイテム\",\r\n      battlerHue: \"バトラーヒュー\",\r\n      battlerName: \"バトラー名\",\r\n      gold: \"ゴールド\",\r\n    },\r\n  } as const satisfies DomainLabel<EnemyLabels>,\r\n  item: {\r\n    domainName: \"アイテム\",\r\n    options: {\r\n      consumable: \"消耗品\",\r\n    },\r\n  } as const satisfies DomainLabel<ItemLabels>,\r\n  skill: {\r\n    domainName: \"スキル\",\r\n    options: {\r\n      requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n      requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n      mpCost: \"MP消費\",\r\n      tpCost: \"TP消費\",\r\n    },\r\n  } as const satisfies DomainLabel<SkillLabels>,\r\n  state: {\r\n    domainName: \"ステート\",\r\n    options: {\r\n      restriction: \"制約\",\r\n      priority: \"優先度\",\r\n      motion: \"モーション\",\r\n      overlay: \"オーバーレイ\",\r\n      removeAtBattleEnd: \"戦闘終了時解除\",\r\n      removeByRestriction: \"制約による解除\",\r\n      autoRemovalTiming: \"自動解除タイミング\",\r\n      minTurns: \"最小ターン数\",\r\n      maxTurns: \"最大ターン数\",\r\n      removeByDamage: \"ダメージによる解除\",\r\n      chanceByDamage: \"ダメージによる解除確率\",\r\n      removeByWalking: \"歩行による解除\",\r\n      stepsToRemove: \"解除までの歩数\",\r\n    },\r\n  } as const satisfies DomainLabel<StateLabels>,\r\n  weapon: {\r\n    domainName: \"武器\",\r\n    options: {\r\n      weaponTypeId: \"武器タイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<WeaponLabels>,\r\n  usableItem: {\r\n    domainName: \"\",\r\n    options: {\r\n      scope: \"範囲\",\r\n      speed: \"速度補正\",\r\n      successRate: \"成功率\",\r\n    },\r\n  } as const satisfies DomainLabel<UsableItemLabels>,\r\n} as const satisfies DataLabels;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DamageLabels } from \"./damageLabels\";\r\n\r\nexport const DEFAULT_DAMAGE_LABELS = {\r\n  domainName: \"ダメージ\",\r\n  options: {},\r\n} as const satisfies DomainLabel<DamageLabels>;\r\n","import type { Damage } from \"./damage\";\r\n\r\nexport const makeDamage = (damage: Partial<Damage> = {}): Damage => ({\r\n  type: damage.type ?? 0,\r\n  elementId: damage.elementId ?? 0,\r\n  formula: damage.formula ?? \"\",\r\n  variance: damage.variance ?? 0,\r\n  critical: damage.critical ?? false,\r\n});\r\n","import type { Damage } from \"./damage\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nexport const SCHEMA_DAMAGE = {\r\n  type: \"object\",\r\n  required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n  properties: {\r\n    type: { type: \"integer\", minimum: 0 },\r\n    elementId: { type: \"integer\", minimum: 0 },\r\n    formula: { type: \"string\" },\r\n    variance: { type: \"integer\" },\r\n    critical: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Damage>;\r\n","import Ajv from \"ajv\";\r\nimport type {\r\n  Data_Actor,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_State,\r\n  Data_Weapon,\r\n} from \"./traitContainers\";\r\nimport {\r\n  SCHEMA_DATA_ACTOR,\r\n  SCHEMA_DATA_ARMMOR,\r\n  SCHEMA_DATA_CLASS,\r\n  SCHEMA_DATA_ENEMY,\r\n  SCHEMA_DATA_STATE,\r\n  SCHEMA_DATA_WEAPON,\r\n} from \"./traitContainers\";\r\nimport type { Data_Item, Data_Skill } from \"./usableItems\";\r\nimport { SCHEMA_DATA_ITEM, SCHEMA_DATA_SKILL } from \"./usableItems\";\r\n\r\nconst ajv = new Ajv();\r\nconst item = ajv.compile(SCHEMA_DATA_ITEM);\r\nconst skill = ajv.compile(SCHEMA_DATA_SKILL);\r\nconst actor = ajv.compile(SCHEMA_DATA_ACTOR);\r\nconst armor = ajv.compile(SCHEMA_DATA_ARMMOR);\r\nconst weapon = ajv.compile(SCHEMA_DATA_WEAPON);\r\nconst enemy = ajv.compile(SCHEMA_DATA_ENEMY);\r\nconst state = ajv.compile(SCHEMA_DATA_STATE);\r\nconst class_ = ajv.compile(SCHEMA_DATA_CLASS);\r\n\r\nexport const isDataItem = (data: unknown): data is Data_Item => {\r\n  return item(data);\r\n};\r\n\r\nexport const isDataSkill = (data: unknown): data is Data_Skill => {\r\n  return skill(data);\r\n};\r\n\r\nexport const isDataActor = (data: unknown): data is Data_Actor => {\r\n  return actor(data);\r\n};\r\n\r\nexport const isDataArmor = (data: unknown): data is Data_Armor => {\r\n  return armor(data);\r\n};\r\n\r\nexport const isDataWeapon = (data: unknown): data is Data_Weapon => {\r\n  return weapon(data);\r\n};\r\n\r\nexport const isDataEnemy = (data: unknown): data is Data_Enemy => {\r\n  return enemy(data);\r\n};\r\n\r\nexport const isDataState = (data: unknown): data is Data_State => {\r\n  return state(data);\r\n};\r\n\r\nexport const isDataClass = (data: unknown): data is Data_Class => {\r\n  return class_(data);\r\n};\r\n","export const NO_OPERATION = 0 as const;\r\nexport const SHOW_MESSAGE = 101 as const;\r\nexport const SHOW_MESSAGE_BODY = 401 as const;\r\nexport const SHOW_CHOICES = 102 as const;\r\nexport const SHOW_CHOICES_ITEM = 402 as const;\r\nexport const INPUT_NUMBER = 103 as const;\r\nexport const SELECT_ITEM = 104 as const;\r\nexport const SHOW_SCROLLING_TEXT = 105 as const;\r\nexport const SHOW_SCROLLING_TEXT_BODY = 405 as const;\r\nexport const COMMENT_HEAD = 108 as const;\r\nexport const COMMENT_BODY = 408 as const;\r\nexport const SKIP = 109 as const;\r\nexport const CONDITIONAL_BRANCH = 111 as const;\r\nexport const CONDITIONAL_BRANCH_ELSE = 411 as const;\r\nexport const LOOP = 112 as const;\r\nexport const LOOP_BREAK = 113 as const;\r\nexport const EXIT_EVENT_PROCESSING = 115 as const;\r\nexport const COMMON_EVENT = 117 as const;\r\nexport const LABEL = 118 as const;\r\nexport const LABEL_JUMP = 119 as const;\r\nexport const CONTROL_SWITCHES = 121 as const;\r\nexport const CONTROL_VARIABLES = 122 as const;\r\nexport const CONTROL_SELF_SWITCH = 123 as const;\r\nexport const CONTROL_TIMER = 124 as const;\r\nexport const CHANGE_GOLD = 125 as const;\r\nexport const CHANGE_ITEMS = 126 as const;\r\nexport const CHANGE_WEAPONS = 127 as const;\r\nexport const CHANGE_ARMORS = 128 as const;\r\nexport const CHANGE_PARTY_MEMBER = 129 as const;\r\nexport const CHANGE_BATTLE_BGM = 132 as const;\r\nexport const CHANGE_VICTORY_ME = 133 as const;\r\nexport const CHANGE_SAVE_ACCESS = 134 as const;\r\nexport const CHANGE_MENU_ACCESS = 135 as const;\r\nexport const CHANGE_ENCOUNTER = 136 as const;\r\nexport const CHANGE_FORMATION_ACCESS = 137 as const;\r\nexport const CHANGE_WINDOW_COLOR = 138 as const;\r\n\r\nexport const CHANGE_DEFEAT_ME = 139 as const;\r\nexport const CHANGE_VEHICLE_BGM = 140 as const;\r\n\r\nexport const TRANSFER_PLAYER = 201 as const;\r\nexport const SET_VEHICLE_LOCATION = 202 as const;\r\nexport const SET_EVENT_LOCATION = 203 as const;\r\nexport const SCROLL_MAP = 204 as const;\r\nexport const SET_MOVEMENT_ROUTE = 205 as const;\r\nexport const GET_ONOFF_VEHICLE = 206 as const;\r\nexport const CHANGE_TRANSPARENCY = 211 as const;\r\nexport const SHOW_ANIMATION = 212 as const;\r\nexport const SHOW_BALLOON_ICON = 213 as const;\r\nexport const ERASE_EVENT = 214 as const;\r\nexport const CHANGE_PLAYER_FOLLOWERS = 216 as const;\r\nexport const GATHER_FOLLOWERS = 217 as const;\r\nexport const FADEOUT_SCREEN = 221 as const;\r\nexport const FADEIN_SCREEN = 222 as const;\r\nexport const TINT_SCREEN = 223 as const;\r\nexport const FLASH_SCREEN = 224 as const;\r\nexport const SHAKE_SCREEN = 225 as const;\r\n\r\nexport const WAIT = 230 as const;\r\nexport const SHOW_PICTURE = 231 as const;\r\nexport const MOVE_PICTURE = 232 as const;\r\nexport const ROTATE_PICTURE = 233 as const;\r\nexport const TINT_PICTURE = 234 as const;\r\nexport const ERASE_PICTURE = 235 as const;\r\nexport const SET_WEATHER_EFFECT = 236 as const;\r\n\r\nexport const PLAY_BGM = 241 as const;\r\nexport const FADEOUT_BGM = 242 as const;\r\nexport const SAVE_BGM = 243 as const;\r\nexport const RESUME_BGM = 244 as const;\r\n\r\nexport const PLAY_BGS = 245 as const;\r\nexport const FADEOUT_BGS = 246 as const;\r\nexport const PLAY_ME = 249 as const;\r\nexport const PLAY_SE = 250 as const;\r\nexport const STOP_SE = 251 as const;\r\n\r\nexport const PLAY_MOVIE = 261 as const;\r\n\r\nexport const CHANGE_TILESET = 282 as const;\r\nexport const CHANGE_BATTLE_BACKGROUND = 283 as const;\r\nexport const CHANGE_PARALLAX = 284 as const;\r\nexport const GET_LOCATION_INFO = 285 as const;\r\n\r\nexport const BATTLE_PROCESSING = 301 as const;\r\n\r\nexport const SHOP_PROCESSING = 302 as const;\r\nexport const SHOP_PROCESSING_BODY = 605 as const;\r\nexport const NAME_INPUT_PROCESSING = 303 as const;\r\nexport const CHANGE_HP = 311 as const;\r\nexport const CHANGE_MP = 312 as const;\r\nexport const CHANGE_TP = 313 as const;\r\nexport const RECOVER_ALL = 314 as const;\r\nexport const CHANGE_EXP = 315 as const;\r\n\r\nexport const CHANGE_NAME = 320 as const;\r\nexport const CHANGE_CLASS = 321 as const;\r\nexport const CHANGE_ACTOR_IMAGES = 322 as const;\r\nexport const CHANGE_VEHICLE_IMAGE = 323 as const;\r\nexport const CHANGE_NICKNAME = 324 as const;\r\nexport const CHANGE_PROFILE = 325 as const;\r\n\r\nexport const CHANGE_ENEMY_HP = 331 as const;\r\nexport const CHANGE_ENEMY_MP = 332 as const;\r\n\r\nexport const CHANGE_ENEMY_STATE = 333 as const;\r\nexport const ENEMY_RECOVER_ALL = 334 as const;\r\nexport const ENEMY_APPEAR = 335 as const;\r\nexport const ENEMY_TRANSFORM = 336 as const;\r\nexport const SHOW_BATTLE_ANIMATION = 337 as const;\r\nexport const FORCE_ACTION = 339 as const;\r\nexport const ABORT_BATTLE = 340 as const;\r\nexport const OPEN_MENU_SCREEN = 351 as const;\r\n\r\nexport const CHANGE_ENEMY_TP = 342 as const;\r\n\r\nexport const OPEN_SAVE_SCREEN = 352 as const;\r\nexport const GAME_OVER = 353 as const;\r\nexport const RETURN_TO_TITLE_SCREEN = 354 as const;\r\nexport const SCRIPT_EVAL = 355 as const;\r\nexport const SCRIPT_EVAL_BODY = 655 as const;\r\nexport const PLUGIN_COMMAND_MV = 356 as const;\r\nexport const PLUGIN_COMMAND_MZ = 357 as const;\r\n","export const ROUTE_END = 0 as const;\r\nexport const ROUTE_MOVE_DOWN = 1 as const;\r\nexport const ROUTE_MOVE_LEFT = 2 as const;\r\nexport const ROUTE_MOVE_RIGHT = 3 as const;\r\nexport const ROUTE_MOVE_UP = 4 as const;\r\nexport const ROUTE_MOVE_LOWER_L = 5 as const;\r\nexport const ROUTE_MOVE_LOWER_R = 6 as const;\r\nexport const ROUTE_MOVE_UPPER_L = 7 as const;\r\nexport const ROUTE_MOVE_UPPER_R = 8 as const;\r\nexport const ROUTE_MOVE_RANDOM = 9 as const;\r\nexport const ROUTE_MOVE_TOWARD = 10 as const;\r\nexport const ROUTE_MOVE_AWAY = 11 as const;\r\nexport const ROUTE_MOVE_FORWARD = 12 as const;\r\nexport const ROUTE_MOVE_BACKWARD = 13 as const;\r\nexport const ROUTE_JUMP = 14 as const;\r\nexport const ROUTE_WAIT = 15 as const;\r\nexport const ROUTE_TURN_DOWN = 16 as const;\r\nexport const ROUTE_TURN_LEFT = 17 as const;\r\nexport const ROUTE_TURN_RIGHT = 18 as const;\r\nexport const ROUTE_TURN_UP = 19 as const;\r\nexport const ROUTE_TURN_90D_R = 20 as const;\r\nexport const ROUTE_TURN_90D_L = 21 as const;\r\nexport const ROUTE_TURN_180D = 22 as const;\r\nexport const ROUTE_TURN_90D_R_L = 23 as const;\r\nexport const ROUTE_TURN_RANDOM = 24 as const;\r\nexport const ROUTE_TURN_TOWARD = 25 as const;\r\nexport const ROUTE_TURN_AWAY = 26 as const;\r\nexport const ROUTE_SWITCH_ON = 27 as const;\r\nexport const ROUTE_SWITCH_OFF = 28 as const;\r\nexport const ROUTE_CHANGE_SPEED = 29 as const;\r\nexport const ROUTE_CHANGE_FREQ = 30 as const;\r\nexport const ROUTE_WALK_ANIME_ON = 31 as const;\r\nexport const ROUTE_WALK_ANIME_OFF = 32 as const;\r\nexport const ROUTE_STEP_ANIME_ON = 33 as const;\r\nexport const ROUTE_STEP_ANIME_OFF = 34 as const;\r\nexport const ROUTE_DIR_FIX_ON = 35 as const;\r\nexport const ROUTE_DIR_FIX_OFF = 36 as const;\r\nexport const ROUTE_THROUGH_ON = 37 as const;\r\nexport const ROUTE_THROUGH_OFF = 38 as const;\r\nexport const ROUTE_TRANSPARENT_ON = 39 as const;\r\nexport const ROUTE_TRANSPARENT_OFF = 40 as const;\r\nexport const ROUTE_CHANGE_IMAGE = 41 as const;\r\nexport const ROUTE_CHANGE_OPACITY = 42 as const;\r\nexport const ROUTE_CHANGE_BLEND_MODE = 43 as const;\r\nexport const ROUTE_PLAY_SE = 44 as const;\r\nexport const ROUTE_SCRIPT = 45 as const;\r\n","import type { CommandParamaterType } from \"@RpgTypes/eventCommand\";\r\nimport type { EventCommandLike } from \"./eventComandLike\";\r\nimport type { EventCode } from \"./eventCommand\";\r\n\r\nexport const createEventCommand = <\r\n  Code extends EventCode,\r\n  Param extends CommandParamaterType<Code>\r\n>(\r\n  code: Code,\r\n  param: Param,\r\n  indent: number = 0\r\n): EventCommandLike<Code, Param> => {\r\n  return {\r\n    code,\r\n    indent,\r\n    parameters: param,\r\n  };\r\n};\r\n","import type { MapEvent_PageCondition, PageConditionArg } from \"./condition\";\r\n\r\nexport const makeEventPageCondition = (\r\n  arg: Partial<PageConditionArg> = {}\r\n): MapEvent_PageCondition => {\r\n  return {\r\n    switch1Id: arg.switch1Id ?? 0,\r\n    switch1Valid: arg.switch1Id !== undefined,\r\n    switch2Id: arg.switch2Id ?? 0,\r\n    switch2Valid: arg.switch2Id !== undefined,\r\n    variableId: arg.variableId ?? 0,\r\n    variableValid: arg.variableId !== undefined,\r\n    variableValue: arg.variableValue ?? 0,\r\n    selfSwitchCh: arg.selfSwitchCh ?? \"A\",\r\n    selfSwitchValid: arg.selfSwitchCh !== undefined,\r\n    itemId: arg.itemId ?? 0,\r\n    itemValid: arg.itemId !== undefined,\r\n    actorId: arg.actorId ?? 0,\r\n    actorValid: arg.actorId !== undefined,\r\n  };\r\n};\r\n","import { makeEventPageCondition } from \"./condition\";\r\nimport type { MapEvent } from \"./mapEvent\";\r\nimport type { MapEvent_Image, MapEventPage } from \"./page\";\r\n\r\nexport const makeMapEvent = (): MapEvent => {\r\n  return {\r\n    id: 1,\r\n    name: \"\",\r\n    pages: [],\r\n    note: \"\",\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventIamge = (): MapEvent_Image => {\r\n  return {\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    direction: 2,\r\n    pattern: 0,\r\n    tileId: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventPage = (): MapEventPage => {\r\n  return {\r\n    conditions: makeEventPageCondition(),\r\n    list: [],\r\n    directionFix: false,\r\n    image: makeMapEventIamge(),\r\n    moveFrequency: 5,\r\n    moveRoute: {\r\n      list: [],\r\n      repeat: false,\r\n      skippable: false,\r\n      wait: false,\r\n    },\r\n  };\r\n};\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_MAP_INFO = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"expanded\",\r\n    \"order\",\r\n    \"parentId\",\r\n    \"scrollX\",\r\n    \"scrollY\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    expanded: { type: \"boolean\" },\r\n    order: { type: \"integer\" },\r\n    parentId: { type: \"integer\" },\r\n    scrollX: { type: \"integer\" },\r\n    scrollY: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_MapInfo>;\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\n\r\nconst makeMapName = (mapId: number) => {\r\n  return mapId.toString().padStart(3, \"0\");\r\n};\r\n\r\nexport const makeMapInfoData = (\r\n  info: { id: number } & Partial<Data_MapInfo> = { id: 0 }\r\n): Data_MapInfo => {\r\n  return {\r\n    name: info.name ?? makeMapName(info.id),\r\n    id: info.id,\r\n    expanded: info.expanded ?? false,\r\n    order: info.order ?? 0,\r\n    parentId: info.parentId ?? 0,\r\n    scrollX: info.scrollX ?? 0,\r\n    scrollY: info.scrollY ?? 0,\r\n  };\r\n};\r\n","import type { Data_Map } from \"./map\";\r\n\r\nexport const makeMapData = (map: Partial<Data_Map> = {}): Data_Map => {\r\n  return {\r\n    data: map.data ?? [],\r\n    battleback1Name: map.battleback1Name ?? \"\",\r\n    battleback2Name: map.battleback2Name ?? \"\",\r\n\r\n    autoplayBgm: map.autoplayBgm ?? false,\r\n    autoplayBgs: map.autoplayBgs ?? false,\r\n    parallaxLoopX: map.parallaxLoopX ?? false,\r\n    parallaxLoopY: map.parallaxLoopY ?? false,\r\n    parallaxName: map.parallaxName ?? \"\",\r\n    parallaxShow: map.parallaxShow ?? false,\r\n    parallaxSx: map.parallaxSx ?? 0,\r\n    parallaxSy: map.parallaxSy ?? 0,\r\n\r\n    x: map.x ?? 0,\r\n    y: map.y ?? 0,\r\n    width: map.width ?? 0,\r\n    height: map.height ?? 0,\r\n    note: map.note ?? \"\",\r\n\r\n    bgm: map.bgm ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    bgs: map.bgs ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    disableDashing: map.disableDashing ?? false,\r\n    displayName: map.displayName ?? \"\",\r\n    encounterList: map.encounterList ?? [],\r\n    events: map.events ?? [],\r\n  };\r\n};\r\n","import type { Data_Troop, Troop_EventConditions, Troop_Member } from \"./troop\";\r\nimport type { Data_CommonEvent } from \"./commonEvent\";\r\n\r\nexport const makeCommonEventData = (\r\n  data: Partial<Data_CommonEvent> = {}\r\n): Data_CommonEvent => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  trigger: data.trigger ?? 0,\r\n  list: data.list ?? [],\r\n  switchId: data.switchId ?? 0,\r\n});\r\n\r\nexport const makeTroopData = (data: Partial<Data_Troop> = {}): Data_Troop => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  members: data.members ?? [],\r\n  pages: data.pages ?? [],\r\n});\r\n\r\nexport const makeTroopMember = (\r\n  data: Partial<Troop_Member> = {}\r\n): Troop_Member => ({\r\n  enemyId: data.enemyId ?? 0,\r\n  x: data.x ?? 0,\r\n  y: data.y ?? 0,\r\n  hidden: data.hidden ?? false,\r\n});\r\n\r\nexport const makeTroopEventConditions = (\r\n  data: Partial<Troop_EventConditions> = {}\r\n): Troop_EventConditions => ({\r\n  actorHp: data.actorHp ?? 0,\r\n  actorId: data.actorId ?? 0,\r\n  enemyValid: data.enemyValid ?? 0,\r\n  switchValid: data.switchValid ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MoveRouteDataUnkwnown } from \"./moveRoute\";\r\nimport type { AudioFileParams } from \"@RpgTypes/utils\";\r\n\r\nexport const SCHEMA_MOVEROUTE_DATA = {\r\n  type: \"object\",\r\n  required: [\"wait\", \"repeat\", \"skippable\", \"list\"],\r\n  properties: {\r\n    wait: { type: \"boolean\" },\r\n    repeat: { type: \"boolean\" },\r\n    skippable: { type: \"boolean\" },\r\n    list: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\"code\", \"parameters\"],\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          parameters: {\r\n            type: \"array\",\r\n            items: {\r\n              oneOf: [\r\n                { type: \"string\" },\r\n                { type: \"number\" },\r\n                {\r\n                  type: \"object\",\r\n                  required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n                  properties: {\r\n                    name: { type: \"string\" },\r\n                    pan: { type: \"integer\" },\r\n                    pitch: { type: \"integer\" },\r\n                    volume: { type: \"integer\" },\r\n                  },\r\n                } satisfies JSONSchemaType<AudioFileParams>,\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<MoveRouteDataUnkwnown>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MapEvent_PageCondition } from \"./condition\";\r\n\r\nexport const SCHEMA_MAP_EVENT_PAGE_CONDITION = {\r\n  type: \"object\",\r\n  required: [\r\n    \"switch1Id\",\r\n    \"switch1Valid\",\r\n    \"switch2Id\",\r\n    \"switch2Valid\",\r\n    \"variableId\",\r\n    \"variableValid\",\r\n    \"selfSwitchCh\",\r\n    \"selfSwitchValid\",\r\n    \"variableValue\",\r\n    \"itemId\",\r\n    \"itemValid\",\r\n    \"actorId\",\r\n    \"actorValid\",\r\n  ],\r\n  properties: {\r\n    switch1Id: { type: \"integer\", minimum: 0 },\r\n    switch1Valid: { type: \"boolean\" },\r\n    switch2Id: { type: \"integer\", minimum: 0 },\r\n    switch2Valid: { type: \"boolean\" },\r\n    variableId: { type: \"integer\", minimum: 0 },\r\n    variableValid: { type: \"boolean\" },\r\n    selfSwitchCh: { type: \"string\" },\r\n    selfSwitchValid: { type: \"boolean\" },\r\n    variableValue: { type: \"integer\" },\r\n    itemId: { type: \"integer\", minimum: 0 },\r\n    itemValid: { type: \"boolean\" },\r\n    actorId: { type: \"integer\" },\r\n    actorValid: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<MapEvent_PageCondition>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Map } from \"./map\";\r\nimport type { Encounter } from \"./members\";\r\nimport type { AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  MapEvent,\r\n  MapEvent_Image,\r\n  MapEvent_PageCondition,\r\n  MapEventPage,\r\n} from \"./event\";\r\nimport { SCHEMA_MOVEROUTE_DATA } from \"./event/eventCommand/moveRoute/schema\";\r\nimport type { MoveRouteDataUnkwnown } from \"./event/eventCommand/moveRoute\";\r\nimport { SCHEMA_MAP_EVENT_PAGE_CONDITION } from \"./event/condition/schema\";\r\n\r\nexport const SCHEMA_MAP_EVENT_IMAGE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"characterIndex\",\r\n    \"characterName\",\r\n    \"direction\",\r\n    \"pattern\",\r\n    \"tileId\",\r\n  ],\r\n  properties: {\r\n    characterIndex: { type: \"integer\", minimum: 0 },\r\n    characterName: { type: \"string\" },\r\n    direction: { type: \"integer\", enum: [2, 4, 6, 8] },\r\n    pattern: { type: \"integer\" },\r\n    tileId: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<MapEvent_Image>;\r\n\r\nexport const SCHEMA_MAP_EVENT_PAGE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"image\",\r\n    \"moveRoute\",\r\n    \"conditions\",\r\n    \"directionFix\",\r\n    \"moveFrequency\",\r\n  ] satisfies (keyof MapEventPage)[],\r\n  properties: {\r\n    moveFrequency: { type: \"integer\" },\r\n    directionFix: { type: \"boolean\" },\r\n    conditions:\r\n      SCHEMA_MAP_EVENT_PAGE_CONDITION satisfies JSONSchemaType<MapEvent_PageCondition>,\r\n\r\n    image: SCHEMA_MAP_EVENT_IMAGE satisfies JSONSchemaType<MapEvent_Image>,\r\n    moveRoute:\r\n      SCHEMA_MOVEROUTE_DATA satisfies JSONSchemaType<MoveRouteDataUnkwnown>,\r\n    // list: {\r\n    //   type: \"array\",\r\n    //   items: {\r\n    //     type: \"object\",\r\n    //     required: [\"code\", \"indent\", \"parameters\"],\r\n    //     properties: {\r\n    //       code: { type: \"integer\" },\r\n    //       indent: { type: \"integer\" },\r\n    //       parameters: {\r\n    //         type: \"array\",\r\n    //         items: {},\r\n    //       },\r\n    //     },\r\n    //   },\r\n    // },\r\n  },\r\n} as const satisfies JSONSchemaType<Omit<MapEventPage, \"list\">>;\r\n\r\nexport const SCHEMA_DATA_MAP = {\r\n  type: \"object\",\r\n\r\n  required: [\r\n    \"battleback1Name\",\r\n    \"battleback2Name\",\r\n    \"note\",\r\n    \"width\",\r\n    \"height\",\r\n    \"x\",\r\n    \"y\",\r\n    \"parallaxSy\",\r\n    \"parallaxSx\",\r\n    \"parallaxLoopY\",\r\n    \"parallaxLoopX\",\r\n    \"disableDashing\",\r\n    \"parallaxName\",\r\n    \"parallaxShow\",\r\n    \"displayName\",\r\n    \"data\",\r\n    \"autoplayBgm\",\r\n    \"bgm\",\r\n    \"autoplayBgs\",\r\n    \"bgs\",\r\n  ] satisfies (keyof Data_Map)[],\r\n  properties: {\r\n    data: { type: \"array\", items: { type: \"integer\" } },\r\n    battleback1Name: { type: \"string\" },\r\n    battleback2Name: { type: \"string\" },\r\n\r\n    parallaxLoopY: { type: \"boolean\" },\r\n    parallaxLoopX: { type: \"boolean\" },\r\n    parallaxName: { type: \"string\" },\r\n    parallaxShow: { type: \"boolean\" },\r\n    parallaxSy: { type: \"integer\" },\r\n    parallaxSx: { type: \"integer\" },\r\n\r\n    x: { type: \"integer\", minimum: 0 },\r\n    y: { type: \"integer\", minimum: 0 },\r\n    width: { type: \"integer\", minimum: 0 },\r\n    height: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    displayName: { type: \"string\" },\r\n    disableDashing: { type: \"boolean\" },\r\n\r\n    autoplayBgm: { type: \"boolean\" },\r\n    bgm: {\r\n      type: \"object\",\r\n      required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        pan: { type: \"integer\" },\r\n        pitch: { type: \"integer\" },\r\n        volume: { type: \"integer\" },\r\n      },\r\n    } as const satisfies JSONSchemaType<AudioFileParams>,\r\n\r\n    autoplayBgs: { type: \"boolean\" },\r\n    bgs: {\r\n      type: \"object\",\r\n      required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        pan: { type: \"integer\" },\r\n        pitch: { type: \"integer\" },\r\n        volume: { type: \"integer\" },\r\n      },\r\n    } as const satisfies JSONSchemaType<AudioFileParams>,\r\n\r\n    encounterList: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\"regionSet\", \"troopId\", \"weight\"],\r\n        properties: {\r\n          regionSet: { type: \"array\", items: { type: \"integer\" } },\r\n          troopId: { type: \"integer\" },\r\n          weight: { type: \"integer\" },\r\n        },\r\n      } satisfies JSONSchemaType<Encounter>,\r\n    } satisfies JSONSchemaType<Encounter[]>,\r\n    events: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"id\",\r\n          \"name\",\r\n          \"x\",\r\n          \"y\",\r\n          \"pages\",\r\n        ] satisfies (keyof MapEvent)[],\r\n        properties: {\r\n          id: { type: \"integer\" },\r\n          name: { type: \"string\" },\r\n          x: { type: \"integer\" },\r\n          y: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n          pages: {\r\n            type: \"array\",\r\n            items: SCHEMA_MAP_EVENT_PAGE,\r\n          },\r\n        },\r\n      } as const,\r\n    },\r\n  }, // satisfies Record<keyof Data_Map, unknown>,\r\n} as const satisfies JSONSchemaType<Omit<Data_Map, \"events\">>;\r\n// evetntsはコモンイベントが入ってて複雑。簡略化して対応する\r\n","import Ajv from \"ajv\";\r\nimport type { Data_MapInfo } from \"./map\";\r\nimport { SCHEMA_DATA_MAP_INFO } from \"./map\";\r\nimport { SCHEMA_DATA_MAP } from \"./map/schema\";\r\n\r\nconst ajv = new Ajv();\r\n\r\nconst mapInfo = ajv.compile(SCHEMA_DATA_MAP_INFO);\r\n\r\nconst mapData = ajv.compile(SCHEMA_DATA_MAP);\r\n\r\nexport const isDataMapInfo = (data: unknown): data is Data_MapInfo => {\r\n  return mapInfo(data);\r\n};\r\n\r\nexport const isDataMap = (data: unknown): data is Data_MapInfo => {\r\n  return mapData(data);\r\n};\r\n","export interface System_Advanced {\r\n  gameId: number;\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  uiAreaWidth: number;\r\n  uiAreaHeight: number;\r\n  windowOpacity: number;\r\n  screenScale: number;\r\n\r\n  numberFontFilename: string;\r\n  mainFontFilename: string;\r\n  fallbackFonts: string;\r\n  fontSize: number;\r\n}\r\n\r\nexport const makeSystemAdvanced = (\r\n  advanced: Partial<System_Advanced> = {}\r\n): System_Advanced => {\r\n  return {\r\n    gameId: advanced.gameId ?? 0,\r\n    screenWidth: advanced.screenWidth ?? 0,\r\n    screenHeight: advanced.screenHeight ?? 0,\r\n    uiAreaWidth: advanced.uiAreaWidth ?? 0,\r\n    uiAreaHeight: advanced.uiAreaHeight ?? 0,\r\n    windowOpacity: advanced.windowOpacity ?? 0,\r\n    screenScale: advanced.screenScale ?? 1,\r\n\r\n    numberFontFilename: advanced.numberFontFilename ?? \"\",\r\n    mainFontFilename: advanced.mainFontFilename ?? \"\",\r\n    fallbackFonts: advanced.fallbackFonts ?? \"\",\r\n    fontSize: advanced.fontSize ?? 28,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_Advanced } from \"./advanced\";\r\n\r\nexport const SCHEMA_SYSTEM_ADVANCED = {\r\n  type: \"object\",\r\n  properties: {\r\n    gameId: { type: \"integer\" },\r\n    screenWidth: { type: \"integer\" },\r\n    screenHeight: { type: \"integer\" },\r\n    uiAreaWidth: { type: \"integer\" },\r\n    uiAreaHeight: { type: \"integer\" },\r\n    windowOpacity: { type: \"integer\" },\r\n    screenScale: { type: \"number\" },\r\n\r\n    numberFontFilename: { type: \"string\" },\r\n    mainFontFilename: { type: \"string\" },\r\n    fallbackFonts: { type: \"string\" },\r\n    fontSize: { type: \"integer\" },\r\n  },\r\n  required: [\r\n    \"gameId\",\r\n    \"screenWidth\",\r\n    \"screenHeight\",\r\n    \"uiAreaWidth\",\r\n    \"uiAreaHeight\",\r\n    \"windowOpacity\",\r\n    \"screenScale\",\r\n    \"numberFontFilename\",\r\n    \"mainFontFilename\",\r\n    \"fallbackFonts\",\r\n    \"fontSize\",\r\n  ],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<System_Advanced>;\r\n","import type { AudioFileParams } from \"./audioFileParams\";\r\n\r\nexport const makeAudioFileParams = (\r\n  audioFileParams: Partial<AudioFileParams> = {}\r\n): AudioFileParams => {\r\n  return {\r\n    name: audioFileParams.name ?? \"\",\r\n    volume: audioFileParams.volume ?? 100,\r\n    pitch: audioFileParams.pitch ?? 100,\r\n    pan: audioFileParams.pan ?? 0,\r\n  };\r\n};\r\n","import type { System_SoundsArray, System_SoundsObject } from \"./types\";\r\nimport { makeAudioFileParams } from \"@RpgTypes/utils\";\r\n\r\nexport const makeSoundsArray = (\r\n  sounds: Partial<System_SoundsObject>\r\n): System_SoundsArray => {\r\n  return [\r\n    makeAudioFileParams(sounds.cursor),\r\n    makeAudioFileParams(sounds.ok),\r\n    makeAudioFileParams(sounds.cancel),\r\n    makeAudioFileParams(sounds.buzzer),\r\n    makeAudioFileParams(sounds.equip),\r\n    makeAudioFileParams(sounds.save),\r\n    makeAudioFileParams(sounds.load),\r\n    makeAudioFileParams(sounds.battleStart),\r\n    makeAudioFileParams(sounds.escape),\r\n    makeAudioFileParams(sounds.enemyAttack),\r\n    makeAudioFileParams(sounds.enemyDamage),\r\n    makeAudioFileParams(sounds.enemyCollapse),\r\n    makeAudioFileParams(sounds.bossCollapes1),\r\n    makeAudioFileParams(sounds.bossCollapes2),\r\n    makeAudioFileParams(sounds.actorDamage),\r\n    makeAudioFileParams(sounds.actorCollapse),\r\n    makeAudioFileParams(sounds.playRecovery),\r\n    makeAudioFileParams(sounds.playMiss),\r\n    makeAudioFileParams(sounds.playEvasion),\r\n    makeAudioFileParams(sounds.playMagicEvasion),\r\n    makeAudioFileParams(sounds.playReflection),\r\n    makeAudioFileParams(sounds.shop),\r\n    makeAudioFileParams(sounds.useItem),\r\n    makeAudioFileParams(sounds.useSkill),\r\n  ];\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  System_DataNames,\r\n  System_Images,\r\n  System_Text,\r\n  System_Bgm,\r\n  System_BoolanOptions,\r\n} from \"./system\";\r\n\r\ntype AsLabel<T> = Record<keyof T, string>;\r\n\r\nexport type SystemLabel_DataNames = AsLabel<System_DataNames>;\r\nexport type SystemLabel_Images = AsLabel<System_Images>;\r\nexport type SystemLabel_Text = AsLabel<System_Text>;\r\nexport type SystemLabel_Bgm = AsLabel<System_Bgm>;\r\nexport type SystemLabel_BoolanOptions = AsLabel<System_BoolanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_BOOLEAN = {\r\n  domainName: \"オプション\",\r\n  options: {\r\n    optDrawTitle: \"ゲームタイトルの描画\",\r\n    optDisplayTp: \"ウィンドウにTPを表示\",\r\n    optFloorDeath: \"床ダメージで戦闘不能\",\r\n    optSlipDeath: \"スリップダメージで戦闘不能\",\r\n    optAutosave: \"オートセーブを有効化\",\r\n    optExtraExp: \"控えメンバーも経験値を獲得\",\r\n    optFollowers: \"隊列歩行\",\r\n    optSideView: \"戦闘をサイドビューにする\",\r\n    optKeyItemsNumber: \"大事なものの個数を表示\",\r\n    optTransparent: \"透明状態で開始\",\r\n    optMessageSkip: \"メッセージスキップを有効化\",\r\n    optSplashScreen: \"スプラッシュ画面を表示\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_BoolanOptions>;\r\n\r\nexport const MockSystemLabelDataTypes = {\r\n  domainName: \"タイプ\",\r\n  options: {\r\n    armorTypes: \"防具タイプ\",\r\n    elements: \"属性\",\r\n    equipTypes: \"装備タイプ\",\r\n    skillTypes: \"スキルタイプ\",\r\n    weaponTypes: \"武器タイプ\",\r\n    switches: \"スイッチ\",\r\n    variables: \"変数\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_DataNames>;\r\n","import type { NoteReadResult } from \"./types\";\r\n\r\nexport const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]+):([^>]*)>/g;\r\n\r\nexport const readNoteObject = <Result, T extends { note: string }>(\r\n  data: T,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => readNoteEx(data.note, (key, value) => fn(key, value, data));\r\n\r\nexport const readNote = (note: string): NoteReadResult[] => {\r\n  return readNoteEx(note, (key, value) => [key, value]);\r\n};\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nexport const readNoteEx = <Result>(\r\n  note: string,\r\n  fn: (key: string, value: string) => Result\r\n): Result[] => {\r\n  const regex = makeRegex();\r\n  return Array.from(note.matchAll(regex), (match) => fn(match[1], match[2]));\r\n};\r\n\r\n/**\r\n *\r\n * @param note\r\n * @param transformFunction この関数の戻り値でvalueを置き換える\r\n * @returns\r\n */\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  return note.replaceAll(\r\n    makeRegex(),\r\n    (_subString, key: string, value: string) => {\r\n      const newText = transformFunction(key, value);\r\n      return createNoteEntity(key, newText);\r\n    }\r\n  );\r\n};\r\n\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  const match = Array.from(note.matchAll(regex)).find(\r\n    (m) => m[1] === targetKey\r\n  );\r\n  return match ? match[2] : undefined;\r\n};\r\n\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replace(regex, (match, key: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","export const createControlCharFormat = <C extends string>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromStringArray = <C extends string>(\r\n  char: C,\r\n  array: ReadonlyArray<string>\r\n) => {\r\n  return array.map((text, index) => ({\r\n    text,\r\n    controlChar: createControlCharFormat(char, index),\r\n  }));\r\n};\r\n","import type { ControlChar } from \"./types\";\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (text: string): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n  return Array.from(text.matchAll(regex)).map<ControlChar>(\r\n    (match: RegExpMatchArray) => ({\r\n      char: match[1],\r\n      id: parseInt(match[2], 10),\r\n    })\r\n  );\r\n};\r\n","export const CTRL_CHAR_ACTOR = \"N\" as const;\r\nexport const CTRL_CHAR_VARIABLE = \"V\" as const;\r\nexport const CTRL_CHAR_POSTION_X = \"PX\" as const;\r\nexport const CTRL_CHAR_POSTION_Y = \"PY\" as const;\r\nexport const CTRL_CHAR_GOLD = \"G\" as const;\r\nexport const CTRL_CHAR_PARTY = \"P\" as const;\r\nexport const CTRL_CHAR_COLOR = \"C\" as const;\r\nexport const CTRL_CHAR_ICON = \"I\" as const;\r\nexport const CTRL_CHAR_FONT_SIZE = \"FS\" as const;\r\n","import type { ControlCharInfo } from \"./controlChars\";\r\nimport { createControlCharFormat } from \"./controlChars\";\r\nimport { CTRL_CHAR_ACTOR, CTRL_CHAR_VARIABLE } from \"./controlChars/constants\";\r\nimport type { Data_Actor } from \"./main\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nexport const createActorControlChars = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    text: actor.name,\r\n    controlChar: createControlCharFormat(CTRL_CHAR_ACTOR, actor.id),\r\n  }));\r\n};\r\n\r\nexport const createSystemVariableControlChars = (\r\n  system: Pick<Data_System, \"variables\">\r\n): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(CTRL_CHAR_VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","import type { GlobalLabel } from \"./globalLabels\";\r\n\r\nexport const DEFAULT_GLOBAL_LABELS = {\r\n  id: \"識別子\",\r\n  name: \"名前\",\r\n  note: \"メモ\",\r\n  description: \"説明\",\r\n  iconIndex: \"アイコンインデックス\",\r\n  occasion: \"使用タイミング\",\r\n  params: \"パラメータ\",\r\n  repeats: \"繰り返し回数\",\r\n  scope: \"範囲\",\r\n  speed: \"速度補正\",\r\n  successRate: \"成功率\",\r\n  animationId: \"アニメーションID\",\r\n  displayType: \"表示タイプ\",\r\n  characterIndex: \"キャラクターインデックス\",\r\n  characterName: \"キャラクター名\",\r\n  effectName: \"効果名\",\r\n  faceIndex: \"顔グラフィックインデックス\",\r\n  faceName: \"顔グラフィック名\",\r\n  flashTimings: \"フラッシュタイミング\",\r\n  list: \"リスト\",\r\n  messageType: \"メッセージタイプ\",\r\n  offsetX: \"オフセットX\",\r\n  offsetY: \"オフセットY\",\r\n  overlay: \"オーバーレイ\",\r\n  priority: \"優先度\",\r\n  restriction: \"制約\",\r\n  rotation: \"回転\",\r\n  scale: \"スケール\",\r\n  soundTimings: \"サウンドタイミング\",\r\n  stepsToRemove: \"解除までの歩数\",\r\n  type: \"タイプ\",\r\n  variance: \"分散度\",\r\n  unknownCode: \"不明なコード\",\r\n  content: \"内容\",\r\n  apply: \"適用\",\r\n  turn: \"ターン\",\r\n  commonEvent: \"コモンイベント\",\r\n  normal: \"通常\",\r\n  dualWield: \"二刀流\",\r\n  bossCollaps: \"ボス崩壊\",\r\n  instantCollaps: \"即時崩壊\",\r\n  noneCollaps: \"崩壊なし\",\r\n  escape: \"逃走\",\r\n} as const satisfies GlobalLabel;\r\n","import type { LabelRegistry } from \"./labelRegistry\";\r\nimport { DEFAULT_GLOBAL_LABELS } from \"./labelUtils\";\r\nimport {\r\n  DEFAULT_DAMAGE_LABELS,\r\n  LABEL_SET_ITEM_EFFECT,\r\n  LABEL_SET_DATA,\r\n  LABEL_SET_TRAIT,\r\n} from \"./data\";\r\n\r\nexport const LABEL_REGISTRY_JP = {\r\n  rpg: {\r\n    damage: DEFAULT_DAMAGE_LABELS,\r\n    data: LABEL_SET_DATA,\r\n    traits: LABEL_SET_TRAIT,\r\n    itemEffect: LABEL_SET_ITEM_EFFECT,\r\n  },\r\n  global: DEFAULT_GLOBAL_LABELS,\r\n} as const satisfies LabelRegistry;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowMessageHeader } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_MESSAGE = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    code: { type: \"integer\", const: 101 }, // Assuming 101 is the code for ShowMessage\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"string\" }, // facename\r\n        { type: \"integer\", minimum: 0, maximum: 7 }, // faceIndex\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // background\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // positionType\r\n        { type: \"string\" }, // speakerName\r\n      ] as const,\r\n\r\n      minItems: 5,\r\n      maxItems: 5,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Command_ShowMessageHeader>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_InputNumber } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_INPUT_NUMBER = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 103 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // variableId\r\n        { type: \"number\" }, // digits\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_InputNumber>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_AnyAudio } from \"./types\";\r\nimport type { AudioFileParams } from \"src/libs/utils\";\r\n\r\nexport const SCHEMA_COMMAND_ANY_AUDIO = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        132, // ChangeBattleBGM\r\n        133, // ChangeVictoryME\r\n        139, // ChangeDefeatME\r\n        241, // PlayBGM\r\n        245, // PlayBGS\r\n        249, // PlayME\r\n        250, // PlaySE\r\n      ],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            name: { type: \"string\" },\r\n            volume: { type: \"integer\" },\r\n            pitch: { type: \"integer\" },\r\n            pan: { type: \"integer\" },\r\n          },\r\n          required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n          additionalProperties: false,\r\n        } satisfies JSONSchemaType<AudioFileParams>,\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_AnyAudio>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowChoiceWhen } from \"./types/item\";\r\nimport type { Command_ShowChoices } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICE_WHEN = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 402 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\" }, // index\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoiceWhen>;\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICES = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 102 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 5,\r\n      maxItems: 5,\r\n      items: [\r\n        { type: \"array\", items: { type: \"string\" } }, // choices\r\n        { type: \"integer\" }, // cancelType\r\n        { type: \"integer\" }, // defaultType\r\n        { type: \"integer\" }, // positionType\r\n        { type: \"integer\" }, // background\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoices>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ScrollTextHeader, Command_ScrollTextBody } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_HEAD = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 105 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // speed\r\n        { type: \"boolean\" }, // skip\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextHeader>;\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_BODY = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 405 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }], // content\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextBody>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_ChangeActorText } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CHANGE_ACTOR_TEXT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [320, 324, 325],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\", minimum: 0 }, // actorId\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_ChangeActorText>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_CommonEvent } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CALL_COMMON_EVENT = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 117 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"number\", minimum: 0, default: 0 }],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_CommonEvent>;\r\n","import {\r\n  COMMENT_HEAD,\r\n  COMMENT_BODY,\r\n  SCRIPT_EVAL,\r\n  SCRIPT_EVAL_BODY,\r\n  SHOW_MESSAGE_BODY,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n} from \"@RpgTypes/schema\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nimport type {\r\n  CommandUnion_TextBody,\r\n  CommandUnion_EmptyParam,\r\n} from \"./unionTypes\";\r\n\r\nexport const SCHEMA_COMMAND_TEXT_BODY = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        COMMENT_HEAD,\r\n        COMMENT_BODY,\r\n        SCRIPT_EVAL,\r\n        SCRIPT_EVAL_BODY,\r\n        SHOW_MESSAGE_BODY,\r\n        SHOW_SCROLLING_TEXT_BODY,\r\n      ],\r\n    },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_TextBody>;\r\n\r\nexport const SCHEMA_COMMAND_EMPTY_PARAM = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: { type: \"array\", minItems: 0, maxItems: 0 },\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        0, 109, 112, 113, 115, 204, 206, 213, 214, 216, 217, 221, 222, 243, 244,\r\n        251, 314, 315, 340, 351, 352, 353, 354, 411,\r\n      ] satisfies ReadonlyArray<CommandUnion_EmptyParam[\"code\"]>,\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const;\r\n","import Ajv from \"ajv\";\r\nimport { SCHEMA_COMMAND_SHOW_MESSAGE } from \"./commands/message/showMessage/schema\";\r\nimport { SCHEMA_COMMAND_INPUT_NUMBER } from \"./commands/message/inputNumber/schema\";\r\nimport { SCHEMA_COMMAND_ANY_AUDIO } from \"./commands/audio/play/schema\";\r\nimport {\r\n  SCHEMA_COMMAND_SHOW_CHOICES,\r\n  SCHEMA_COMMAND_SHOW_CHOICE_WHEN,\r\n} from \"./commands/message/setupChoice/schema\";\r\nimport type {\r\n  CommandUnion_AnyAudio,\r\n  Command_ShowChoices,\r\n  Command_ShowChoiceWhen,\r\n  Command_InputNumber,\r\n  Command_ShowMessageHeader,\r\n  Command_ScrollTextHeader,\r\n  CommandUnion_ChangeActorText,\r\n  Command_CommonEvent,\r\n} from \"./commands\";\r\nimport { SCHEMA_COMMAND_SCROLL_TEXT_HEAD } from \"./commands/message/scrollText/schema\";\r\nimport { SCHEMA_COMMAND_CHANGE_ACTOR_TEXT } from \"./commands/actor/changeText/schema\";\r\nimport { SCHEMA_COMMAND_CALL_COMMON_EVENT } from \"./commands/flow/callCommonEvent/schema\";\r\nimport { SCHEMA_COMMAND_TEXT_BODY } from \"./unionSchema\";\r\nimport type { CommandUnion_TextBody } from \"./unionTypes\";\r\n\r\nconst ajv = new Ajv();\r\n// schemaはindex.ts無しで直接importすること！\r\n// 過去に循環参照エラーで苦しんでます\r\nconst changeActorText = ajv.compile(SCHEMA_COMMAND_CHANGE_ACTOR_TEXT);\r\nconst inputNumber = ajv.compile(SCHEMA_COMMAND_INPUT_NUMBER);\r\nconst commonVent = ajv.compile(SCHEMA_COMMAND_CALL_COMMON_EVENT);\r\n\r\nconst showChoiceItem = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICE_WHEN);\r\nconst showMessage = ajv.compile(SCHEMA_COMMAND_SHOW_MESSAGE);\r\n\r\nconst showChoices = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICES);\r\n\r\nconst textBody = ajv.compile(SCHEMA_COMMAND_TEXT_BODY);\r\nconst audioCommand = ajv.compile(SCHEMA_COMMAND_ANY_AUDIO);\r\nconst scrollTextHead = ajv.compile(SCHEMA_COMMAND_SCROLL_TEXT_HEAD);\r\n\r\nexport const isCommandChangeActorText = (\r\n  data: unknown\r\n): data is CommandUnion_ChangeActorText => {\r\n  return changeActorText(data);\r\n};\r\n\r\nexport const isCommandScrollTextHead = (\r\n  data: unknown\r\n): data is Command_ScrollTextHeader => {\r\n  return scrollTextHead(data);\r\n};\r\n\r\nexport const isCommandTextBody = (\r\n  command: unknown\r\n): command is CommandUnion_TextBody => {\r\n  return textBody(command);\r\n};\r\n\r\nexport const isCommandAudio = (\r\n  data: unknown\r\n): data is CommandUnion_AnyAudio => {\r\n  return audioCommand(data);\r\n};\r\n\r\nexport const isCommandCommonEvent = (\r\n  data: unknown\r\n): data is Command_CommonEvent => {\r\n  return commonVent(data);\r\n};\r\n\r\nexport const isCommandShowChoices = (\r\n  data: unknown\r\n): data is Command_ShowChoices => {\r\n  return showChoices(data);\r\n};\r\nexport const isCommandShowChoiceItem = (\r\n  data: unknown\r\n): data is Command_ShowChoiceWhen => {\r\n  return showChoiceItem(data);\r\n};\r\n\r\nexport const isCommandInputNumber = (\r\n  data: unknown\r\n): data is Command_InputNumber => {\r\n  return inputNumber(data);\r\n};\r\n\r\nexport const isCommandShowMessage = (\r\n  data: unknown\r\n): data is Command_ShowMessageHeader => {\r\n  return showMessage(data);\r\n};\r\n","import {\r\n  SHOW_MESSAGE_BODY,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n  COMMENT_BODY,\r\n  COMMENT_HEAD,\r\n  SCRIPT_EVAL_BODY,\r\n  SCRIPT_EVAL,\r\n} from \"@RpgTypes/schema\";\r\nimport type {\r\n  Command_ShowMessageBody,\r\n  Command_CommentBody,\r\n  Command_CommentHeader,\r\n  Command_ScrollTextBody,\r\n  Command_ScriptHeader,\r\n  Command_ScriptBody,\r\n} from \"./commands\";\r\nimport { isCommandTextBody } from \"./validate\";\r\n\r\nexport const isCommandShowMessageBody = (\r\n  command: unknown\r\n): command is Command_ShowMessageBody => {\r\n  return isCommandTextBody(command) && command.code === SHOW_MESSAGE_BODY;\r\n};\r\n\r\nexport const isCommandShowScrollingTextBody = (\r\n  command: unknown\r\n): command is Command_ScrollTextBody => {\r\n  return (\r\n    isCommandTextBody(command) && command.code === SHOW_SCROLLING_TEXT_BODY\r\n  );\r\n};\r\n\r\nexport const isCommandCommentHeader = (\r\n  command: unknown\r\n): command is Command_CommentHeader => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_HEAD;\r\n};\r\n\r\nexport const isCommandCommentBody = (\r\n  command: unknown\r\n): command is Command_CommentBody => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_BODY;\r\n};\r\n\r\nexport const isCommandScriptHeader = (\r\n  command: unknown\r\n): command is Command_ScriptHeader => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL;\r\n};\r\n\r\nexport const isCommandScriptBody = (\r\n  command: unknown\r\n): command is Command_ScriptBody => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL_BODY;\r\n};\r\n","import { CHANGE_NAME, CHANGE_NICKNAME, CHANGE_PROFILE } from \"@RpgTypes/schema\";\r\nimport type {\r\n  ParamObject_ChangeActorName,\r\n  Command_ChangeActorName as Command_ChangeActorName,\r\n  Command_ChangeActorNickName,\r\n  Command_ChangeActorProfile,\r\n  ParamObject_ChangeActorNickName,\r\n  ParamObject_ChangeActorProfile,\r\n} from \"./types\";\r\n\r\nexport const makeCommandChangeActorName = (\r\n  param: ParamObject_ChangeActorName,\r\n  indent: number = 0\r\n): Command_ChangeActorName => ({\r\n  code: CHANGE_NAME,\r\n  parameters: [param.actorId, param.name],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorNickName = (\r\n  param: ParamObject_ChangeActorNickName,\r\n  indent: number = 0\r\n): Command_ChangeActorNickName => ({\r\n  code: CHANGE_NICKNAME,\r\n  parameters: [param.actorId, param.nickname],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorProfile = (\r\n  param: ParamObject_ChangeActorProfile,\r\n  indent: number = 0\r\n): Command_ChangeActorProfile => ({\r\n  code: CHANGE_PROFILE,\r\n  parameters: [param.actorId, param.profile],\r\n  indent,\r\n});\r\n","import { makeAudioFileParams, type AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n  Command_ChangeDefeatME,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeBattleBGM,\r\n  CommandUnion_AnyAudio,\r\n} from \"./types\";\r\nimport {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_DEFEAT_ME,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_BATTLE_BGM,\r\n} from \"@RpgTypes/schema\";\r\n\r\nexport const makeAudioCommand = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  filename: string\r\n) => {\r\n  return makeCommandAudioAny(code, makeAudioFileParams({ name: filename }));\r\n};\r\n\r\nexport const makeCommandAudioAny = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n) => {\r\n  return {\r\n    code,\r\n    parameters: [makeAudioFileParams(audio)] satisfies [AudioFileParams],\r\n    indent,\r\n  };\r\n};\r\n\r\nexport const makeCommandPlayBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGM => makeCommandAudioAny(PLAY_BGM, audio, indent);\r\n\r\nexport const makeCommandPlayBGS = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGS => makeCommandAudioAny(PLAY_BGS, audio, indent);\r\n\r\nexport const makeCommandPlayME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayME => makeCommandAudioAny(PLAY_ME, audio, indent);\r\n\r\nexport const makeCommandPlaySE = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlaySE => makeCommandAudioAny(PLAY_SE, audio, indent);\r\n\r\nexport const makeCommandChangeBattleBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeBattleBGM =>\r\n  makeCommandAudioAny(CHANGE_BATTLE_BGM, audio, indent);\r\n\r\nexport const makeCommandChangeVictoryME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeVictoryME =>\r\n  makeCommandAudioAny(CHANGE_VICTORY_ME, audio, indent);\r\n\r\nexport const makeCommandChangeDefeatME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeDefeatME =>\r\n  makeCommandAudioAny(CHANGE_DEFEAT_ME, audio, indent);\r\n","import { COMMENT_HEAD, COMMENT_BODY } from \"@RpgTypes/schema\";\r\nimport type {\r\n  ParamArray_Comment,\r\n  ParamObject_Comment,\r\n  Command_CommentHeader,\r\n  Command_CommentBody,\r\n} from \"./types\";\r\n\r\nexport const makeCommentArray = (comment: string): ParamArray_Comment => {\r\n  return [comment];\r\n};\r\n\r\nexport const convertCommentArrayToObject = (\r\n  paramArray: ParamArray_Comment\r\n): ParamObject_Comment => ({\r\n  comment: paramArray[0],\r\n});\r\n\r\nexport const makeCommandCommentHeader = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentHeader => ({\r\n  code: COMMENT_HEAD,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommandCommentBody = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentBody => ({\r\n  code: COMMENT_BODY,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommentCommandArray = (\r\n  comments: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return comments.map((comment, index) =>\r\n    index === 0\r\n      ? makeCommandCommentHeader(comment, indent)\r\n      : makeCommandCommentBody(comment, indent)\r\n  ) as [Command_CommentHeader, ...Command_CommentBody[]];\r\n};\r\n","import { INPUT_NUMBER } from \"@RpgTypes/schema\";\r\nimport type {\r\n  Command_InputNumber,\r\n  ParamArray_InputNumber,\r\n  ParamObject_InputNumber,\r\n} from \"./types\";\r\n\r\nexport const toArrayInputNumber = (\r\n  param: Partial<ParamObject_InputNumber>\r\n): ParamArray_InputNumber => [param.variableId ?? 0, param.digits ?? 0];\r\n\r\nexport const fromArrayInputNumber = (\r\n  array: ParamArray_InputNumber\r\n): ParamObject_InputNumber => ({\r\n  variableId: array[0],\r\n  digits: array[1],\r\n});\r\n\r\nexport const makeCommandInputNumber = (\r\n  param: Partial<ParamObject_InputNumber> | undefined,\r\n  indent: number = 0\r\n): Command_InputNumber => ({\r\n  code: INPUT_NUMBER,\r\n  indent,\r\n  parameters: toArrayInputNumber(param ?? {}),\r\n});\r\n","import {\r\n  SHOW_SCROLLING_TEXT,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n} from \"@RpgTypes/schema\";\r\nimport type {\r\n  Command_ScrollTextBody,\r\n  Command_ScrollTextHeader,\r\n  ParamArray_ScrollTextHeader,\r\n  ParamObject_ScrollTextHeader,\r\n} from \"./types\";\r\nimport type {\r\n  ParamArray_ScrollTextBody,\r\n  ParamObject_ScrollTextBody,\r\n} from \"./types\";\r\n\r\nexport const toArrayScrollingTextHeader = (\r\n  param: Partial<ParamObject_ScrollTextHeader> = {}\r\n): ParamArray_ScrollTextHeader => {\r\n  return [param?.speed ?? 4, param?.skip ?? false];\r\n};\r\n\r\nexport const fromArrayScrollingTextHeader = (\r\n  array: ParamArray_ScrollTextHeader\r\n): ParamObject_ScrollTextHeader => {\r\n  return {\r\n    speed: array[0],\r\n    skip: array[1],\r\n  };\r\n};\r\n\r\nexport const makeCommandScrollingTextHeader = (\r\n  param: Partial<ParamObject_ScrollTextHeader> = {},\r\n  indent: number = 0\r\n): Command_ScrollTextHeader => {\r\n  return {\r\n    code: SHOW_SCROLLING_TEXT,\r\n    indent,\r\n    parameters: toArrayScrollingTextHeader(param),\r\n  };\r\n};\r\n\r\nexport const toArrayScrollingTextBody = (\r\n  text: string = \"\"\r\n): ParamArray_ScrollTextBody => {\r\n  return [text];\r\n};\r\n\r\nexport const fromArrayScrollingTextBody = (\r\n  array: ParamArray_ScrollTextBody\r\n): ParamObject_ScrollTextBody => {\r\n  return {\r\n    content: array[0],\r\n  };\r\n};\r\nexport const makeCommandScrollingTextBody = (\r\n  text: string = \"\",\r\n  indent: number = 0\r\n): Command_ScrollTextBody => {\r\n  return {\r\n    code: SHOW_SCROLLING_TEXT_BODY,\r\n    indent: indent ?? 0,\r\n    parameters: toArrayScrollingTextBody(text),\r\n  };\r\n};\r\n","import { SHOW_CHOICES, SHOW_CHOICES_ITEM } from \"@RpgTypes/schema\";\r\nimport type {\r\n  ParamArray_SetupChoice,\r\n  ParamObject_SetupChoice,\r\n  Command_ShowChoices,\r\n} from \"./types/body\";\r\nimport type {\r\n  ParamObject_ShowChoiceWhen,\r\n  Command_ShowChoiceWhen,\r\n  ParamArray_ShowChoiceWhen,\r\n} from \"./types/item\";\r\n\r\nexport const makeCommandShowChoiceItem = (\r\n  param: Partial<ParamObject_ShowChoiceWhen> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoiceWhen => ({\r\n  code: SHOW_CHOICES_ITEM,\r\n  indent,\r\n  parameters: [param?.index ?? 0, param?.name ?? \"\"],\r\n});\r\n\r\nexport const fromArraySetupChoiceItem = (\r\n  array: ParamArray_ShowChoiceWhen\r\n): ParamObject_ShowChoiceWhen => ({\r\n  index: array[0],\r\n  name: array[1],\r\n});\r\n\r\nexport const toArraySetupChoiceItem = (\r\n  object: Partial<ParamObject_ShowChoiceWhen>\r\n): ParamArray_ShowChoiceWhen => [object.index ?? 0, object.name ?? \"\"];\r\n\r\nexport const fromArraySetupChoice = (\r\n  array: ParamArray_SetupChoice\r\n): ParamObject_SetupChoice => ({\r\n  choices: array[0],\r\n  cancelType: array[1],\r\n  defaultType: array[2],\r\n  positionType: array[3],\r\n  background: array[4],\r\n});\r\n\r\nexport const toArraySetupChoice = (\r\n  object: Partial<ParamObject_SetupChoice>\r\n): ParamArray_SetupChoice => [\r\n  object.choices ?? [],\r\n  object.cancelType ?? 0,\r\n  object.defaultType ?? 0,\r\n  object.positionType ?? 2,\r\n  object.background ?? 0,\r\n];\r\n\r\nexport const makeCommandSetupChoice = (\r\n  param: Partial<ParamObject_SetupChoice> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoices => ({\r\n  code: SHOW_CHOICES,\r\n  indent,\r\n  parameters: [\r\n    param?.choices ?? [],\r\n    param?.cancelType ?? 0,\r\n    param?.defaultType ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.background ?? 0,\r\n  ],\r\n});\r\n\r\nexport const cloneChoices = (\r\n  command: Command_ShowChoices\r\n): Command_ShowChoices => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: [\r\n      [...command.parameters[0]],\r\n      command.parameters[1],\r\n      command.parameters[2],\r\n      command.parameters[3],\r\n      command.parameters[4],\r\n    ],\r\n  };\r\n};\r\n","import type {\r\n  Command_ShowMessageBody,\r\n  Command_ShowMessageHeader,\r\n  ParamArray_ShowMessage,\r\n  ParamObject_ShowMessage,\r\n} from \"./types\";\r\nimport { SHOW_MESSAGE, SHOW_MESSAGE_BODY } from \"@RpgTypes/schema\";\r\n\r\nexport const makeCommandShowMessage = (\r\n  param: Partial<ParamObject_ShowMessage> | undefined,\r\n  indent: number = 0\r\n): Command_ShowMessageHeader => ({\r\n  code: SHOW_MESSAGE,\r\n  indent,\r\n  parameters: [\r\n    param?.facename ?? \"\",\r\n    param?.faceIndex ?? 0,\r\n    param?.background ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.speakerName ?? \"\",\r\n  ],\r\n});\r\n\r\nexport const fromArrayShowMessageHeader = (\r\n  array: ParamArray_ShowMessage\r\n): ParamObject_ShowMessage => {\r\n  return {\r\n    facename: array[0],\r\n    faceIndex: array[1],\r\n    background: array[2],\r\n    positionType: array[3],\r\n    speakerName: array[4],\r\n  };\r\n};\r\n\r\nexport const toArrayShowMessageHeader = (\r\n  object: ParamObject_ShowMessage\r\n): ParamArray_ShowMessage => {\r\n  return [\r\n    object.facename,\r\n    object.faceIndex,\r\n    object.background,\r\n    object.positionType,\r\n    object.speakerName,\r\n  ];\r\n};\r\n\r\nexport const makeCommandShowMessageBody = (\r\n  text: string,\r\n  indent: number = 0\r\n): Command_ShowMessageBody => ({\r\n  code: SHOW_MESSAGE_BODY,\r\n  indent,\r\n  parameters: [text],\r\n});\r\n","import type { Command_ScriptBody, Command_ScriptHeader } from \"./types\";\r\nimport { SCRIPT_EVAL, SCRIPT_EVAL_BODY } from \"@RpgTypes/schema\";\r\n\r\nexport const makeCommandScriptHeader = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptHeader => {\r\n  return {\r\n    code: SCRIPT_EVAL,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\n\r\nexport const makeCommandScriptBody = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptBody => {\r\n  return {\r\n    code: SCRIPT_EVAL_BODY,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\nexport const makeCommandScriptArray = (\r\n  lines: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return lines.map((line, index) =>\r\n    index === 0\r\n      ? makeCommandScriptHeader(line, indent)\r\n      : makeCommandScriptBody(line, indent)\r\n  ) as [Command_ScriptHeader, ...Command_ScriptBody[]];\r\n};\r\n","export const OPERAND_CONSTANT = 0 as const;\r\nexport const OPERAND_VARIABLE = 1 as const;\r\nexport const OPERAND_RANDOM = 2 as const;\r\nexport const OPERAND_GAMEDATA = 3 as const;\r\nexport const OPERAND_SCRIPT = 4 as const;\r\n","import type {\r\n  DataOperand_Enemy,\r\n  Operand_EnemyStatus,\r\n  DataOperand_Actor,\r\n  Operand_ActorStatus,\r\n} from \"./types\";\r\n\r\nexport const getEnemyValue = (\r\n  enemy: DataOperand_Enemy,\r\n  param: Operand_EnemyStatus\r\n): number => {\r\n  switch (param[6]) {\r\n    case 0:\r\n      return enemy.hp;\r\n    case 1:\r\n      return enemy.mp;\r\n    case 10:\r\n      return enemy.tp;\r\n  }\r\n  if (param[6] >= 2 && param[6] <= 9) {\r\n    return enemy.param(param[6] - 2);\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getActorValue = (\r\n  actor: DataOperand_Actor,\r\n  param: Operand_ActorStatus\r\n) => {\r\n  switch (param[6]) {\r\n    case 0: // Level\r\n      return actor.level;\r\n    case 1: // EXP\r\n      return actor.currentExp();\r\n    case 2: // HP\r\n      return actor.hp;\r\n    case 3: // MP\r\n      return actor.mp;\r\n    case 12: // TP\r\n      return actor.tp;\r\n  }\r\n  if (param[6] >= 4 && param[6] <= 11) {\r\n    return actor.param(param[6] - 4);\r\n  }\r\n  return 0;\r\n};\r\n","export const ENEMY_PARAM_INDEX = {\r\n  HP: 0,\r\n  MP: 1,\r\n  MHP: 2,\r\n  MMP: 3,\r\n  ATK: 4,\r\n  DEF: 5,\r\n  MAT: 6,\r\n  MDF: 7,\r\n  AGI: 8,\r\n  LUK: 9,\r\n  TP: 10,\r\n} as const;\r\n","import {\r\n  OPERAND_CONSTANT,\r\n  OPERAND_RANDOM,\r\n  OPERAND_VARIABLE,\r\n  OPERAND_GAMEDATA,\r\n  OPERAND_SCRIPT,\r\n} from \"./constants\";\r\nimport type * as Type from \"./types\";\r\nimport { ENEMY_PARAM_INDEX } from \"./types/enemy/dataSource\";\r\n\r\nexport const toArrayOperandConstant = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Constant,\r\n  operation: number = 0\r\n): Type.Operand_Constatant => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_CONSTANT,\r\n  value.value,\r\n];\r\n\r\nexport const toArrayOperandVariable = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Variable,\r\n  operation: number = 0\r\n): Type.Operand_Variable => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_VARIABLE,\r\n  value.variableId,\r\n];\r\nexport const toArrayOperandRandom = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Random,\r\n  operation: number = 0\r\n): Type.Operand_Random => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_RANDOM,\r\n  value.min,\r\n  value.max,\r\n];\r\n\r\nexport const toArrayOperandScript = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Script,\r\n  operation: number = 0\r\n): Type.Operand_Script => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_SCRIPT,\r\n  value.code,\r\n];\r\nexport const toArrayOperandItemData = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ItemData,\r\n  operation: number = 0\r\n): Type.Operand_ItemData => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  value.type,\r\n  value.itemId,\r\n];\r\n\r\nexport const toArrayOperandActorStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ActorStatus,\r\n  operation: number = 0\r\n): Type.Operand_ActorStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  3,\r\n  value.index,\r\n  value.param,\r\n];\r\n\r\nexport const toArrayOperandEnemyStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Enemy,\r\n  operation: number = 0\r\n): Type.Operand_EnemyStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  4,\r\n  value.index,\r\n  ENEMY_PARAM_INDEX[value.param],\r\n];\r\n","import type {\r\n  Command_ControlSwitches,\r\n  ParamArray_ControlSwitches,\r\n  Paramobject_ControlSwitches,\r\n} from \"./types\";\r\nimport { CONTROL_SWITCHES } from \"@RpgTypes/schema\";\r\n\r\nexport const fromArrayControlSwitches = (\r\n  param: ParamArray_ControlSwitches\r\n): Paramobject_ControlSwitches => {\r\n  return {\r\n    min: param[0],\r\n    max: param[1],\r\n    value: param[2],\r\n  };\r\n};\r\n\r\nexport const toArrayControlSwitches = (\r\n  object: Paramobject_ControlSwitches\r\n): ParamArray_ControlSwitches => {\r\n  return [object.min, object.max, object.value];\r\n};\r\n\r\nexport const makeCommandControlSwitches = (\r\n  param: Paramobject_ControlSwitches,\r\n  indent = 0\r\n): Command_ControlSwitches => ({\r\n  code: CONTROL_SWITCHES,\r\n  indent,\r\n  parameters: toArrayControlSwitches(param),\r\n});\r\n","import { COMMON_EVENT } from \"@RpgTypes/schema\";\r\nimport type { Command_CommonEvent, ParamObject_CommonEvent } from \"./types\";\r\nimport type { ParamArray_CommonEvent } from \"./types\";\r\n\r\nexport const makeCommandCommonEvent = (\r\n  param: Partial<ParamObject_CommonEvent> | undefined,\r\n  indent: number = 0\r\n): Command_CommonEvent => ({\r\n  code: COMMON_EVENT,\r\n  indent,\r\n  parameters: toArrayCommonEvent(param ?? {}),\r\n});\r\n\r\nexport const fromArrayCommonEvent = (\r\n  array: ParamArray_CommonEvent\r\n): ParamObject_CommonEvent => ({\r\n  eventId: array[0],\r\n});\r\n\r\nexport const toArrayCommonEvent = (\r\n  object: Partial<ParamObject_CommonEvent>\r\n): ParamArray_CommonEvent => [object.eventId ?? 0];\r\n","import {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_BATTLE_BGM,\r\n  CHANGE_DEFEAT_ME,\r\n  CHANGE_VICTORY_ME,\r\n} from \"@RpgTypes/schema\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_ChangeBattleBGM,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeDefeatME,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n} from \"./commands/audio\";\r\nimport { isCommandAudio } from \"./validate\";\r\n\r\nexport const isCommandPlayBgm = (\r\n  command: unknown\r\n): command is Command_PlayBGM => {\r\n  return isCommandAudio(command) && command.code === PLAY_BGM;\r\n};\r\n\r\nexport const isCommandPlayBgs = (\r\n  command: unknown\r\n): command is Command_PlayBGS => {\r\n  return isCommandAudio(command) && command.code === PLAY_BGS;\r\n};\r\n\r\nexport const isCommandPlayMe = (\r\n  command: unknown\r\n): command is Command_PlayME => {\r\n  return isCommandAudio(command) && command.code === PLAY_ME;\r\n};\r\n\r\nexport const isCommandPlaySe = (\r\n  command: unknown\r\n): command is Command_PlaySE => {\r\n  return isCommandAudio(command) && command.code === PLAY_SE;\r\n};\r\n\r\nexport const isCommandChangeBattleBgm = (\r\n  command: unknown\r\n): command is Command_ChangeBattleBGM => {\r\n  return isCommandAudio(command) && command.code === CHANGE_BATTLE_BGM;\r\n};\r\n\r\nexport const isCommandChangeVictoryMe = (\r\n  command: unknown\r\n): command is Command_ChangeVictoryME => {\r\n  return isCommandAudio(command) && command.code === CHANGE_VICTORY_ME;\r\n};\r\n\r\nexport const isCommandChangeDefeatMe = (\r\n  command: unknown\r\n): command is Command_ChangeDefeatME => {\r\n  return isCommandAudio(command) && command.code === CHANGE_DEFEAT_ME;\r\n};\r\n","import type {\r\n  EventCommandLike2,\r\n  EventCommandUnknown,\r\n} from \"@RpgTypes/eventCommand/frame\";\r\n\r\nexport const cloneParameters = <\r\n  Param extends ReadonlyArray<number | boolean | string>\r\n>(\r\n  param: Param\r\n): Param => {\r\n  return [...param] as unknown as Param;\r\n};\r\n\r\nexport const cloneEventCommand = <\r\n  Param extends Array<number | boolean | string>\r\n>(\r\n  command: EventCommandLike2<number, Param>\r\n) => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: cloneParameters<Param>(command.parameters),\r\n  };\r\n};\r\n\r\nconst isPrimitive = (value: unknown): value is string | number | boolean =>\r\n  typeof value === \"string\" ||\r\n  typeof value === \"number\" ||\r\n  typeof value === \"boolean\";\r\n\r\nexport const isCloneableCommand = (\r\n  value: EventCommandUnknown\r\n): value is EventCommandLike2<number, (string | number | boolean)[]> => {\r\n  return value.parameters.every(isPrimitive);\r\n};\r\n"],"names":["FOLDER_AUDIO_BGM","FOLDER_AUDIO_SE","FOLDER_AUDIO_ME","FOLDER_AUDIO_BGS","FOLDER_IMG_BATTLEBACK1","FOLDER_IMG_BATTLEBACK2","FOLDER_IMG_CHACTERS","FOLDER_IMG_ENEMIES","FOLDER_IMG_FACES","FOLDER_IMG_PARALLACES","FOLDER_IMG_PICTURES","FOLDER_IMG_SV_ACTORS","FOLDER_IMG_SV_ENEMIES","FOLDER_IMG_SYSTEM","FOLDER_IMG_TILESETS","FOLDER_IMG_TITLES1","FOLDER_IMG_TITLES2","FILENAME_SYSTEM","FILENAME_ACTORS","FILENAME_CLASSES","FILENAME_SKILLS","FILENAME_ITEMS","FILENAME_WEAPONS","FILENAME_ARMORS","FILENAME_ENEMIES","FILENAME_TROOPS","FILENAME_STATES","FILENAME_ANIMATIONS","FILENAME_TILESET","FILENAME_COMMON_EVENTS","FILENAME_MAP_INFOS","FOLDER_DATA","FOLDER_IMG","FOLDER_AUDIO","FOLDER_JS","mergeWithDefaults","defaultLabels","labels","reulst","key","value","mergeDomainLabel","base","override","mergeNestedPrimitiveRecords","result","domain","domainBase","domainOverride","makeNamedItem","name","index","getVariableNames","system","getElementTypes","getEquipTypes","getSkillTypes","getWeaponTypes","getArmorTypes","getParamNames","AUTHOR_RMMZ","MODULE_TRAIT","MODULE_DATA","MODULE_SYSTEM","TRAIT_ELEMENT_RATE","TRAIT_DEBUFF_RATE","TRAIT_STATE_RATE","TRAIT_STATE_RESIST","TRAIT_PARAM","TRAIT_XPARAM","TRAIT_SPARAM","TRAIT_ATTACK_ELEMENT","TRAIT_ATTACK_STATE","TRAIT_ATTACK_SPEED","TRAIT_ATTACK_TIMES","TRAIT_ATTACK_SKILL","TRAIT_SKILL_TYPE_ADD","TRAIT_SKILL_TYPE_SEAL","TRAIT_SKILL_ADD","TRAIT_SKILL_SEAL","TRAIT_EQUIP_WEAPON_TYPE","TRAIT_EQUIP_ARMOR_TYPE","TRAIT_EQUIP_LOCK","TRAIT_EQUIP_SEAL","TRAIT_SLOT_TYPE","TRAIT_ACTION_PLUS","TRAIT_SPECIAL_FLAG","TRAIT_COLLAPSE_TYPE","TRAIT_PARTY_ABILITY","COLLAPS_NORMAL","COLLAPS_BOSS","COLLAPS_INSTANT","COLLAPS_NONE","PARTY_ABILITY_ENCOUNTER_HALF","PARTY_ABILITY_ENCOUNTER_NONE","PARTY_ABILITY_CANCEL_SURPRISE","PARTY_ABILITY_RAISE_PREEMPTIVE","PARTY_ABILITY_GOLD_DOUBLE","PARTY_ABILITY_DROP_ITEM_DOUBLE","FLAG_ID_AUTO_BATTLE","FLAG_ID_GUARD","FLAG_ID_SUBSTITUTE","FLAG_ID_PRESERVE_TP","EXTRA_PARAM_HIT","EXTRA_PARAM_EVA","EXTRA_PARAM_CRI","EXTRA_PARAM_CEV","EXTRA_PARAM_MEV","EXTRA_PARAM_MRF","EXTRA_PARAM_CNT","EXTRA_PARAM_HRG","EXTRA_PARAM_MRG","EXTRA_PARAM_TRG","REGULAR_PARAM_MAX_HP","REGULAR_PARAM_MAX_MP","REGULAR_PARAM_ATK","REGULAR_PARAM_DEF","REGULAR_PARAM_MATK","REGULAR_PARAM_MDEF","REGULAR_PARAM_AGI","REGULAR_PARAM_LUK","SPECIAL_PARAM_TGR","SPECIAL_PARAM_GRD","SPECIAL_PARAM_REC","SPECIAL_PARAM_PHA","SPECIAL_PARAM_MCR","SPECIAL_PARAM_TCR","SPECIAL_PARAM_PDR","SPECIAL_PARAM_MDR","SPECIAL_PARAM_FDR","SPECIAL_PARAM_EXR","regularParamName","paramIndex","extraParamName","specialParamName","foldCollapsOptions","options","global","foldPartyAbilityOptions","foldRegularParam","param","foldExtraParam","xparam","foldSpecialParams","specialParams","foldSpecialFlag","label","traitDomain","sourceKey","fn","buildCollapsSource","SRC_TRAIT_COLLAPS","col","buildPartyAbilitySource","SRC_TRAIT_PARTY_ABILITY","buildRegularParamSource","SRC_PARAMS_REGULAR","buildExtraParamSource","SRC_PARAMS_EXTRA","buildSpecialParamSource","SRC_PARAMS_SPECIAL","buildSpecialFlagSource","SRC_TRAIT_SPECIAL_FLAG","FORMAT_NAME","FORMAT_PARAM_RATE_MUL","FORMAT_PARAM_RATE_PLUS","FORMAT_PARAM_VALUE","LABEL_SET_TRAIT","PLACEHOLDER_VALUE","PLACEHOLDER_NAME","TraitDescriptor","code","format","dataSource","trait","resolveName","text","allowed","m","soruceError","nameError","invalidPlaceHolder","resolveTraitLabels","defineTraitElementRate","defineTraitDebuffRate","defineTraitStateRate","defineTraitStateResist","defineTraitRegularParam","defineTraitExtraParam","defineTraitSpecialParam","defineTraitAttackElement","defineTraitAttackState","defineTraitAttackSpeed","defineTraitAttackTimes","defineTraitAttackSkill","defineTraitSkillTypeAdd","defineTraitSkillTypeSeal","defineTraitSkillAdd","defineTraitSkillSeal","defineTraitEquipWeaponType","defineTraitEquipArmorType","defineTraitEquipLock","defineTraitEquipSeal","defineTraitSlotType","defineTraitActionPlus","defineTraitSpecialFlag","defineTraitCollapseType","defineTraitPartyAbility","validate","defineTrait","srcElement","SRC_ELEMENTS","srcData","srcTrait","src","srcSystem","SRC_DATA_STATE","SRC_DATA_SKILL","SRC_WEAPON_TYPES","SRC_ARMOR_TYPES","TYPENAME_TRAIT","SCHEMA_TRAIT","makeActorData","actor","SCHEMA_DATA_ACTOR","normalizeDataActor","data","makeArmorData","armor","SCHEMA_DATA_ARMMOR","makeClassData","SCHEMA_DATA_CLASS","makeStateData","SCHEMA_DATA_STATE","LABELS_DATA_WEAPON","makeWeaponData","weapon","makeDamage","SCHEMA_DATA_WEAPON","makeDropItem","dropItem","makeEnemyAction","action","makeEnemyData","_a","SCHEMA_DATA_ENEMY","makeItemData","item","makeSkillData","skill","SCHEMA_DATA_SKILL","SCHEMA_DATA_ITEM","HITTYPE_CERTAIN","HITTYPE_PHYSICAL","HITTYPE_MAGICAL","FORMAT_GROW","FORMAT_STATE","FORMAT_RECOVER","FORMAT_ADD_BUFF","LABEL_SET_ITEM_EFFECT","EFFECT_RECOVER_HP","EFFECT_RECOVER_MP","EFFECT_GAIN_TP","EFFECT_ADD_STATE","EFFECT_REMOVE_STATE","EFFECT_ADD_BUFF","EFFECT_ADD_DEBUFF","EFFECT_REMOVE_BUFF","EFFECT_REMOVE_DEBUFF","EFFECT_SPECIAL","EFFECT_GROW","EFFECT_LEARN_SKILL","EFFECT_COMMON_EVENT","SPECIAL_EFFECT_ESCAPE","validAsciiKey","sanitizeKey","testUnknonwKey","joinSourceKey","isValid","source","SRC_DATA_ACTOR","SRC_DATA_VARIABLE","SRC_DATA_MAP","SRC_DATA_ENEMY","SRC_DATA_ITEMS","SRC_DATA_WEAPON","SRC_DATA_ARMOR","SRC_DATA_CLASS","SRC_DATA_COMMON_EVNET","SRC_DATA_TROOP","SRC_COLOR","SRC_EQUIP_TYPES","SRC_SWITCHES","SRC_SKILL_TYPES","PLACEHOLDER_VALUE1","PLACEHOLDER_VALUE2","ItemEffectDescriptor","codeId","description","effect","formatItemEffectText","effectDefine","resolveItemEffectLabels","defineEffectRecoverHp","defineEffectRecoverMp","defineEffectGainTp","defineEffectAddState","defineEffectRemoveState","defineEffectAddBuff","defineEffectAddDebuff","defineEffectRemoveBuff","defineEffectRemoveDebuff","defineEffectLearnSkill","defineEffectCommonEvent","regularParam","defineEffect","baseLabel","defineEffectGrow","DEFAULT_ITEM_LABELS","DEFAULT_SKILL_LABELS","DEFAULT_USABLE_ITEM_LABELS","LABEL_SET_DATA","DEFAULT_DAMAGE_LABELS","damage","SCHEMA_DAMAGE","ajv","Ajv","enemy","state","class_","isDataItem","isDataSkill","isDataActor","isDataArmor","isDataWeapon","isDataEnemy","isDataState","isDataClass","NO_OPERATION","SHOW_MESSAGE","SHOW_MESSAGE_BODY","SHOW_CHOICES","SHOW_CHOICES_ITEM","INPUT_NUMBER","SELECT_ITEM","SHOW_SCROLLING_TEXT","SHOW_SCROLLING_TEXT_BODY","COMMENT_HEAD","COMMENT_BODY","SKIP","CONDITIONAL_BRANCH","CONDITIONAL_BRANCH_ELSE","LOOP","LOOP_BREAK","EXIT_EVENT_PROCESSING","COMMON_EVENT","LABEL","LABEL_JUMP","CONTROL_SWITCHES","CONTROL_VARIABLES","CONTROL_SELF_SWITCH","CONTROL_TIMER","CHANGE_GOLD","CHANGE_ITEMS","CHANGE_WEAPONS","CHANGE_ARMORS","CHANGE_PARTY_MEMBER","CHANGE_BATTLE_BGM","CHANGE_VICTORY_ME","CHANGE_SAVE_ACCESS","CHANGE_MENU_ACCESS","CHANGE_ENCOUNTER","CHANGE_FORMATION_ACCESS","CHANGE_WINDOW_COLOR","CHANGE_DEFEAT_ME","CHANGE_VEHICLE_BGM","TRANSFER_PLAYER","SET_VEHICLE_LOCATION","SET_EVENT_LOCATION","SCROLL_MAP","SET_MOVEMENT_ROUTE","GET_ONOFF_VEHICLE","CHANGE_TRANSPARENCY","SHOW_ANIMATION","SHOW_BALLOON_ICON","ERASE_EVENT","CHANGE_PLAYER_FOLLOWERS","GATHER_FOLLOWERS","FADEOUT_SCREEN","FADEIN_SCREEN","TINT_SCREEN","FLASH_SCREEN","SHAKE_SCREEN","WAIT","SHOW_PICTURE","MOVE_PICTURE","ROTATE_PICTURE","TINT_PICTURE","ERASE_PICTURE","SET_WEATHER_EFFECT","PLAY_BGM","FADEOUT_BGM","SAVE_BGM","RESUME_BGM","PLAY_BGS","FADEOUT_BGS","PLAY_ME","PLAY_SE","STOP_SE","PLAY_MOVIE","CHANGE_TILESET","CHANGE_BATTLE_BACKGROUND","CHANGE_PARALLAX","GET_LOCATION_INFO","BATTLE_PROCESSING","SHOP_PROCESSING","SHOP_PROCESSING_BODY","NAME_INPUT_PROCESSING","CHANGE_HP","CHANGE_MP","CHANGE_TP","RECOVER_ALL","CHANGE_EXP","CHANGE_NAME","CHANGE_CLASS","CHANGE_ACTOR_IMAGES","CHANGE_VEHICLE_IMAGE","CHANGE_NICKNAME","CHANGE_PROFILE","CHANGE_ENEMY_HP","CHANGE_ENEMY_MP","CHANGE_ENEMY_STATE","ENEMY_RECOVER_ALL","ENEMY_APPEAR","ENEMY_TRANSFORM","SHOW_BATTLE_ANIMATION","FORCE_ACTION","ABORT_BATTLE","OPEN_MENU_SCREEN","CHANGE_ENEMY_TP","OPEN_SAVE_SCREEN","GAME_OVER","RETURN_TO_TITLE_SCREEN","SCRIPT_EVAL","SCRIPT_EVAL_BODY","PLUGIN_COMMAND_MV","PLUGIN_COMMAND_MZ","ROUTE_END","ROUTE_MOVE_DOWN","ROUTE_MOVE_LEFT","ROUTE_MOVE_RIGHT","ROUTE_MOVE_UP","ROUTE_MOVE_LOWER_L","ROUTE_MOVE_LOWER_R","ROUTE_MOVE_UPPER_L","ROUTE_MOVE_UPPER_R","ROUTE_MOVE_RANDOM","ROUTE_MOVE_TOWARD","ROUTE_MOVE_AWAY","ROUTE_MOVE_FORWARD","ROUTE_MOVE_BACKWARD","ROUTE_JUMP","ROUTE_WAIT","ROUTE_TURN_DOWN","ROUTE_TURN_LEFT","ROUTE_TURN_RIGHT","ROUTE_TURN_UP","ROUTE_TURN_90D_R","ROUTE_TURN_90D_L","ROUTE_TURN_180D","ROUTE_TURN_90D_R_L","ROUTE_TURN_RANDOM","ROUTE_TURN_TOWARD","ROUTE_TURN_AWAY","ROUTE_SWITCH_ON","ROUTE_SWITCH_OFF","ROUTE_CHANGE_SPEED","ROUTE_CHANGE_FREQ","ROUTE_WALK_ANIME_ON","ROUTE_WALK_ANIME_OFF","ROUTE_STEP_ANIME_ON","ROUTE_STEP_ANIME_OFF","ROUTE_DIR_FIX_ON","ROUTE_DIR_FIX_OFF","ROUTE_THROUGH_ON","ROUTE_THROUGH_OFF","ROUTE_TRANSPARENT_ON","ROUTE_TRANSPARENT_OFF","ROUTE_CHANGE_IMAGE","ROUTE_CHANGE_OPACITY","ROUTE_CHANGE_BLEND_MODE","ROUTE_PLAY_SE","ROUTE_SCRIPT","createEventCommand","indent","makeEventPageCondition","arg","makeMapEvent","makeMapEventIamge","makeMapEventPage","SCHEMA_DATA_MAP_INFO","makeMapName","mapId","makeMapInfoData","info","makeMapData","map","makeCommonEventData","makeTroopData","makeTroopMember","makeTroopEventConditions","SCHEMA_MOVEROUTE_DATA","SCHEMA_MAP_EVENT_PAGE_CONDITION","SCHEMA_MAP_EVENT_IMAGE","SCHEMA_MAP_EVENT_PAGE","SCHEMA_DATA_MAP","mapInfo","mapData","isDataMapInfo","isDataMap","makeSystemAdvanced","advanced","SCHEMA_SYSTEM_ADVANCED","makeAudioFileParams","audioFileParams","makeSoundsArray","sounds","DEFAULT_SYSTEM_LABELS_BOOLEAN","MockSystemLabelDataTypes","createNoteEntity","makeRegex","readNoteObject","readNoteEx","readNote","note","regex","match","replaceNote","transformFunction","_subString","newText","getNoteValue","targetKey","setNoteValue","newValue","createControlCharFormat","char","id","fromStringArray","array","getControlChars","CTRL_CHAR_ACTOR","CTRL_CHAR_VARIABLE","createActorControlChars","actors","createSystemVariableControlChars","pair","DEFAULT_GLOBAL_LABELS","LABEL_REGISTRY_JP","SCHEMA_COMMAND_SHOW_MESSAGE","SCHEMA_COMMAND_INPUT_NUMBER","SCHEMA_COMMAND_ANY_AUDIO","SCHEMA_COMMAND_SHOW_CHOICE_WHEN","SCHEMA_COMMAND_SHOW_CHOICES","SCHEMA_COMMAND_SCROLL_TEXT_HEAD","SCHEMA_COMMAND_CHANGE_ACTOR_TEXT","SCHEMA_COMMAND_CALL_COMMON_EVENT","SCHEMA_COMMAND_TEXT_BODY","changeActorText","inputNumber","commonVent","showChoiceItem","showMessage","showChoices","textBody","audioCommand","scrollTextHead","isCommandChangeActorText","isCommandScrollTextHead","isCommandTextBody","command","isCommandAudio","isCommandCommonEvent","isCommandShowChoices","isCommandShowChoiceItem","isCommandInputNumber","isCommandShowMessage","isCommandShowMessageBody","isCommandShowScrollingTextBody","isCommandCommentHeader","isCommandCommentBody","isCommandScriptHeader","isCommandScriptBody","makeCommandChangeActorName","makeCommandChangeActorNickName","makeCommandChangeActorProfile","makeAudioCommand","filename","makeCommandAudioAny","audio","makeCommandPlayBGM","makeCommandPlayBGS","makeCommandPlayME","makeCommandPlaySE","makeCommandChangeBattleBGM","makeCommandChangeVictoryME","makeCommandChangeDefeatME","makeCommentArray","comment","convertCommentArrayToObject","paramArray","makeCommandCommentHeader","makeCommandCommentBody","makeCommentCommandArray","comments","toArrayInputNumber","fromArrayInputNumber","makeCommandInputNumber","toArrayScrollingTextHeader","fromArrayScrollingTextHeader","makeCommandScrollingTextHeader","toArrayScrollingTextBody","fromArrayScrollingTextBody","makeCommandScrollingTextBody","makeCommandShowChoiceItem","fromArraySetupChoiceItem","toArraySetupChoiceItem","object","fromArraySetupChoice","toArraySetupChoice","makeCommandSetupChoice","cloneChoices","makeCommandShowMessage","fromArrayShowMessageHeader","toArrayShowMessageHeader","makeCommandShowMessageBody","makeCommandScriptHeader","script","makeCommandScriptBody","makeCommandScriptArray","lines","line","OPERAND_CONSTANT","OPERAND_VARIABLE","OPERAND_RANDOM","OPERAND_GAMEDATA","OPERAND_SCRIPT","getEnemyValue","getActorValue","ENEMY_PARAM_INDEX","toArrayOperandConstant","target","operation","toArrayOperandVariable","toArrayOperandRandom","toArrayOperandScript","toArrayOperandItemData","toArrayOperandActorStatus","toArrayOperandEnemyStatus","fromArrayControlSwitches","toArrayControlSwitches","makeCommandControlSwitches","makeCommandCommonEvent","toArrayCommonEvent","fromArrayCommonEvent","isCommandPlayBgm","isCommandPlayBgs","isCommandPlayMe","isCommandPlaySe","isCommandChangeBattleBgm","isCommandChangeVictoryMe","isCommandChangeDefeatMe","cloneParameters","cloneEventCommand","isPrimitive","isCloneableCommand"],"mappings":"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"}