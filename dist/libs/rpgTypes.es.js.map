{"version":3,"file":"rpgTypes.es.js","sources":["../../src/libs/folderNames/asset/audio.ts","../../src/libs/folderNames/asset/images.ts","../../src/libs/folderNames/data/fileNames.ts","../../src/libs/folderNames/folderName.ts","../../src/libs/namedItemSource/labels/mergeLabel.ts","../../src/libs/namedItemSource/transformers/data/system/getSystemTypeNames.ts","../../src/libs/namedItemSource/transformers/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/constants/traitCode.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/collaps/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/partyAbility/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/specialFlags/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramExtra/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramRegular/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramSpecial/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/battlerParam.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/makeOptions.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/buildSource.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/default.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/traitLabelDescriptor.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/labelDefine.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/types/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/actor/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/actor/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/armor/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/armor/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/class/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/class/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/state/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/state/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/weaponDefault.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/enemy/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/enemy/schema.ts","../../src/libs/schema/data/rpg/main/usableItems/make.ts","../../src/libs/schema/data/rpg/main/usableItems/schema.ts","../../src/libs/schema/data/rpg/main/usableItems/types/hitType/constants.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/labels/defaultLabelSet.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/constants/effectCode.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/constants/specialEffect.ts","../../src/libs/schema/namedItemSource/sourceIdentifier/make.ts","../../src/libs/schema/namedItemSource/lisrSrc/constants.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/itemEffectDescriptor.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/define.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/item/itemDefault.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/skill/skillDefault.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/usableItemDefault.ts","../../src/libs/schema/data/rpg/main/defaultDataLabels.ts","../../src/libs/schema/data/rpg/main/members/damage/damageDefault.ts","../../src/libs/schema/data/rpg/main/members/damage/make.ts","../../src/libs/schema/data/rpg/main/members/damage/schema.ts","../../node_modules/ajv/dist/compile/codegen/code.js","../../node_modules/ajv/dist/compile/codegen/scope.js","../../node_modules/ajv/dist/compile/codegen/index.js","../../node_modules/ajv/dist/compile/util.js","../../node_modules/ajv/dist/compile/names.js","../../node_modules/ajv/dist/compile/errors.js","../../node_modules/ajv/dist/compile/validate/boolSchema.js","../../node_modules/ajv/dist/compile/rules.js","../../node_modules/ajv/dist/compile/validate/applicability.js","../../node_modules/ajv/dist/compile/validate/dataType.js","../../node_modules/ajv/dist/compile/validate/defaults.js","../../node_modules/ajv/dist/vocabularies/code.js","../../node_modules/ajv/dist/compile/validate/keyword.js","../../node_modules/ajv/dist/compile/validate/subschema.js","../../node_modules/fast-deep-equal/index.js","../../node_modules/json-schema-traverse/index.js","../../node_modules/ajv/dist/compile/resolve.js","../../node_modules/ajv/dist/compile/validate/index.js","../../node_modules/ajv/dist/runtime/validation_error.js","../../node_modules/ajv/dist/compile/ref_error.js","../../node_modules/ajv/dist/compile/index.js","../../node_modules/fast-uri/lib/scopedChars.js","../../node_modules/fast-uri/lib/utils.js","../../node_modules/fast-uri/lib/schemes.js","../../node_modules/fast-uri/index.js","../../node_modules/ajv/dist/runtime/uri.js","../../node_modules/ajv/dist/core.js","../../node_modules/ajv/dist/vocabularies/core/id.js","../../node_modules/ajv/dist/vocabularies/core/ref.js","../../node_modules/ajv/dist/vocabularies/core/index.js","../../node_modules/ajv/dist/vocabularies/validation/limitNumber.js","../../node_modules/ajv/dist/vocabularies/validation/multipleOf.js","../../node_modules/ajv/dist/runtime/ucs2length.js","../../node_modules/ajv/dist/vocabularies/validation/limitLength.js","../../node_modules/ajv/dist/vocabularies/validation/pattern.js","../../node_modules/ajv/dist/vocabularies/validation/limitProperties.js","../../node_modules/ajv/dist/vocabularies/validation/required.js","../../node_modules/ajv/dist/vocabularies/validation/limitItems.js","../../node_modules/ajv/dist/runtime/equal.js","../../node_modules/ajv/dist/vocabularies/validation/uniqueItems.js","../../node_modules/ajv/dist/vocabularies/validation/const.js","../../node_modules/ajv/dist/vocabularies/validation/enum.js","../../node_modules/ajv/dist/vocabularies/validation/index.js","../../node_modules/ajv/dist/vocabularies/applicator/additionalItems.js","../../node_modules/ajv/dist/vocabularies/applicator/items.js","../../node_modules/ajv/dist/vocabularies/applicator/prefixItems.js","../../node_modules/ajv/dist/vocabularies/applicator/items2020.js","../../node_modules/ajv/dist/vocabularies/applicator/contains.js","../../node_modules/ajv/dist/vocabularies/applicator/dependencies.js","../../node_modules/ajv/dist/vocabularies/applicator/propertyNames.js","../../node_modules/ajv/dist/vocabularies/applicator/additionalProperties.js","../../node_modules/ajv/dist/vocabularies/applicator/properties.js","../../node_modules/ajv/dist/vocabularies/applicator/patternProperties.js","../../node_modules/ajv/dist/vocabularies/applicator/not.js","../../node_modules/ajv/dist/vocabularies/applicator/anyOf.js","../../node_modules/ajv/dist/vocabularies/applicator/oneOf.js","../../node_modules/ajv/dist/vocabularies/applicator/allOf.js","../../node_modules/ajv/dist/vocabularies/applicator/if.js","../../node_modules/ajv/dist/vocabularies/applicator/thenElse.js","../../node_modules/ajv/dist/vocabularies/applicator/index.js","../../node_modules/ajv/dist/vocabularies/format/format.js","../../node_modules/ajv/dist/vocabularies/format/index.js","../../node_modules/ajv/dist/vocabularies/metadata.js","../../node_modules/ajv/dist/vocabularies/draft7.js","../../node_modules/ajv/dist/vocabularies/discriminator/types.js","../../node_modules/ajv/dist/vocabularies/discriminator/index.js","../../node_modules/ajv/dist/ajv.js","../../src/libs/schema/data/rpg/main/validate.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/eventCommandCodes.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/types/domains/moveRoute/constants.ts","../../src/libs/schema/data/rpg/event/map/mapInfo/schema.ts","../../src/libs/schema/data/rpg/event/map/make.ts","../../src/libs/schema/data/rpg/event/makeEvent.ts","../../src/libs/schema/data/rpg/system/systemLabels.ts","../../src/libs/schema/labelUtils/default.ts","../../src/libs/schema/labelRegistryDefault.ts","../../src/libs/utils/types/audioFileParams/make.ts"],"sourcesContent":["export const FOLDER_AUDIO_BGM = \"bgm\" as const;\r\nexport const FOLDER_AUDIO_SE = \"se\" as const;\r\nexport const FOLDER_AUDIO_ME = \"me\" as const;\r\nexport const FOLDER_AUDIO_BGS = \"bgs\" as const;\r\n","export const FOLDER_IMG_BATTLEBACK1 = \"battlebacks1\" as const;\r\nexport const FOLDER_IMG_BATTLEBACK2 = \"battlebacks2\" as const;\r\nexport const FOLDER_IMG_CHACTERS = \"characters\" as const;\r\nexport const FOLDER_IMG_ENEMIES = \"enemies\" as const;\r\nexport const FOLDER_IMG_FACES = \"faces\" as const;\r\nexport const FOLDER_IMG_PARALLACES = \"parallaxes\" as const;\r\nexport const FOLDER_IMG_PICTURES = \"pictures\" as const;\r\nexport const FOLDER_IMG_SV_ACTORS = \"sv_actors\" as const;\r\nexport const FOLDER_IMG_SV_ENEMIES = \"sv_enemies\" as const;\r\nexport const FOLDER_IMG_SYSTEM = \"system\" as const;\r\nexport const FOLDER_IMG_TILESETS = \"tilesets\" as const;\r\nexport const FOLDER_IMG_TITLES1 = \"titles1\" as const;\r\nexport const FOLDER_IMG_TITLES2 = \"titles2\" as const;\r\n","export const FILENAME_SYSTEM = \"System.json\";\r\nexport const FILENAME_ACTORS = \"Actors.json\";\r\nexport const FILANAME_CLASSES = \"Classes.json\";\r\nexport const FILENAME_SKILLS = \"Skills.json\";\r\nexport const FILENAME_ITEMS = \"Items.json\";\r\nexport const FILENAME_WEAPONS = \"Weapons.json\";\r\nexport const FILENAME_ARMORS = \"Armors.json\";\r\nexport const FILENAME_ENEMIES = \"Enemies.json\";\r\nexport const FILENAME_TROOPS = \"Troops.json\";\r\nexport const FILENAME_STATES = \"States.json\";\r\nexport const FILENAME_ANIMATIONS = \"Animations.json\";\r\nexport const FILENAME_TILESET = \"Tilesets.json\";\r\nexport const FILENAME_COMMON_EVENTS = \"CommonEvents.json\";\r\nexport const FILENAME_MAP_INFOS = \"MapInfos.json\";\r\n","export const FOLDER_DATA = \"data\" as const;\r\nexport const FOLDER_IMG = \"img\" as const;\r\nexport const FOLDER_AUDIO = \"audio\" as const;\r\nexport const FOLDER_JS = \"js\" as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\n\r\nexport type PrimitiveRecord<T> = Record<keyof T, string>;\r\n\r\nexport const mergeWithDefaults = <T>(\r\n  defaultLabels: Record<keyof T, string>,\r\n  labels: Partial<T>\r\n): {\r\n  [K in keyof T]: string;\r\n} => {\r\n  const reulst = { ...defaultLabels };\r\n  for (const key in defaultLabels) {\r\n    const value = labels[key];\r\n    if (typeof value === \"string\") {\r\n      reulst[key] = value;\r\n    }\r\n  }\r\n  return reulst;\r\n};\r\n\r\nexport const mergeDomainLabel = <T>(\r\n  base: DomainLabel<PrimitiveRecord<T>>,\r\n  override: Partial<DomainLabel<Partial<T>>>\r\n): DomainLabel<{ [K in keyof T]: string }> => {\r\n  return {\r\n    domainName: override.domainName ?? base.domainName,\r\n    options: mergeWithDefaults(base.options, override.options ?? {}),\r\n  };\r\n};\r\n\r\nexport const mergeNestedPrimitiveRecords = <T>(\r\n  base: T,\r\n  override: Partial<{ [K in keyof T]: Partial<PrimitiveRecord<T[K]>> }>\r\n): T => {\r\n  const result: Partial<T> = {};\r\n  for (const domain in base) {\r\n    const domainBase = base[domain];\r\n    const domainOverride = override[domain] ?? {};\r\n    result[domain] = mergeWithDefaults(\r\n      domainBase as Required<typeof domainOverride>,\r\n      domainOverride\r\n    ) as T[typeof domain];\r\n  }\r\n  return result as T;\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  Data_System,\r\n  System_ParamNames,\r\n} from \"@RpgTypes/schema\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<Data_System, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<Data_System, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<Data_System, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<Data_System, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<Data_System, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<Data_System, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getParamNames = (system: System_ParamNames): Data_NamedItem[] => {\r\n  return system.terms.params.map(makeNamedItem);\r\n};\r\n","export const AUTHOR_RMMZ = \"rmmz\" as const;\r\nexport const MODULE_TRAIT = \"trait\" as const;\r\nexport const MODULE_DATA = \"data\" as const;\r\nexport const MODULE_SYSTEM = \"system\" as const;\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type {\r\n  RegularParamLabels,\r\n  ExtraParamLabels,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_LUK,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_MDEF,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n} from \"./types\";\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guradEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","import type { Data_NamedItem, GlobalLabel } from \"@RpgTypes/schema/\";\r\nimport {\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./types/specialFlags\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./types/collaps\";\r\n\r\nimport {\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n} from \"./types/partyAbility\";\r\n\r\nimport {\r\n  EXTRA_PARAM_TRG,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n} from \"./types/paramExtra\";\r\nimport {\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_TGR,\r\n} from \"./types/paramSpecial\";\r\nimport {\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./types/paramRegular\";\r\n\r\nexport const foldCollapsOptions = (\r\n  options: CollapsOptionLabels,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldPartyAbilityOptions = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldRegularParam = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const foldExtraParam = (xparam: ExtraParamLabels): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialParams = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guradEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialFlag = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","import type { GlobalLabel, NamedItemSource } from \"@RpgTypes/schema\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  SRC_TRAIT_COLLAPS,\r\n  SRC_PARAMS_EXTRA,\r\n  SRC_PARAMS_REGULAR,\r\n  SRC_PARAMS_SPECIAL,\r\n  SRC_TRAIT_PARTY_ABILITY,\r\n  SRC_TRAIT_SPECIAL_FLAG,\r\n} from \"@RpgTypes/schema\";\r\n\r\nimport {\r\n  foldCollapsOptions,\r\n  foldExtraParam,\r\n  foldPartyAbilityOptions,\r\n  foldRegularParam,\r\n  foldSpecialFlag,\r\n  foldSpecialParams,\r\n} from \"./makeOptions\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport { AUTHOR_RMMZ, MODULE_TRAIT } from \"@RpgTypes/namedItemSource\";\r\n\r\nexport const traitDomain = <T>(\r\n  sourceKey: string,\r\n  labels: DomainLabel<T>,\r\n  fn: (options: T) => { name: string; id: number }[]\r\n): NamedItemSource => {\r\n  return {\r\n    items: fn(labels.options),\r\n    label: labels.domainName,\r\n    source: {\r\n      author: AUTHOR_RMMZ,\r\n      module: MODULE_TRAIT,\r\n      kind: sourceKey,\r\n    },\r\n  };\r\n};\r\n\r\nexport const buildCollapsSource = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_COLLAPS, labels, (col) =>\r\n    foldCollapsOptions(col, global)\r\n  );\r\n};\r\n\r\nexport const buildPartyAbilitySource = (\r\n  labels: DomainLabel<PartyAbilityOptionLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_PARTY_ABILITY, labels, foldPartyAbilityOptions);\r\n};\r\n\r\nexport const buildRegularParamSource = (\r\n  label: DomainLabel<RegularParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_REGULAR, label, foldRegularParam);\r\n};\r\n\r\nexport const buildExtraParamSource = (\r\n  label: DomainLabel<ExtraParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_EXTRA, label, foldExtraParam);\r\n};\r\n\r\nexport const buildSpecialParamSource = (\r\n  label: DomainLabel<SpecialParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_SPECIAL, label, foldSpecialParams);\r\n};\r\n\r\nexport const buildSpecialFlagSource = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_SPECIAL_FLAG, label, foldSpecialFlag);\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { TraitLabelSet } from \"./labelSet\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  RawTraitLabel,\r\n  TraitLabelWithOption,\r\n} from \"./types/\";\r\n\r\nconst FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_PARAM_RATE_MUL = \"{name} * {value}%\" as const;\r\nconst FORMAT_PARAM_RATE_PLUS = \"{name} + {value}%\" as const;\r\nconst FORMAT_PARAM_VALUE = \"{value}\" as const;\r\n\r\nexport const LABEL_SET_TRAIT = {\r\n  domainName: \"特徴\",\r\n  options: {\r\n    regularParam: {\r\n      domainName: \"基本能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        maxHp: \"最大HP\",\r\n        maxMp: \"最大MP\",\r\n        atk: \"攻撃力\",\r\n        def: \"防御力\",\r\n        matk: \"魔法攻撃力\",\r\n        mdef: \"魔法防御力\",\r\n        agi: \"敏捷性\",\r\n        luk: \"運\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<RegularParamLabels>,\r\n    extraParam: {\r\n      domainName: \"追加能力値\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n      options: {\r\n        hitRate: \"命中率\",\r\n        evasionRate: \"回避率\",\r\n        criticalRate: \"クリティカル率\",\r\n        criticalEvasionRate: \"クリティカル回避率\",\r\n        magicEvasionRate: \"魔法回避率\",\r\n        magicReflectionRate: \"魔法反射率\",\r\n        counterAttackRate: \"反撃率\",\r\n        hpRegenerationRate: \"HP再生率\",\r\n        mpRegenerationRate: \"MP再生率\",\r\n        tpRegenerationRate: \"TP再生率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<ExtraParamLabels>,\r\n    specialParam: {\r\n      domainName: \"特殊能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        targetRate: \"狙われ率\",\r\n        guradEffectRate: \"防御効果率\",\r\n        recoveryEffectRate: \"回復効果率\",\r\n        pharmacology: \"薬の知識\",\r\n        mpCostRate: \"MP消費率\",\r\n        tpChargeRate: \"TPチャージ率\",\r\n        physicalDamageRate: \"物理ダメージ率\",\r\n        magicDamageRate: \"魔法ダメージ率\",\r\n        floorDamageRate: \"床ダメージ率\",\r\n        experienceRate: \"経験値率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialParamLabels>,\r\n    specialFlag: {\r\n      domainName: \"特殊フラグ\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        autoBattle: \"自動戦闘\",\r\n        guard: \"防御\",\r\n        substitute: \"身代わり\",\r\n        preventEscape: \"逃走防止\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialFlagOptions>,\r\n    collaps: {\r\n      domainName: \"消滅エフェクト\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        bossCollaps: \"ボス崩壊\",\r\n        instantCollaps: \"即時崩壊\",\r\n        noneCollaps: \"崩壊なし\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<CollapsOptionLabels>,\r\n    partyAbility: {\r\n      domainName: \"パーティ能力\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        cancelSurprise: \"不意打ち無効\",\r\n        dropItemDouble: \"アイテムドロップ2倍\",\r\n        encounterHalf: \"エンカウント半減\",\r\n        encounterNone: \"エンカウントなし\",\r\n        goldDouble: \"ゴールド2倍\",\r\n        raisePreemptive: \"先制攻撃率アップ\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<PartyAbilityOptionLabels>,\r\n    elementRate: {\r\n      domainName: \"属性有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    debuffRate: {\r\n      domainName: \"弱体有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateRate: {\r\n      domainName: \"ステート有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateResist: {\r\n      domainName: \"ステート無効\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackElement: {\r\n      domainName: \"攻撃属性\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackState: {\r\n      domainName: \"攻撃ステート\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSpeed: {\r\n      domainName: \"攻撃速度補正\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    attackTimes: {\r\n      domainName: \"攻撃追加回数\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    actionPlus: {\r\n      domainName: \"行動追加\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSkill: {\r\n      domainName: \"攻撃スキル\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipWeaponType: {\r\n      domainName: \"装備武器タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipArmorType: {\r\n      domainName: \"装備防具タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipLock: {\r\n      domainName: \"装備固定\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipSeal: {\r\n      domainName: \"装備封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    slotType: {\r\n      domainName: \"スロットタイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillAdd: {\r\n      domainName: \"スキル追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeAdd: {\r\n      domainName: \"スキルタイプ追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n  },\r\n} as const satisfies DomainLabel<TraitLabelSet>;\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema\";\r\nimport type { TraitLabelResolved } from \"./options\";\r\nimport type { Trait } from \"./types\";\r\n\r\nconst PLACEHOLDER_VALUE = \"{value}\" as const;\r\nconst PLACEHOLDER_NAME = \"{name}\" as const;\r\n\r\nexport class TraitDescriptor implements TraitLabelResolved {\r\n  constructor(\r\n    public readonly code: number,\r\n    public readonly label: string,\r\n    public readonly format: string,\r\n    public readonly dataSource?: Readonly<SourceIdentifier>\r\n  ) {}\r\n  match(trait: Trait): boolean {\r\n    return this.code === trait.code;\r\n  }\r\n  testTraitCode(trait: Trait) {\r\n    if (this.match(trait)) {\r\n      return;\r\n    }\r\n    // throw new Error(\r\n    //   `${this.label} Trait code mismatch.  this.code:${this.code} trait.code:${trait.code}`\r\n    // );\r\n  }\r\n  formatText(\r\n    trait: Trait,\r\n    resolveName: (\r\n      dataSource: Readonly<SourceIdentifier>,\r\n      dataId: number\r\n    ) => string\r\n  ): string {\r\n    this.testTraitCode(trait);\r\n    const text = this.format.replaceAll(\r\n      PLACEHOLDER_VALUE,\r\n      trait.value.toString()\r\n    );\r\n    if (!this.dataSource) {\r\n      return text;\r\n    }\r\n    return text.replaceAll(\r\n      PLACEHOLDER_NAME,\r\n      resolveName(this.dataSource, trait.dataId)\r\n    );\r\n  }\r\n  requiresValue(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE);\r\n  }\r\n  requiresName(): boolean {\r\n    return this.format.includes(PLACEHOLDER_NAME);\r\n  }\r\n\r\n  invalidPlaceHolder(): string[] {\r\n    const allowed = [\"value\", \"name\"];\r\n    const matches: RegExpExecArray[] = [\r\n      ...this.format.matchAll(/\\{([^}]+)\\}/g),\r\n    ];\r\n    return matches.map((m) => m[1]).filter((key) => !allowed.includes(key));\r\n  }\r\n  isFormatValidForDataSource(): boolean {\r\n    if (this.dataSource && !this.requiresName()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  diagnose(): TraitLabelDiagnostic {\r\n    const soruceError = !this.isFormatValidForDataSource();\r\n    const nameError = this.requiresName() && !this.dataSource;\r\n    const invalidPlaceHolder = this.invalidPlaceHolder();\r\n\r\n    return {\r\n      code: this.code,\r\n      label: this.label,\r\n      format: this.format,\r\n      hasError: soruceError || nameError || invalidPlaceHolder.length > 0,\r\n      missingDataSourceError: soruceError,\r\n      sourceMismatchError: nameError,\r\n      invalidPlaceHolders: invalidPlaceHolder,\r\n    };\r\n  }\r\n}\r\n\r\nexport interface TraitLabelDiagnostic {\r\n  format: string;\r\n  code: number;\r\n  label: string;\r\n  hasError: boolean;\r\n  missingDataSourceError: boolean;\r\n  sourceMismatchError: boolean;\r\n  invalidPlaceHolders: string[];\r\n}\r\n","import type { SourceIdentifier } from \"src/libs\";\r\nimport {\r\n  SRC_ARMOR_TYPES,\r\n  SRC_DATA_SKILL,\r\n  SRC_DATA_STATE,\r\n  SRC_ELEMENTS,\r\n  SRC_PARAMS_EXTRA,\r\n  SRC_PARAMS_REGULAR,\r\n  SRC_PARAMS_SPECIAL,\r\n  SRC_TRAIT_COLLAPS,\r\n  SRC_TRAIT_PARTY_ABILITY,\r\n  SRC_TRAIT_SPECIAL_FLAG,\r\n  SRC_WEAPON_TYPES,\r\n} from \"src/libs\";\r\nimport type { RawTraitLabel, TraitLabelSet } from \"./options\";\r\nimport { LABEL_SET_TRAIT } from \"./options\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./constants\";\r\nimport {\r\n  AUTHOR_RMMZ,\r\n  MODULE_DATA,\r\n  MODULE_SYSTEM,\r\n  MODULE_TRAIT,\r\n} from \"@RpgTypes/namedItemSource\";\r\nimport { TraitDescriptor } from \"./traitLabelDescriptor\";\r\n\r\nexport const resolveTraitLabels = (\r\n  labels: TraitLabelSet\r\n): TraitDescriptor[] => {\r\n  return [\r\n    defineTraitElementRate(labels.elementRate),\r\n    defineTraitDebuffRate(labels.debuffRate),\r\n    defineTraitStateRate(labels.stateRate),\r\n    defineTraitStateResist(labels.stateResist),\r\n    defineTraitRegularParam(labels.regularParam),\r\n    defineTraitExtraParam(labels.extraParam),\r\n    defineTraitSpecialParam(labels.specialParam),\r\n    defineTraitAttackElement(labels.attackElement),\r\n    defineTraitAttackState(labels.attackState),\r\n    defineTraitAttackSpeed(labels.attackSpeed),\r\n    defineTraitAttackTimes(labels.attackTimes),\r\n    defineTraitAttackSkill(labels.attackSkill),\r\n    defineTraitSkillTypeAdd(labels.skillTypeAdd),\r\n    defineTraitSkillTypeSeal(labels.skillTypeSeal),\r\n    defineTraitSkillAdd(labels.skillAdd),\r\n    defineTraitSkillSeal(labels.skillSeal),\r\n    defineTraitEquipWeaponType(labels.equipWeaponType),\r\n    defineTraitEquipArmorType(labels.equipArmorType),\r\n    defineTraitEquipLock(labels.equipLock),\r\n    defineTraitEquipSeal(labels.equipSeal),\r\n    defineTraitSlotType(labels.slotType),\r\n    defineTraitActionPlus(labels.actionPlus),\r\n    defineTraitSpecialFlag(labels.specialFlag),\r\n    defineTraitCollapseType(labels.collaps),\r\n    defineTraitPartyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst validate = (base: string, override: string | undefined) =>\r\n  typeof override === \"string\" ? override : base;\r\n\r\nconst defineTrait = (\r\n  code: number,\r\n  base: RawTraitLabel,\r\n  override: Partial<RawTraitLabel>,\r\n  dataSource?: SourceIdentifier\r\n): TraitDescriptor => {\r\n  const label = validate(base.domainName, override.domainName);\r\n  const format = validate(base.format, override.format);\r\n  return new TraitDescriptor(code, label, format, dataSource);\r\n};\r\n\r\nconst srcElement = (): SourceIdentifier => {\r\n  return {\r\n    module: MODULE_SYSTEM,\r\n    author: AUTHOR_RMMZ,\r\n    kind: SRC_ELEMENTS,\r\n  };\r\n};\r\n\r\nconst srcData = (key: string): SourceIdentifier => {\r\n  return {\r\n    module: MODULE_DATA,\r\n    author: AUTHOR_RMMZ,\r\n    kind: key,\r\n  };\r\n};\r\n\r\nconst srcTrait = (src: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: src,\r\n});\r\n\r\nconst srcSystem = (src: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: src,\r\n});\r\n\r\nexport const defineTraitElementRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ELEMENT_RATE,\r\n    LABEL_SET_TRAIT.options.elementRate,\r\n    label,\r\n    srcElement()\r\n  );\r\n\r\nexport const defineTraitDebuffRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_DEBUFF_RATE,\r\n    LABEL_SET_TRAIT.options.debuffRate,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitStateRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_STATE_RATE,\r\n    LABEL_SET_TRAIT.options.stateRate,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitStateResist = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_STATE_RESIST,\r\n    LABEL_SET_TRAIT.options.stateResist,\r\n    label,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineTraitRegularParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_PARAM,\r\n    LABEL_SET_TRAIT.options.regularParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitExtraParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_XPARAM,\r\n    LABEL_SET_TRAIT.options.extraParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_EXTRA)\r\n  );\r\n\r\nexport const defineTraitSpecialParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SPARAM,\r\n    LABEL_SET_TRAIT.options.specialParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_SPECIAL)\r\n  );\r\n\r\nexport const defineTraitAttackElement = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_ELEMENT,\r\n    LABEL_SET_TRAIT.options.attackElement,\r\n    label,\r\n    srcElement()\r\n  );\r\n\r\nexport const defineTraitAttackState = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_STATE,\r\n    LABEL_SET_TRAIT.options.attackState,\r\n    label,\r\n    srcTrait(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineTraitAttackSpeed = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ATTACK_SPEED, LABEL_SET_TRAIT.options.attackSpeed, label);\r\n\r\nexport const defineTraitAttackTimes = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ATTACK_TIMES, LABEL_SET_TRAIT.options.attackTimes, label);\r\n\r\nexport const defineTraitAttackSkill = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_SKILL,\r\n    LABEL_SET_TRAIT.options.attackSkill,\r\n    label,\r\n    srcData(SRC_DATA_SKILL)\r\n  );\r\n\r\nexport const defineTraitActionPlus = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ACTION_PLUS, LABEL_SET_TRAIT.options.actionPlus, label);\r\n\r\nexport const defineTraitSpecialFlag = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SPECIAL_FLAG,\r\n    LABEL_SET_TRAIT.options.specialFlag,\r\n    label,\r\n    srcTrait(SRC_TRAIT_SPECIAL_FLAG)\r\n  );\r\n\r\nexport const defineTraitCollapseType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_COLLAPSE_TYPE,\r\n    LABEL_SET_TRAIT.options.collaps,\r\n    label,\r\n    srcTrait(SRC_TRAIT_COLLAPS)\r\n  );\r\n\r\nexport const defineTraitPartyAbility = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_PARTY_ABILITY,\r\n    LABEL_SET_TRAIT.options.partyAbility,\r\n    label,\r\n    srcTrait(SRC_TRAIT_PARTY_ABILITY)\r\n  );\r\n\r\nexport const defineTraitEquipWeaponType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_EQUIP_WEAPON_TYPE,\r\n    LABEL_SET_TRAIT.options.equipWeaponType,\r\n    label,\r\n    srcSystem(SRC_WEAPON_TYPES)\r\n  );\r\n\r\nexport const defineTraitEquipArmorType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_EQUIP_ARMOR_TYPE,\r\n    LABEL_SET_TRAIT.options.equipArmorType,\r\n    label,\r\n    srcSystem(SRC_ARMOR_TYPES)\r\n  );\r\n\r\nexport const defineTraitEquipLock = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_EQUIP_LOCK, LABEL_SET_TRAIT.options.equipLock, label);\r\n\r\nexport const defineTraitEquipSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_EQUIP_SEAL, LABEL_SET_TRAIT.options.equipSeal, label);\r\n\r\nexport const defineTraitSkillAdd = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SKILL_ADD, LABEL_SET_TRAIT.options.skillAdd, label);\r\n\r\nexport const defineTraitSkillSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SKILL_SEAL, LABEL_SET_TRAIT.options.skillSeal, label);\r\n\r\nexport const defineTraitSlotType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SLOT_TYPE, LABEL_SET_TRAIT.options.slotType, label);\r\n\r\nexport const defineTraitSkillTypeAdd = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SKILL_TYPE_ADD,\r\n    LABEL_SET_TRAIT.options.skillTypeAdd,\r\n    label\r\n  );\r\n\r\nexport const defineTraitSkillTypeSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SKILL_TYPE_SEAL,\r\n    LABEL_SET_TRAIT.options.skillTypeSeal,\r\n    label\r\n  );\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Trait } from \"./trait\";\r\n\r\nexport const TYPENAME_TRAIT = \"Trait\" as const;\r\n\r\nexport const SCHEMA_TRAIT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"dataId\", \"value\"],\r\n  properties: {\r\n    code: { type: \"integer\" },\r\n    dataId: { type: \"integer\" },\r\n    value: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Trait>;\r\n","import type { Data_Actor } from \"./actor\";\r\n\r\nexport const makeActor = (actor: Partial<Data_Actor> = {}): Data_Actor => ({\r\n  name: actor.name ?? \"\",\r\n  id: actor.id ?? 0,\r\n  battlerName: actor.battlerName ?? \"\",\r\n  characterName: actor.characterName ?? \"\",\r\n  characterIndex: actor.characterIndex ?? 0,\r\n  faceName: actor.faceName ?? \"\",\r\n  faceIndex: actor.faceIndex ?? 0,\r\n  traits: [],\r\n  note: actor.note ?? \"\",\r\n  classId: actor.classId ?? 0,\r\n  nickname: actor.nickname ?? \"\",\r\n  profile: actor.profile ?? \"\",\r\n  equips: [],\r\n  initialLevel: actor.initialLevel ?? 0,\r\n  maxLevel: actor.maxLevel ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Actor } from \"./actor\";\r\nimport Ajv from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_ACTOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"nickname\",\r\n    \"battlerName\",\r\n    \"characterName\",\r\n    \"characterIndex\",\r\n    \"faceName\",\r\n    \"faceIndex\",\r\n    \"classId\",\r\n    \"initialLevel\",\r\n    \"maxLevel\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    battlerName: { type: \"string\" },\r\n    characterName: { type: \"string\" },\r\n    characterIndex: { type: \"integer\" },\r\n    faceName: { type: \"string\" },\r\n    faceIndex: { type: \"integer\", minimum: 0, maximum: 7 },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    nickname: { type: \"string\" },\r\n\r\n    profile: { type: \"string\" },\r\n    initialLevel: { type: \"integer\", minimum: 0 },\r\n    maxLevel: { type: \"integer\" },\r\n    classId: { type: \"integer\", minimum: 0 },\r\n    equips: { type: \"array\", items: { type: \"integer\" } },\r\n    note: { type: \"string\" },\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Actor>;\r\n\r\nexport const normalizeDataActor = (data: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    name: data.name ?? \"\",\r\n    id: data.id ?? 0,\r\n    battlerName: data.battlerName ?? \"\",\r\n    characterName: data.characterName ?? \"\",\r\n    characterIndex: data.characterIndex ?? 0,\r\n    faceName: data.faceName ?? \"\",\r\n    faceIndex: data.faceIndex ?? 0,\r\n    traits: [],\r\n    note: data.note ?? \"\",\r\n    classId: data.classId ?? 0,\r\n    nickname: data.nickname ?? \"\",\r\n    profile: data.profile ?? \"\",\r\n    equips: [],\r\n    initialLevel: data.initialLevel ?? 0,\r\n    maxLevel: data.maxLevel ?? 0,\r\n  };\r\n};\r\n","import type { Data_Armor } from \"./armor\";\r\nexport const makeArmor = (armor: Partial<Data_Armor> = {}): Data_Armor => ({\r\n  id: armor.id ?? 0,\r\n  name: armor.name ?? \"\",\r\n  iconIndex: armor.iconIndex ?? 0,\r\n  description: armor.description ?? \"\",\r\n  traits: armor.traits ?? [],\r\n  note: armor.note ?? \"\",\r\n  params: armor.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: armor.etypeId ?? 0,\r\n  price: armor.price ?? 0,\r\n});\r\n","import type { ParamArray } from \"../members\";\r\nimport type { Trait } from \"../trait\";\r\nimport type { Data_Armor } from \"./armor\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_ARMMOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Armor>;\r\n","import type { Data_Class } from \"./types\";\r\nexport const makeClass = (data: Partial<Data_Class> = {}): Data_Class => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  learnings: data.learnings ?? [],\r\n  expParams: data.expParams ?? [],\r\n});\r\n","import type { Data_Class } from \"./types\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_CLASS = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"note\",\r\n    \"expParams\",\r\n    \"params\",\r\n    \"learnings\",\r\n    \"traits\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    expParams: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<Data_Class[\"params\"]>,\r\n    learnings: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          level: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n        },\r\n        required: [\"level\", \"skillId\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"learnings\"]>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"traits\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} satisfies JSONSchemaType<Data_Class>;\r\n","import type { Data_State } from \"./state\";\r\nexport const makeState = (data: Partial<Data_State> = {}): Data_State => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  iconIndex: data.iconIndex ?? 0,\r\n  message1: data.message1 ?? \"\",\r\n  message2: data.message2 ?? \"\",\r\n  message3: data.message3 ?? \"\",\r\n  message4: data.message4 ?? \"\",\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n\r\n  restriction: data.restriction ?? 0,\r\n  priority: data.priority ?? 0,\r\n  motion: data.motion ?? 0,\r\n  overlay: data.overlay ?? 0,\r\n  removeAtBattleEnd: data.removeAtBattleEnd ?? false,\r\n  removeByRestriction: data.removeByRestriction ?? false,\r\n  autoRemovalTiming: data.autoRemovalTiming ?? 0,\r\n  minTurns: data.minTurns ?? 0,\r\n  maxTurns: data.maxTurns ?? 0,\r\n  removeByDamage: data.removeByDamage ?? false,\r\n  chanceByDamage: data.chanceByDamage ?? 0,\r\n  removeByWalking: data.removeByWalking ?? false,\r\n  stepsToRemove: data.stepsToRemove ?? 0,\r\n});\r\n","import type { Data_State } from \"./state\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_STATE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n    \"restriction\",\r\n    \"priority\",\r\n    \"motion\",\r\n    \"overlay\",\r\n    \"removeAtBattleEnd\",\r\n    \"removeByDamage\",\r\n    \"removeByWalking\",\r\n    \"removeByRestriction\",\r\n    \"autoRemovalTiming\",\r\n    \"minTurns\",\r\n    \"maxTurns\",\r\n    \"chanceByDamage\",\r\n    \"stepsToRemove\",\r\n    \"note\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n    message3: { type: \"string\" },\r\n    message4: { type: \"string\" },\r\n\r\n    restriction: { type: \"integer\" },\r\n    priority: { type: \"integer\" },\r\n    motion: { type: \"integer\" },\r\n    overlay: { type: \"integer\" },\r\n\r\n    removeAtBattleEnd: { type: \"boolean\" },\r\n    removeByDamage: { type: \"boolean\" },\r\n\r\n    removeByWalking: { type: \"boolean\" },\r\n    removeByRestriction: { type: \"boolean\" },\r\n    autoRemovalTiming: { type: \"integer\" },\r\n\r\n    minTurns: { type: \"integer\" },\r\n    maxTurns: { type: \"integer\" },\r\n\r\n    chanceByDamage: { type: \"integer\" },\r\n    stepsToRemove: { type: \"integer\" },\r\n    note: { type: \"string\" },\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Data_State[\"traits\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_State>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { WeaponLabels } from \"./weaponLabels\";\r\n\r\nexport const LABELS_DATA_WEAPON = {\r\n  domainName: \"武器\",\r\n  options: {\r\n    weaponTypeId: \"武器タイプID\",\r\n  },\r\n} as const satisfies DomainLabel<WeaponLabels>;\r\n","import { makeDamage } from \"@RpgTypes/schema\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\n\r\nexport const makeWeapon = (weapon: Partial<Data_Weapon> = {}): Data_Weapon => ({\r\n  id: weapon.id ?? 0,\r\n  name: weapon.name ?? \"\",\r\n  iconIndex: weapon.iconIndex ?? 0,\r\n  description: weapon.description ?? \"\",\r\n  traits: weapon.traits ?? [],\r\n  note: weapon.note ?? \"\",\r\n  params: weapon.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: weapon.etypeId ?? 0,\r\n  price: weapon.price ?? 0,\r\n  damage: makeDamage(weapon.damage ?? {}),\r\n  wtypeId: weapon.wtypeId ?? 0,\r\n});\r\n","import type { Damage, ParamArray, Trait } from \"src/libs\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_WEAPON = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    wtypeId: { type: \"integer\", minimum: 0 },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\", minimum: 0 },\r\n        elementId: { type: \"integer\", minimum: 0 },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n    } satisfies JSONSchemaType<Damage>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Weapon>;\r\n","import type { Data_Enemy } from \"./enemy\";\r\nimport type { DropItem, Enemy_Action } from \"./enemyMembers\";\r\n\r\nexport const makeDropItem = (dropItem: Partial<DropItem> = {}): DropItem => ({\r\n  dataId: dropItem.dataId ?? 0,\r\n  denominator: dropItem.denominator ?? 0,\r\n  kind: dropItem.kind ?? 0,\r\n});\r\n\r\nexport const makeEnemyAction = (\r\n  action: Partial<Enemy_Action> = {}\r\n): Enemy_Action => ({\r\n  conditionParam1: action.conditionParam1 ?? 0,\r\n  conditionParam2: action.conditionParam2 ?? 0,\r\n  conditionType: action.conditionType ?? 0,\r\n  rating: action.rating ?? 0,\r\n\r\n  skillId: action.skillId ?? 0,\r\n});\r\n\r\nexport const makeEnemy = (data: Partial<Data_Enemy> = {}): Data_Enemy => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  battlerName: data.battlerName ?? \"\",\r\n  battlerHue: data.battlerHue ?? 0,\r\n  dropItems: data.dropItems?.map(() => makeDropItem()) ?? [],\r\n  exp: data.exp ?? 0,\r\n  gold: data.gold ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  actions: [],\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Enemy } from \"./enemy\";\r\nimport type { DropItem, Enemy_Action } from \"./enemyMembers\";\r\nimport type { ParamArray, Trait } from \"src/libs\";\r\n\r\nexport const SCHEMA_DATA_ENEMY = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"battlerName\",\r\n    \"battlerHue\",\r\n    \"exp\",\r\n    \"gold\",\r\n    \"note\",\r\n    \"params\",\r\n    \"dropItems\",\r\n    \"traits\",\r\n    \"actions\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    battlerHue: { type: \"integer\", minimum: 0 },\r\n    battlerName: { type: \"string\" },\r\n    exp: { type: \"integer\", minimum: 0 },\r\n    gold: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } as const satisfies JSONSchemaType<ParamArray>,\r\n    actions: {\r\n      type: \"array\",\r\n\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"conditionParam1\",\r\n          \"conditionParam2\",\r\n          \"conditionType\",\r\n          \"skillId\",\r\n          \"rating\",\r\n        ],\r\n        properties: {\r\n          conditionParam1: { type: \"integer\" },\r\n          conditionParam2: { type: \"integer\" },\r\n          conditionType: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          rating: { type: \"integer\" },\r\n        },\r\n      },\r\n    } satisfies JSONSchemaType<Enemy_Action[]>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n\r\n    dropItems: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          kind: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          denominator: { type: \"integer\", minimum: 0 },\r\n          rate: { type: \"number\" },\r\n        },\r\n        required: [\"kind\", \"dataId\", \"denominator\"],\r\n      },\r\n    } satisfies JSONSchemaType<DropItem[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Enemy>;\r\n","import type { Data_Item, Data_Skill } from \"@RpgTypes/schema\";\r\nimport { makeDamage } from \"@RpgTypes/schema\";\r\n\r\nexport const makeItem = (item: Partial<Data_Item> = {}): Data_Item => ({\r\n  animationId: item.animationId ?? 0,\r\n  id: item.id ?? 0,\r\n  name: item.name ?? \"\",\r\n  iconIndex: item.iconIndex ?? 0,\r\n  description: item.description ?? \"\",\r\n\r\n  note: item.note ?? \"\",\r\n  consumable: item.consumable ?? false,\r\n  scope: item.scope ?? 0,\r\n  occasion: item.occasion ?? 0,\r\n  speed: item.speed ?? 0,\r\n  successRate: item.successRate ?? 0,\r\n  repeats: item.repeats ?? 0,\r\n  tpGain: item.tpGain ?? 0,\r\n  hitType: item.hitType ?? 0,\r\n  damage: makeDamage(item.damage ?? {}),\r\n  effects: [],\r\n  price: 0,\r\n});\r\n\r\nexport const makeSkill = (skill: Partial<Data_Skill> = {}): Data_Skill => ({\r\n  stypeId: skill.stypeId ?? 0,\r\n  requiredWtypeId1: skill.requiredWtypeId1 ?? 0,\r\n  requiredWtypeId2: skill.requiredWtypeId2 ?? 0,\r\n  animationId: skill.animationId ?? 0,\r\n  damage: makeDamage(skill.damage ?? {}),\r\n  description: skill.description ?? \"\",\r\n  effects: [],\r\n  hitType: skill.hitType ?? 0,\r\n  iconIndex: skill.iconIndex ?? 0,\r\n  id: skill.id ?? 0,\r\n  message1: skill.message1 ?? \"\",\r\n  message2: skill.message2 ?? \"\",\r\n  messageType: skill.messageType ?? 0,\r\n  name: skill.name ?? \"\",\r\n  note: skill.note ?? \"\",\r\n  mpCost: skill.mpCost ?? 0,\r\n  occasion: skill.occasion ?? 0,\r\n  repeats: skill.repeats ?? 0,\r\n  scope: skill.scope ?? 0,\r\n  speed: skill.speed ?? 0,\r\n  successRate: skill.successRate ?? 0,\r\n  tpCost: skill.tpCost ?? 0,\r\n  tpGain: skill.tpGain ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Item, Data_Skill } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_SKILL = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"messageType\",\r\n    \"mpCost\",\r\n    \"requiredWtypeId1\",\r\n    \"requiredWtypeId2\",\r\n    \"stypeId\",\r\n    \"tpCost\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"note\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n\r\n    messageType: { type: \"integer\" },\r\n    mpCost: { type: \"integer\" },\r\n    requiredWtypeId1: { type: \"integer\" },\r\n    requiredWtypeId2: { type: \"integer\" },\r\n    stypeId: { type: \"integer\" },\r\n    tpCost: { type: \"integer\" },\r\n\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n\r\n    note: { type: \"string\" },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<Data_Skill>;\r\n\r\nexport const SCHEMA_DATA_ITEM = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"note\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"consumable\",\r\n    \"price\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    note: { type: \"string\" },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n    consumable: { type: \"boolean\" },\r\n    price: { type: \"integer\", minimum: 0 },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Item>;\r\n","export const HITTYPE_CERTAIN = 0 as const;\r\nexport const HITTYPE_PHYSICAL = 1 as const;\r\nexport const HITTYPE_MAGICAL = 2 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { EffectLabelDefinition, ItemEffectLabelSet } from \"./types\";\r\n\r\nconst FORMAT_GROW = \"{name} + {value1}\" as const;\r\nconst FORMAT_STATE = \"{name} {value1}%\" as const;\r\nconst FORMAT_RECOVER = \"{value1}% + {value2}\" as const;\r\nconst FORMAT_ADD_BUFF = \"{name} {value1}ターン\" as const;\r\nconst FORMAT_NAME = \"{name}\" as const;\r\n\r\nexport const LABEL_SET_ITEM_EFFECT = {\r\n  domainName: \"使用効果\",\r\n  options: {\r\n    addBuff: {\r\n      desc: \"バフを付与する\",\r\n      domainName: \"バフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addDebuff: {\r\n      desc: \"デバフを付与する\",\r\n      domainName: \"デバフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    gainTp: {\r\n      desc: \"TPを指定した量だけ増加させます。\",\r\n      domainName: \"TP増加\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    grow: {\r\n      desc: \"成長効果\",\r\n      domainName: \"成長効果\",\r\n      format: FORMAT_GROW,\r\n    } as const satisfies EffectLabelDefinition,\r\n    learnSkill: {\r\n      desc: \"スキルを習得する\",\r\n      domainName: \"スキル習得\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverHp: {\r\n      desc: \"HPを回復します。最大HPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"HP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverMp: {\r\n      desc: \"MPを回復します。最大MPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"MP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeBuff: {\r\n      desc: \"バフを解除する\",\r\n      domainName: \"バフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeDebuff: {\r\n      desc: \"デバフを解除する\",\r\n      domainName: \"デバフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeState: {\r\n      desc: \"指定したステートを付加します。\",\r\n      domainName: \"ステート付加\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    special: {\r\n      desc: \"特殊効果\",\r\n      domainName: \"特殊効果\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addState: {\r\n      desc: \"状態異常を解除する\",\r\n      domainName: \"ステート解除\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    commonEvent: {\r\n      desc: \"コモンイベントを実行する\",\r\n      domainName: \"コモンイベント\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n  },\r\n} as const satisfies DomainLabel<ItemEffectLabelSet>;\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","export const SPECIAL_EFFECT_ESCAPE = 0 as const;\r\n","import type { SourceIdentifier } from \"./types\";\r\n\r\nconst validAsciiKey = /^[a-zA-Z0-9]+$/;\r\n\r\nexport const sanitizeKey = (value: string): string | undefined => {\r\n  return validAsciiKey.test(value) ? value : undefined;\r\n};\r\n\r\nexport const testUnknonwKey = (value: unknown): value is string => {\r\n  return typeof value === \"string\" ? validAsciiKey.test(value) : false;\r\n};\r\n\r\nexport const joinSourceKey = (key: SourceIdentifier): string => {\r\n  return [key.author, key.module, key.kind].join(\".\");\r\n};\r\n\r\nexport const isValid = (\r\n  source: Partial<SourceIdentifier>\r\n): source is SourceIdentifier => {\r\n  return (\r\n    testUnknonwKey(source.author) &&\r\n    testUnknonwKey(source.module) &&\r\n    testUnknonwKey(source.kind)\r\n  );\r\n};\r\n// TODO:ソース選択画面のデザイン\r\n","export const SRC_PARAMS_REGULAR = \"params\" as const;\r\nexport const SRC_PARAMS_EXTRA = \"xparams\" as const;\r\nexport const SRC_PARAMS_SPECIAL = \"sparams\" as const;\r\nexport const SRC_TRAIT_COLLAPS = \"collaps\" as const;\r\nexport const SRC_TRAIT_PARTY_ABILITY = \"partyAbiility\" as const;\r\nexport const SRC_TRAIT_SPECIAL_FLAG = \"sflag\";\r\n\r\nexport const SRC_DATA_ACTOR = \"actors\" as const;\r\nexport const SRC_DATA_VARIABLE = \"variables\" as const;\r\nexport const SRC_DATA_MAP = \"map\" as const;\r\nexport const SRC_DATA_ENEMY = \"enemy\" as const;\r\nexport const SRC_DATA_STATE = \"state\" as const;\r\nexport const SRC_DATA_SKILL = \"skill\" as const;\r\nexport const SRC_DATA_ITEMS = \"items\" as const;\r\nexport const SRC_DATA_WEAPON = \"weapon\" as const;\r\nexport const SRC_DATA_ARMOR = \"armor\" as const;\r\nexport const SRC_DATA_CLASS = \"class\" as const;\r\nexport const SRC_COMMON_EVNET = \"common_event\" as const;\r\nexport const SRC_TROOP = \"troop\" as const;\r\nexport const SRC_COLOR = \"colors\" as const;\r\n\r\nexport const SRC_WEAPON_TYPES = \"weaponTypes\" as const;\r\nexport const SRC_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SWITCHES = \"switches\" as const;\r\nexport const SRC_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_ELEMENTS = \"elements\" as const;\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema/namedItemSource\";\r\nimport type { EffectDefinitionResolved } from \"./labels\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\n\r\nconst PLACEHOLDER_VALUE1 = \"{value1}\";\r\nconst PLACEHOLDER_VALUE2 = \"{value2}\";\r\nconst PLACEHOLDER_NAME = \"{name}\";\r\n\r\nexport class ItemEffectDescriptor implements EffectDefinitionResolved {\r\n  constructor(\r\n    public readonly codeId: number,\r\n    public readonly label: string,\r\n    public readonly format: string,\r\n    public readonly description: string,\r\n    public readonly dataSource?: SourceIdentifier\r\n  ) {}\r\n  formatText(\r\n    effect: ItemEffect,\r\n    resolveName: (\r\n      dataSource: Readonly<SourceIdentifier>,\r\n      dataId: number\r\n    ) => string\r\n  ) {\r\n    const text = this.format\r\n      .replaceAll(PLACEHOLDER_VALUE1, effect.value1.toString())\r\n      .replaceAll(PLACEHOLDER_VALUE2, effect.value2.toString());\r\n    if (!this.dataSource) {\r\n      return text;\r\n    }\r\n    return text.replaceAll(\r\n      PLACEHOLDER_NAME,\r\n      resolveName(this.dataSource, effect.dataId)\r\n    );\r\n  }\r\n  requiresValue1(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE1);\r\n  }\r\n  requiresValue2(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE2);\r\n  }\r\n  requiresName(): boolean {\r\n    return this.format.includes(PLACEHOLDER_NAME);\r\n  }\r\n  invalidPlaceHolder(): string[] {\r\n    const allowed = [\"value1\", \"value2\", \"name\"];\r\n    const matches: RegExpExecArray[] = [\r\n      ...this.format.matchAll(/\\{([^}]+)\\}/g),\r\n    ];\r\n    return matches.map((m) => m[1]).filter((key) => !allowed.includes(key));\r\n  }\r\n  isFormatValidForDataSource(): boolean {\r\n    if (this.dataSource && !this.requiresName()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema/\";\r\nimport {\r\n  SRC_COMMON_EVNET,\r\n  SRC_DATA_SKILL,\r\n  SRC_DATA_STATE,\r\n  SRC_PARAMS_REGULAR,\r\n} from \"@RpgTypes/schema/namedItemSource\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./constants/\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\nimport { LABEL_SET_ITEM_EFFECT } from \"./labels\";\r\nimport {\r\n  AUTHOR_RMMZ,\r\n  MODULE_DATA,\r\n  MODULE_TRAIT,\r\n} from \"@RpgTypes/namedItemSource/\";\r\nimport { ItemEffectDescriptor } from \"./itemEffectDescriptor\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\n/**\r\n * @deprecated\r\n */\r\nexport const formatItemEffectText = (\r\n  effectDefine: EffectDefinitionResolved,\r\n  effect: ItemEffect,\r\n  name: string\r\n) => {\r\n  return effectDefine.format\r\n    .replaceAll(`{value1}`, effect.value1.toString())\r\n    .replaceAll(`{value2}`, effect.value2.toString())\r\n    .replaceAll(\"{name}\", name);\r\n};\r\n\r\nexport const resolveItemEffectLabels = (\r\n  label: DomainLabel<ItemEffectLabelSet>\r\n): ItemEffectDescriptor[] => {\r\n  return [\r\n    defineEffectRecoverHp(label.options.recoverHp),\r\n    defineEffectRecoverMp(label.options.recoverMp),\r\n    defineEffectGainTp(label.options.gainTp),\r\n    defineEffectAddState(label.options.addState),\r\n    defineEffectRemoveState(label.options.removeState),\r\n    defineEffectAddBuff(label.options.addBuff),\r\n    defineEffectAddDebuff(label.options.addDebuff),\r\n    defineEffectRemoveBuff(label.options.removeBuff),\r\n    defineEffectRemoveDebuff(label.options.removeDebuff),\r\n    defineEffectLearnSkill(label.options.learnSkill),\r\n    defineEffectCommonEvent(label.options.commonEvent),\r\n  ];\r\n};\r\n\r\nconst regularParam = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_PARAMS_REGULAR,\r\n});\r\n\r\nconst srcData = (sourceKey: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: sourceKey,\r\n});\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  override: Partial<EffectLabelDefinition>,\r\n  dataSource?: SourceIdentifier\r\n): ItemEffectDescriptor => {\r\n  const label = override.domainName ?? baseLabel.domainName;\r\n  const format = override.format ?? baseLabel.format;\r\n  const description = override.desc ?? baseLabel.desc;\r\n  return new ItemEffectDescriptor(code, label, format, description, dataSource);\r\n};\r\n\r\nexport const defineEffectRecoverHp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_RECOVER_HP,\r\n    LABEL_SET_ITEM_EFFECT.options.recoverHp,\r\n    labels\r\n  );\r\n\r\nexport const defineEffectRecoverMp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_RECOVER_MP,\r\n    LABEL_SET_ITEM_EFFECT.options.recoverMp,\r\n    labels\r\n  );\r\n\r\nexport const defineEffectGainTp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(EFFECT_GAIN_TP, LABEL_SET_ITEM_EFFECT.options.gainTp, labels);\r\n\r\nexport const defineEffectGrow = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(EFFECT_GROW, LABEL_SET_ITEM_EFFECT.options.grow, labels);\r\n\r\nexport const defineEffectAddState = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_STATE,\r\n    LABEL_SET_ITEM_EFFECT.options.addState,\r\n    labels,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineEffectRemoveState = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_STATE,\r\n    LABEL_SET_ITEM_EFFECT.options.removeState,\r\n    labels,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineEffectAddBuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_BUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.addBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectRemoveBuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_BUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.removeBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectLearnSkill = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_LEARN_SKILL,\r\n    LABEL_SET_ITEM_EFFECT.options.learnSkill,\r\n    labels,\r\n    srcData(SRC_DATA_SKILL)\r\n  );\r\n\r\nexport const defineEffectAddDebuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_DEBUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.addBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectRemoveDebuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.removeDebuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectCommonEvent = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_COMMON_EVENT,\r\n    LABEL_SET_ITEM_EFFECT.options.commonEvent,\r\n    labels,\r\n    srcData(SRC_COMMON_EVNET)\r\n  );\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { ItemLabels } from \"./itemLabels\";\r\n\r\nexport const DEFAULT_ITEM_LABELS = {\r\n  domainName: \"アイテム\",\r\n  options: {\r\n    consumable: \"消耗品\",\r\n  },\r\n} as const satisfies DomainLabel<ItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { SkillLabels } from \"./skillLabels\";\r\n\r\nexport const DEFAULT_SKILL_LABELS = {\r\n  domainName: \"スキル\",\r\n  options: {\r\n    requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n    requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n    mpCost: \"MP消費\",\r\n    tpCost: \"TP消費\",\r\n  },\r\n} as const satisfies DomainLabel<SkillLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { UsableItemLabels } from \"./usableItemLabels\";\r\n\r\nexport const DEFAULT_USABLE_ITEM_LABELS = {\r\n  domainName: \"\",\r\n  options: {\r\n    scope: \"範囲\",\r\n    speed: \"速度補正\",\r\n    successRate: \"成功率\",\r\n  },\r\n} as const satisfies DomainLabel<UsableItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DataLabels } from \"./dataLabels\";\r\nimport type {\r\n  ActorLabels,\r\n  ArmorLabels,\r\n  ClassLabels,\r\n  EnemyLabels,\r\n  StateLabels,\r\n  WeaponLabels,\r\n} from \"./traitContainers\";\r\nimport type { ItemLabels, SkillLabels, UsableItemLabels } from \"./usableItems\";\r\n\r\nexport const LABEL_SET_DATA = {\r\n  actor: {\r\n    domainName: \"アクター\",\r\n    options: {\r\n      initialEquipments: \"初期装備\",\r\n      faceImage: \"顔画像\",\r\n      characterImage: \"キャラクター画像\",\r\n      svBattlerImage: \"SVバトラー画像\",\r\n      nickname: \"ニックネーム\",\r\n      profile: \"プロフィール\",\r\n      classId: \"職業ID\",\r\n      initialLevel: \"初期レベル\",\r\n      maxLevel: \"最大レベル\",\r\n    },\r\n  } as const satisfies DomainLabel<ActorLabels>,\r\n  class: {\r\n    domainName: \"職業\",\r\n    options: {\r\n      params: \"パラメータ\",\r\n      learnings: \"習得スキル\",\r\n      expParams: \"経験値パラメータ\",\r\n    },\r\n  } as const satisfies DomainLabel<ClassLabels>,\r\n  armor: {\r\n    domainName: \"防具\",\r\n    options: {\r\n      armorTypeId: \"防具タイプID\",\r\n      slotTypeId: \"スロットタイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<ArmorLabels>,\r\n  enemy: {\r\n    domainName: \"敵キャラ\",\r\n    options: {\r\n      dropItems: \"ドロップアイテム\",\r\n      battlerHue: \"バトラーヒュー\",\r\n      battlerName: \"バトラー名\",\r\n      gold: \"ゴールド\",\r\n    },\r\n  } as const satisfies DomainLabel<EnemyLabels>,\r\n  item: {\r\n    domainName: \"アイテム\",\r\n    options: {\r\n      consumable: \"消耗品\",\r\n    },\r\n  } as const satisfies DomainLabel<ItemLabels>,\r\n  skill: {\r\n    domainName: \"スキル\",\r\n    options: {\r\n      requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n      requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n      mpCost: \"MP消費\",\r\n      tpCost: \"TP消費\",\r\n    },\r\n  } as const satisfies DomainLabel<SkillLabels>,\r\n  state: {\r\n    domainName: \"ステート\",\r\n    options: {\r\n      restriction: \"制約\",\r\n      priority: \"優先度\",\r\n      motion: \"モーション\",\r\n      overlay: \"オーバーレイ\",\r\n      removeAtBattleEnd: \"戦闘終了時解除\",\r\n      removeByRestriction: \"制約による解除\",\r\n      autoRemovalTiming: \"自動解除タイミング\",\r\n      minTurns: \"最小ターン数\",\r\n      maxTurns: \"最大ターン数\",\r\n      removeByDamage: \"ダメージによる解除\",\r\n      chanceByDamage: \"ダメージによる解除確率\",\r\n      removeByWalking: \"歩行による解除\",\r\n      stepsToRemove: \"解除までの歩数\",\r\n    },\r\n  } as const satisfies DomainLabel<StateLabels>,\r\n  weapon: {\r\n    domainName: \"武器\",\r\n    options: {\r\n      weaponTypeId: \"武器タイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<WeaponLabels>,\r\n  usableItem: {\r\n    domainName: \"\",\r\n    options: {\r\n      scope: \"範囲\",\r\n      speed: \"速度補正\",\r\n      successRate: \"成功率\",\r\n    },\r\n  } as const satisfies DomainLabel<UsableItemLabels>,\r\n} as const satisfies DataLabels;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DamageLabels } from \"./damageLabels\";\r\n\r\nexport const DEFAULT_DAMAGE_LABELS = {\r\n  domainName: \"ダメージ\",\r\n  options: {},\r\n} as const satisfies DomainLabel<DamageLabels>;\r\n","import type { Damage } from \"./damage\";\r\n\r\nexport const makeDamage = (damage: Partial<Damage> = {}): Damage => ({\r\n  type: damage.type ?? 0,\r\n  elementId: damage.elementId ?? 0,\r\n  formula: damage.formula ?? \"\",\r\n  variance: damage.variance ?? 0,\r\n  critical: damage.critical ?? false,\r\n});\r\n","import type { Damage } from \"./damage\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nexport const SCHEMA_DAMAGE = {\r\n  type: \"object\",\r\n  required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n  properties: {\r\n    type: { type: \"integer\", minimum: 0 },\r\n    elementId: { type: \"integer\", minimum: 0 },\r\n    formula: { type: \"string\" },\r\n    variance: { type: \"integer\" },\r\n    critical: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Damage>;\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState || (exports.UsedValueState = UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type || (exports.Type = Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"), // data passed to validation function\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"), // null or array of validation errors\n    errors: new codegen_1.Name(\"errors\"), // counter of validation errors\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"), // also used in JTD errors\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType || (exports.DataType = DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let innerBaseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            innerBaseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = innerBaseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    narrowSchemaTypes(it, types);\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction narrowSchemaTypes(it, withTypes) {\n    const ts = [];\n    for (const t of it.dataTypes) {\n        if (includesType(withTypes, t))\n            ts.push(t);\n        else if (withTypes.includes(\"integer\") && t === \"number\")\n            ts.push(\"integer\");\n    }\n    it.dataTypes = ts;\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil], // TODO can its length be used as dataLevel if nil is removed?\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","'use strict'\n\nconst HEX = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  A: 10,\n  b: 11,\n  B: 11,\n  c: 12,\n  C: 12,\n  d: 13,\n  D: 13,\n  e: 14,\n  E: 14,\n  f: 15,\n  F: 15\n}\n\nmodule.exports = {\n  HEX\n}\n","'use strict'\n\nconst { HEX } = require('./scopedChars')\n\nconst IPV4_REG = /^(?:(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)$/u\n\nfunction normalizeIPv4 (host) {\n  if (findToken(host, '.') < 3) { return { host, isIPV4: false } }\n  const matches = host.match(IPV4_REG) || []\n  const [address] = matches\n  if (address) {\n    return { host: stripLeadingZeros(address, '.'), isIPV4: true }\n  } else {\n    return { host, isIPV4: false }\n  }\n}\n\n/**\n * @param {string[]} input\n * @param {boolean} [keepZero=false]\n * @returns {string|undefined}\n */\nfunction stringArrayToHexStripped (input, keepZero = false) {\n  let acc = ''\n  let strip = true\n  for (const c of input) {\n    if (HEX[c] === undefined) return undefined\n    if (c !== '0' && strip === true) strip = false\n    if (!strip) acc += c\n  }\n  if (keepZero && acc.length === 0) acc = '0'\n  return acc\n}\n\nfunction getIPV6 (input) {\n  let tokenCount = 0\n  const output = { error: false, address: '', zone: '' }\n  const address = []\n  const buffer = []\n  let isZone = false\n  let endipv6Encountered = false\n  let endIpv6 = false\n\n  function consume () {\n    if (buffer.length) {\n      if (isZone === false) {\n        const hex = stringArrayToHexStripped(buffer)\n        if (hex !== undefined) {\n          address.push(hex)\n        } else {\n          output.error = true\n          return false\n        }\n      }\n      buffer.length = 0\n    }\n    return true\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const cursor = input[i]\n    if (cursor === '[' || cursor === ']') { continue }\n    if (cursor === ':') {\n      if (endipv6Encountered === true) {\n        endIpv6 = true\n      }\n      if (!consume()) { break }\n      tokenCount++\n      address.push(':')\n      if (tokenCount > 7) {\n        // not valid\n        output.error = true\n        break\n      }\n      if (i - 1 >= 0 && input[i - 1] === ':') {\n        endipv6Encountered = true\n      }\n      continue\n    } else if (cursor === '%') {\n      if (!consume()) { break }\n      // switch to zone detection\n      isZone = true\n    } else {\n      buffer.push(cursor)\n      continue\n    }\n  }\n  if (buffer.length) {\n    if (isZone) {\n      output.zone = buffer.join('')\n    } else if (endIpv6) {\n      address.push(buffer.join(''))\n    } else {\n      address.push(stringArrayToHexStripped(buffer))\n    }\n  }\n  output.address = address.join('')\n  return output\n}\n\nfunction normalizeIPv6 (host) {\n  if (findToken(host, ':') < 2) { return { host, isIPV6: false } }\n  const ipv6 = getIPV6(host)\n\n  if (!ipv6.error) {\n    let newHost = ipv6.address\n    let escapedHost = ipv6.address\n    if (ipv6.zone) {\n      newHost += '%' + ipv6.zone\n      escapedHost += '%25' + ipv6.zone\n    }\n    return { host: newHost, escapedHost, isIPV6: true }\n  } else {\n    return { host, isIPV6: false }\n  }\n}\n\nfunction stripLeadingZeros (str, token) {\n  let out = ''\n  let skip = true\n  const l = str.length\n  for (let i = 0; i < l; i++) {\n    const c = str[i]\n    if (c === '0' && skip) {\n      if ((i + 1 <= l && str[i + 1] === token) || i + 1 === l) {\n        out += c\n        skip = false\n      }\n    } else {\n      if (c === token) {\n        skip = true\n      } else {\n        skip = false\n      }\n      out += c\n    }\n  }\n  return out\n}\n\nfunction findToken (str, token) {\n  let ind = 0\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === token) ind++\n  }\n  return ind\n}\n\nconst RDS1 = /^\\.\\.?\\//u\nconst RDS2 = /^\\/\\.(?:\\/|$)/u\nconst RDS3 = /^\\/\\.\\.(?:\\/|$)/u\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/u\n\nfunction removeDotSegments (input) {\n  const output = []\n\n  while (input.length) {\n    if (input.match(RDS1)) {\n      input = input.replace(RDS1, '')\n    } else if (input.match(RDS2)) {\n      input = input.replace(RDS2, '/')\n    } else if (input.match(RDS3)) {\n      input = input.replace(RDS3, '/')\n      output.pop()\n    } else if (input === '.' || input === '..') {\n      input = ''\n    } else {\n      const im = input.match(RDS5)\n      if (im) {\n        const s = im[0]\n        input = input.slice(s.length)\n        output.push(s)\n      } else {\n        throw new Error('Unexpected dot segment condition')\n      }\n    }\n  }\n  return output.join('')\n}\n\nfunction normalizeComponentEncoding (components, esc) {\n  const func = esc !== true ? escape : unescape\n  if (components.scheme !== undefined) {\n    components.scheme = func(components.scheme)\n  }\n  if (components.userinfo !== undefined) {\n    components.userinfo = func(components.userinfo)\n  }\n  if (components.host !== undefined) {\n    components.host = func(components.host)\n  }\n  if (components.path !== undefined) {\n    components.path = func(components.path)\n  }\n  if (components.query !== undefined) {\n    components.query = func(components.query)\n  }\n  if (components.fragment !== undefined) {\n    components.fragment = func(components.fragment)\n  }\n  return components\n}\n\nfunction recomposeAuthority (components) {\n  const uriTokens = []\n\n  if (components.userinfo !== undefined) {\n    uriTokens.push(components.userinfo)\n    uriTokens.push('@')\n  }\n\n  if (components.host !== undefined) {\n    let host = unescape(components.host)\n    const ipV4res = normalizeIPv4(host)\n\n    if (ipV4res.isIPV4) {\n      host = ipV4res.host\n    } else {\n      const ipV6res = normalizeIPv6(ipV4res.host)\n      if (ipV6res.isIPV6 === true) {\n        host = `[${ipV6res.escapedHost}]`\n      } else {\n        host = components.host\n      }\n    }\n    uriTokens.push(host)\n  }\n\n  if (typeof components.port === 'number' || typeof components.port === 'string') {\n    uriTokens.push(':')\n    uriTokens.push(String(components.port))\n  }\n\n  return uriTokens.length ? uriTokens.join('') : undefined\n};\n\nmodule.exports = {\n  recomposeAuthority,\n  normalizeComponentEncoding,\n  removeDotSegments,\n  normalizeIPv4,\n  normalizeIPv6,\n  stringArrayToHexStripped\n}\n","'use strict'\n\nconst UUID_REG = /^[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}$/iu\nconst URN_REG = /([\\da-z][\\d\\-a-z]{0,31}):((?:[\\w!$'()*+,\\-.:;=@]|%[\\da-f]{2})+)/iu\n\nfunction isSecure (wsComponents) {\n  return typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === 'wss'\n}\n\nfunction httpParse (components) {\n  if (!components.host) {\n    components.error = components.error || 'HTTP URIs must have a host.'\n  }\n\n  return components\n}\n\nfunction httpSerialize (components) {\n  const secure = String(components.scheme).toLowerCase() === 'https'\n\n  // normalize the default port\n  if (components.port === (secure ? 443 : 80) || components.port === '') {\n    components.port = undefined\n  }\n\n  // normalize the empty path\n  if (!components.path) {\n    components.path = '/'\n  }\n\n  // NOTE: We do not parse query strings for HTTP URIs\n  // as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n  // and not the HTTP spec.\n\n  return components\n}\n\nfunction wsParse (wsComponents) {\n// indicate if the secure flag is set\n  wsComponents.secure = isSecure(wsComponents)\n\n  // construct resouce name\n  wsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '')\n  wsComponents.path = undefined\n  wsComponents.query = undefined\n\n  return wsComponents\n}\n\nfunction wsSerialize (wsComponents) {\n// normalize the default port\n  if (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === '') {\n    wsComponents.port = undefined\n  }\n\n  // ensure scheme matches secure flag\n  if (typeof wsComponents.secure === 'boolean') {\n    wsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws')\n    wsComponents.secure = undefined\n  }\n\n  // reconstruct path from resource name\n  if (wsComponents.resourceName) {\n    const [path, query] = wsComponents.resourceName.split('?')\n    wsComponents.path = (path && path !== '/' ? path : undefined)\n    wsComponents.query = query\n    wsComponents.resourceName = undefined\n  }\n\n  // forbid fragment component\n  wsComponents.fragment = undefined\n\n  return wsComponents\n}\n\nfunction urnParse (urnComponents, options) {\n  if (!urnComponents.path) {\n    urnComponents.error = 'URN can not be parsed'\n    return urnComponents\n  }\n  const matches = urnComponents.path.match(URN_REG)\n  if (matches) {\n    const scheme = options.scheme || urnComponents.scheme || 'urn'\n    urnComponents.nid = matches[1].toLowerCase()\n    urnComponents.nss = matches[2]\n    const urnScheme = `${scheme}:${options.nid || urnComponents.nid}`\n    const schemeHandler = SCHEMES[urnScheme]\n    urnComponents.path = undefined\n\n    if (schemeHandler) {\n      urnComponents = schemeHandler.parse(urnComponents, options)\n    }\n  } else {\n    urnComponents.error = urnComponents.error || 'URN can not be parsed.'\n  }\n\n  return urnComponents\n}\n\nfunction urnSerialize (urnComponents, options) {\n  const scheme = options.scheme || urnComponents.scheme || 'urn'\n  const nid = urnComponents.nid.toLowerCase()\n  const urnScheme = `${scheme}:${options.nid || nid}`\n  const schemeHandler = SCHEMES[urnScheme]\n\n  if (schemeHandler) {\n    urnComponents = schemeHandler.serialize(urnComponents, options)\n  }\n\n  const uriComponents = urnComponents\n  const nss = urnComponents.nss\n  uriComponents.path = `${nid || options.nid}:${nss}`\n\n  options.skipEscape = true\n  return uriComponents\n}\n\nfunction urnuuidParse (urnComponents, options) {\n  const uuidComponents = urnComponents\n  uuidComponents.uuid = uuidComponents.nss\n  uuidComponents.nss = undefined\n\n  if (!options.tolerant && (!uuidComponents.uuid || !UUID_REG.test(uuidComponents.uuid))) {\n    uuidComponents.error = uuidComponents.error || 'UUID is not valid.'\n  }\n\n  return uuidComponents\n}\n\nfunction urnuuidSerialize (uuidComponents) {\n  const urnComponents = uuidComponents\n  // normalize UUID\n  urnComponents.nss = (uuidComponents.uuid || '').toLowerCase()\n  return urnComponents\n}\n\nconst http = {\n  scheme: 'http',\n  domainHost: true,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst https = {\n  scheme: 'https',\n  domainHost: http.domainHost,\n  parse: httpParse,\n  serialize: httpSerialize\n}\n\nconst ws = {\n  scheme: 'ws',\n  domainHost: true,\n  parse: wsParse,\n  serialize: wsSerialize\n}\n\nconst wss = {\n  scheme: 'wss',\n  domainHost: ws.domainHost,\n  parse: ws.parse,\n  serialize: ws.serialize\n}\n\nconst urn = {\n  scheme: 'urn',\n  parse: urnParse,\n  serialize: urnSerialize,\n  skipNormalize: true\n}\n\nconst urnuuid = {\n  scheme: 'urn:uuid',\n  parse: urnuuidParse,\n  serialize: urnuuidSerialize,\n  skipNormalize: true\n}\n\nconst SCHEMES = {\n  http,\n  https,\n  ws,\n  wss,\n  urn,\n  'urn:uuid': urnuuid\n}\n\nmodule.exports = SCHEMES\n","'use strict'\n\nconst { normalizeIPv6, normalizeIPv4, removeDotSegments, recomposeAuthority, normalizeComponentEncoding } = require('./lib/utils')\nconst SCHEMES = require('./lib/schemes')\n\nfunction normalize (uri, options) {\n  if (typeof uri === 'string') {\n    uri = serialize(parse(uri, options), options)\n  } else if (typeof uri === 'object') {\n    uri = parse(serialize(uri, options), options)\n  }\n  return uri\n}\n\nfunction resolve (baseURI, relativeURI, options) {\n  const schemelessOptions = Object.assign({ scheme: 'null' }, options)\n  const resolved = resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true)\n  return serialize(resolved, { ...schemelessOptions, skipEscape: true })\n}\n\nfunction resolveComponents (base, relative, options, skipNormalization) {\n  const target = {}\n  if (!skipNormalization) {\n    base = parse(serialize(base, options), options) // normalize base components\n    relative = parse(serialize(relative, options), options) // normalize relative components\n  }\n  options = options || {}\n\n  if (!options.tolerant && relative.scheme) {\n    target.scheme = relative.scheme\n    // target.authority = relative.authority;\n    target.userinfo = relative.userinfo\n    target.host = relative.host\n    target.port = relative.port\n    target.path = removeDotSegments(relative.path || '')\n    target.query = relative.query\n  } else {\n    if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n      // target.authority = relative.authority;\n      target.userinfo = relative.userinfo\n      target.host = relative.host\n      target.port = relative.port\n      target.path = removeDotSegments(relative.path || '')\n      target.query = relative.query\n    } else {\n      if (!relative.path) {\n        target.path = base.path\n        if (relative.query !== undefined) {\n          target.query = relative.query\n        } else {\n          target.query = base.query\n        }\n      } else {\n        if (relative.path.charAt(0) === '/') {\n          target.path = removeDotSegments(relative.path)\n        } else {\n          if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n            target.path = '/' + relative.path\n          } else if (!base.path) {\n            target.path = relative.path\n          } else {\n            target.path = base.path.slice(0, base.path.lastIndexOf('/') + 1) + relative.path\n          }\n          target.path = removeDotSegments(target.path)\n        }\n        target.query = relative.query\n      }\n      // target.authority = base.authority;\n      target.userinfo = base.userinfo\n      target.host = base.host\n      target.port = base.port\n    }\n    target.scheme = base.scheme\n  }\n\n  target.fragment = relative.fragment\n\n  return target\n}\n\nfunction equal (uriA, uriB, options) {\n  if (typeof uriA === 'string') {\n    uriA = unescape(uriA)\n    uriA = serialize(normalizeComponentEncoding(parse(uriA, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriA === 'object') {\n    uriA = serialize(normalizeComponentEncoding(uriA, true), { ...options, skipEscape: true })\n  }\n\n  if (typeof uriB === 'string') {\n    uriB = unescape(uriB)\n    uriB = serialize(normalizeComponentEncoding(parse(uriB, options), true), { ...options, skipEscape: true })\n  } else if (typeof uriB === 'object') {\n    uriB = serialize(normalizeComponentEncoding(uriB, true), { ...options, skipEscape: true })\n  }\n\n  return uriA.toLowerCase() === uriB.toLowerCase()\n}\n\nfunction serialize (cmpts, opts) {\n  const components = {\n    host: cmpts.host,\n    scheme: cmpts.scheme,\n    userinfo: cmpts.userinfo,\n    port: cmpts.port,\n    path: cmpts.path,\n    query: cmpts.query,\n    nid: cmpts.nid,\n    nss: cmpts.nss,\n    uuid: cmpts.uuid,\n    fragment: cmpts.fragment,\n    reference: cmpts.reference,\n    resourceName: cmpts.resourceName,\n    secure: cmpts.secure,\n    error: ''\n  }\n  const options = Object.assign({}, opts)\n  const uriTokens = []\n\n  // find scheme handler\n  const schemeHandler = SCHEMES[(options.scheme || components.scheme || '').toLowerCase()]\n\n  // perform scheme specific serialization\n  if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options)\n\n  if (components.path !== undefined) {\n    if (!options.skipEscape) {\n      components.path = escape(components.path)\n\n      if (components.scheme !== undefined) {\n        components.path = components.path.split('%3A').join(':')\n      }\n    } else {\n      components.path = unescape(components.path)\n    }\n  }\n\n  if (options.reference !== 'suffix' && components.scheme) {\n    uriTokens.push(components.scheme, ':')\n  }\n\n  const authority = recomposeAuthority(components)\n  if (authority !== undefined) {\n    if (options.reference !== 'suffix') {\n      uriTokens.push('//')\n    }\n\n    uriTokens.push(authority)\n\n    if (components.path && components.path.charAt(0) !== '/') {\n      uriTokens.push('/')\n    }\n  }\n  if (components.path !== undefined) {\n    let s = components.path\n\n    if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n      s = removeDotSegments(s)\n    }\n\n    if (authority === undefined) {\n      s = s.replace(/^\\/\\//u, '/%2F') // don't allow the path to start with \"//\"\n    }\n\n    uriTokens.push(s)\n  }\n\n  if (components.query !== undefined) {\n    uriTokens.push('?', components.query)\n  }\n\n  if (components.fragment !== undefined) {\n    uriTokens.push('#', components.fragment)\n  }\n  return uriTokens.join('')\n}\n\nconst hexLookUp = Array.from({ length: 127 }, (_v, k) => /[^!\"$&'()*+,\\-.;=_`a-z{}~]/u.test(String.fromCharCode(k)))\n\nfunction nonSimpleDomain (value) {\n  let code = 0\n  for (let i = 0, len = value.length; i < len; ++i) {\n    code = value.charCodeAt(i)\n    if (code > 126 || hexLookUp[code]) {\n      return true\n    }\n  }\n  return false\n}\n\nconst URI_PARSE = /^(?:([^#/:?]+):)?(?:\\/\\/((?:([^#/?@]*)@)?(\\[[^#/?\\]]+\\]|[^#/:?]*)(?::(\\d*))?))?([^#?]*)(?:\\?([^#]*))?(?:#((?:.|[\\n\\r])*))?/u\n\nfunction parse (uri, opts) {\n  const options = Object.assign({}, opts)\n  const parsed = {\n    scheme: undefined,\n    userinfo: undefined,\n    host: '',\n    port: undefined,\n    path: '',\n    query: undefined,\n    fragment: undefined\n  }\n  const gotEncoding = uri.indexOf('%') !== -1\n  let isIP = false\n  if (options.reference === 'suffix') uri = (options.scheme ? options.scheme + ':' : '') + '//' + uri\n\n  const matches = uri.match(URI_PARSE)\n\n  if (matches) {\n    // store each component\n    parsed.scheme = matches[1]\n    parsed.userinfo = matches[3]\n    parsed.host = matches[4]\n    parsed.port = parseInt(matches[5], 10)\n    parsed.path = matches[6] || ''\n    parsed.query = matches[7]\n    parsed.fragment = matches[8]\n\n    // fix port number\n    if (isNaN(parsed.port)) {\n      parsed.port = matches[5]\n    }\n    if (parsed.host) {\n      const ipv4result = normalizeIPv4(parsed.host)\n      if (ipv4result.isIPV4 === false) {\n        const ipv6result = normalizeIPv6(ipv4result.host)\n        parsed.host = ipv6result.host.toLowerCase()\n        isIP = ipv6result.isIPV6\n      } else {\n        parsed.host = ipv4result.host\n        isIP = true\n      }\n    }\n    if (parsed.scheme === undefined && parsed.userinfo === undefined && parsed.host === undefined && parsed.port === undefined && parsed.query === undefined && !parsed.path) {\n      parsed.reference = 'same-document'\n    } else if (parsed.scheme === undefined) {\n      parsed.reference = 'relative'\n    } else if (parsed.fragment === undefined) {\n      parsed.reference = 'absolute'\n    } else {\n      parsed.reference = 'uri'\n    }\n\n    // check for reference errors\n    if (options.reference && options.reference !== 'suffix' && options.reference !== parsed.reference) {\n      parsed.error = parsed.error || 'URI is not a ' + options.reference + ' reference.'\n    }\n\n    // find scheme handler\n    const schemeHandler = SCHEMES[(options.scheme || parsed.scheme || '').toLowerCase()]\n\n    // check if scheme can't handle IRIs\n    if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n      // if host component is a domain name\n      if (parsed.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost)) && isIP === false && nonSimpleDomain(parsed.host)) {\n        // convert Unicode IDN -> ASCII IDN\n        try {\n          parsed.host = URL.domainToASCII(parsed.host.toLowerCase())\n        } catch (e) {\n          parsed.error = parsed.error || \"Host's domain name can not be converted to ASCII: \" + e\n        }\n      }\n      // convert IRI -> URI\n    }\n\n    if (!schemeHandler || (schemeHandler && !schemeHandler.skipNormalize)) {\n      if (gotEncoding && parsed.scheme !== undefined) {\n        parsed.scheme = unescape(parsed.scheme)\n      }\n      if (gotEncoding && parsed.host !== undefined) {\n        parsed.host = unescape(parsed.host)\n      }\n      if (parsed.path) {\n        parsed.path = escape(unescape(parsed.path))\n      }\n      if (parsed.fragment) {\n        parsed.fragment = encodeURI(decodeURIComponent(parsed.fragment))\n      }\n    }\n\n    // perform scheme specific parsing\n    if (schemeHandler && schemeHandler.parse) {\n      schemeHandler.parse(parsed, options)\n    }\n  } else {\n    parsed.error = parsed.error || 'URI can not be parsed.'\n  }\n  return parsed\n}\n\nconst fastUri = {\n  SCHEMES,\n  normalize,\n  resolve,\n  resolveComponents,\n  equal,\n  serialize,\n  parse\n}\n\nmodule.exports = fastUri\nmodule.exports.default = fastUri\nmodule.exports.fastUri = fastUri\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"fast-uri\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nexports.default = Ajv;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError || (exports.DiscrError = DiscrError = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    const ref = sch.$ref;\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                    if (sch === undefined)\n                        throw new ref_error_1.default(it.opts.uriResolver, it.baseId, ref);\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MissingRefError = exports.ValidationError = exports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = exports.Ajv = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nexports.Ajv = Ajv;\nmodule.exports = exports = Ajv;\nmodule.exports.Ajv = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nvar validation_error_1 = require(\"./runtime/validation_error\");\nObject.defineProperty(exports, \"ValidationError\", { enumerable: true, get: function () { return validation_error_1.default; } });\nvar ref_error_1 = require(\"./compile/ref_error\");\nObject.defineProperty(exports, \"MissingRefError\", { enumerable: true, get: function () { return ref_error_1.default; } });\n//# sourceMappingURL=ajv.js.map","import Ajv from \"ajv\";\r\nimport type {\r\n  Data_Actor,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_State,\r\n  Data_Weapon,\r\n} from \"./traitContainers\";\r\nimport {\r\n  SCHEMA_DATA_ACTOR,\r\n  SCHEMA_DATA_ARMMOR,\r\n  SCHEMA_DATA_CLASS,\r\n  SCHEMA_DATA_ENEMY,\r\n  SCHEMA_DATA_STATE,\r\n  SCHEMA_DATA_WEAPON,\r\n} from \"./traitContainers\";\r\nimport type { Data_Item, Data_Skill } from \"./usableItems\";\r\nimport { SCHEMA_DATA_ITEM, SCHEMA_DATA_SKILL } from \"./usableItems\";\r\nconst ajv = new Ajv();\r\nconst item = ajv.compile(SCHEMA_DATA_ITEM);\r\nconst skill = ajv.compile(SCHEMA_DATA_SKILL);\r\nconst actor = ajv.compile(SCHEMA_DATA_ACTOR);\r\nconst armor = ajv.compile(SCHEMA_DATA_ARMMOR);\r\nconst weapon = ajv.compile(SCHEMA_DATA_WEAPON);\r\nconst enemy = ajv.compile(SCHEMA_DATA_ENEMY);\r\nconst state = ajv.compile(SCHEMA_DATA_STATE);\r\nconst class_ = ajv.compile(SCHEMA_DATA_CLASS);\r\n\r\nexport const isDataItem = (data: unknown): data is Data_Item => {\r\n  return item(data);\r\n};\r\n\r\nexport const isDataSkill = (data: unknown): data is Data_Skill => {\r\n  return skill(data);\r\n};\r\n\r\nexport const isDataActor = (data: unknown): data is Data_Actor => {\r\n  return actor(data);\r\n};\r\n\r\nexport const isDataArmor = (data: unknown): data is Data_Armor => {\r\n  return armor(data);\r\n};\r\n\r\nexport const isDataWeapon = (data: unknown): data is Data_Weapon => {\r\n  return weapon(data);\r\n};\r\n\r\nexport const isDataEnemy = (data: unknown): data is Data_Enemy => {\r\n  return enemy(data);\r\n};\r\nexport const isDataState = (data: unknown): data is Data_State => {\r\n  return state(data);\r\n};\r\nexport const isDataClass = (data: unknown): data is Data_Class => {\r\n  return class_(data);\r\n};\r\n","export const NO_OPERATION = 0 as const;\r\nexport const SHOW_MESSAGE = 101 as const;\r\nexport const SHOW_MESSAGE_BODY = 401 as const;\r\nexport const SHOW_CHOICES = 102 as const;\r\nexport const SHOW_CHOICES_ITEM = 402 as const;\r\nexport const INPUT_NUMBER = 103 as const;\r\nexport const SELECT_ITEM = 104 as const;\r\nexport const SHOW_SCROLLING_TEXT = 105 as const;\r\nexport const SHOW_SCROLLING_TEXT_BODY = 405 as const;\r\nexport const COMMENT = 108 as const;\r\nexport const COMMENT_BODY = 408 as const;\r\nexport const SKIP = 109 as const;\r\nexport const CONDITIONAL_BRANCH = 111 as const;\r\nexport const CONDITIONAL_BRANCH_ELSE = 411 as const;\r\nexport const LOOP = 112 as const;\r\nexport const LOOP_BREAK = 113 as const;\r\nexport const EXIT_EVENT_PROCESSING = 115 as const;\r\nexport const COMMON_EVENT = 117 as const;\r\nexport const LABEL = 118 as const;\r\nexport const LABEL_JUMP = 119 as const;\r\nexport const CONTROL_SWITCHES = 121 as const;\r\nexport const CONTROL_VARIABLES = 122 as const;\r\nexport const CONTROL_SELF_SWITCH = 123 as const;\r\nexport const CONTROL_TIMER = 124 as const;\r\nexport const CHANGE_GOLD = 125 as const;\r\nexport const CHANGE_ITEMS = 126 as const;\r\nexport const CHANGE_WEAPONS = 127 as const;\r\nexport const CHANGE_ARMORS = 128 as const;\r\nexport const CHANGE_PARTY_MEMBER = 129 as const;\r\nexport const CHANGE_BATTLE_BGM = 132 as const;\r\nexport const CHANGE_VICTORY_ME = 133 as const;\r\nexport const CHANGE_SAVE_ACCESS = 134 as const;\r\nexport const CHANGE_MENU_ACCESS = 135 as const;\r\nexport const CHANGE_ENCOUNTER = 136 as const;\r\nexport const CHANGE_FORMATION_ACCESS = 137 as const;\r\nexport const CHANGE_WINDOW_COLOR = 138 as const;\r\n\r\nexport const CHANGE_DEFEAT_ME = 139 as const;\r\nexport const CHANGE_VEHICLE_BGM = 140 as const;\r\n\r\nexport const TRANSFER_PLAYER = 201 as const;\r\nexport const SET_VEHICLE_LOCATION = 202 as const;\r\nexport const SET_EVENT_LOCATION = 203 as const;\r\nexport const SCROLL_MAP = 204 as const;\r\nexport const SET_MOVEMENT_ROUTE = 205 as const;\r\nexport const GET_ONOFF_VEHICLE = 206 as const;\r\nexport const CHANGE_TRANSPARENCY = 211 as const;\r\nexport const SHOW_ANIMATION = 212 as const;\r\nexport const SHOW_BALLOON_ICON = 213 as const;\r\nexport const ERASE_EVENT = 214 as const;\r\nexport const CHANGE_PLAYER_FOLLOWERS = 216 as const;\r\nexport const GATHER_FOLLOWERS = 217 as const;\r\nexport const FADEOUT_SCREEN = 221 as const;\r\nexport const FADEIN_SCREEN = 222 as const;\r\nexport const TINT_SCREEN = 223 as const;\r\nexport const FLASH_SCREEN = 224 as const;\r\nexport const SHAKE_SCREEN = 225 as const;\r\n\r\nexport const WAIT = 230 as const;\r\nexport const SHOW_PICTURE = 231 as const;\r\nexport const MOVE_PICTURE = 232 as const;\r\nexport const ROTATE_PICTURE = 233 as const;\r\nexport const TINT_PICTURE = 234 as const;\r\nexport const ERASE_PICTURE = 235 as const;\r\nexport const SET_WEATHER_EFFECT = 236 as const;\r\n\r\nexport const PLAY_BGM = 241 as const;\r\nexport const FADEOUT_BGM = 242 as const;\r\nexport const SAVE_BGM = 243 as const;\r\nexport const RESUME_BGM = 244 as const;\r\n\r\nexport const PLAY_BGS = 245 as const;\r\nexport const FADEOUT_BGS = 246 as const;\r\nexport const PLAY_ME = 249 as const;\r\nexport const PLAY_SE = 250 as const;\r\nexport const STOP_SE = 251 as const;\r\n\r\nexport const PLAY_MOVIE = 261 as const;\r\n\r\nexport const CHANGE_TILESET = 282 as const;\r\nexport const CHANGE_BATTLE_BACKGROUND = 283 as const;\r\nexport const CHANGE_PARALLAX = 284 as const;\r\nexport const GET_LOCATION_INFO = 285 as const;\r\n\r\nexport const BATTLE_PROCESSING = 301 as const;\r\n\r\nexport const SHOP_PROCESSING = 302 as const;\r\nexport const SHOP_PROCESSING_BODY = 605 as const;\r\nexport const NAME_INPUT_PROCESSING = 303 as const;\r\nexport const CHANGE_HP = 311 as const;\r\nexport const CHANGE_MP = 312 as const;\r\nexport const CHANGE_TP = 313 as const;\r\nexport const RECOVER_ALL = 314 as const;\r\nexport const CHANGE_EXP = 315 as const;\r\n\r\nexport const CHANGE_NAME = 320 as const;\r\nexport const CHANGE_CLASS = 321 as const;\r\nexport const CHANGE_ACTOR_IMAGES = 322 as const;\r\nexport const CHANGE_VEHICLE_IMAGE = 323 as const;\r\nexport const CHANGE_NICKNAME = 324 as const;\r\nexport const CHANGE_PROFILE = 325 as const;\r\n\r\nexport const CHANGE_ENEMY_HP = 331 as const;\r\nexport const CHANGE_ENEMY_MP = 332 as const;\r\n\r\nexport const CHANGE_ENEMY_STATE = 333 as const;\r\nexport const ENEMY_RECOVER_ALL = 334 as const;\r\nexport const ENEMY_APPEAR = 335 as const;\r\nexport const ENEMY_TRANSFORM = 336 as const;\r\nexport const SHOW_BATTLE_ANIMATION = 337 as const;\r\nexport const FORCE_ACTION = 339 as const;\r\nexport const ABORT_BATTLE = 340 as const;\r\nexport const OPEN_MENU_SCREEN = 351 as const;\r\n\r\nexport const CHANGE_ENEMY_TP = 342 as const;\r\n\r\nexport const OPEN_SAVE_SCREEN = 352 as const;\r\nexport const GAME_OVER = 353 as const;\r\nexport const RETURN_TO_TITLE_SCREEN = 354 as const;\r\nexport const SCRIPT_EVAL = 355 as const;\r\nexport const SCRIPT_EVAL_BODY = 655 as const;\r\nexport const PLUGIN_COMMAND_MV = 356 as const;\r\nexport const PLUGIN_COMMAND_MZ = 357 as const;\r\n","export const ROUTE_END = 0 as const;\r\nexport const ROUTE_MOVE_DOWN = 1 as const;\r\nexport const ROUTE_MOVE_LEFT = 2 as const;\r\nexport const ROUTE_MOVE_RIGHT = 3 as const;\r\nexport const ROUTE_MOVE_UP = 4 as const;\r\nexport const ROUTE_MOVE_LOWER_L = 5 as const;\r\nexport const ROUTE_MOVE_LOWER_R = 6 as const;\r\nexport const ROUTE_MOVE_UPPER_L = 7 as const;\r\nexport const ROUTE_MOVE_UPPER_R = 8 as const;\r\nexport const ROUTE_MOVE_RANDOM = 9 as const;\r\nexport const ROUTE_MOVE_TOWARD = 10 as const;\r\nexport const ROUTE_MOVE_AWAY = 11 as const;\r\nexport const ROUTE_MOVE_FORWARD = 12 as const;\r\nexport const ROUTE_MOVE_BACKWARD = 13 as const;\r\nexport const ROUTE_JUMP = 14 as const;\r\nexport const ROUTE_WAIT = 15 as const;\r\nexport const ROUTE_TURN_DOWN = 16 as const;\r\nexport const ROUTE_TURN_LEFT = 17 as const;\r\nexport const ROUTE_TURN_RIGHT = 18 as const;\r\nexport const ROUTE_TURN_UP = 19 as const;\r\nexport const ROUTE_TURN_90D_R = 20 as const;\r\nexport const ROUTE_TURN_90D_L = 21 as const;\r\nexport const ROUTE_TURN_180D = 22 as const;\r\nexport const ROUTE_TURN_90D_R_L = 23 as const;\r\nexport const ROUTE_TURN_RANDOM = 24 as const;\r\nexport const ROUTE_TURN_TOWARD = 25 as const;\r\nexport const ROUTE_TURN_AWAY = 26 as const;\r\nexport const ROUTE_SWITCH_ON = 27 as const;\r\nexport const ROUTE_SWITCH_OFF = 28 as const;\r\nexport const ROUTE_CHANGE_SPEED = 29 as const;\r\nexport const ROUTE_CHANGE_FREQ = 30 as const;\r\nexport const ROUTE_WALK_ANIME_ON = 31 as const;\r\nexport const ROUTE_WALK_ANIME_OFF = 32 as const;\r\nexport const ROUTE_STEP_ANIME_ON = 33 as const;\r\nexport const ROUTE_STEP_ANIME_OFF = 34 as const;\r\nexport const ROUTE_DIR_FIX_ON = 35 as const;\r\nexport const ROUTE_DIR_FIX_OFF = 36 as const;\r\nexport const ROUTE_THROUGH_ON = 37 as const;\r\nexport const ROUTE_THROUGH_OFF = 38 as const;\r\nexport const ROUTE_TRANSPARENT_ON = 39 as const;\r\nexport const ROUTE_TRANSPARENT_OFF = 40 as const;\r\nexport const ROUTE_CHANGE_IMAGE = 41 as const;\r\nexport const ROUTE_CHANGE_OPACITY = 42 as const;\r\nexport const ROUTE_CHANGE_BLEND_MODE = 43 as const;\r\nexport const ROUTE_PLAY_SE = 44 as const;\r\nexport const ROUTE_SCRIPT = 45 as const;\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_MAP_INFO = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"expanded\",\r\n    \"order\",\r\n    \"parentId\",\r\n    \"scrollX\",\r\n    \"scrollY\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    expanded: { type: \"boolean\" },\r\n    order: { type: \"integer\" },\r\n    parentId: { type: \"integer\" },\r\n    scrollX: { type: \"integer\" },\r\n    scrollY: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_MapInfo>;\r\n","import type { Data_Map } from \"./map\";\r\n\r\nexport const makeMapData = (map: Partial<Data_Map> = {}): Data_Map => {\r\n  return {\r\n    autoplayBgm: map.autoplayBgm ?? false,\r\n    autoplayBgs: map.autoplayBgs ?? false,\r\n    battleback1Name: map.battleback1Name ?? \"\",\r\n    battleback2Name: map.battleback2Name ?? \"\",\r\n    bgm: map.bgm ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    bgs: map.bgs ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    disableDashing: map.disableDashing ?? false,\r\n    displayName: map.displayName ?? \"\",\r\n    encounterList: map.encounterList ?? [],\r\n    events: map.events ?? [],\r\n    height: map.height ?? 0,\r\n    note: map.note ?? \"\",\r\n    parallaxLoopX: map.parallaxLoopX ?? false,\r\n    parallaxLoopY: map.parallaxLoopY ?? false,\r\n    parallaxName: map.parallaxName ?? \"\",\r\n    parallaxShow: map.parallaxShow ?? false,\r\n    parallaxSx: map.parallaxSx ?? 0,\r\n    parallaxSy: map.parallaxSy ?? 0,\r\n    width: map.width ?? 0,\r\n    x: map.x ?? 0,\r\n    y: map.y ?? 0,\r\n    data: map.data ?? [],\r\n  };\r\n};\r\n","import type { Data_Troop } from \"./troop\";\r\nimport type { Data_CommonEvent } from \"./commonEvent\";\r\nimport type { Troop_EventConditions, Troop_Member } from \"./troopMembers\";\r\n\r\nexport const makeCommonEventData = (\r\n  data: Partial<Data_CommonEvent> = {}\r\n): Data_CommonEvent => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  trigger: data.trigger ?? 0,\r\n  list: data.list ?? [],\r\n  switchId: data.switchId ?? 0,\r\n});\r\n\r\nexport const makeTroopData = (data: Partial<Data_Troop> = {}): Data_Troop => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  members: data.members ?? [],\r\n  pages: data.pages ?? [],\r\n});\r\n\r\nexport const makeTroopMember = (\r\n  data: Partial<Troop_Member> = {}\r\n): Troop_Member => ({\r\n  enemyId: data.enemyId ?? 0,\r\n  x: data.x ?? 0,\r\n  y: data.y ?? 0,\r\n  hidden: data.hidden ?? false,\r\n});\r\n\r\nexport const makeTroopEventConditions = (\r\n  data: Partial<Troop_EventConditions> = {}\r\n): Troop_EventConditions => ({\r\n  actorHp: data.actorHp ?? 0,\r\n  actorId: data.actorId ?? 0,\r\n  enemyValid: data.enemyValid ?? 0,\r\n  switchValid: data.switchValid ?? 0,\r\n});\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  System_DataNames,\r\n  System_Images,\r\n  System_Text,\r\n  System_Bgm,\r\n  System_BoolanOptions,\r\n} from \"./system\";\r\n\r\ntype AsLabel<T> = Record<keyof T, string>;\r\n\r\nexport type SystemLabel_DataNames = AsLabel<System_DataNames>;\r\nexport type SystemLabel_Images = AsLabel<System_Images>;\r\nexport type SystemLabel_Text = AsLabel<System_Text>;\r\nexport type SystemLabel_Bgm = AsLabel<System_Bgm>;\r\nexport type SystemLabel_BoolanOptions = AsLabel<System_BoolanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_BOOLEAN = {\r\n  domainName: \"オプション\",\r\n  options: {\r\n    optDrawTitle: \"ゲームタイトルの描画\",\r\n    optDisplayTp: \"ウィンドウにTPを表示\",\r\n    optFloorDeath: \"床ダメージで戦闘不能\",\r\n    optSlipDeath: \"スリップダメージで戦闘不能\",\r\n    optAutosave: \"オートセーブを有効化\",\r\n    optExtraExp: \"控えメンバーも経験値を獲得\",\r\n    optFollowers: \"隊列歩行\",\r\n    optSideView: \"戦闘をサイドビューにする\",\r\n    optKeyItemsNumber: \"大事なものの個数を表示\",\r\n    optTransparent: \"透明状態で開始\",\r\n    optMessageSkip: \"メッセージスキップを有効化\",\r\n    optSplashScreen: \"スプラッシュ画面を表示\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_BoolanOptions>;\r\n\r\nexport const MockSystemLabelDataTypes = {\r\n  domainName: \"タイプ\",\r\n  options: {\r\n    armorTypes: \"防具タイプ\",\r\n    elements: \"属性\",\r\n    equipTypes: \"装備タイプ\",\r\n    skillTypes: \"スキルタイプ\",\r\n    weaponTypes: \"武器タイプ\",\r\n    switches: \"スイッチ\",\r\n    variables: \"変数\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_DataNames>;\r\n","import type { GlobalLabel } from \"./globalLabels\";\r\n\r\nexport const DEFAULT_GLOBAL_LABELS = {\r\n  id: \"識別子\",\r\n  name: \"名前\",\r\n  note: \"メモ\",\r\n  description: \"説明\",\r\n  iconIndex: \"アイコンインデックス\",\r\n  occasion: \"使用タイミング\",\r\n  params: \"パラメータ\",\r\n  repeats: \"繰り返し回数\",\r\n  scope: \"範囲\",\r\n  speed: \"速度補正\",\r\n  successRate: \"成功率\",\r\n  animationId: \"アニメーションID\",\r\n  displayType: \"表示タイプ\",\r\n  characterIndex: \"キャラクターインデックス\",\r\n  characterName: \"キャラクター名\",\r\n  effectName: \"効果名\",\r\n  faceIndex: \"顔グラフィックインデックス\",\r\n  faceName: \"顔グラフィック名\",\r\n  flashTimings: \"フラッシュタイミング\",\r\n  list: \"リスト\",\r\n  messageType: \"メッセージタイプ\",\r\n  offsetX: \"オフセットX\",\r\n  offsetY: \"オフセットY\",\r\n  overlay: \"オーバーレイ\",\r\n  priority: \"優先度\",\r\n  restriction: \"制約\",\r\n  rotation: \"回転\",\r\n  scale: \"スケール\",\r\n  soundTimings: \"サウンドタイミング\",\r\n  stepsToRemove: \"解除までの歩数\",\r\n  type: \"タイプ\",\r\n  variance: \"分散度\",\r\n  unknownCode: \"不明なコード\",\r\n  content: \"内容\",\r\n  apply: \"適用\",\r\n  turn: \"ターン\",\r\n  commonEvent: \"コモンイベント\",\r\n  normal: \"通常\",\r\n  dualWield: \"二刀流\",\r\n  bossCollaps: \"ボス崩壊\",\r\n  instantCollaps: \"即時崩壊\",\r\n  noneCollaps: \"崩壊なし\",\r\n  escape: \"逃走\",\r\n} as const satisfies GlobalLabel;\r\n","import type { LabelRegistry } from \"./labelRegistry\";\r\nimport { DEFAULT_GLOBAL_LABELS } from \"./labelUtils\";\r\nimport {\r\n  DEFAULT_DAMAGE_LABELS,\r\n  LABEL_SET_ITEM_EFFECT,\r\n  LABEL_SET_DATA,\r\n  LABEL_SET_TRAIT,\r\n} from \"./data\";\r\n\r\nexport const LABEL_REGISTRY_JP = {\r\n  rpg: {\r\n    damage: DEFAULT_DAMAGE_LABELS,\r\n    data: LABEL_SET_DATA,\r\n    traits: LABEL_SET_TRAIT,\r\n    itemEffect: LABEL_SET_ITEM_EFFECT,\r\n  },\r\n  global: DEFAULT_GLOBAL_LABELS,\r\n} as const satisfies LabelRegistry;\r\n","import type { AudioFileParams } from \"./audioFileParams\";\r\n\r\nexport const makeAudioFileParams = (\r\n  audioFileParams: Partial<AudioFileParams>\r\n): AudioFileParams => {\r\n  return {\r\n    name: audioFileParams.name ?? \"\",\r\n    volume: audioFileParams.volume ?? 100,\r\n    pitch: audioFileParams.pitch ?? 100,\r\n    pan: audioFileParams.pan ?? 0,\r\n  };\r\n};\r\n"],"names":["FOLDER_AUDIO_BGM","FOLDER_AUDIO_SE","FOLDER_AUDIO_ME","FOLDER_AUDIO_BGS","FOLDER_IMG_BATTLEBACK1","FOLDER_IMG_BATTLEBACK2","FOLDER_IMG_CHACTERS","FOLDER_IMG_ENEMIES","FOLDER_IMG_FACES","FOLDER_IMG_PARALLACES","FOLDER_IMG_PICTURES","FOLDER_IMG_SV_ACTORS","FOLDER_IMG_SV_ENEMIES","FOLDER_IMG_SYSTEM","FOLDER_IMG_TILESETS","FOLDER_IMG_TITLES1","FOLDER_IMG_TITLES2","FILENAME_SYSTEM","FILENAME_ACTORS","FILANAME_CLASSES","FILENAME_SKILLS","FILENAME_ITEMS","FILENAME_WEAPONS","FILENAME_ARMORS","FILENAME_ENEMIES","FILENAME_TROOPS","FILENAME_STATES","FILENAME_ANIMATIONS","FILENAME_TILESET","FILENAME_COMMON_EVENTS","FILENAME_MAP_INFOS","FOLDER_DATA","FOLDER_IMG","FOLDER_AUDIO","FOLDER_JS","mergeWithDefaults","defaultLabels","labels","reulst","key","value","mergeDomainLabel","base","override","mergeNestedPrimitiveRecords","result","domain","domainBase","domainOverride","makeNamedItem","name","index","getVariableNames","system","getElementTypes","getEquipTypes","getSkillTypes","getWeaponTypes","getArmorTypes","getParamNames","AUTHOR_RMMZ","MODULE_TRAIT","MODULE_DATA","MODULE_SYSTEM","TRAIT_ELEMENT_RATE","TRAIT_DEBUFF_RATE","TRAIT_STATE_RATE","TRAIT_STATE_RESIST","TRAIT_PARAM","TRAIT_XPARAM","TRAIT_SPARAM","TRAIT_ATTACK_ELEMENT","TRAIT_ATTACK_STATE","TRAIT_ATTACK_SPEED","TRAIT_ATTACK_TIMES","TRAIT_ATTACK_SKILL","TRAIT_SKILL_TYPE_ADD","TRAIT_SKILL_TYPE_SEAL","TRAIT_SKILL_ADD","TRAIT_SKILL_SEAL","TRAIT_EQUIP_WEAPON_TYPE","TRAIT_EQUIP_ARMOR_TYPE","TRAIT_EQUIP_LOCK","TRAIT_EQUIP_SEAL","TRAIT_SLOT_TYPE","TRAIT_ACTION_PLUS","TRAIT_SPECIAL_FLAG","TRAIT_COLLAPSE_TYPE","TRAIT_PARTY_ABILITY","COLLAPS_NORMAL","COLLAPS_BOSS","COLLAPS_INSTANT","COLLAPS_NONE","PARTY_ABILITY_ENCOUNTER_HALF","PARTY_ABILITY_ENCOUNTER_NONE","PARTY_ABILITY_CANCEL_SURPRISE","PARTY_ABILITY_RAISE_PREEMPTIVE","PARTY_ABILITY_GOLD_DOUBLE","PARTY_ABILITY_DROP_ITEM_DOUBLE","FLAG_ID_AUTO_BATTLE","FLAG_ID_GUARD","FLAG_ID_SUBSTITUTE","FLAG_ID_PRESERVE_TP","EXTRA_PARAM_HIT","EXTRA_PARAM_EVA","EXTRA_PARAM_CRI","EXTRA_PARAM_CEV","EXTRA_PARAM_MEV","EXTRA_PARAM_MRF","EXTRA_PARAM_CNT","EXTRA_PARAM_HRG","EXTRA_PARAM_MRG","EXTRA_PARAM_TRG","REGULAR_PARAM_MAX_HP","REGULAR_PARAM_MAX_MP","REGULAR_PARAM_ATK","REGULAR_PARAM_DEF","REGULAR_PARAM_MATK","REGULAR_PARAM_MDEF","REGULAR_PARAM_AGI","REGULAR_PARAM_LUK","SPECIAL_PARAM_TGR","SPECIAL_PARAM_GRD","SPECIAL_PARAM_REC","SPECIAL_PARAM_PHA","SPECIAL_PARAM_MCR","SPECIAL_PARAM_TCR","SPECIAL_PARAM_PDR","SPECIAL_PARAM_MDR","SPECIAL_PARAM_FDR","SPECIAL_PARAM_EXR","regularParamName","paramIndex","extraParamName","specialParamName","foldCollapsOptions","options","global","foldPartyAbilityOptions","foldRegularParam","param","foldExtraParam","xparam","foldSpecialParams","specialParams","foldSpecialFlag","label","traitDomain","sourceKey","fn","buildCollapsSource","SRC_TRAIT_COLLAPS","col","buildPartyAbilitySource","SRC_TRAIT_PARTY_ABILITY","buildRegularParamSource","SRC_PARAMS_REGULAR","buildExtraParamSource","SRC_PARAMS_EXTRA","buildSpecialParamSource","SRC_PARAMS_SPECIAL","buildSpecialFlagSource","SRC_TRAIT_SPECIAL_FLAG","FORMAT_NAME","FORMAT_PARAM_RATE_MUL","FORMAT_PARAM_RATE_PLUS","FORMAT_PARAM_VALUE","LABEL_SET_TRAIT","PLACEHOLDER_VALUE","PLACEHOLDER_NAME","TraitDescriptor","code","format","dataSource","trait","resolveName","text","allowed","m","soruceError","nameError","invalidPlaceHolder","resolveTraitLabels","defineTraitElementRate","defineTraitDebuffRate","defineTraitStateRate","defineTraitStateResist","defineTraitRegularParam","defineTraitExtraParam","defineTraitSpecialParam","defineTraitAttackElement","defineTraitAttackState","defineTraitAttackSpeed","defineTraitAttackTimes","defineTraitAttackSkill","defineTraitSkillTypeAdd","defineTraitSkillTypeSeal","defineTraitSkillAdd","defineTraitSkillSeal","defineTraitEquipWeaponType","defineTraitEquipArmorType","defineTraitEquipLock","defineTraitEquipSeal","defineTraitSlotType","defineTraitActionPlus","defineTraitSpecialFlag","defineTraitCollapseType","defineTraitPartyAbility","validate","defineTrait","srcElement","SRC_ELEMENTS","srcData","srcTrait","src","srcSystem","SRC_DATA_STATE","SRC_DATA_SKILL","SRC_WEAPON_TYPES","SRC_ARMOR_TYPES","TYPENAME_TRAIT","SCHEMA_TRAIT","makeActor","actor","SCHEMA_DATA_ACTOR","normalizeDataActor","data","makeArmor","armor","SCHEMA_DATA_ARMMOR","makeClass","SCHEMA_DATA_CLASS","makeState","SCHEMA_DATA_STATE","LABELS_DATA_WEAPON","makeWeapon","weapon","makeDamage","SCHEMA_DATA_WEAPON","makeDropItem","dropItem","makeEnemyAction","action","makeEnemy","_a","SCHEMA_DATA_ENEMY","makeItem","item","makeSkill","skill","SCHEMA_DATA_SKILL","SCHEMA_DATA_ITEM","HITTYPE_CERTAIN","HITTYPE_PHYSICAL","HITTYPE_MAGICAL","FORMAT_GROW","FORMAT_STATE","FORMAT_RECOVER","FORMAT_ADD_BUFF","LABEL_SET_ITEM_EFFECT","EFFECT_RECOVER_HP","EFFECT_RECOVER_MP","EFFECT_GAIN_TP","EFFECT_ADD_STATE","EFFECT_REMOVE_STATE","EFFECT_ADD_BUFF","EFFECT_ADD_DEBUFF","EFFECT_REMOVE_BUFF","EFFECT_REMOVE_DEBUFF","EFFECT_SPECIAL","EFFECT_GROW","EFFECT_LEARN_SKILL","EFFECT_COMMON_EVENT","SPECIAL_EFFECT_ESCAPE","validAsciiKey","sanitizeKey","testUnknonwKey","joinSourceKey","isValid","source","SRC_DATA_ACTOR","SRC_DATA_VARIABLE","SRC_DATA_MAP","SRC_DATA_ENEMY","SRC_DATA_ITEMS","SRC_DATA_WEAPON","SRC_DATA_ARMOR","SRC_DATA_CLASS","SRC_COMMON_EVNET","SRC_TROOP","SRC_COLOR","SRC_EQUIP_TYPES","SRC_SWITCHES","SRC_SKILL_TYPES","PLACEHOLDER_VALUE1","PLACEHOLDER_VALUE2","ItemEffectDescriptor","codeId","description","effect","formatItemEffectText","effectDefine","resolveItemEffectLabels","defineEffectRecoverHp","defineEffectRecoverMp","defineEffectGainTp","defineEffectAddState","defineEffectRemoveState","defineEffectAddBuff","defineEffectAddDebuff","defineEffectRemoveBuff","defineEffectRemoveDebuff","defineEffectLearnSkill","defineEffectCommonEvent","regularParam","defineEffect","baseLabel","defineEffectGrow","DEFAULT_ITEM_LABELS","DEFAULT_SKILL_LABELS","DEFAULT_USABLE_ITEM_LABELS","LABEL_SET_DATA","DEFAULT_DAMAGE_LABELS","damage","SCHEMA_DAMAGE","exports","_CodeOrName","Name","s","_Code","c","names","_","strs","args","i","addCodeArg","plus","str","expr","safeStringify","optimize","arg","interpolate","res","mergeExprItems","a","b","strConcat","c1","c2","x","stringify","getProperty","getEsmExportName","regexpCode","rx","code_1","require$$0","ValueError","UsedValueState","Scope","prefixes","parent","nameOrPrefix","prefix","ng","_b","ValueScopeName","nameStr","property","itemIndex","line","ValueScope","opts","valueKey","vs","_name","keyOrRef","scopeName","values","usedValues","getCode","valueCode","nameSet","def","scope_1","require$$1","code_2","scope_2","Node","_names","_constants","Def","varKind","rhs","es5","_n","constants","optimizeExpr","Assign","lhs","sideEffects","addExprNames","AssignOp","op","Label","Break","Throw","error","AnyCode","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","If","condition","cond","e","ns","not","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","Return","Try","Catch","Finally","CodeGen","extScope","prefixOrName","constant","_constant","keyValues","thenBody","elseBody","node","forBody","arr","obj","tryBody","catchCode","finallyCode","body","nodeCount","len","toClose","funcBody","N1","N2","replaceName","canOptimize","items","par","andCode","mappend","and","orCode","or","y","util","codegen_1","toHash","hash","alwaysValidSchema","it","schema","checkUnknownRules","schemaHasRules","self","rules","checkStrictMode","schemaHasRulesButRef","RULES","schemaRefOrVal","topSchemaRef","schemaPath","keyword","$data","unescapeFragment","unescapeJsonPointer","escapeFragment","escapeJsonPointer","eachItem","xs","f","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","gen","toName","setEvaluated","evaluatedPropsToName","ps","props","p","snippets","useFunc","Type","getErrorPath","dataProp","dataPropType","jsPropertySyntax","isNumber","msg","mode","names_1","util_1","require$$2","schemaType","reportError","cxt","errorPaths","overrideAllErrors","compositeRule","allErrors","errObj","errorObjectCode","addError","returnErrors","reportExtraError","resetErrorsCount","errsCount","extendErrors","schemaValue","err","errs","validateName","schemaEnv","E","createErrors","errorObject","errorInstancePath","errorSchemaPath","extraErrorProps","errorPath","instancePath","instPath","errSchemaPath","parentSchema","schPath","params","message","propertyName","boolSchema","errors_1","boolError","topBoolOrEmptySchema","falseSchemaError","boolOrEmptySchema","valid","_jsonTypes","jsonTypes","isJSONType","getRules","groups","applicability","schemaHasRulesForType","type","group","shouldUseGroup","rule","shouldUseRule","kwd","dataType","rules_1","applicability_1","require$$3","require$$4","DataType","getSchemaTypes","types","getJSONTypes","ts","coerceAndCheckDataType","coerceTo","coerceToTypes","checkTypes","wrongType","checkDataTypes","coerceData","reportTypeError","COERCIBLE","coerceTypes","t","coerced","coerceSpecificType","assignParentData","parentData","parentDataProperty","checkDataType","strictNums","correct","EQ","numCond","_cond","dataTypes","notObj","typeError","getTypeErrorContext","schemaCode","defaults","assignDefaults","ty","properties","assignDefault","sch","prop","defaultValue","childData","util_2","checkReportMissingProp","noPropertyInData","checkMissingProp","missing","reportMissingProp","hasPropFunc","isOwnProperty","propertyInData","ownProperties","allSchemaProperties","schemaMap","schemaProperties","callValidateCode","func","context","passSchema","dataAndSchema","valCxt","newRegExp","usePattern","pattern","u","regExp","validateArray","validArr","validateItems","notValid","validateUnion","schValid","_sch","schCxt","macroKeywordCode","macroSchema","schemaRef","useKeyword","funcKeywordCode","checkAsyncKeyword","validateRef","validateKeyword","assignValid","modifyData","reportErrs","ruleErrs","validateAsync","validateSync","addErrs","validateErrs","_await","passCxt","errors","validSchemaType","allowUndefined","st","validateKeywordUsage","deps","subschema","getSubschema","schemaProp","extendSubschemaData","dpType","dataPathArr","nextData","dataContextProps","_nextData","extendSubschemaMode","jtdDiscriminator","jtdMetadata","fastDeepEqual","equal","length","keys","traverse","jsonSchemaTraverseModule","cb","pre","post","_traverse","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","keyIndex","escapeJsonPtr","resolve","SIMPLE_INLINED","inlineRef","limit","hasRef","countKeys","REF_KEYWORDS","count","getFullPath","resolver","id","normalize","normalizeId","_getFullPath","TRAILING_SLASH_HASH","resolveUrl","baseId","ANCHOR","getSchemaRefs","schemaId","uriResolver","schId","baseIds","pathPrefix","localRefs","schemaRefs","fullPath","innerBaseId","addRef","addAnchor","ref","_resolve","ambiguos","schOrRef","checkAmbiguosRef","anchor","sch1","sch2","boolSchema_1","dataType_1","dataType_2","defaults_1","keyword_1","subschema_1","require$$5","require$$6","require$$7","resolve_1","require$$8","require$$9","require$$10","validateFunctionCode","isSchemaObj","checkKeywords","schemaCxtHasRules","topSchemaObjCode","validateFunction","funcSourceUrl","destructureValCxtES5","destructureValCxt","commentKeyword","checkNoDefault","resetEvaluated","typeAndKeywords","returnResults","subschemaCode","subSchemaObjCode","updateContext","checkAsyncSchema","checkRefsAndKeywords","schemaKeywords","checkedTypes","rootName","ValidationError","assignEvaluated","evaluated","typeErrors","keywordCode","checkStrictTypes","groupKeywords","iterateKeywords","useDefaults","checkContextTypes","checkMultipleTypes","checkKeywordTypes","includesType","strictTypesError","narrowSchemaTypes","hasApplicableType","schTs","kwdT","withTypes","KeywordCxt","getData","successAction","failAction","append","errorParams","assign","codeBlock","$dataValid","wrong$DataType","invalid$DataSchema","validateSchemaRef","appl","nextContext","schemaCxt","ruleType","JSON_POINTER","RELATIVE_JSON_POINTER","dataLevel","dataNames","jsonPointer","matches","up","errorMsg","segments","segment","pointerType","validation_error","ref_error","MissingRefError","compile","validation_error_1","validate_1","SchemaEnv","env","compileSchema","getCompilingSchema","rootId","lines","_ValidationError","sourceCode","validateCode","resolveRef","root","schOrFunc","inlineOrCompile","schEnv","sameSchemaEnv","s1","s2","resolveSchema","refPath","getJsonPointer","PREVENT_SCOPE_CHANGE","parsedRef","part","partSchema","$ref","scopedChars","HEX","IPV4_REG","normalizeIPv4","host","findToken","address","stripLeadingZeros","stringArrayToHexStripped","input","keepZero","acc","strip","getIPV6","tokenCount","output","buffer","isZone","endipv6Encountered","endIpv6","consume","hex","cursor","normalizeIPv6","ipv6","newHost","escapedHost","token","out","skip","l","ind","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","normalizeComponentEncoding","components","esc","recomposeAuthority","uriTokens","ipV4res","ipV6res","utils","UUID_REG","URN_REG","isSecure","wsComponents","httpParse","httpSerialize","secure","wsParse","wsSerialize","path","query","urnParse","urnComponents","scheme","urnScheme","schemeHandler","SCHEMES","urnSerialize","nid","uriComponents","nss","urnuuidParse","uuidComponents","urnuuidSerialize","http","https","ws","wss","schemes","uri","serialize","parse","baseURI","relativeURI","schemelessOptions","resolved","resolveComponents","relative","skipNormalization","target","uriA","uriB","cmpts","authority","hexLookUp","_v","k","nonSimpleDomain","URI_PARSE","parsed","gotEncoding","isIP","ipv4result","ipv6result","fastUri","fastUriModule","uri_1","ref_error_1","compile_1","codegen_2","$dataRefSchema","defaultRegExp","flags","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","deprecatedOptions","MAX_EXPRESSION","requiredOptions","o","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_w","_x","_y","_z","_0","_optz","Ajv","getLogger","formatOpt","checkOptions","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","meta","_dataRefSchema","schemaKeyRef","v","_meta","loadSchema","runCompileAsync","_schema","loadMetaSchema","_compileAsync","checkLoaded","loadMissingSchema","missingRef","_loadSchema","_validateSchema","throwOrLogError","$schema","keyRef","getSchEnv","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","definition","separator","dataVar","metaSchema","keywordsJsonPointers","keywords","seg","schemaOrData","schemas","regex","validateSchema","addSchema","currentOpts","checkOpts","log","opt","optsSchemas","defs","metaOpts","noLogs","logger","KEYWORD_NAME","ruleGroup","addBeforeRule","before","_rule","$dataRef","callRootRef","schOrEnv","callValidate","inlineRefSchema","callRef","getValidate","schName","$async","callAsyncRef","callSyncRef","addEvaluatedFrom","addErrorsFrom","schEvaluated","core_1","id_1","ref_1","core","limitNumber","ops","KWDs","multipleOf","prec","invalid","ucs2length_1","ucs2length","pos","limitLength","comp","limitProperties","required","missingProperty","useLoop","allErrorsMode","exitOnErrorMode","definedProperties","requiredKey","loopAllRequired","loopUntilMissing","limitItems","equal_1","uniqueItems","j","itemTypes","validateUniqueItems","loopN","loopN2","indices","eql","outer","_const","_enum","getEql","loopEnum","vSchema","equalCode","validation_1","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","validation","additionalItems","validateAdditionalItems","validateTuple","extraItems","schArr","checkStrictTuple","fullTuple","prefixItems","items_1","items2020","additionalItems_1","contains","min","max","minContains","maxContains","validateItemsWithCount","checkLimits","_valid","block","depsCount","property_ies","propDeps","schDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","propertyDeps","schemaDeps","hasProperty","depProp","propertyNames","additionalProperties","patProps","checkAdditionalProperties","additionalPropertyCode","isAdditional","definedProp","propsSchema","deleteAdditional","applyAdditionalSchema","additionalProperties_1","allProps","hasDefault","applyPropertySchema","patternProperties","patterns","alwaysValidPatterns","checkProperties","validatePatternProperties","pat","checkMatchingProperties","validateProperties","alwaysValid","anyOf","oneOf","passing","validateOneOf","allOf","_if","hasThen","hasSchema","hasElse","validateIf","ifClause","validateClause","thenElse","applicator","prefixItems_1","items2020_1","contains_1","dependencies_1","propertyNames_1","properties_1","patternProperties_1","not_1","anyOf_1","require$$11","oneOf_1","require$$12","allOf_1","require$$13","if_1","require$$14","thenElse_1","require$$15","getApplicator","draft2020","validate$DataFormat","validateFormat","fmts","fDef","fType","unknownFmt","invalidFmt","callFormat","validData","formatDef","unknownFormat","fmtType","fmtRef","getFormat","validCondition","unknownMsg","fmtDef","fmt","format_2","metadata","draft7","applicator_1","format_1","metadata_1","draft7Vocabularies","DiscrError","discriminator","types_1","discrError","tagName","tag","validateMapping","mapping","getMapping","tagValue","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","addMapping","draft7_1","discriminator_1","draft7MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","module","ajv","enemy","state","class_","isDataItem","isDataSkill","isDataActor","isDataArmor","isDataWeapon","isDataEnemy","isDataState","isDataClass","NO_OPERATION","SHOW_MESSAGE","SHOW_MESSAGE_BODY","SHOW_CHOICES","SHOW_CHOICES_ITEM","INPUT_NUMBER","SELECT_ITEM","SHOW_SCROLLING_TEXT","SHOW_SCROLLING_TEXT_BODY","COMMENT","COMMENT_BODY","SKIP","CONDITIONAL_BRANCH","CONDITIONAL_BRANCH_ELSE","LOOP","LOOP_BREAK","EXIT_EVENT_PROCESSING","COMMON_EVENT","LABEL","LABEL_JUMP","CONTROL_SWITCHES","CONTROL_VARIABLES","CONTROL_SELF_SWITCH","CONTROL_TIMER","CHANGE_GOLD","CHANGE_ITEMS","CHANGE_WEAPONS","CHANGE_ARMORS","CHANGE_PARTY_MEMBER","CHANGE_BATTLE_BGM","CHANGE_VICTORY_ME","CHANGE_SAVE_ACCESS","CHANGE_MENU_ACCESS","CHANGE_ENCOUNTER","CHANGE_FORMATION_ACCESS","CHANGE_WINDOW_COLOR","CHANGE_DEFEAT_ME","CHANGE_VEHICLE_BGM","TRANSFER_PLAYER","SET_VEHICLE_LOCATION","SET_EVENT_LOCATION","SCROLL_MAP","SET_MOVEMENT_ROUTE","GET_ONOFF_VEHICLE","CHANGE_TRANSPARENCY","SHOW_ANIMATION","SHOW_BALLOON_ICON","ERASE_EVENT","CHANGE_PLAYER_FOLLOWERS","GATHER_FOLLOWERS","FADEOUT_SCREEN","FADEIN_SCREEN","TINT_SCREEN","FLASH_SCREEN","SHAKE_SCREEN","WAIT","SHOW_PICTURE","MOVE_PICTURE","ROTATE_PICTURE","TINT_PICTURE","ERASE_PICTURE","SET_WEATHER_EFFECT","PLAY_BGM","FADEOUT_BGM","SAVE_BGM","RESUME_BGM","PLAY_BGS","FADEOUT_BGS","PLAY_ME","PLAY_SE","STOP_SE","PLAY_MOVIE","CHANGE_TILESET","CHANGE_BATTLE_BACKGROUND","CHANGE_PARALLAX","GET_LOCATION_INFO","BATTLE_PROCESSING","SHOP_PROCESSING","SHOP_PROCESSING_BODY","NAME_INPUT_PROCESSING","CHANGE_HP","CHANGE_MP","CHANGE_TP","RECOVER_ALL","CHANGE_EXP","CHANGE_NAME","CHANGE_CLASS","CHANGE_ACTOR_IMAGES","CHANGE_VEHICLE_IMAGE","CHANGE_NICKNAME","CHANGE_PROFILE","CHANGE_ENEMY_HP","CHANGE_ENEMY_MP","CHANGE_ENEMY_STATE","ENEMY_RECOVER_ALL","ENEMY_APPEAR","ENEMY_TRANSFORM","SHOW_BATTLE_ANIMATION","FORCE_ACTION","ABORT_BATTLE","OPEN_MENU_SCREEN","CHANGE_ENEMY_TP","OPEN_SAVE_SCREEN","GAME_OVER","RETURN_TO_TITLE_SCREEN","SCRIPT_EVAL","SCRIPT_EVAL_BODY","PLUGIN_COMMAND_MV","PLUGIN_COMMAND_MZ","ROUTE_END","ROUTE_MOVE_DOWN","ROUTE_MOVE_LEFT","ROUTE_MOVE_RIGHT","ROUTE_MOVE_UP","ROUTE_MOVE_LOWER_L","ROUTE_MOVE_LOWER_R","ROUTE_MOVE_UPPER_L","ROUTE_MOVE_UPPER_R","ROUTE_MOVE_RANDOM","ROUTE_MOVE_TOWARD","ROUTE_MOVE_AWAY","ROUTE_MOVE_FORWARD","ROUTE_MOVE_BACKWARD","ROUTE_JUMP","ROUTE_WAIT","ROUTE_TURN_DOWN","ROUTE_TURN_LEFT","ROUTE_TURN_RIGHT","ROUTE_TURN_UP","ROUTE_TURN_90D_R","ROUTE_TURN_90D_L","ROUTE_TURN_180D","ROUTE_TURN_90D_R_L","ROUTE_TURN_RANDOM","ROUTE_TURN_TOWARD","ROUTE_TURN_AWAY","ROUTE_SWITCH_ON","ROUTE_SWITCH_OFF","ROUTE_CHANGE_SPEED","ROUTE_CHANGE_FREQ","ROUTE_WALK_ANIME_ON","ROUTE_WALK_ANIME_OFF","ROUTE_STEP_ANIME_ON","ROUTE_STEP_ANIME_OFF","ROUTE_DIR_FIX_ON","ROUTE_DIR_FIX_OFF","ROUTE_THROUGH_ON","ROUTE_THROUGH_OFF","ROUTE_TRANSPARENT_ON","ROUTE_TRANSPARENT_OFF","ROUTE_CHANGE_IMAGE","ROUTE_CHANGE_OPACITY","ROUTE_CHANGE_BLEND_MODE","ROUTE_PLAY_SE","ROUTE_SCRIPT","SCHEMA_DATA_MAP_INFO","makeMapData","map","makeCommonEventData","makeTroopData","makeTroopMember","makeTroopEventConditions","DEFAULT_SYSTEM_LABELS_BOOLEAN","MockSystemLabelDataTypes","DEFAULT_GLOBAL_LABELS","LABEL_REGISTRY_JP","makeAudioFileParams","audioFileParams"],"mappings":"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","x_google_ignoreList":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117]}