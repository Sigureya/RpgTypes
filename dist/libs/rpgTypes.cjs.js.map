{"version":3,"file":"rpgTypes.cjs.js","sources":["../../src/libs/folderNames/asset/audio.ts","../../src/libs/folderNames/asset/images.ts","../../src/libs/folderNames/data/fileNames.ts","../../src/libs/folderNames/folderName.ts","../../src/libs/namedItemSource/labels/mergeLabel.ts","../../src/libs/namedItemSource/transformers/data/system/getSystemTypeNames.ts","../../src/libs/namedItemSource/transformers/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/constants/traitCode.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/collaps/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/partyAbility/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/specialFlags/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramExtra/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramRegular/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/types/paramSpecial/constants.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/battlerParam.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/makeOptions.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/buildSource.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/options/default.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/traitLabelDescriptor.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/labelDefine.ts","../../src/libs/schema/data/rpg/main/traitContainers/trait/types/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/actor/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/actor/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/armor/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/armor/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/class/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/class/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/state/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/state/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/weaponDefault.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/weapon/schema.ts","../../src/libs/schema/data/rpg/main/traitContainers/enemy/make.ts","../../src/libs/schema/data/rpg/main/traitContainers/enemy/schema.ts","../../src/libs/schema/data/rpg/main/usableItems/make.ts","../../src/libs/schema/data/rpg/main/usableItems/schema.ts","../../src/libs/schema/data/rpg/main/usableItems/types/hitType/constants.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/labels/defaultLabelSet.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/constants/effectCode.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/constants/specialEffect.ts","../../src/libs/schema/namedItemSource/sourceIdentifier/make.ts","../../src/libs/schema/namedItemSource/lisrSrc/constants.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/itemEffectDescriptor.ts","../../src/libs/schema/data/rpg/main/usableItems/types/itemEffect/define.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/item/itemDefault.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/skill/skillDefault.ts","../../src/libs/schema/data/rpg/main/usableItems/types/labels/usableItemDefault.ts","../../src/libs/schema/data/rpg/main/defaultDataLabels.ts","../../src/libs/schema/data/rpg/main/members/damage/damageDefault.ts","../../src/libs/schema/data/rpg/main/members/damage/make.ts","../../src/libs/schema/data/rpg/main/members/damage/schema.ts","../../src/libs/schema/data/rpg/main/validate.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/eventCommandCodes.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/types/domains/moveRoute/constants.ts","../../src/libs/schema/data/rpg/event/map/event/eventCommand/make.ts","../../src/libs/schema/data/rpg/event/map/event/make.ts","../../src/libs/schema/data/rpg/event/map/mapInfo/schema.ts","../../src/libs/schema/data/rpg/event/map/mapInfo/make.ts","../../src/libs/schema/data/rpg/event/map/make.ts","../../src/libs/schema/data/rpg/event/makeEvent.ts","../../src/libs/schema/data/rpg/event/validate.ts","../../src/libs/schema/data/rpg/system/members/advanced/advanced.ts","../../src/libs/schema/data/rpg/system/members/advanced/schema.ts","../../src/libs/utils/types/audioFileParams/make.ts","../../src/libs/schema/data/rpg/system/members/soundArray/make.ts","../../src/libs/schema/data/rpg/system/systemLabels.ts","../../src/libs/schema/data/rpg/note/note.ts","../../src/libs/schema/data/rpg/controlChars/controlChars.ts","../../src/libs/schema/data/rpg/controlChars/getContolChars.ts","../../src/libs/schema/data/rpg/controlChars/constants.ts","../../src/libs/schema/data/rpg/dataToCtrlChar.ts","../../src/libs/schema/labelUtils/default.ts","../../src/libs/schema/labelRegistryDefault.ts","../../src/libs/eventCommand/commands/callCommonEvent/make.ts","../../src/libs/eventCommand/commands/callCommonEvent/schema.ts","../../src/libs/eventCommand/commands/message/inputNumber/make.ts","../../src/libs/eventCommand/commands/message/inputNumber/schema.ts","../../src/libs/eventCommand/commands/message/scrollText/schema.ts","../../src/libs/eventCommand/commands/message/setupChoice/make.ts","../../src/libs/eventCommand/commands/message/setupChoice/schema.ts","../../src/libs/eventCommand/commands/message/showMessage/convert.ts","../../src/libs/eventCommand/commands/message/showMessage/schema.ts","../../src/libs/eventCommand/commands/audio/schema.ts","../../src/libs/eventCommand/commands/audio/make.ts","../../src/libs/eventCommand/commands/variable/constants.ts","../../src/libs/eventCommand/commands/variable/getValue.ts","../../src/libs/eventCommand/commands/variable/types/enemy/dataSource.ts","../../src/libs/eventCommand/commands/variable/convert.ts","../../src/libs/eventCommand/validate.ts"],"sourcesContent":["export const FOLDER_AUDIO_BGM = \"bgm\" as const;\r\nexport const FOLDER_AUDIO_SE = \"se\" as const;\r\nexport const FOLDER_AUDIO_ME = \"me\" as const;\r\nexport const FOLDER_AUDIO_BGS = \"bgs\" as const;\r\n","export const FOLDER_IMG_BATTLEBACK1 = \"battlebacks1\" as const;\r\nexport const FOLDER_IMG_BATTLEBACK2 = \"battlebacks2\" as const;\r\nexport const FOLDER_IMG_CHACTERS = \"characters\" as const;\r\nexport const FOLDER_IMG_ENEMIES = \"enemies\" as const;\r\nexport const FOLDER_IMG_FACES = \"faces\" as const;\r\nexport const FOLDER_IMG_PARALLACES = \"parallaxes\" as const;\r\nexport const FOLDER_IMG_PICTURES = \"pictures\" as const;\r\nexport const FOLDER_IMG_SV_ACTORS = \"sv_actors\" as const;\r\nexport const FOLDER_IMG_SV_ENEMIES = \"sv_enemies\" as const;\r\nexport const FOLDER_IMG_SYSTEM = \"system\" as const;\r\nexport const FOLDER_IMG_TILESETS = \"tilesets\" as const;\r\nexport const FOLDER_IMG_TITLES1 = \"titles1\" as const;\r\nexport const FOLDER_IMG_TITLES2 = \"titles2\" as const;\r\n","export const FILENAME_SYSTEM = \"System.json\";\r\nexport const FILENAME_ACTORS = \"Actors.json\";\r\nexport const FILENAME_CLASSES = \"Classes.json\";\r\nexport const FILENAME_SKILLS = \"Skills.json\";\r\nexport const FILENAME_ITEMS = \"Items.json\";\r\nexport const FILENAME_WEAPONS = \"Weapons.json\";\r\nexport const FILENAME_ARMORS = \"Armors.json\";\r\nexport const FILENAME_ENEMIES = \"Enemies.json\";\r\nexport const FILENAME_TROOPS = \"Troops.json\";\r\nexport const FILENAME_STATES = \"States.json\";\r\nexport const FILENAME_ANIMATIONS = \"Animations.json\";\r\nexport const FILENAME_TILESET = \"Tilesets.json\";\r\nexport const FILENAME_COMMON_EVENTS = \"CommonEvents.json\";\r\nexport const FILENAME_MAP_INFOS = \"MapInfos.json\";\r\n","export const FOLDER_DATA = \"data\" as const;\r\nexport const FOLDER_IMG = \"img\" as const;\r\nexport const FOLDER_AUDIO = \"audio\" as const;\r\nexport const FOLDER_JS = \"js\" as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\n\r\nexport type PrimitiveRecord<T> = Record<keyof T, string>;\r\n\r\nexport const mergeWithDefaults = <T>(\r\n  defaultLabels: Record<keyof T, string>,\r\n  labels: Partial<T>\r\n): {\r\n  [K in keyof T]: string;\r\n} => {\r\n  const reulst = { ...defaultLabels };\r\n  for (const key in defaultLabels) {\r\n    const value = labels[key];\r\n    if (typeof value === \"string\") {\r\n      reulst[key] = value;\r\n    }\r\n  }\r\n  return reulst;\r\n};\r\n\r\nexport const mergeDomainLabel = <T>(\r\n  base: DomainLabel<PrimitiveRecord<T>>,\r\n  override: Partial<DomainLabel<Partial<T>>>\r\n): DomainLabel<{ [K in keyof T]: string }> => {\r\n  return {\r\n    domainName: override.domainName ?? base.domainName,\r\n    options: mergeWithDefaults(base.options, override.options ?? {}),\r\n  };\r\n};\r\n\r\nexport const mergeNestedPrimitiveRecords = <T>(\r\n  base: T,\r\n  override: Partial<{ [K in keyof T]: Partial<PrimitiveRecord<T[K]>> }>\r\n): T => {\r\n  const result: Partial<T> = {};\r\n  for (const domain in base) {\r\n    const domainBase = base[domain];\r\n    const domainOverride = override[domain] ?? {};\r\n    result[domain] = mergeWithDefaults(\r\n      domainBase as Required<typeof domainOverride>,\r\n      domainOverride\r\n    ) as T[typeof domain];\r\n  }\r\n  return result as T;\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  Data_System,\r\n  System_ParamNames,\r\n} from \"@RpgTypes/schema\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<Data_System, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<Data_System, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<Data_System, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<Data_System, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<Data_System, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<Data_System, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getParamNames = (system: System_ParamNames): Data_NamedItem[] => {\r\n  return system.terms.params.map(makeNamedItem);\r\n};\r\n","export const AUTHOR_RMMZ = \"rmmz\" as const;\r\nexport const MODULE_TRAIT = \"trait\" as const;\r\nexport const MODULE_DATA = \"data\" as const;\r\nexport const MODULE_SYSTEM = \"system\" as const;\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type {\r\n  RegularParamLabels,\r\n  ExtraParamLabels,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_LUK,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_MDEF,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n} from \"./types\";\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guradEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","import type { Data_NamedItem, GlobalLabel } from \"@RpgTypes/schema/\";\r\nimport {\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./types/specialFlags\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./types/collaps\";\r\n\r\nimport {\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n} from \"./types/partyAbility\";\r\n\r\nimport {\r\n  EXTRA_PARAM_TRG,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n} from \"./types/paramExtra\";\r\nimport {\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_TGR,\r\n} from \"./types/paramSpecial\";\r\nimport {\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./types/paramRegular\";\r\n\r\nexport const foldCollapsOptions = (\r\n  options: CollapsOptionLabels,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldPartyAbilityOptions = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldRegularParam = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const foldExtraParam = (xparam: ExtraParamLabels): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialParams = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guradEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialFlag = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","import type { GlobalLabel, NamedItemSource } from \"@RpgTypes/schema\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n} from \"./types\";\r\nimport {\r\n  SRC_TRAIT_COLLAPS,\r\n  SRC_PARAMS_EXTRA,\r\n  SRC_PARAMS_REGULAR,\r\n  SRC_PARAMS_SPECIAL,\r\n  SRC_TRAIT_PARTY_ABILITY,\r\n  SRC_TRAIT_SPECIAL_FLAG,\r\n} from \"@RpgTypes/schema\";\r\n\r\nimport {\r\n  foldCollapsOptions,\r\n  foldExtraParam,\r\n  foldPartyAbilityOptions,\r\n  foldRegularParam,\r\n  foldSpecialFlag,\r\n  foldSpecialParams,\r\n} from \"./makeOptions\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport { AUTHOR_RMMZ, MODULE_TRAIT } from \"@RpgTypes/namedItemSource\";\r\n\r\nexport const traitDomain = <T>(\r\n  sourceKey: string,\r\n  labels: DomainLabel<T>,\r\n  fn: (options: T) => { name: string; id: number }[]\r\n): NamedItemSource => {\r\n  return {\r\n    items: fn(labels.options),\r\n    label: labels.domainName,\r\n    source: {\r\n      author: AUTHOR_RMMZ,\r\n      module: MODULE_TRAIT,\r\n      kind: sourceKey,\r\n    },\r\n  };\r\n};\r\n\r\nexport const buildCollapsSource = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_COLLAPS, labels, (col) =>\r\n    foldCollapsOptions(col, global)\r\n  );\r\n};\r\n\r\nexport const buildPartyAbilitySource = (\r\n  labels: DomainLabel<PartyAbilityOptionLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_PARTY_ABILITY, labels, foldPartyAbilityOptions);\r\n};\r\n\r\nexport const buildRegularParamSource = (\r\n  label: DomainLabel<RegularParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_REGULAR, label, foldRegularParam);\r\n};\r\n\r\nexport const buildExtraParamSource = (\r\n  label: DomainLabel<ExtraParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_EXTRA, label, foldExtraParam);\r\n};\r\n\r\nexport const buildSpecialParamSource = (\r\n  label: DomainLabel<SpecialParamLabels>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_PARAMS_SPECIAL, label, foldSpecialParams);\r\n};\r\n\r\nexport const buildSpecialFlagSource = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => {\r\n  return traitDomain(SRC_TRAIT_SPECIAL_FLAG, label, foldSpecialFlag);\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { TraitLabelSet } from \"./labelSet\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  RawTraitLabel,\r\n  TraitLabelWithOption,\r\n} from \"./types/\";\r\n\r\nconst FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_PARAM_RATE_MUL = \"{name} * {value}%\" as const;\r\nconst FORMAT_PARAM_RATE_PLUS = \"{name} + {value}%\" as const;\r\nconst FORMAT_PARAM_VALUE = \"{value}\" as const;\r\n\r\nexport const LABEL_SET_TRAIT = {\r\n  domainName: \"特徴\",\r\n  options: {\r\n    regularParam: {\r\n      domainName: \"基本能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        maxHp: \"最大HP\",\r\n        maxMp: \"最大MP\",\r\n        atk: \"攻撃力\",\r\n        def: \"防御力\",\r\n        matk: \"魔法攻撃力\",\r\n        mdef: \"魔法防御力\",\r\n        agi: \"敏捷性\",\r\n        luk: \"運\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<RegularParamLabels>,\r\n    extraParam: {\r\n      domainName: \"追加能力値\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n      options: {\r\n        hitRate: \"命中率\",\r\n        evasionRate: \"回避率\",\r\n        criticalRate: \"クリティカル率\",\r\n        criticalEvasionRate: \"クリティカル回避率\",\r\n        magicEvasionRate: \"魔法回避率\",\r\n        magicReflectionRate: \"魔法反射率\",\r\n        counterAttackRate: \"反撃率\",\r\n        hpRegenerationRate: \"HP再生率\",\r\n        mpRegenerationRate: \"MP再生率\",\r\n        tpRegenerationRate: \"TP再生率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<ExtraParamLabels>,\r\n    specialParam: {\r\n      domainName: \"特殊能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        targetRate: \"狙われ率\",\r\n        guradEffectRate: \"防御効果率\",\r\n        recoveryEffectRate: \"回復効果率\",\r\n        pharmacology: \"薬の知識\",\r\n        mpCostRate: \"MP消費率\",\r\n        tpChargeRate: \"TPチャージ率\",\r\n        physicalDamageRate: \"物理ダメージ率\",\r\n        magicDamageRate: \"魔法ダメージ率\",\r\n        floorDamageRate: \"床ダメージ率\",\r\n        experienceRate: \"経験値率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialParamLabels>,\r\n    specialFlag: {\r\n      domainName: \"特殊フラグ\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        autoBattle: \"自動戦闘\",\r\n        guard: \"防御\",\r\n        substitute: \"身代わり\",\r\n        preventEscape: \"逃走防止\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialFlagOptions>,\r\n    collaps: {\r\n      domainName: \"消滅エフェクト\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        bossCollaps: \"ボス崩壊\",\r\n        instantCollaps: \"即時崩壊\",\r\n        noneCollaps: \"崩壊なし\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<CollapsOptionLabels>,\r\n    partyAbility: {\r\n      domainName: \"パーティ能力\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        cancelSurprise: \"不意打ち無効\",\r\n        dropItemDouble: \"アイテムドロップ2倍\",\r\n        encounterHalf: \"エンカウント半減\",\r\n        encounterNone: \"エンカウントなし\",\r\n        goldDouble: \"ゴールド2倍\",\r\n        raisePreemptive: \"先制攻撃率アップ\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<PartyAbilityOptionLabels>,\r\n    elementRate: {\r\n      domainName: \"属性有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    debuffRate: {\r\n      domainName: \"弱体有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateRate: {\r\n      domainName: \"ステート有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateResist: {\r\n      domainName: \"ステート無効\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackElement: {\r\n      domainName: \"攻撃属性\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackState: {\r\n      domainName: \"攻撃ステート\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSpeed: {\r\n      domainName: \"攻撃速度補正\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    attackTimes: {\r\n      domainName: \"攻撃追加回数\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    actionPlus: {\r\n      domainName: \"行動追加\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSkill: {\r\n      domainName: \"攻撃スキル\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipWeaponType: {\r\n      domainName: \"装備武器タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipArmorType: {\r\n      domainName: \"装備防具タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipLock: {\r\n      domainName: \"装備固定\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipSeal: {\r\n      domainName: \"装備封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    slotType: {\r\n      domainName: \"スロットタイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillAdd: {\r\n      domainName: \"スキル追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeAdd: {\r\n      domainName: \"スキルタイプ追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n  },\r\n} as const satisfies DomainLabel<TraitLabelSet>;\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema\";\r\nimport type { TraitLabelResolved } from \"./options\";\r\nimport type { Trait } from \"./types\";\r\n\r\nconst PLACEHOLDER_VALUE = \"{value}\" as const;\r\nconst PLACEHOLDER_NAME = \"{name}\" as const;\r\n\r\nexport class TraitDescriptor implements TraitLabelResolved {\r\n  constructor(\r\n    public readonly code: number,\r\n    public readonly label: string,\r\n    public readonly format: string,\r\n    public readonly dataSource?: Readonly<SourceIdentifier>\r\n  ) {}\r\n  match(trait: Trait): boolean {\r\n    return this.code === trait.code;\r\n  }\r\n  testTraitCode(trait: Trait) {\r\n    if (this.match(trait)) {\r\n      return;\r\n    }\r\n    // throw new Error(\r\n    //   `${this.label} Trait code mismatch.  this.code:${this.code} trait.code:${trait.code}`\r\n    // );\r\n  }\r\n  formatText(\r\n    trait: Trait,\r\n    resolveName: (\r\n      dataSource: Readonly<SourceIdentifier>,\r\n      dataId: number\r\n    ) => string\r\n  ): string {\r\n    this.testTraitCode(trait);\r\n    const text = this.format.replaceAll(\r\n      PLACEHOLDER_VALUE,\r\n      trait.value.toString()\r\n    );\r\n    if (!this.dataSource) {\r\n      return text;\r\n    }\r\n    return text.replaceAll(\r\n      PLACEHOLDER_NAME,\r\n      resolveName(this.dataSource, trait.dataId)\r\n    );\r\n  }\r\n  requiresValue(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE);\r\n  }\r\n  requiresName(): boolean {\r\n    return this.format.includes(PLACEHOLDER_NAME);\r\n  }\r\n\r\n  invalidPlaceHolder(): string[] {\r\n    const allowed = [\"value\", \"name\"];\r\n    const matches: RegExpExecArray[] = [\r\n      ...this.format.matchAll(/\\{([^}]+)\\}/g),\r\n    ];\r\n    return matches.map((m) => m[1]).filter((key) => !allowed.includes(key));\r\n  }\r\n  isFormatValidForDataSource(): boolean {\r\n    if (this.dataSource && !this.requiresName()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  diagnose(): TraitLabelDiagnostic {\r\n    const soruceError = !this.isFormatValidForDataSource();\r\n    const nameError = this.requiresName() && !this.dataSource;\r\n    const invalidPlaceHolder = this.invalidPlaceHolder();\r\n\r\n    return {\r\n      code: this.code,\r\n      label: this.label,\r\n      format: this.format,\r\n      hasError: soruceError || nameError || invalidPlaceHolder.length > 0,\r\n      missingDataSourceError: soruceError,\r\n      sourceMismatchError: nameError,\r\n      invalidPlaceHolders: invalidPlaceHolder,\r\n    };\r\n  }\r\n}\r\n\r\nexport interface TraitLabelDiagnostic {\r\n  format: string;\r\n  code: number;\r\n  label: string;\r\n  hasError: boolean;\r\n  missingDataSourceError: boolean;\r\n  sourceMismatchError: boolean;\r\n  invalidPlaceHolders: string[];\r\n}\r\n","import type { SourceIdentifier } from \"src/libs\";\r\nimport {\r\n  SRC_ARMOR_TYPES,\r\n  SRC_DATA_SKILL,\r\n  SRC_DATA_STATE,\r\n  SRC_ELEMENTS,\r\n  SRC_PARAMS_EXTRA,\r\n  SRC_PARAMS_REGULAR,\r\n  SRC_PARAMS_SPECIAL,\r\n  SRC_TRAIT_COLLAPS,\r\n  SRC_TRAIT_PARTY_ABILITY,\r\n  SRC_TRAIT_SPECIAL_FLAG,\r\n  SRC_WEAPON_TYPES,\r\n} from \"src/libs\";\r\nimport type { RawTraitLabel, TraitLabelSet } from \"./options\";\r\nimport { LABEL_SET_TRAIT } from \"./options\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./constants\";\r\nimport {\r\n  AUTHOR_RMMZ,\r\n  MODULE_DATA,\r\n  MODULE_SYSTEM,\r\n  MODULE_TRAIT,\r\n} from \"@RpgTypes/namedItemSource\";\r\nimport { TraitDescriptor } from \"./traitLabelDescriptor\";\r\n\r\nexport const resolveTraitLabels = (\r\n  labels: TraitLabelSet\r\n): TraitDescriptor[] => {\r\n  return [\r\n    defineTraitElementRate(labels.elementRate),\r\n    defineTraitDebuffRate(labels.debuffRate),\r\n    defineTraitStateRate(labels.stateRate),\r\n    defineTraitStateResist(labels.stateResist),\r\n    defineTraitRegularParam(labels.regularParam),\r\n    defineTraitExtraParam(labels.extraParam),\r\n    defineTraitSpecialParam(labels.specialParam),\r\n    defineTraitAttackElement(labels.attackElement),\r\n    defineTraitAttackState(labels.attackState),\r\n    defineTraitAttackSpeed(labels.attackSpeed),\r\n    defineTraitAttackTimes(labels.attackTimes),\r\n    defineTraitAttackSkill(labels.attackSkill),\r\n    defineTraitSkillTypeAdd(labels.skillTypeAdd),\r\n    defineTraitSkillTypeSeal(labels.skillTypeSeal),\r\n    defineTraitSkillAdd(labels.skillAdd),\r\n    defineTraitSkillSeal(labels.skillSeal),\r\n    defineTraitEquipWeaponType(labels.equipWeaponType),\r\n    defineTraitEquipArmorType(labels.equipArmorType),\r\n    defineTraitEquipLock(labels.equipLock),\r\n    defineTraitEquipSeal(labels.equipSeal),\r\n    defineTraitSlotType(labels.slotType),\r\n    defineTraitActionPlus(labels.actionPlus),\r\n    defineTraitSpecialFlag(labels.specialFlag),\r\n    defineTraitCollapseType(labels.collaps),\r\n    defineTraitPartyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst validate = (base: string, override: string | undefined) =>\r\n  typeof override === \"string\" ? override : base;\r\n\r\nconst defineTrait = (\r\n  code: number,\r\n  base: RawTraitLabel,\r\n  override: Partial<RawTraitLabel>,\r\n  dataSource?: SourceIdentifier\r\n): TraitDescriptor => {\r\n  const label = validate(base.domainName, override.domainName);\r\n  const format = validate(base.format, override.format);\r\n  return new TraitDescriptor(code, label, format, dataSource);\r\n};\r\n\r\nconst srcElement = (): SourceIdentifier => {\r\n  return {\r\n    module: MODULE_SYSTEM,\r\n    author: AUTHOR_RMMZ,\r\n    kind: SRC_ELEMENTS,\r\n  };\r\n};\r\n\r\nconst srcData = (key: string): SourceIdentifier => {\r\n  return {\r\n    module: MODULE_DATA,\r\n    author: AUTHOR_RMMZ,\r\n    kind: key,\r\n  };\r\n};\r\n\r\nconst srcTrait = (src: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: src,\r\n});\r\n\r\nconst srcSystem = (src: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: src,\r\n});\r\n\r\nexport const defineTraitElementRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ELEMENT_RATE,\r\n    LABEL_SET_TRAIT.options.elementRate,\r\n    label,\r\n    srcElement()\r\n  );\r\n\r\nexport const defineTraitDebuffRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_DEBUFF_RATE,\r\n    LABEL_SET_TRAIT.options.debuffRate,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitStateRate = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_STATE_RATE,\r\n    LABEL_SET_TRAIT.options.stateRate,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitStateResist = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_STATE_RESIST,\r\n    LABEL_SET_TRAIT.options.stateResist,\r\n    label,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineTraitRegularParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_PARAM,\r\n    LABEL_SET_TRAIT.options.regularParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_REGULAR)\r\n  );\r\n\r\nexport const defineTraitExtraParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_XPARAM,\r\n    LABEL_SET_TRAIT.options.extraParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_EXTRA)\r\n  );\r\n\r\nexport const defineTraitSpecialParam = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SPARAM,\r\n    LABEL_SET_TRAIT.options.specialParam,\r\n    label,\r\n    srcTrait(SRC_PARAMS_SPECIAL)\r\n  );\r\n\r\nexport const defineTraitAttackElement = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_ELEMENT,\r\n    LABEL_SET_TRAIT.options.attackElement,\r\n    label,\r\n    srcElement()\r\n  );\r\n\r\nexport const defineTraitAttackState = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_STATE,\r\n    LABEL_SET_TRAIT.options.attackState,\r\n    label,\r\n    srcTrait(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineTraitAttackSpeed = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ATTACK_SPEED, LABEL_SET_TRAIT.options.attackSpeed, label);\r\n\r\nexport const defineTraitAttackTimes = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ATTACK_TIMES, LABEL_SET_TRAIT.options.attackTimes, label);\r\n\r\nexport const defineTraitAttackSkill = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_ATTACK_SKILL,\r\n    LABEL_SET_TRAIT.options.attackSkill,\r\n    label,\r\n    srcData(SRC_DATA_SKILL)\r\n  );\r\n\r\nexport const defineTraitActionPlus = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_ACTION_PLUS, LABEL_SET_TRAIT.options.actionPlus, label);\r\n\r\nexport const defineTraitSpecialFlag = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SPECIAL_FLAG,\r\n    LABEL_SET_TRAIT.options.specialFlag,\r\n    label,\r\n    srcTrait(SRC_TRAIT_SPECIAL_FLAG)\r\n  );\r\n\r\nexport const defineTraitCollapseType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_COLLAPSE_TYPE,\r\n    LABEL_SET_TRAIT.options.collaps,\r\n    label,\r\n    srcTrait(SRC_TRAIT_COLLAPS)\r\n  );\r\n\r\nexport const defineTraitPartyAbility = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_PARTY_ABILITY,\r\n    LABEL_SET_TRAIT.options.partyAbility,\r\n    label,\r\n    srcTrait(SRC_TRAIT_PARTY_ABILITY)\r\n  );\r\n\r\nexport const defineTraitEquipWeaponType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_EQUIP_WEAPON_TYPE,\r\n    LABEL_SET_TRAIT.options.equipWeaponType,\r\n    label,\r\n    srcSystem(SRC_WEAPON_TYPES)\r\n  );\r\n\r\nexport const defineTraitEquipArmorType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_EQUIP_ARMOR_TYPE,\r\n    LABEL_SET_TRAIT.options.equipArmorType,\r\n    label,\r\n    srcSystem(SRC_ARMOR_TYPES)\r\n  );\r\n\r\nexport const defineTraitEquipLock = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_EQUIP_LOCK, LABEL_SET_TRAIT.options.equipLock, label);\r\n\r\nexport const defineTraitEquipSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_EQUIP_SEAL, LABEL_SET_TRAIT.options.equipSeal, label);\r\n\r\nexport const defineTraitSkillAdd = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SKILL_ADD, LABEL_SET_TRAIT.options.skillAdd, label);\r\n\r\nexport const defineTraitSkillSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SKILL_SEAL, LABEL_SET_TRAIT.options.skillSeal, label);\r\n\r\nexport const defineTraitSlotType = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(TRAIT_SLOT_TYPE, LABEL_SET_TRAIT.options.slotType, label);\r\n\r\nexport const defineTraitSkillTypeAdd = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SKILL_TYPE_ADD,\r\n    LABEL_SET_TRAIT.options.skillTypeAdd,\r\n    label\r\n  );\r\n\r\nexport const defineTraitSkillTypeSeal = (label: Partial<RawTraitLabel>) =>\r\n  defineTrait(\r\n    TRAIT_SKILL_TYPE_SEAL,\r\n    LABEL_SET_TRAIT.options.skillTypeSeal,\r\n    label\r\n  );\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Trait } from \"./trait\";\r\n\r\nexport const TYPENAME_TRAIT = \"Trait\" as const;\r\n\r\nexport const SCHEMA_TRAIT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"dataId\", \"value\"],\r\n  properties: {\r\n    code: { type: \"integer\" },\r\n    dataId: { type: \"integer\" },\r\n    value: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Trait>;\r\n","import type { Data_Actor } from \"./actor\";\r\n\r\nexport const makeActorData = (actor: Partial<Data_Actor> = {}): Data_Actor => ({\r\n  name: actor.name ?? \"\",\r\n  id: actor.id ?? 0,\r\n  battlerName: actor.battlerName ?? \"\",\r\n  characterName: actor.characterName ?? \"\",\r\n  characterIndex: actor.characterIndex ?? 0,\r\n  faceName: actor.faceName ?? \"\",\r\n  faceIndex: actor.faceIndex ?? 0,\r\n  traits: [],\r\n  note: actor.note ?? \"\",\r\n  classId: actor.classId ?? 0,\r\n  nickname: actor.nickname ?? \"\",\r\n  profile: actor.profile ?? \"\",\r\n  equips: [],\r\n  initialLevel: actor.initialLevel ?? 0,\r\n  maxLevel: actor.maxLevel ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Actor } from \"./actor\";\r\n\r\nexport const SCHEMA_DATA_ACTOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"nickname\",\r\n    \"battlerName\",\r\n    \"characterName\",\r\n    \"characterIndex\",\r\n    \"faceName\",\r\n    \"faceIndex\",\r\n    \"classId\",\r\n    \"initialLevel\",\r\n    \"maxLevel\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    battlerName: { type: \"string\" },\r\n    characterName: { type: \"string\" },\r\n    characterIndex: { type: \"integer\" },\r\n    faceName: { type: \"string\" },\r\n    faceIndex: { type: \"integer\", minimum: 0, maximum: 7 },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    nickname: { type: \"string\" },\r\n\r\n    profile: { type: \"string\" },\r\n    initialLevel: { type: \"integer\", minimum: 0 },\r\n    maxLevel: { type: \"integer\" },\r\n    classId: { type: \"integer\", minimum: 0 },\r\n    equips: { type: \"array\", items: { type: \"integer\" } },\r\n    note: { type: \"string\" },\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Actor>;\r\n\r\nexport const normalizeDataActor = (data: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    name: data.name ?? \"\",\r\n    id: data.id ?? 0,\r\n    battlerName: data.battlerName ?? \"\",\r\n    characterName: data.characterName ?? \"\",\r\n    characterIndex: data.characterIndex ?? 0,\r\n    faceName: data.faceName ?? \"\",\r\n    faceIndex: data.faceIndex ?? 0,\r\n    traits: [],\r\n    note: data.note ?? \"\",\r\n    classId: data.classId ?? 0,\r\n    nickname: data.nickname ?? \"\",\r\n    profile: data.profile ?? \"\",\r\n    equips: [],\r\n    initialLevel: data.initialLevel ?? 0,\r\n    maxLevel: data.maxLevel ?? 0,\r\n  };\r\n};\r\n","import type { Data_Armor } from \"./armor\";\r\nexport const makeArmorData = (armor: Partial<Data_Armor> = {}): Data_Armor => ({\r\n  id: armor.id ?? 0,\r\n  name: armor.name ?? \"\",\r\n  iconIndex: armor.iconIndex ?? 0,\r\n  description: armor.description ?? \"\",\r\n  traits: armor.traits ?? [],\r\n  note: armor.note ?? \"\",\r\n  params: armor.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: armor.etypeId ?? 0,\r\n  price: armor.price ?? 0,\r\n});\r\n","import type { ParamArray } from \"../members\";\r\nimport type { Trait } from \"../trait\";\r\nimport type { Data_Armor } from \"./armor\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_ARMMOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Armor>;\r\n","import type { Data_Class } from \"./types\";\r\nexport const makeClassData = (data: Partial<Data_Class> = {}): Data_Class => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  learnings: data.learnings ?? [],\r\n  expParams: data.expParams ?? [],\r\n});\r\n","import type { Data_Class } from \"./types\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_CLASS = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"note\",\r\n    \"expParams\",\r\n    \"params\",\r\n    \"learnings\",\r\n    \"traits\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    expParams: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<Data_Class[\"params\"]>,\r\n    learnings: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          level: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n        },\r\n        required: [\"level\", \"skillId\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"learnings\"]>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"traits\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} satisfies JSONSchemaType<Data_Class>;\r\n","import type { Data_State } from \"./state\";\r\nexport const makeStateData = (data: Partial<Data_State> = {}): Data_State => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  iconIndex: data.iconIndex ?? 0,\r\n  message1: data.message1 ?? \"\",\r\n  message2: data.message2 ?? \"\",\r\n  message3: data.message3 ?? \"\",\r\n  message4: data.message4 ?? \"\",\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n\r\n  restriction: data.restriction ?? 0,\r\n  priority: data.priority ?? 0,\r\n  motion: data.motion ?? 0,\r\n  overlay: data.overlay ?? 0,\r\n  removeAtBattleEnd: data.removeAtBattleEnd ?? false,\r\n  removeByRestriction: data.removeByRestriction ?? false,\r\n  autoRemovalTiming: data.autoRemovalTiming ?? 0,\r\n  minTurns: data.minTurns ?? 0,\r\n  maxTurns: data.maxTurns ?? 0,\r\n  removeByDamage: data.removeByDamage ?? false,\r\n  chanceByDamage: data.chanceByDamage ?? 0,\r\n  removeByWalking: data.removeByWalking ?? false,\r\n  stepsToRemove: data.stepsToRemove ?? 0,\r\n});\r\n","import type { Data_State } from \"./state\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_STATE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n    \"restriction\",\r\n    \"priority\",\r\n    \"motion\",\r\n    \"overlay\",\r\n    \"removeAtBattleEnd\",\r\n    \"removeByDamage\",\r\n    \"removeByWalking\",\r\n    \"removeByRestriction\",\r\n    \"autoRemovalTiming\",\r\n    \"minTurns\",\r\n    \"maxTurns\",\r\n    \"chanceByDamage\",\r\n    \"stepsToRemove\",\r\n    \"note\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n    message3: { type: \"string\" },\r\n    message4: { type: \"string\" },\r\n\r\n    restriction: { type: \"integer\" },\r\n    priority: { type: \"integer\" },\r\n    motion: { type: \"integer\" },\r\n    overlay: { type: \"integer\" },\r\n\r\n    removeAtBattleEnd: { type: \"boolean\" },\r\n    removeByDamage: { type: \"boolean\" },\r\n\r\n    removeByWalking: { type: \"boolean\" },\r\n    removeByRestriction: { type: \"boolean\" },\r\n    autoRemovalTiming: { type: \"integer\" },\r\n\r\n    minTurns: { type: \"integer\" },\r\n    maxTurns: { type: \"integer\" },\r\n\r\n    chanceByDamage: { type: \"integer\" },\r\n    stepsToRemove: { type: \"integer\" },\r\n    note: { type: \"string\" },\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Data_State[\"traits\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_State>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { WeaponLabels } from \"./weaponLabels\";\r\n\r\nexport const LABELS_DATA_WEAPON = {\r\n  domainName: \"武器\",\r\n  options: {\r\n    weaponTypeId: \"武器タイプID\",\r\n  },\r\n} as const satisfies DomainLabel<WeaponLabels>;\r\n","import { makeDamage } from \"@RpgTypes/schema\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\n\r\nexport const makeWeaponData = (\r\n  weapon: Partial<Data_Weapon> = {}\r\n): Data_Weapon => ({\r\n  id: weapon.id ?? 0,\r\n  name: weapon.name ?? \"\",\r\n  iconIndex: weapon.iconIndex ?? 0,\r\n  description: weapon.description ?? \"\",\r\n  traits: weapon.traits ?? [],\r\n  note: weapon.note ?? \"\",\r\n  params: weapon.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: weapon.etypeId ?? 0,\r\n  price: weapon.price ?? 0,\r\n  damage: makeDamage(weapon.damage ?? {}),\r\n  wtypeId: weapon.wtypeId ?? 0,\r\n});\r\n","import type { Damage, ParamArray, Trait } from \"src/libs\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_WEAPON = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    wtypeId: { type: \"integer\", minimum: 0 },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\", minimum: 0 },\r\n        elementId: { type: \"integer\", minimum: 0 },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n    } satisfies JSONSchemaType<Damage>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Weapon>;\r\n","import type { Data_Enemy } from \"./enemy\";\r\nimport type { DropItem, Enemy_Action } from \"./enemyMembers\";\r\n\r\nexport const makeDropItem = (dropItem: Partial<DropItem> = {}): DropItem => ({\r\n  dataId: dropItem.dataId ?? 0,\r\n  denominator: dropItem.denominator ?? 0,\r\n  kind: dropItem.kind ?? 0,\r\n});\r\n\r\nexport const makeEnemyAction = (\r\n  action: Partial<Enemy_Action> = {}\r\n): Enemy_Action => ({\r\n  conditionParam1: action.conditionParam1 ?? 0,\r\n  conditionParam2: action.conditionParam2 ?? 0,\r\n  conditionType: action.conditionType ?? 0,\r\n  rating: action.rating ?? 0,\r\n\r\n  skillId: action.skillId ?? 0,\r\n});\r\n\r\nexport const makeEnemyData = (data: Partial<Data_Enemy> = {}): Data_Enemy => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  battlerName: data.battlerName ?? \"\",\r\n  battlerHue: data.battlerHue ?? 0,\r\n  dropItems: data.dropItems?.map(() => makeDropItem()) ?? [],\r\n  exp: data.exp ?? 0,\r\n  gold: data.gold ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  actions: [],\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Enemy } from \"./enemy\";\r\nimport type { DropItem, Enemy_Action } from \"./enemyMembers\";\r\nimport type { ParamArray, Trait } from \"src/libs\";\r\n\r\nexport const SCHEMA_DATA_ENEMY = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"battlerName\",\r\n    \"battlerHue\",\r\n    \"exp\",\r\n    \"gold\",\r\n    \"note\",\r\n    \"params\",\r\n    \"dropItems\",\r\n    \"traits\",\r\n    \"actions\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    battlerHue: { type: \"integer\", minimum: 0 },\r\n    battlerName: { type: \"string\" },\r\n    exp: { type: \"integer\", minimum: 0 },\r\n    gold: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } as const satisfies JSONSchemaType<ParamArray>,\r\n    actions: {\r\n      type: \"array\",\r\n\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"conditionParam1\",\r\n          \"conditionParam2\",\r\n          \"conditionType\",\r\n          \"skillId\",\r\n          \"rating\",\r\n        ],\r\n        properties: {\r\n          conditionParam1: { type: \"integer\" },\r\n          conditionParam2: { type: \"integer\" },\r\n          conditionType: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          rating: { type: \"integer\" },\r\n        },\r\n      },\r\n    } satisfies JSONSchemaType<Enemy_Action[]>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n\r\n    dropItems: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          kind: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          denominator: { type: \"integer\", minimum: 0 },\r\n          rate: { type: \"number\" },\r\n        },\r\n        required: [\"kind\", \"dataId\", \"denominator\"],\r\n      },\r\n    } satisfies JSONSchemaType<DropItem[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Enemy>;\r\n","import type { Data_Item, Data_Skill } from \"@RpgTypes/schema\";\r\nimport { makeDamage } from \"@RpgTypes/schema\";\r\n\r\nexport const makeItemData = (item: Partial<Data_Item> = {}): Data_Item => ({\r\n  animationId: item.animationId ?? 0,\r\n  id: item.id ?? 0,\r\n  name: item.name ?? \"\",\r\n  iconIndex: item.iconIndex ?? 0,\r\n  description: item.description ?? \"\",\r\n\r\n  note: item.note ?? \"\",\r\n  consumable: item.consumable ?? false,\r\n  scope: item.scope ?? 0,\r\n  occasion: item.occasion ?? 0,\r\n  speed: item.speed ?? 0,\r\n  successRate: item.successRate ?? 0,\r\n  repeats: item.repeats ?? 0,\r\n  tpGain: item.tpGain ?? 0,\r\n  hitType: item.hitType ?? 0,\r\n  damage: makeDamage(item.damage ?? {}),\r\n  effects: [],\r\n  price: 0,\r\n});\r\n\r\nexport const makeSkillData = (skill: Partial<Data_Skill> = {}): Data_Skill => ({\r\n  stypeId: skill.stypeId ?? 0,\r\n  requiredWtypeId1: skill.requiredWtypeId1 ?? 0,\r\n  requiredWtypeId2: skill.requiredWtypeId2 ?? 0,\r\n  animationId: skill.animationId ?? 0,\r\n  damage: makeDamage(skill.damage ?? {}),\r\n  description: skill.description ?? \"\",\r\n  effects: [],\r\n  hitType: skill.hitType ?? 0,\r\n  iconIndex: skill.iconIndex ?? 0,\r\n  id: skill.id ?? 0,\r\n  message1: skill.message1 ?? \"\",\r\n  message2: skill.message2 ?? \"\",\r\n  messageType: skill.messageType ?? 0,\r\n  name: skill.name ?? \"\",\r\n  note: skill.note ?? \"\",\r\n  mpCost: skill.mpCost ?? 0,\r\n  occasion: skill.occasion ?? 0,\r\n  repeats: skill.repeats ?? 0,\r\n  scope: skill.scope ?? 0,\r\n  speed: skill.speed ?? 0,\r\n  successRate: skill.successRate ?? 0,\r\n  tpCost: skill.tpCost ?? 0,\r\n  tpGain: skill.tpGain ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Item, Data_Skill } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_SKILL = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"messageType\",\r\n    \"mpCost\",\r\n    \"requiredWtypeId1\",\r\n    \"requiredWtypeId2\",\r\n    \"stypeId\",\r\n    \"tpCost\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"note\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n\r\n    messageType: { type: \"integer\" },\r\n    mpCost: { type: \"integer\" },\r\n    requiredWtypeId1: { type: \"integer\" },\r\n    requiredWtypeId2: { type: \"integer\" },\r\n    stypeId: { type: \"integer\" },\r\n    tpCost: { type: \"integer\" },\r\n\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n\r\n    note: { type: \"string\" },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<Data_Skill>;\r\n\r\nexport const SCHEMA_DATA_ITEM = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"note\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"consumable\",\r\n    \"price\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    note: { type: \"string\" },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n    consumable: { type: \"boolean\" },\r\n    price: { type: \"integer\", minimum: 0 },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Item>;\r\n","export const HITTYPE_CERTAIN = 0 as const;\r\nexport const HITTYPE_PHYSICAL = 1 as const;\r\nexport const HITTYPE_MAGICAL = 2 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { EffectLabelDefinition, ItemEffectLabelSet } from \"./types\";\r\n\r\nconst FORMAT_GROW = \"{name} + {value1}\" as const;\r\nconst FORMAT_STATE = \"{name} {value1}%\" as const;\r\nconst FORMAT_RECOVER = \"{value1}% + {value2}\" as const;\r\nconst FORMAT_ADD_BUFF = \"{name} {value1}ターン\" as const;\r\nconst FORMAT_NAME = \"{name}\" as const;\r\n\r\nexport const LABEL_SET_ITEM_EFFECT = {\r\n  domainName: \"使用効果\",\r\n  options: {\r\n    addBuff: {\r\n      desc: \"バフを付与する\",\r\n      domainName: \"バフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addDebuff: {\r\n      desc: \"デバフを付与する\",\r\n      domainName: \"デバフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    gainTp: {\r\n      desc: \"TPを指定した量だけ増加させます。\",\r\n      domainName: \"TP増加\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    grow: {\r\n      desc: \"成長効果\",\r\n      domainName: \"成長効果\",\r\n      format: FORMAT_GROW,\r\n    } as const satisfies EffectLabelDefinition,\r\n    learnSkill: {\r\n      desc: \"スキルを習得する\",\r\n      domainName: \"スキル習得\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverHp: {\r\n      desc: \"HPを回復します。最大HPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"HP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverMp: {\r\n      desc: \"MPを回復します。最大MPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"MP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeBuff: {\r\n      desc: \"バフを解除する\",\r\n      domainName: \"バフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeDebuff: {\r\n      desc: \"デバフを解除する\",\r\n      domainName: \"デバフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeState: {\r\n      desc: \"指定したステートを付加します。\",\r\n      domainName: \"ステート付加\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    special: {\r\n      desc: \"特殊効果\",\r\n      domainName: \"特殊効果\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addState: {\r\n      desc: \"状態異常を解除する\",\r\n      domainName: \"ステート解除\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    commonEvent: {\r\n      desc: \"コモンイベントを実行する\",\r\n      domainName: \"コモンイベント\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n  },\r\n} as const satisfies DomainLabel<ItemEffectLabelSet>;\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","export const SPECIAL_EFFECT_ESCAPE = 0 as const;\r\n","import type { SourceIdentifier } from \"./types\";\r\n\r\nconst validAsciiKey = /^[a-zA-Z0-9]+$/;\r\n\r\nexport const sanitizeKey = (value: string): string | undefined => {\r\n  return validAsciiKey.test(value) ? value : undefined;\r\n};\r\n\r\nexport const testUnknonwKey = (value: unknown): value is string => {\r\n  return typeof value === \"string\" ? validAsciiKey.test(value) : false;\r\n};\r\n\r\nexport const joinSourceKey = (key: SourceIdentifier): string => {\r\n  return [key.author, key.module, key.kind].join(\".\");\r\n};\r\n\r\nexport const isValid = (\r\n  source: Partial<SourceIdentifier>\r\n): source is SourceIdentifier => {\r\n  return (\r\n    testUnknonwKey(source.author) &&\r\n    testUnknonwKey(source.module) &&\r\n    testUnknonwKey(source.kind)\r\n  );\r\n};\r\n// TODO:ソース選択画面のデザイン\r\n","export const SRC_PARAMS_REGULAR = \"params\" as const;\r\nexport const SRC_PARAMS_EXTRA = \"xparams\" as const;\r\nexport const SRC_PARAMS_SPECIAL = \"sparams\" as const;\r\nexport const SRC_TRAIT_COLLAPS = \"collaps\" as const;\r\nexport const SRC_TRAIT_PARTY_ABILITY = \"partyAbiility\" as const;\r\nexport const SRC_TRAIT_SPECIAL_FLAG = \"sflag\";\r\n\r\nexport const SRC_DATA_ACTOR = \"actor\" as const;\r\nexport const SRC_DATA_VARIABLE = \"variables\" as const;\r\nexport const SRC_DATA_MAP = \"map\" as const;\r\nexport const SRC_DATA_ENEMY = \"enemy\" as const;\r\nexport const SRC_DATA_STATE = \"state\" as const;\r\nexport const SRC_DATA_SKILL = \"skill\" as const;\r\nexport const SRC_DATA_ITEMS = \"items\" as const;\r\nexport const SRC_DATA_WEAPON = \"weapon\" as const;\r\nexport const SRC_DATA_ARMOR = \"armor\" as const;\r\nexport const SRC_DATA_CLASS = \"class\" as const;\r\nexport const SRC_DATA_COMMON_EVNET = \"common_event\" as const;\r\nexport const SRC_DATA_TROOP = \"troop\" as const;\r\nexport const SRC_COLOR = \"colors\" as const;\r\n\r\nexport const SRC_WEAPON_TYPES = \"weaponTypes\" as const;\r\nexport const SRC_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SWITCHES = \"switches\" as const;\r\nexport const SRC_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_ELEMENTS = \"elements\" as const;\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema/namedItemSource\";\r\nimport type { EffectDefinitionResolved } from \"./labels\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\n\r\nconst PLACEHOLDER_VALUE1 = \"{value1}\";\r\nconst PLACEHOLDER_VALUE2 = \"{value2}\";\r\nconst PLACEHOLDER_NAME = \"{name}\";\r\n\r\nexport class ItemEffectDescriptor implements EffectDefinitionResolved {\r\n  constructor(\r\n    public readonly codeId: number,\r\n    public readonly label: string,\r\n    public readonly format: string,\r\n    public readonly description: string,\r\n    public readonly dataSource?: SourceIdentifier\r\n  ) {}\r\n  formatText(\r\n    effect: ItemEffect,\r\n    resolveName: (\r\n      dataSource: Readonly<SourceIdentifier>,\r\n      dataId: number\r\n    ) => string\r\n  ) {\r\n    const text = this.format\r\n      .replaceAll(PLACEHOLDER_VALUE1, effect.value1.toString())\r\n      .replaceAll(PLACEHOLDER_VALUE2, effect.value2.toString());\r\n    if (!this.dataSource) {\r\n      return text;\r\n    }\r\n    return text.replaceAll(\r\n      PLACEHOLDER_NAME,\r\n      resolveName(this.dataSource, effect.dataId)\r\n    );\r\n  }\r\n  requiresValue1(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE1);\r\n  }\r\n  requiresValue2(): boolean {\r\n    return this.format.includes(PLACEHOLDER_VALUE2);\r\n  }\r\n  requiresName(): boolean {\r\n    return this.format.includes(PLACEHOLDER_NAME);\r\n  }\r\n  invalidPlaceHolder(): string[] {\r\n    const allowed = [\"value1\", \"value2\", \"name\"];\r\n    const matches: RegExpExecArray[] = [\r\n      ...this.format.matchAll(/\\{([^}]+)\\}/g),\r\n    ];\r\n    return matches.map((m) => m[1]).filter((key) => !allowed.includes(key));\r\n  }\r\n  isFormatValidForDataSource(): boolean {\r\n    if (this.dataSource && !this.requiresName()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import type { SourceIdentifier } from \"@RpgTypes/schema/\";\r\nimport {\r\n  SRC_DATA_COMMON_EVNET,\r\n  SRC_DATA_SKILL,\r\n  SRC_DATA_STATE,\r\n  SRC_PARAMS_REGULAR,\r\n} from \"@RpgTypes/schema/namedItemSource\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./constants/\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\nimport { LABEL_SET_ITEM_EFFECT } from \"./labels\";\r\nimport {\r\n  AUTHOR_RMMZ,\r\n  MODULE_DATA,\r\n  MODULE_TRAIT,\r\n} from \"@RpgTypes/namedItemSource/\";\r\nimport { ItemEffectDescriptor } from \"./itemEffectDescriptor\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\n/**\r\n * @deprecated\r\n */\r\nexport const formatItemEffectText = (\r\n  effectDefine: EffectDefinitionResolved,\r\n  effect: ItemEffect,\r\n  name: string\r\n) => {\r\n  return effectDefine.format\r\n    .replaceAll(`{value1}`, effect.value1.toString())\r\n    .replaceAll(`{value2}`, effect.value2.toString())\r\n    .replaceAll(\"{name}\", name);\r\n};\r\n\r\nexport const resolveItemEffectLabels = (\r\n  label: DomainLabel<ItemEffectLabelSet>\r\n): ItemEffectDescriptor[] => {\r\n  return [\r\n    defineEffectRecoverHp(label.options.recoverHp),\r\n    defineEffectRecoverMp(label.options.recoverMp),\r\n    defineEffectGainTp(label.options.gainTp),\r\n    defineEffectAddState(label.options.addState),\r\n    defineEffectRemoveState(label.options.removeState),\r\n    defineEffectAddBuff(label.options.addBuff),\r\n    defineEffectAddDebuff(label.options.addDebuff),\r\n    defineEffectRemoveBuff(label.options.removeBuff),\r\n    defineEffectRemoveDebuff(label.options.removeDebuff),\r\n    defineEffectLearnSkill(label.options.learnSkill),\r\n    defineEffectCommonEvent(label.options.commonEvent),\r\n  ];\r\n};\r\n\r\nconst regularParam = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_PARAMS_REGULAR,\r\n});\r\n\r\nconst srcData = (sourceKey: string): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: sourceKey,\r\n});\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  override: Partial<EffectLabelDefinition>,\r\n  dataSource?: SourceIdentifier\r\n): ItemEffectDescriptor => {\r\n  const label = override.domainName ?? baseLabel.domainName;\r\n  const format = override.format ?? baseLabel.format;\r\n  const description = override.desc ?? baseLabel.desc;\r\n  return new ItemEffectDescriptor(code, label, format, description, dataSource);\r\n};\r\n\r\nexport const defineEffectRecoverHp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_RECOVER_HP,\r\n    LABEL_SET_ITEM_EFFECT.options.recoverHp,\r\n    labels\r\n  );\r\n\r\nexport const defineEffectRecoverMp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_RECOVER_MP,\r\n    LABEL_SET_ITEM_EFFECT.options.recoverMp,\r\n    labels\r\n  );\r\n\r\nexport const defineEffectGainTp = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(EFFECT_GAIN_TP, LABEL_SET_ITEM_EFFECT.options.gainTp, labels);\r\n\r\nexport const defineEffectGrow = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(EFFECT_GROW, LABEL_SET_ITEM_EFFECT.options.grow, labels);\r\n\r\nexport const defineEffectAddState = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_STATE,\r\n    LABEL_SET_ITEM_EFFECT.options.addState,\r\n    labels,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineEffectRemoveState = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_STATE,\r\n    LABEL_SET_ITEM_EFFECT.options.removeState,\r\n    labels,\r\n    srcData(SRC_DATA_STATE)\r\n  );\r\n\r\nexport const defineEffectAddBuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_BUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.addBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectRemoveBuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_BUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.removeBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectLearnSkill = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_LEARN_SKILL,\r\n    LABEL_SET_ITEM_EFFECT.options.learnSkill,\r\n    labels,\r\n    srcData(SRC_DATA_SKILL)\r\n  );\r\n\r\nexport const defineEffectAddDebuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_ADD_DEBUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.addBuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectRemoveDebuff = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    LABEL_SET_ITEM_EFFECT.options.removeDebuff,\r\n    labels,\r\n    regularParam()\r\n  );\r\n\r\nexport const defineEffectCommonEvent = (\r\n  labels: Partial<EffectLabelDefinition>\r\n): ItemEffectDescriptor =>\r\n  defineEffect(\r\n    EFFECT_COMMON_EVENT,\r\n    LABEL_SET_ITEM_EFFECT.options.commonEvent,\r\n    labels,\r\n    srcData(SRC_DATA_COMMON_EVNET)\r\n  );\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { ItemLabels } from \"./itemLabels\";\r\n\r\nexport const DEFAULT_ITEM_LABELS = {\r\n  domainName: \"アイテム\",\r\n  options: {\r\n    consumable: \"消耗品\",\r\n  },\r\n} as const satisfies DomainLabel<ItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { SkillLabels } from \"./skillLabels\";\r\n\r\nexport const DEFAULT_SKILL_LABELS = {\r\n  domainName: \"スキル\",\r\n  options: {\r\n    requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n    requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n    mpCost: \"MP消費\",\r\n    tpCost: \"TP消費\",\r\n  },\r\n} as const satisfies DomainLabel<SkillLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { UsableItemLabels } from \"./usableItemLabels\";\r\n\r\nexport const DEFAULT_USABLE_ITEM_LABELS = {\r\n  domainName: \"\",\r\n  options: {\r\n    scope: \"範囲\",\r\n    speed: \"速度補正\",\r\n    successRate: \"成功率\",\r\n  },\r\n} as const satisfies DomainLabel<UsableItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DataLabels } from \"./dataLabels\";\r\nimport type {\r\n  ActorLabels,\r\n  ArmorLabels,\r\n  ClassLabels,\r\n  EnemyLabels,\r\n  StateLabels,\r\n  WeaponLabels,\r\n} from \"./traitContainers\";\r\nimport type { ItemLabels, SkillLabels, UsableItemLabels } from \"./usableItems\";\r\n\r\nexport const LABEL_SET_DATA = {\r\n  actor: {\r\n    domainName: \"アクター\",\r\n    options: {\r\n      initialEquipments: \"初期装備\",\r\n      faceImage: \"顔画像\",\r\n      characterImage: \"キャラクター画像\",\r\n      svBattlerImage: \"SVバトラー画像\",\r\n      nickname: \"ニックネーム\",\r\n      profile: \"プロフィール\",\r\n      classId: \"職業ID\",\r\n      initialLevel: \"初期レベル\",\r\n      maxLevel: \"最大レベル\",\r\n    },\r\n  } as const satisfies DomainLabel<ActorLabels>,\r\n  class: {\r\n    domainName: \"職業\",\r\n    options: {\r\n      params: \"パラメータ\",\r\n      learnings: \"習得スキル\",\r\n      expParams: \"経験値パラメータ\",\r\n    },\r\n  } as const satisfies DomainLabel<ClassLabels>,\r\n  armor: {\r\n    domainName: \"防具\",\r\n    options: {\r\n      armorTypeId: \"防具タイプID\",\r\n      slotTypeId: \"スロットタイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<ArmorLabels>,\r\n  enemy: {\r\n    domainName: \"敵キャラ\",\r\n    options: {\r\n      dropItems: \"ドロップアイテム\",\r\n      battlerHue: \"バトラーヒュー\",\r\n      battlerName: \"バトラー名\",\r\n      gold: \"ゴールド\",\r\n    },\r\n  } as const satisfies DomainLabel<EnemyLabels>,\r\n  item: {\r\n    domainName: \"アイテム\",\r\n    options: {\r\n      consumable: \"消耗品\",\r\n    },\r\n  } as const satisfies DomainLabel<ItemLabels>,\r\n  skill: {\r\n    domainName: \"スキル\",\r\n    options: {\r\n      requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n      requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n      mpCost: \"MP消費\",\r\n      tpCost: \"TP消費\",\r\n    },\r\n  } as const satisfies DomainLabel<SkillLabels>,\r\n  state: {\r\n    domainName: \"ステート\",\r\n    options: {\r\n      restriction: \"制約\",\r\n      priority: \"優先度\",\r\n      motion: \"モーション\",\r\n      overlay: \"オーバーレイ\",\r\n      removeAtBattleEnd: \"戦闘終了時解除\",\r\n      removeByRestriction: \"制約による解除\",\r\n      autoRemovalTiming: \"自動解除タイミング\",\r\n      minTurns: \"最小ターン数\",\r\n      maxTurns: \"最大ターン数\",\r\n      removeByDamage: \"ダメージによる解除\",\r\n      chanceByDamage: \"ダメージによる解除確率\",\r\n      removeByWalking: \"歩行による解除\",\r\n      stepsToRemove: \"解除までの歩数\",\r\n    },\r\n  } as const satisfies DomainLabel<StateLabels>,\r\n  weapon: {\r\n    domainName: \"武器\",\r\n    options: {\r\n      weaponTypeId: \"武器タイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<WeaponLabels>,\r\n  usableItem: {\r\n    domainName: \"\",\r\n    options: {\r\n      scope: \"範囲\",\r\n      speed: \"速度補正\",\r\n      successRate: \"成功率\",\r\n    },\r\n  } as const satisfies DomainLabel<UsableItemLabels>,\r\n} as const satisfies DataLabels;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DamageLabels } from \"./damageLabels\";\r\n\r\nexport const DEFAULT_DAMAGE_LABELS = {\r\n  domainName: \"ダメージ\",\r\n  options: {},\r\n} as const satisfies DomainLabel<DamageLabels>;\r\n","import type { Damage } from \"./damage\";\r\n\r\nexport const makeDamage = (damage: Partial<Damage> = {}): Damage => ({\r\n  type: damage.type ?? 0,\r\n  elementId: damage.elementId ?? 0,\r\n  formula: damage.formula ?? \"\",\r\n  variance: damage.variance ?? 0,\r\n  critical: damage.critical ?? false,\r\n});\r\n","import type { Damage } from \"./damage\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nexport const SCHEMA_DAMAGE = {\r\n  type: \"object\",\r\n  required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n  properties: {\r\n    type: { type: \"integer\", minimum: 0 },\r\n    elementId: { type: \"integer\", minimum: 0 },\r\n    formula: { type: \"string\" },\r\n    variance: { type: \"integer\" },\r\n    critical: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Damage>;\r\n","import Ajv from \"ajv\";\r\nimport type {\r\n  Data_Actor,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_State,\r\n  Data_Weapon,\r\n} from \"./traitContainers\";\r\nimport {\r\n  SCHEMA_DATA_ACTOR,\r\n  SCHEMA_DATA_ARMMOR,\r\n  SCHEMA_DATA_CLASS,\r\n  SCHEMA_DATA_ENEMY,\r\n  SCHEMA_DATA_STATE,\r\n  SCHEMA_DATA_WEAPON,\r\n} from \"./traitContainers\";\r\nimport type { Data_Item, Data_Skill } from \"./usableItems\";\r\nimport { SCHEMA_DATA_ITEM, SCHEMA_DATA_SKILL } from \"./usableItems\";\r\n\r\nconst ajv = new Ajv();\r\nconst item = ajv.compile(SCHEMA_DATA_ITEM);\r\nconst skill = ajv.compile(SCHEMA_DATA_SKILL);\r\nconst actor = ajv.compile(SCHEMA_DATA_ACTOR);\r\nconst armor = ajv.compile(SCHEMA_DATA_ARMMOR);\r\nconst weapon = ajv.compile(SCHEMA_DATA_WEAPON);\r\nconst enemy = ajv.compile(SCHEMA_DATA_ENEMY);\r\nconst state = ajv.compile(SCHEMA_DATA_STATE);\r\nconst class_ = ajv.compile(SCHEMA_DATA_CLASS);\r\n\r\nexport const isDataItem = (data: unknown): data is Data_Item => {\r\n  return item(data);\r\n};\r\n\r\nexport const isDataSkill = (data: unknown): data is Data_Skill => {\r\n  return skill(data);\r\n};\r\n\r\nexport const isDataActor = (data: unknown): data is Data_Actor => {\r\n  return actor(data);\r\n};\r\n\r\nexport const isDataArmor = (data: unknown): data is Data_Armor => {\r\n  return armor(data);\r\n};\r\n\r\nexport const isDataWeapon = (data: unknown): data is Data_Weapon => {\r\n  return weapon(data);\r\n};\r\n\r\nexport const isDataEnemy = (data: unknown): data is Data_Enemy => {\r\n  return enemy(data);\r\n};\r\n\r\nexport const isDataState = (data: unknown): data is Data_State => {\r\n  return state(data);\r\n};\r\n\r\nexport const isDataClass = (data: unknown): data is Data_Class => {\r\n  return class_(data);\r\n};\r\n","export const NO_OPERATION = 0 as const;\r\nexport const SHOW_MESSAGE = 101 as const;\r\nexport const SHOW_MESSAGE_BODY = 401 as const;\r\nexport const SHOW_CHOICES = 102 as const;\r\nexport const SHOW_CHOICES_ITEM = 402 as const;\r\nexport const INPUT_NUMBER = 103 as const;\r\nexport const SELECT_ITEM = 104 as const;\r\nexport const SHOW_SCROLLING_TEXT = 105 as const;\r\nexport const SHOW_SCROLLING_TEXT_BODY = 405 as const;\r\nexport const COMMENT = 108 as const;\r\nexport const COMMENT_BODY = 408 as const;\r\nexport const SKIP = 109 as const;\r\nexport const CONDITIONAL_BRANCH = 111 as const;\r\nexport const CONDITIONAL_BRANCH_ELSE = 411 as const;\r\nexport const LOOP = 112 as const;\r\nexport const LOOP_BREAK = 113 as const;\r\nexport const EXIT_EVENT_PROCESSING = 115 as const;\r\nexport const COMMON_EVENT = 117 as const;\r\nexport const LABEL = 118 as const;\r\nexport const LABEL_JUMP = 119 as const;\r\nexport const CONTROL_SWITCHES = 121 as const;\r\nexport const CONTROL_VARIABLES = 122 as const;\r\nexport const CONTROL_SELF_SWITCH = 123 as const;\r\nexport const CONTROL_TIMER = 124 as const;\r\nexport const CHANGE_GOLD = 125 as const;\r\nexport const CHANGE_ITEMS = 126 as const;\r\nexport const CHANGE_WEAPONS = 127 as const;\r\nexport const CHANGE_ARMORS = 128 as const;\r\nexport const CHANGE_PARTY_MEMBER = 129 as const;\r\nexport const CHANGE_BATTLE_BGM = 132 as const;\r\nexport const CHANGE_VICTORY_ME = 133 as const;\r\nexport const CHANGE_SAVE_ACCESS = 134 as const;\r\nexport const CHANGE_MENU_ACCESS = 135 as const;\r\nexport const CHANGE_ENCOUNTER = 136 as const;\r\nexport const CHANGE_FORMATION_ACCESS = 137 as const;\r\nexport const CHANGE_WINDOW_COLOR = 138 as const;\r\n\r\nexport const CHANGE_DEFEAT_ME = 139 as const;\r\nexport const CHANGE_VEHICLE_BGM = 140 as const;\r\n\r\nexport const TRANSFER_PLAYER = 201 as const;\r\nexport const SET_VEHICLE_LOCATION = 202 as const;\r\nexport const SET_EVENT_LOCATION = 203 as const;\r\nexport const SCROLL_MAP = 204 as const;\r\nexport const SET_MOVEMENT_ROUTE = 205 as const;\r\nexport const GET_ONOFF_VEHICLE = 206 as const;\r\nexport const CHANGE_TRANSPARENCY = 211 as const;\r\nexport const SHOW_ANIMATION = 212 as const;\r\nexport const SHOW_BALLOON_ICON = 213 as const;\r\nexport const ERASE_EVENT = 214 as const;\r\nexport const CHANGE_PLAYER_FOLLOWERS = 216 as const;\r\nexport const GATHER_FOLLOWERS = 217 as const;\r\nexport const FADEOUT_SCREEN = 221 as const;\r\nexport const FADEIN_SCREEN = 222 as const;\r\nexport const TINT_SCREEN = 223 as const;\r\nexport const FLASH_SCREEN = 224 as const;\r\nexport const SHAKE_SCREEN = 225 as const;\r\n\r\nexport const WAIT = 230 as const;\r\nexport const SHOW_PICTURE = 231 as const;\r\nexport const MOVE_PICTURE = 232 as const;\r\nexport const ROTATE_PICTURE = 233 as const;\r\nexport const TINT_PICTURE = 234 as const;\r\nexport const ERASE_PICTURE = 235 as const;\r\nexport const SET_WEATHER_EFFECT = 236 as const;\r\n\r\nexport const PLAY_BGM = 241 as const;\r\nexport const FADEOUT_BGM = 242 as const;\r\nexport const SAVE_BGM = 243 as const;\r\nexport const RESUME_BGM = 244 as const;\r\n\r\nexport const PLAY_BGS = 245 as const;\r\nexport const FADEOUT_BGS = 246 as const;\r\nexport const PLAY_ME = 249 as const;\r\nexport const PLAY_SE = 250 as const;\r\nexport const STOP_SE = 251 as const;\r\n\r\nexport const PLAY_MOVIE = 261 as const;\r\n\r\nexport const CHANGE_TILESET = 282 as const;\r\nexport const CHANGE_BATTLE_BACKGROUND = 283 as const;\r\nexport const CHANGE_PARALLAX = 284 as const;\r\nexport const GET_LOCATION_INFO = 285 as const;\r\n\r\nexport const BATTLE_PROCESSING = 301 as const;\r\n\r\nexport const SHOP_PROCESSING = 302 as const;\r\nexport const SHOP_PROCESSING_BODY = 605 as const;\r\nexport const NAME_INPUT_PROCESSING = 303 as const;\r\nexport const CHANGE_HP = 311 as const;\r\nexport const CHANGE_MP = 312 as const;\r\nexport const CHANGE_TP = 313 as const;\r\nexport const RECOVER_ALL = 314 as const;\r\nexport const CHANGE_EXP = 315 as const;\r\n\r\nexport const CHANGE_NAME = 320 as const;\r\nexport const CHANGE_CLASS = 321 as const;\r\nexport const CHANGE_ACTOR_IMAGES = 322 as const;\r\nexport const CHANGE_VEHICLE_IMAGE = 323 as const;\r\nexport const CHANGE_NICKNAME = 324 as const;\r\nexport const CHANGE_PROFILE = 325 as const;\r\n\r\nexport const CHANGE_ENEMY_HP = 331 as const;\r\nexport const CHANGE_ENEMY_MP = 332 as const;\r\n\r\nexport const CHANGE_ENEMY_STATE = 333 as const;\r\nexport const ENEMY_RECOVER_ALL = 334 as const;\r\nexport const ENEMY_APPEAR = 335 as const;\r\nexport const ENEMY_TRANSFORM = 336 as const;\r\nexport const SHOW_BATTLE_ANIMATION = 337 as const;\r\nexport const FORCE_ACTION = 339 as const;\r\nexport const ABORT_BATTLE = 340 as const;\r\nexport const OPEN_MENU_SCREEN = 351 as const;\r\n\r\nexport const CHANGE_ENEMY_TP = 342 as const;\r\n\r\nexport const OPEN_SAVE_SCREEN = 352 as const;\r\nexport const GAME_OVER = 353 as const;\r\nexport const RETURN_TO_TITLE_SCREEN = 354 as const;\r\nexport const SCRIPT_EVAL = 355 as const;\r\nexport const SCRIPT_EVAL_BODY = 655 as const;\r\nexport const PLUGIN_COMMAND_MV = 356 as const;\r\nexport const PLUGIN_COMMAND_MZ = 357 as const;\r\n","export const ROUTE_END = 0 as const;\r\nexport const ROUTE_MOVE_DOWN = 1 as const;\r\nexport const ROUTE_MOVE_LEFT = 2 as const;\r\nexport const ROUTE_MOVE_RIGHT = 3 as const;\r\nexport const ROUTE_MOVE_UP = 4 as const;\r\nexport const ROUTE_MOVE_LOWER_L = 5 as const;\r\nexport const ROUTE_MOVE_LOWER_R = 6 as const;\r\nexport const ROUTE_MOVE_UPPER_L = 7 as const;\r\nexport const ROUTE_MOVE_UPPER_R = 8 as const;\r\nexport const ROUTE_MOVE_RANDOM = 9 as const;\r\nexport const ROUTE_MOVE_TOWARD = 10 as const;\r\nexport const ROUTE_MOVE_AWAY = 11 as const;\r\nexport const ROUTE_MOVE_FORWARD = 12 as const;\r\nexport const ROUTE_MOVE_BACKWARD = 13 as const;\r\nexport const ROUTE_JUMP = 14 as const;\r\nexport const ROUTE_WAIT = 15 as const;\r\nexport const ROUTE_TURN_DOWN = 16 as const;\r\nexport const ROUTE_TURN_LEFT = 17 as const;\r\nexport const ROUTE_TURN_RIGHT = 18 as const;\r\nexport const ROUTE_TURN_UP = 19 as const;\r\nexport const ROUTE_TURN_90D_R = 20 as const;\r\nexport const ROUTE_TURN_90D_L = 21 as const;\r\nexport const ROUTE_TURN_180D = 22 as const;\r\nexport const ROUTE_TURN_90D_R_L = 23 as const;\r\nexport const ROUTE_TURN_RANDOM = 24 as const;\r\nexport const ROUTE_TURN_TOWARD = 25 as const;\r\nexport const ROUTE_TURN_AWAY = 26 as const;\r\nexport const ROUTE_SWITCH_ON = 27 as const;\r\nexport const ROUTE_SWITCH_OFF = 28 as const;\r\nexport const ROUTE_CHANGE_SPEED = 29 as const;\r\nexport const ROUTE_CHANGE_FREQ = 30 as const;\r\nexport const ROUTE_WALK_ANIME_ON = 31 as const;\r\nexport const ROUTE_WALK_ANIME_OFF = 32 as const;\r\nexport const ROUTE_STEP_ANIME_ON = 33 as const;\r\nexport const ROUTE_STEP_ANIME_OFF = 34 as const;\r\nexport const ROUTE_DIR_FIX_ON = 35 as const;\r\nexport const ROUTE_DIR_FIX_OFF = 36 as const;\r\nexport const ROUTE_THROUGH_ON = 37 as const;\r\nexport const ROUTE_THROUGH_OFF = 38 as const;\r\nexport const ROUTE_TRANSPARENT_ON = 39 as const;\r\nexport const ROUTE_TRANSPARENT_OFF = 40 as const;\r\nexport const ROUTE_CHANGE_IMAGE = 41 as const;\r\nexport const ROUTE_CHANGE_OPACITY = 42 as const;\r\nexport const ROUTE_CHANGE_BLEND_MODE = 43 as const;\r\nexport const ROUTE_PLAY_SE = 44 as const;\r\nexport const ROUTE_SCRIPT = 45 as const;\r\n","import type { EventCommandLike } from \"./eventComandLike\";\r\nimport type { EventCode } from \"./eventCommand\";\r\nimport type { CommandParamaterType } from \"./metaTypes\";\r\n\r\nexport const createEventCommand = <\r\n  Code extends EventCode,\r\n  Param extends CommandParamaterType<Code>\r\n>(\r\n  code: Code,\r\n  param: Param,\r\n  indent: number = 0\r\n): EventCommandLike<Code, Param> => {\r\n  return {\r\n    code,\r\n    indent,\r\n    parameters: param,\r\n  };\r\n};\r\n","import type { MapEvent_PageCondition, PageConditionArg } from \"./condition\";\r\nimport type { MapEvent } from \"./mapEvent\";\r\nimport type { MapEvent_Image, MapEventPage } from \"./page\";\r\n\r\nexport const makeMapEvent = (): MapEvent => {\r\n  return {\r\n    id: 1,\r\n    name: \"\",\r\n    pages: [],\r\n    note: \"\",\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventIamge = (): MapEvent_Image => {\r\n  return {\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    direction: 2,\r\n    pattern: 0,\r\n    tileId: 0,\r\n  };\r\n};\r\n\r\nexport const makeEventPageCondition = (\r\n  arg: Partial<PageConditionArg> = {}\r\n): MapEvent_PageCondition => {\r\n  return {\r\n    switch1Id: arg.switch1Id ?? 0,\r\n    switch1Valid: arg.switch1Id !== undefined,\r\n    switch2Id: arg.switch2Id ?? 0,\r\n    switch2Valid: arg.switch2Id !== undefined,\r\n    variableId: arg.variableId ?? 0,\r\n    variableValid: arg.variableId !== undefined,\r\n    variableValue: arg.variableValue ?? 0,\r\n    selfSwitchCh: arg.selfSwitchCh ?? \"A\",\r\n    selfSwitchValid: arg.selfSwitchCh !== undefined,\r\n    itemId: arg.itemId ?? 0,\r\n    itemValid: arg.itemId !== undefined,\r\n    actorId: arg.actorId ?? 0,\r\n    actorValid: arg.actorId !== undefined,\r\n  };\r\n};\r\n\r\nexport const makeMapEventPage = (): MapEventPage => {\r\n  return {\r\n    conditions: makeEventPageCondition(),\r\n    list: [],\r\n    directionFix: false,\r\n    image: makeMapEventIamge(),\r\n    moveFrequency: 5,\r\n    moveRoute: {\r\n      list: [],\r\n      repeat: false,\r\n      skippable: false,\r\n      wait: false,\r\n    },\r\n  };\r\n};\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_MAP_INFO = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"expanded\",\r\n    \"order\",\r\n    \"parentId\",\r\n    \"scrollX\",\r\n    \"scrollY\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    expanded: { type: \"boolean\" },\r\n    order: { type: \"integer\" },\r\n    parentId: { type: \"integer\" },\r\n    scrollX: { type: \"integer\" },\r\n    scrollY: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_MapInfo>;\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\n\r\nconst makeMapName = (mapId: number) => {\r\n  return mapId.toString().padStart(3, \"0\");\r\n};\r\n\r\nexport const makeMapInfoData = (\r\n  info: { id: number } & Partial<Data_MapInfo> = { id: 0 }\r\n): Data_MapInfo => {\r\n  return {\r\n    name: info.name ?? makeMapName(info.id),\r\n    id: info.id,\r\n    expanded: info.expanded ?? false,\r\n    order: info.order ?? 0,\r\n    parentId: info.parentId ?? 0,\r\n    scrollX: info.scrollX ?? 0,\r\n    scrollY: info.scrollY ?? 0,\r\n  };\r\n};\r\n","import type { Data_Map } from \"./map\";\r\n\r\nexport const makeMapData = (map: Partial<Data_Map> = {}): Data_Map => {\r\n  return {\r\n    autoplayBgm: map.autoplayBgm ?? false,\r\n    autoplayBgs: map.autoplayBgs ?? false,\r\n    battleback1Name: map.battleback1Name ?? \"\",\r\n    battleback2Name: map.battleback2Name ?? \"\",\r\n    bgm: map.bgm ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    bgs: map.bgs ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    disableDashing: map.disableDashing ?? false,\r\n    displayName: map.displayName ?? \"\",\r\n    encounterList: map.encounterList ?? [],\r\n    events: map.events ?? [],\r\n    height: map.height ?? 0,\r\n    note: map.note ?? \"\",\r\n    parallaxLoopX: map.parallaxLoopX ?? false,\r\n    parallaxLoopY: map.parallaxLoopY ?? false,\r\n    parallaxName: map.parallaxName ?? \"\",\r\n    parallaxShow: map.parallaxShow ?? false,\r\n    parallaxSx: map.parallaxSx ?? 0,\r\n    parallaxSy: map.parallaxSy ?? 0,\r\n    width: map.width ?? 0,\r\n    x: map.x ?? 0,\r\n    y: map.y ?? 0,\r\n    data: map.data ?? [],\r\n  };\r\n};\r\n","import type { Data_Troop } from \"./troop\";\r\nimport type { Data_CommonEvent } from \"./commonEvent\";\r\nimport type { Troop_EventConditions, Troop_Member } from \"./troopMembers\";\r\n\r\nexport const makeCommonEventData = (\r\n  data: Partial<Data_CommonEvent> = {}\r\n): Data_CommonEvent => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  trigger: data.trigger ?? 0,\r\n  list: data.list ?? [],\r\n  switchId: data.switchId ?? 0,\r\n});\r\n\r\nexport const makeTroopData = (data: Partial<Data_Troop> = {}): Data_Troop => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  members: data.members ?? [],\r\n  pages: data.pages ?? [],\r\n});\r\n\r\nexport const makeTroopMember = (\r\n  data: Partial<Troop_Member> = {}\r\n): Troop_Member => ({\r\n  enemyId: data.enemyId ?? 0,\r\n  x: data.x ?? 0,\r\n  y: data.y ?? 0,\r\n  hidden: data.hidden ?? false,\r\n});\r\n\r\nexport const makeTroopEventConditions = (\r\n  data: Partial<Troop_EventConditions> = {}\r\n): Troop_EventConditions => ({\r\n  actorHp: data.actorHp ?? 0,\r\n  actorId: data.actorId ?? 0,\r\n  enemyValid: data.enemyValid ?? 0,\r\n  switchValid: data.switchValid ?? 0,\r\n});\r\n","import Ajv from \"ajv\";\r\nimport type { Data_MapInfo } from \"./map\";\r\nimport { SCHEMA_DATA_MAP_INFO } from \"./map\";\r\n\r\nconst ajv = new Ajv();\r\n\r\nconst mapInfo = ajv.compile(SCHEMA_DATA_MAP_INFO);\r\n\r\nexport const isDataMapInfo = (data: unknown): data is Data_MapInfo => {\r\n  return mapInfo(data);\r\n};\r\n","export interface System_Advanced {\r\n  gameId: number;\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  uiAreaWidth: number;\r\n  uiAreaHeight: number;\r\n  windowOpacity: number;\r\n  screenScale: number;\r\n\r\n  numberFontFilename: string;\r\n  mainFontFilename: string;\r\n  fallbackFonts: string;\r\n  fontSize: number;\r\n}\r\n\r\nexport const makeSystemAdvanced = (\r\n  advanced: Partial<System_Advanced> = {}\r\n): System_Advanced => {\r\n  return {\r\n    gameId: advanced.gameId ?? 0,\r\n    screenWidth: advanced.screenWidth ?? 0,\r\n    screenHeight: advanced.screenHeight ?? 0,\r\n    uiAreaWidth: advanced.uiAreaWidth ?? 0,\r\n    uiAreaHeight: advanced.uiAreaHeight ?? 0,\r\n    windowOpacity: advanced.windowOpacity ?? 0,\r\n    screenScale: advanced.screenScale ?? 1,\r\n\r\n    numberFontFilename: advanced.numberFontFilename ?? \"\",\r\n    mainFontFilename: advanced.mainFontFilename ?? \"\",\r\n    fallbackFonts: advanced.fallbackFonts ?? \"\",\r\n    fontSize: advanced.fontSize ?? 28,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_Advanced } from \"./advanced\";\r\n\r\nexport const SCHEMA_SYSTEM_ADVANCED = {\r\n  type: \"object\",\r\n  properties: {\r\n    gameId: { type: \"integer\" },\r\n    screenWidth: { type: \"integer\" },\r\n    screenHeight: { type: \"integer\" },\r\n    uiAreaWidth: { type: \"integer\" },\r\n    uiAreaHeight: { type: \"integer\" },\r\n    windowOpacity: { type: \"integer\" },\r\n    screenScale: { type: \"number\" },\r\n\r\n    numberFontFilename: { type: \"string\" },\r\n    mainFontFilename: { type: \"string\" },\r\n    fallbackFonts: { type: \"string\" },\r\n    fontSize: { type: \"integer\" },\r\n  },\r\n  required: [\r\n    \"gameId\",\r\n    \"screenWidth\",\r\n    \"screenHeight\",\r\n    \"uiAreaWidth\",\r\n    \"uiAreaHeight\",\r\n    \"windowOpacity\",\r\n    \"screenScale\",\r\n    \"numberFontFilename\",\r\n    \"mainFontFilename\",\r\n    \"fallbackFonts\",\r\n    \"fontSize\",\r\n  ],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<System_Advanced>;\r\n","import type { AudioFileParams } from \"./audioFileParams\";\r\n\r\nexport const makeAudioFileParams = (\r\n  audioFileParams: Partial<AudioFileParams> = {}\r\n): AudioFileParams => {\r\n  return {\r\n    name: audioFileParams.name ?? \"\",\r\n    volume: audioFileParams.volume ?? 100,\r\n    pitch: audioFileParams.pitch ?? 100,\r\n    pan: audioFileParams.pan ?? 0,\r\n  };\r\n};\r\n","import type { System_SoundsArray, System_SoundsObject } from \"./types\";\r\nimport { makeAudioFileParams } from \"@RpgTypes/utils\";\r\n\r\nexport const makeSoundsArray = (\r\n  sounds: Partial<System_SoundsObject>\r\n): System_SoundsArray => {\r\n  return [\r\n    makeAudioFileParams(sounds.cursor),\r\n    makeAudioFileParams(sounds.ok),\r\n    makeAudioFileParams(sounds.cancel),\r\n    makeAudioFileParams(sounds.buzzer),\r\n    makeAudioFileParams(sounds.equip),\r\n    makeAudioFileParams(sounds.save),\r\n    makeAudioFileParams(sounds.load),\r\n    makeAudioFileParams(sounds.battleStart),\r\n    makeAudioFileParams(sounds.escape),\r\n    makeAudioFileParams(sounds.enemyAttack),\r\n    makeAudioFileParams(sounds.enemyDamage),\r\n    makeAudioFileParams(sounds.enemyCollapse),\r\n    makeAudioFileParams(sounds.bossCollapes1),\r\n    makeAudioFileParams(sounds.bossCollapes2),\r\n    makeAudioFileParams(sounds.actorDamage),\r\n    makeAudioFileParams(sounds.actorCollapse),\r\n    makeAudioFileParams(sounds.playRecovery),\r\n    makeAudioFileParams(sounds.playMiss),\r\n    makeAudioFileParams(sounds.playEvasion),\r\n    makeAudioFileParams(sounds.playMagicEvasion),\r\n    makeAudioFileParams(sounds.playReflection),\r\n    makeAudioFileParams(sounds.shop),\r\n    makeAudioFileParams(sounds.useItem),\r\n    makeAudioFileParams(sounds.useSkill),\r\n  ];\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  System_DataNames,\r\n  System_Images,\r\n  System_Text,\r\n  System_Bgm,\r\n  System_BoolanOptions,\r\n} from \"./system\";\r\n\r\ntype AsLabel<T> = Record<keyof T, string>;\r\n\r\nexport type SystemLabel_DataNames = AsLabel<System_DataNames>;\r\nexport type SystemLabel_Images = AsLabel<System_Images>;\r\nexport type SystemLabel_Text = AsLabel<System_Text>;\r\nexport type SystemLabel_Bgm = AsLabel<System_Bgm>;\r\nexport type SystemLabel_BoolanOptions = AsLabel<System_BoolanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_BOOLEAN = {\r\n  domainName: \"オプション\",\r\n  options: {\r\n    optDrawTitle: \"ゲームタイトルの描画\",\r\n    optDisplayTp: \"ウィンドウにTPを表示\",\r\n    optFloorDeath: \"床ダメージで戦闘不能\",\r\n    optSlipDeath: \"スリップダメージで戦闘不能\",\r\n    optAutosave: \"オートセーブを有効化\",\r\n    optExtraExp: \"控えメンバーも経験値を獲得\",\r\n    optFollowers: \"隊列歩行\",\r\n    optSideView: \"戦闘をサイドビューにする\",\r\n    optKeyItemsNumber: \"大事なものの個数を表示\",\r\n    optTransparent: \"透明状態で開始\",\r\n    optMessageSkip: \"メッセージスキップを有効化\",\r\n    optSplashScreen: \"スプラッシュ画面を表示\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_BoolanOptions>;\r\n\r\nexport const MockSystemLabelDataTypes = {\r\n  domainName: \"タイプ\",\r\n  options: {\r\n    armorTypes: \"防具タイプ\",\r\n    elements: \"属性\",\r\n    equipTypes: \"装備タイプ\",\r\n    skillTypes: \"スキルタイプ\",\r\n    weaponTypes: \"武器タイプ\",\r\n    switches: \"スイッチ\",\r\n    variables: \"変数\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_DataNames>;\r\n","import type { NoteReadResult } from \"./types\";\r\n\r\nexport const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]+):([^>]*)>/g;\r\n\r\nexport const readNoteObject = <Result, T extends { note: string }>(\r\n  data: T,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => readNoteEx(data.note, (key, value) => fn(key, value, data));\r\n\r\nexport const readNote = (note: string): NoteReadResult[] => {\r\n  return readNoteEx(note, (key, value) => [key, value]);\r\n};\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nexport const readNoteEx = <Result>(\r\n  note: string,\r\n  fn: (key: string, value: string) => Result\r\n): Result[] => {\r\n  const regex = makeRegex();\r\n  return Array.from(note.matchAll(regex), (match) => fn(match[1], match[2]));\r\n};\r\n\r\n/**\r\n *\r\n * @param note\r\n * @param transformFunction この関数の戻り値でvalueを置き換える\r\n * @returns\r\n */\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  return note.replaceAll(\r\n    makeRegex(),\r\n    (_subString, key: string, value: string) => {\r\n      const newText = transformFunction(key, value);\r\n      return createNoteEntity(key, newText);\r\n    }\r\n  );\r\n};\r\n\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  const match = Array.from(note.matchAll(regex)).find(\r\n    (m) => m[1] === targetKey\r\n  );\r\n  return match ? match[2] : undefined;\r\n};\r\n\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replaceAll(regex, (match, key: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","export const createControlCharFormat = <C extends string>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromStringArray = <C extends string>(\r\n  char: C,\r\n  array: ReadonlyArray<string>\r\n) => {\r\n  return array.map((text, index) => ({\r\n    text,\r\n    controlChar: createControlCharFormat(char, index),\r\n  }));\r\n};\r\n","import type { ControlChar } from \"./types\";\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (text: string): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n  return Array.from(text.matchAll(regex)).map<ControlChar>(\r\n    (match: RegExpMatchArray) => ({\r\n      char: match[1],\r\n      id: parseInt(match[2], 10),\r\n    })\r\n  );\r\n};\r\n","export const CTRL_CHAR_ACTOR = \"N\" as const;\r\nexport const CTRL_CHAR_VARIABLE = \"V\" as const;\r\nexport const CTRL_CHAR_POSTION_X = \"PX\" as const;\r\nexport const CTRL_CHAR_POSTION_Y = \"PY\" as const;\r\nexport const CTRL_CHAR_GOLD = \"G\" as const;\r\nexport const CTRL_CHAR_PARTY = \"P\" as const;\r\nexport const CTRL_CHAR_COLOR = \"C\" as const;\r\nexport const CTRL_CHAR_ICON = \"I\" as const;\r\nexport const CTRL_CHAR_FONT_SIZE = \"FS\" as const;\r\n","import type { ControlCharInfo } from \"./controlChars\";\r\nimport { createControlCharFormat } from \"./controlChars\";\r\nimport { CTRL_CHAR_ACTOR, CTRL_CHAR_VARIABLE } from \"./controlChars/constants\";\r\nimport type { Data_Actor } from \"./main\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nexport const createActorControlChars = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    text: actor.name,\r\n    controlChar: createControlCharFormat(CTRL_CHAR_ACTOR, actor.id),\r\n  }));\r\n};\r\n\r\nexport const createSystemVariableControlChars = (\r\n  system: Pick<Data_System, \"variables\">\r\n): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(CTRL_CHAR_VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","import type { GlobalLabel } from \"./globalLabels\";\r\n\r\nexport const DEFAULT_GLOBAL_LABELS = {\r\n  id: \"識別子\",\r\n  name: \"名前\",\r\n  note: \"メモ\",\r\n  description: \"説明\",\r\n  iconIndex: \"アイコンインデックス\",\r\n  occasion: \"使用タイミング\",\r\n  params: \"パラメータ\",\r\n  repeats: \"繰り返し回数\",\r\n  scope: \"範囲\",\r\n  speed: \"速度補正\",\r\n  successRate: \"成功率\",\r\n  animationId: \"アニメーションID\",\r\n  displayType: \"表示タイプ\",\r\n  characterIndex: \"キャラクターインデックス\",\r\n  characterName: \"キャラクター名\",\r\n  effectName: \"効果名\",\r\n  faceIndex: \"顔グラフィックインデックス\",\r\n  faceName: \"顔グラフィック名\",\r\n  flashTimings: \"フラッシュタイミング\",\r\n  list: \"リスト\",\r\n  messageType: \"メッセージタイプ\",\r\n  offsetX: \"オフセットX\",\r\n  offsetY: \"オフセットY\",\r\n  overlay: \"オーバーレイ\",\r\n  priority: \"優先度\",\r\n  restriction: \"制約\",\r\n  rotation: \"回転\",\r\n  scale: \"スケール\",\r\n  soundTimings: \"サウンドタイミング\",\r\n  stepsToRemove: \"解除までの歩数\",\r\n  type: \"タイプ\",\r\n  variance: \"分散度\",\r\n  unknownCode: \"不明なコード\",\r\n  content: \"内容\",\r\n  apply: \"適用\",\r\n  turn: \"ターン\",\r\n  commonEvent: \"コモンイベント\",\r\n  normal: \"通常\",\r\n  dualWield: \"二刀流\",\r\n  bossCollaps: \"ボス崩壊\",\r\n  instantCollaps: \"即時崩壊\",\r\n  noneCollaps: \"崩壊なし\",\r\n  escape: \"逃走\",\r\n} as const satisfies GlobalLabel;\r\n","import type { LabelRegistry } from \"./labelRegistry\";\r\nimport { DEFAULT_GLOBAL_LABELS } from \"./labelUtils\";\r\nimport {\r\n  DEFAULT_DAMAGE_LABELS,\r\n  LABEL_SET_ITEM_EFFECT,\r\n  LABEL_SET_DATA,\r\n  LABEL_SET_TRAIT,\r\n} from \"./data\";\r\n\r\nexport const LABEL_REGISTRY_JP = {\r\n  rpg: {\r\n    damage: DEFAULT_DAMAGE_LABELS,\r\n    data: LABEL_SET_DATA,\r\n    traits: LABEL_SET_TRAIT,\r\n    itemEffect: LABEL_SET_ITEM_EFFECT,\r\n  },\r\n  global: DEFAULT_GLOBAL_LABELS,\r\n} as const satisfies LabelRegistry;\r\n","import { COMMON_EVENT } from \"@RpgTypes/schema\";\r\nimport type { Command2_CommonEvent, ParamObject_CommonEvent } from \"./types\";\r\nimport type { ParamArray_CommonEvent } from \"./types\";\r\n\r\nexport const makeCommand2_CommonEvent = (\r\n  param: Partial<ParamObject_CommonEvent> | undefined,\r\n  indent: number = 0\r\n): Command2_CommonEvent => ({\r\n  code: COMMON_EVENT,\r\n  indent,\r\n  parameters: toArrayCommonEvent(param ?? {}),\r\n});\r\n\r\nexport const fromArrayCommonEvent = (\r\n  array: ParamArray_CommonEvent\r\n): ParamObject_CommonEvent => ({\r\n  eventId: array[0],\r\n});\r\n\r\nexport const toArrayCommonEvent = (\r\n  object: Partial<ParamObject_CommonEvent>\r\n): ParamArray_CommonEvent => [object.eventId ?? 0];\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command2_CommonEvent } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CALL_COMMON_EVENT = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 117 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"number\", minimum: 0, default: 0 }],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command2_CommonEvent>;\r\n","import { INPUT_NUMBER } from \"@RpgTypes/schema\";\r\nimport type {\r\n  Command2_InputNumber,\r\n  ParamArray_InputNumber,\r\n  ParamObject_InputNumber,\r\n} from \"./types\";\r\n\r\nexport const toArrayInputNumber = (\r\n  param: Partial<ParamObject_InputNumber>\r\n): ParamArray_InputNumber => [param.variableId ?? 0, param.digits ?? 0];\r\n\r\nexport const fromArrayInputNumber = (\r\n  array: ParamArray_InputNumber\r\n): ParamObject_InputNumber => ({\r\n  variableId: array[0],\r\n  digits: array[1],\r\n});\r\n\r\nexport const makeCommandInputNumber = (\r\n  param: Partial<ParamObject_InputNumber> | undefined,\r\n  indent: number = 0\r\n): Command2_InputNumber => ({\r\n  code: INPUT_NUMBER,\r\n  indent,\r\n  parameters: toArrayInputNumber(param ?? {}),\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command2_InputNumber } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_INPUT_NUMBER = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 103 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // variableId\r\n        { type: \"number\" }, // digits\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command2_InputNumber>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command2_ScrollTextHead, Command2_ScrollTextBody } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_HEAD = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 105 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // speed\r\n        { type: \"boolean\" }, // skip\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command2_ScrollTextHead>;\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_BODY = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 405 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }], // content\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command2_ScrollTextBody>;\r\n","import { SHOW_CHOICES, SHOW_CHOICES_ITEM } from \"@RpgTypes/schema\";\r\nimport type {\r\n  ParamArray_SetupChoice,\r\n  ParamObject_SetupChoice,\r\n  Command2_ShowChoices,\r\n} from \"./types/body\";\r\nimport type {\r\n  ParamObject_ShowChoiceItem,\r\n  Command2_ShowChoiceItem,\r\n  ParamArray_ShowChoiceItem,\r\n} from \"./types/item\";\r\n\r\nexport const makeCommand2_ShowChoiceItem = (\r\n  param: Partial<ParamObject_ShowChoiceItem> | undefined,\r\n  indent: number = 0\r\n): Command2_ShowChoiceItem => ({\r\n  code: SHOW_CHOICES_ITEM,\r\n  indent,\r\n  parameters: [param?.index ?? 0, param?.name ?? \"\"],\r\n});\r\n\r\nexport const fromArraySetupChoiceItem = (\r\n  array: ParamArray_ShowChoiceItem\r\n): ParamObject_ShowChoiceItem => ({\r\n  index: array[0],\r\n  name: array[1],\r\n});\r\n\r\nexport const toArraySetupChoiceItem = (\r\n  object: Partial<ParamObject_ShowChoiceItem>\r\n): ParamArray_ShowChoiceItem => [object.index ?? 0, object.name ?? \"\"];\r\n\r\nexport const fromArraySetupChoice = (\r\n  array: ParamArray_SetupChoice\r\n): ParamObject_SetupChoice => ({\r\n  choices: array[0],\r\n  cancelType: array[1],\r\n  defaultType: array[2],\r\n  positionType: array[3],\r\n  background: array[4],\r\n});\r\n\r\nexport const toArraySetupChoice = (\r\n  object: Partial<ParamObject_SetupChoice>\r\n): ParamArray_SetupChoice => [\r\n  object.choices ?? [],\r\n  object.cancelType ?? 0,\r\n  object.defaultType ?? 0,\r\n  object.positionType ?? 2,\r\n  object.background ?? 0,\r\n];\r\n\r\nexport const makeCommandSetupChoice = (\r\n  param: Partial<ParamObject_SetupChoice> | undefined,\r\n  indent: number = 0\r\n): Command2_ShowChoices => ({\r\n  code: SHOW_CHOICES,\r\n  indent,\r\n  parameters: [\r\n    param?.choices ?? [],\r\n    param?.cancelType ?? 0,\r\n    param?.defaultType ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.background ?? 0,\r\n  ],\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command2_ShowChoiceItem } from \"./types/item\";\r\nimport type { Command2_ShowChoices } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICE_ITEM = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 402 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\" }, // index\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command2_ShowChoiceItem>;\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICES = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 102 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 5,\r\n      maxItems: 5,\r\n      items: [\r\n        { type: \"array\", items: { type: \"string\" } }, // choices\r\n        { type: \"integer\" }, // cancelType\r\n        { type: \"integer\" }, // defaultType\r\n        { type: \"integer\" }, // positionType\r\n        { type: \"integer\" }, // background\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command2_ShowChoices>;\r\n","import type { Converter } from \"@RpgTypes/eventCommand/frame\";\r\nimport type {\r\n  Command2_ShowMessage,\r\n  ParamArray_ShowMessage,\r\n  ParamObject_ShowMessage,\r\n} from \"./types\";\r\nimport { SHOW_MESSAGE } from \"@RpgTypes/schema\";\r\n\r\nexport const makeCommandShowMessage = (\r\n  param: Partial<ParamObject_ShowMessage> | undefined,\r\n  indent: number = 0\r\n): Command2_ShowMessage => ({\r\n  code: SHOW_MESSAGE,\r\n  indent,\r\n  parameters: [\r\n    param?.facename ?? \"\",\r\n    param?.faceIndex ?? 0,\r\n    param?.background ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.speakerName ?? \"\",\r\n  ],\r\n});\r\n\r\nexport const CommandShowMessage = {\r\n  fromArray: (array) => {\r\n    return {\r\n      facename: array[0],\r\n      faceIndex: array[1],\r\n      background: array[2],\r\n      positionType: array[3],\r\n      speakerName: array[4],\r\n    };\r\n  },\r\n  toArray: (object) => {\r\n    return [\r\n      object.facename,\r\n      object.faceIndex,\r\n      object.background,\r\n      object.positionType,\r\n      object.speakerName,\r\n    ];\r\n  },\r\n  makeCommand: (param, indent = 0) => {\r\n    return makeCommandShowMessage(param, indent);\r\n  },\r\n} as const satisfies Converter<ParamObject_ShowMessage, ParamArray_ShowMessage>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command2_ShowMessage } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_MESSAGE = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    code: { type: \"integer\", enum: [101] },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"string\" }, // facename\r\n        { type: \"integer\", minimum: 0, maximum: 7 }, // faceIndex\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // background\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // positionType\r\n        { type: \"string\" }, // speakerName\r\n      ] as const,\r\n\r\n      minItems: 5,\r\n      maxItems: 5,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Command2_ShowMessage>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_AnyAudio } from \"./types\";\r\nimport type { AudioFileParams } from \"@RpgTypes/utils\";\r\n\r\nexport const SCHEMA_COMMAND_ANY_AUDIO = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        132, // ChangeBattleBGM\r\n        133, // ChangeVictoryME\r\n        139, // ChangeDefeatME\r\n        241, // PlayBGM\r\n        245, // PlayBGS\r\n        249, // PlayME\r\n        250, // PlaySE\r\n      ],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            name: { type: \"string\" },\r\n            volume: { type: \"integer\" },\r\n            pitch: { type: \"integer\" },\r\n            pan: { type: \"integer\" },\r\n          },\r\n          required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n          additionalProperties: false,\r\n        } satisfies JSONSchemaType<AudioFileParams>,\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_AnyAudio>;\r\n","import { makeAudioFileParams, type AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  Command2_PlayBGM,\r\n  Command2_PlayBGS,\r\n  Command2_PlayME,\r\n  Command2_PlaySE,\r\n  Command2_ChangeDefeatME,\r\n  Command2_ChangeVictoryME,\r\n  Command2_ChangeBattleBGM,\r\n  CommandUnion_AnyAudio,\r\n} from \"./types\";\r\nimport {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_DEFEAT_ME,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_BATTLE_BGM,\r\n} from \"@RpgTypes/schema\";\r\n\r\nexport const makeCommandAudioAny = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n) => {\r\n  return {\r\n    code,\r\n    parameters: [makeAudioFileParams(audio)] satisfies [AudioFileParams],\r\n    indent,\r\n  };\r\n};\r\n\r\nexport const makeCommandPlayBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_PlayBGM => makeCommandAudioAny(PLAY_BGM, audio, indent);\r\n\r\nexport const makeCommandPlayBGS = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_PlayBGS => makeCommandAudioAny(PLAY_BGS, audio, indent);\r\n\r\nexport const makeCommandPlayME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_PlayME => makeCommandAudioAny(PLAY_ME, audio, indent);\r\n\r\nexport const makeCommandPlaySE = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_PlaySE => makeCommandAudioAny(PLAY_SE, audio, indent);\r\n\r\nexport const makeCommandChangeBattleBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_ChangeBattleBGM =>\r\n  makeCommandAudioAny(CHANGE_BATTLE_BGM, audio, indent);\r\n\r\nexport const makeCommandChangeVictoryME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_ChangeVictoryME =>\r\n  makeCommandAudioAny(CHANGE_VICTORY_ME, audio, indent);\r\n\r\nexport const makeCommandChangeDefeatME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command2_ChangeDefeatME =>\r\n  makeCommandAudioAny(CHANGE_DEFEAT_ME, audio, indent);\r\n","export const OPERAND_CONSTANT = 0 as const;\r\nexport const OPERAND_VARIABLE = 1 as const;\r\nexport const OPERAND_RANDOM = 2 as const;\r\nexport const OPERAND_GAMEDATA = 3 as const;\r\nexport const OPERAND_SCRIPT = 4 as const;\r\n","import type {\r\n  DataOperand_Enemy,\r\n  Operand_EnemyStatus,\r\n  DataOperand_Actor,\r\n  Operand_ActorStatus,\r\n} from \"./types\";\r\n\r\nexport const getEnemyValue = (\r\n  enemy: DataOperand_Enemy,\r\n  param: Operand_EnemyStatus\r\n): number => {\r\n  switch (param[6]) {\r\n    case 0:\r\n      return enemy.hp;\r\n    case 1:\r\n      return enemy.mp;\r\n    case 10:\r\n      return enemy.tp;\r\n  }\r\n  if (param[6] >= 2 && param[6] <= 9) {\r\n    return enemy.param(param[6] - 2);\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getActorValue = (\r\n  actor: DataOperand_Actor,\r\n  param: Operand_ActorStatus\r\n) => {\r\n  switch (param[6]) {\r\n    case 0: // Level\r\n      return actor.level;\r\n    case 1: // EXP\r\n      return actor.currentExp();\r\n    case 2: // HP\r\n      return actor.hp;\r\n    case 3: // MP\r\n      return actor.mp;\r\n    case 12: // TP\r\n      return actor.tp;\r\n  }\r\n  if (param[6] >= 4 && param[6] <= 11) {\r\n    return actor.param(param[6] - 4);\r\n  }\r\n  return 0;\r\n};\r\n","export const ENEMY_PARAM_INDEX = {\r\n  HP: 0,\r\n  MP: 1,\r\n  MHP: 2,\r\n  MMP: 3,\r\n  ATK: 4,\r\n  DEF: 5,\r\n  MAT: 6,\r\n  MDF: 7,\r\n  AGI: 8,\r\n  LUK: 9,\r\n  TP: 10,\r\n} as const;\r\n","import {\r\n  OPERAND_CONSTANT,\r\n  OPERAND_RANDOM,\r\n  OPERAND_VARIABLE,\r\n  OPERAND_GAMEDATA,\r\n  OPERAND_SCRIPT,\r\n} from \"./constants\";\r\nimport type * as Type from \"./types\";\r\nimport { ENEMY_PARAM_INDEX } from \"./types/enemy/dataSource\";\r\n\r\nexport const toArrayOperandConstant = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Constant,\r\n  operation: number = 0\r\n): Type.Operand_Constatant => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_CONSTANT,\r\n  value.value,\r\n];\r\n\r\nexport const toArrayOperandVariable = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Variable,\r\n  operation: number = 0\r\n): Type.Operand_Variable => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_VARIABLE,\r\n  value.variableId,\r\n];\r\nexport const toArrayOperandRandom = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Random,\r\n  operation: number = 0\r\n): Type.Operand_Random => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_RANDOM,\r\n  value.min,\r\n  value.max,\r\n];\r\n\r\nexport const toArrayOperandScript = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Script,\r\n  operation: number = 0\r\n): Type.Operand_Script => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_SCRIPT,\r\n  value.code,\r\n];\r\nexport const toArrayOperandItemData = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ItemData,\r\n  operation: number = 0\r\n): Type.Operand_ItemData => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  value.type,\r\n  value.itemId,\r\n];\r\n\r\nexport const toArrayOperandActorStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ActorStatus,\r\n  operation: number = 0\r\n): Type.Operand_ActorStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  3,\r\n  value.index,\r\n  value.param,\r\n];\r\n\r\nexport const toArrayOperandEnemyStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Enemy,\r\n  operation: number = 0\r\n): Type.Operand_EnemyStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  4,\r\n  value.index,\r\n  ENEMY_PARAM_INDEX[value.param],\r\n];\r\n","import Ajv from \"ajv\";\r\nimport type {\r\n  Command2_CommonEvent,\r\n  Command2_ShowChoices,\r\n  Command2_ShowChoiceItem,\r\n  Command2_InputNumber,\r\n  Command2_ShowMessage,\r\n  CommandUnion_AnyAudio,\r\n} from \"./commands\";\r\nimport {\r\n  SCHEMA_COMMAND_CALL_COMMON_EVENT,\r\n  SCHEMA_COMMAND_SHOW_MESSAGE,\r\n  SCHEMA_COMMAND_SHOW_CHOICES,\r\n  SCHEMA_COMMAND_SHOW_CHOICE_ITEM,\r\n  SCHEMA_COMMAND_INPUT_NUMBER,\r\n  SCHEMA_COMMAND_ANY_AUDIO,\r\n} from \"./commands\";\r\nconst ajv = new Ajv();\r\n\r\nconst commonVent = ajv.compile(SCHEMA_COMMAND_CALL_COMMON_EVENT);\r\n\r\nconst showMessage = ajv.compile(SCHEMA_COMMAND_SHOW_MESSAGE);\r\n\r\nconst showChoices = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICES);\r\nconst showChoiceItem = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICE_ITEM);\r\n\r\nconst inputNumber = ajv.compile(SCHEMA_COMMAND_INPUT_NUMBER);\r\nconst audioCommand = ajv.compile(SCHEMA_COMMAND_ANY_AUDIO);\r\n\r\nexport const isCommandAudio = (\r\n  data: unknown\r\n): data is CommandUnion_AnyAudio => {\r\n  return audioCommand(data);\r\n};\r\n\r\nexport const isCommandCommonEvent = (\r\n  data: unknown\r\n): data is Command2_CommonEvent => {\r\n  return commonVent(data);\r\n};\r\n\r\nexport const isCommandShowChoices = (\r\n  data: unknown\r\n): data is Command2_ShowChoices => {\r\n  return showChoices(data);\r\n};\r\nexport const isCommandShowChoiceItem = (\r\n  data: unknown\r\n): data is Command2_ShowChoiceItem => {\r\n  return showChoiceItem(data);\r\n};\r\n\r\nexport const isCommandInputNumber = (\r\n  data: unknown\r\n): data is Command2_InputNumber => {\r\n  return inputNumber(data);\r\n};\r\n\r\nexport const isCommandShowMessage = (\r\n  data: unknown\r\n): data is Command2_ShowMessage => {\r\n  return showMessage(data);\r\n};\r\n"],"names":["FOLDER_AUDIO_BGM","FOLDER_AUDIO_SE","FOLDER_AUDIO_ME","FOLDER_AUDIO_BGS","FOLDER_IMG_BATTLEBACK1","FOLDER_IMG_BATTLEBACK2","FOLDER_IMG_CHACTERS","FOLDER_IMG_ENEMIES","FOLDER_IMG_FACES","FOLDER_IMG_PARALLACES","FOLDER_IMG_PICTURES","FOLDER_IMG_SV_ACTORS","FOLDER_IMG_SV_ENEMIES","FOLDER_IMG_SYSTEM","FOLDER_IMG_TILESETS","FOLDER_IMG_TITLES1","FOLDER_IMG_TITLES2","FILENAME_SYSTEM","FILENAME_ACTORS","FILENAME_CLASSES","FILENAME_SKILLS","FILENAME_ITEMS","FILENAME_WEAPONS","FILENAME_ARMORS","FILENAME_ENEMIES","FILENAME_TROOPS","FILENAME_STATES","FILENAME_ANIMATIONS","FILENAME_TILESET","FILENAME_COMMON_EVENTS","FILENAME_MAP_INFOS","FOLDER_DATA","FOLDER_IMG","FOLDER_AUDIO","FOLDER_JS","mergeWithDefaults","defaultLabels","labels","reulst","key","value","mergeDomainLabel","base","override","mergeNestedPrimitiveRecords","result","domain","domainBase","domainOverride","makeNamedItem","name","index","getVariableNames","system","getElementTypes","getEquipTypes","getSkillTypes","getWeaponTypes","getArmorTypes","getParamNames","AUTHOR_RMMZ","MODULE_TRAIT","MODULE_DATA","MODULE_SYSTEM","TRAIT_ELEMENT_RATE","TRAIT_DEBUFF_RATE","TRAIT_STATE_RATE","TRAIT_STATE_RESIST","TRAIT_PARAM","TRAIT_XPARAM","TRAIT_SPARAM","TRAIT_ATTACK_ELEMENT","TRAIT_ATTACK_STATE","TRAIT_ATTACK_SPEED","TRAIT_ATTACK_TIMES","TRAIT_ATTACK_SKILL","TRAIT_SKILL_TYPE_ADD","TRAIT_SKILL_TYPE_SEAL","TRAIT_SKILL_ADD","TRAIT_SKILL_SEAL","TRAIT_EQUIP_WEAPON_TYPE","TRAIT_EQUIP_ARMOR_TYPE","TRAIT_EQUIP_LOCK","TRAIT_EQUIP_SEAL","TRAIT_SLOT_TYPE","TRAIT_ACTION_PLUS","TRAIT_SPECIAL_FLAG","TRAIT_COLLAPSE_TYPE","TRAIT_PARTY_ABILITY","COLLAPS_NORMAL","COLLAPS_BOSS","COLLAPS_INSTANT","COLLAPS_NONE","PARTY_ABILITY_ENCOUNTER_HALF","PARTY_ABILITY_ENCOUNTER_NONE","PARTY_ABILITY_CANCEL_SURPRISE","PARTY_ABILITY_RAISE_PREEMPTIVE","PARTY_ABILITY_GOLD_DOUBLE","PARTY_ABILITY_DROP_ITEM_DOUBLE","FLAG_ID_AUTO_BATTLE","FLAG_ID_GUARD","FLAG_ID_SUBSTITUTE","FLAG_ID_PRESERVE_TP","EXTRA_PARAM_HIT","EXTRA_PARAM_EVA","EXTRA_PARAM_CRI","EXTRA_PARAM_CEV","EXTRA_PARAM_MEV","EXTRA_PARAM_MRF","EXTRA_PARAM_CNT","EXTRA_PARAM_HRG","EXTRA_PARAM_MRG","EXTRA_PARAM_TRG","REGULAR_PARAM_MAX_HP","REGULAR_PARAM_MAX_MP","REGULAR_PARAM_ATK","REGULAR_PARAM_DEF","REGULAR_PARAM_MATK","REGULAR_PARAM_MDEF","REGULAR_PARAM_AGI","REGULAR_PARAM_LUK","SPECIAL_PARAM_TGR","SPECIAL_PARAM_GRD","SPECIAL_PARAM_REC","SPECIAL_PARAM_PHA","SPECIAL_PARAM_MCR","SPECIAL_PARAM_TCR","SPECIAL_PARAM_PDR","SPECIAL_PARAM_MDR","SPECIAL_PARAM_FDR","SPECIAL_PARAM_EXR","regularParamName","paramIndex","extraParamName","specialParamName","foldCollapsOptions","options","global","foldPartyAbilityOptions","foldRegularParam","param","foldExtraParam","xparam","foldSpecialParams","specialParams","foldSpecialFlag","label","traitDomain","sourceKey","fn","buildCollapsSource","SRC_TRAIT_COLLAPS","col","buildPartyAbilitySource","SRC_TRAIT_PARTY_ABILITY","buildRegularParamSource","SRC_PARAMS_REGULAR","buildExtraParamSource","SRC_PARAMS_EXTRA","buildSpecialParamSource","SRC_PARAMS_SPECIAL","buildSpecialFlagSource","SRC_TRAIT_SPECIAL_FLAG","FORMAT_NAME","FORMAT_PARAM_RATE_MUL","FORMAT_PARAM_RATE_PLUS","FORMAT_PARAM_VALUE","LABEL_SET_TRAIT","PLACEHOLDER_VALUE","PLACEHOLDER_NAME","TraitDescriptor","code","format","dataSource","trait","resolveName","text","allowed","m","soruceError","nameError","invalidPlaceHolder","resolveTraitLabels","defineTraitElementRate","defineTraitDebuffRate","defineTraitStateRate","defineTraitStateResist","defineTraitRegularParam","defineTraitExtraParam","defineTraitSpecialParam","defineTraitAttackElement","defineTraitAttackState","defineTraitAttackSpeed","defineTraitAttackTimes","defineTraitAttackSkill","defineTraitSkillTypeAdd","defineTraitSkillTypeSeal","defineTraitSkillAdd","defineTraitSkillSeal","defineTraitEquipWeaponType","defineTraitEquipArmorType","defineTraitEquipLock","defineTraitEquipSeal","defineTraitSlotType","defineTraitActionPlus","defineTraitSpecialFlag","defineTraitCollapseType","defineTraitPartyAbility","validate","defineTrait","srcElement","SRC_ELEMENTS","srcData","srcTrait","src","srcSystem","SRC_DATA_STATE","SRC_DATA_SKILL","SRC_WEAPON_TYPES","SRC_ARMOR_TYPES","TYPENAME_TRAIT","SCHEMA_TRAIT","makeActorData","actor","SCHEMA_DATA_ACTOR","normalizeDataActor","data","makeArmorData","armor","SCHEMA_DATA_ARMMOR","makeClassData","SCHEMA_DATA_CLASS","makeStateData","SCHEMA_DATA_STATE","LABELS_DATA_WEAPON","makeWeaponData","weapon","makeDamage","SCHEMA_DATA_WEAPON","makeDropItem","dropItem","makeEnemyAction","action","makeEnemyData","_a","SCHEMA_DATA_ENEMY","makeItemData","item","makeSkillData","skill","SCHEMA_DATA_SKILL","SCHEMA_DATA_ITEM","HITTYPE_CERTAIN","HITTYPE_PHYSICAL","HITTYPE_MAGICAL","FORMAT_GROW","FORMAT_STATE","FORMAT_RECOVER","FORMAT_ADD_BUFF","LABEL_SET_ITEM_EFFECT","EFFECT_RECOVER_HP","EFFECT_RECOVER_MP","EFFECT_GAIN_TP","EFFECT_ADD_STATE","EFFECT_REMOVE_STATE","EFFECT_ADD_BUFF","EFFECT_ADD_DEBUFF","EFFECT_REMOVE_BUFF","EFFECT_REMOVE_DEBUFF","EFFECT_SPECIAL","EFFECT_GROW","EFFECT_LEARN_SKILL","EFFECT_COMMON_EVENT","SPECIAL_EFFECT_ESCAPE","validAsciiKey","sanitizeKey","testUnknonwKey","joinSourceKey","isValid","source","SRC_DATA_ACTOR","SRC_DATA_VARIABLE","SRC_DATA_MAP","SRC_DATA_ENEMY","SRC_DATA_ITEMS","SRC_DATA_WEAPON","SRC_DATA_ARMOR","SRC_DATA_CLASS","SRC_DATA_COMMON_EVNET","SRC_DATA_TROOP","SRC_COLOR","SRC_EQUIP_TYPES","SRC_SWITCHES","SRC_SKILL_TYPES","PLACEHOLDER_VALUE1","PLACEHOLDER_VALUE2","ItemEffectDescriptor","codeId","description","effect","formatItemEffectText","effectDefine","resolveItemEffectLabels","defineEffectRecoverHp","defineEffectRecoverMp","defineEffectGainTp","defineEffectAddState","defineEffectRemoveState","defineEffectAddBuff","defineEffectAddDebuff","defineEffectRemoveBuff","defineEffectRemoveDebuff","defineEffectLearnSkill","defineEffectCommonEvent","regularParam","defineEffect","baseLabel","defineEffectGrow","DEFAULT_ITEM_LABELS","DEFAULT_SKILL_LABELS","DEFAULT_USABLE_ITEM_LABELS","LABEL_SET_DATA","DEFAULT_DAMAGE_LABELS","damage","SCHEMA_DAMAGE","ajv","Ajv","enemy","state","class_","isDataItem","isDataSkill","isDataActor","isDataArmor","isDataWeapon","isDataEnemy","isDataState","isDataClass","NO_OPERATION","SHOW_MESSAGE","SHOW_MESSAGE_BODY","SHOW_CHOICES","SHOW_CHOICES_ITEM","INPUT_NUMBER","SELECT_ITEM","SHOW_SCROLLING_TEXT","SHOW_SCROLLING_TEXT_BODY","COMMENT","COMMENT_BODY","SKIP","CONDITIONAL_BRANCH","CONDITIONAL_BRANCH_ELSE","LOOP","LOOP_BREAK","EXIT_EVENT_PROCESSING","COMMON_EVENT","LABEL","LABEL_JUMP","CONTROL_SWITCHES","CONTROL_VARIABLES","CONTROL_SELF_SWITCH","CONTROL_TIMER","CHANGE_GOLD","CHANGE_ITEMS","CHANGE_WEAPONS","CHANGE_ARMORS","CHANGE_PARTY_MEMBER","CHANGE_BATTLE_BGM","CHANGE_VICTORY_ME","CHANGE_SAVE_ACCESS","CHANGE_MENU_ACCESS","CHANGE_ENCOUNTER","CHANGE_FORMATION_ACCESS","CHANGE_WINDOW_COLOR","CHANGE_DEFEAT_ME","CHANGE_VEHICLE_BGM","TRANSFER_PLAYER","SET_VEHICLE_LOCATION","SET_EVENT_LOCATION","SCROLL_MAP","SET_MOVEMENT_ROUTE","GET_ONOFF_VEHICLE","CHANGE_TRANSPARENCY","SHOW_ANIMATION","SHOW_BALLOON_ICON","ERASE_EVENT","CHANGE_PLAYER_FOLLOWERS","GATHER_FOLLOWERS","FADEOUT_SCREEN","FADEIN_SCREEN","TINT_SCREEN","FLASH_SCREEN","SHAKE_SCREEN","WAIT","SHOW_PICTURE","MOVE_PICTURE","ROTATE_PICTURE","TINT_PICTURE","ERASE_PICTURE","SET_WEATHER_EFFECT","PLAY_BGM","FADEOUT_BGM","SAVE_BGM","RESUME_BGM","PLAY_BGS","FADEOUT_BGS","PLAY_ME","PLAY_SE","STOP_SE","PLAY_MOVIE","CHANGE_TILESET","CHANGE_BATTLE_BACKGROUND","CHANGE_PARALLAX","GET_LOCATION_INFO","BATTLE_PROCESSING","SHOP_PROCESSING","SHOP_PROCESSING_BODY","NAME_INPUT_PROCESSING","CHANGE_HP","CHANGE_MP","CHANGE_TP","RECOVER_ALL","CHANGE_EXP","CHANGE_NAME","CHANGE_CLASS","CHANGE_ACTOR_IMAGES","CHANGE_VEHICLE_IMAGE","CHANGE_NICKNAME","CHANGE_PROFILE","CHANGE_ENEMY_HP","CHANGE_ENEMY_MP","CHANGE_ENEMY_STATE","ENEMY_RECOVER_ALL","ENEMY_APPEAR","ENEMY_TRANSFORM","SHOW_BATTLE_ANIMATION","FORCE_ACTION","ABORT_BATTLE","OPEN_MENU_SCREEN","CHANGE_ENEMY_TP","OPEN_SAVE_SCREEN","GAME_OVER","RETURN_TO_TITLE_SCREEN","SCRIPT_EVAL","SCRIPT_EVAL_BODY","PLUGIN_COMMAND_MV","PLUGIN_COMMAND_MZ","ROUTE_END","ROUTE_MOVE_DOWN","ROUTE_MOVE_LEFT","ROUTE_MOVE_RIGHT","ROUTE_MOVE_UP","ROUTE_MOVE_LOWER_L","ROUTE_MOVE_LOWER_R","ROUTE_MOVE_UPPER_L","ROUTE_MOVE_UPPER_R","ROUTE_MOVE_RANDOM","ROUTE_MOVE_TOWARD","ROUTE_MOVE_AWAY","ROUTE_MOVE_FORWARD","ROUTE_MOVE_BACKWARD","ROUTE_JUMP","ROUTE_WAIT","ROUTE_TURN_DOWN","ROUTE_TURN_LEFT","ROUTE_TURN_RIGHT","ROUTE_TURN_UP","ROUTE_TURN_90D_R","ROUTE_TURN_90D_L","ROUTE_TURN_180D","ROUTE_TURN_90D_R_L","ROUTE_TURN_RANDOM","ROUTE_TURN_TOWARD","ROUTE_TURN_AWAY","ROUTE_SWITCH_ON","ROUTE_SWITCH_OFF","ROUTE_CHANGE_SPEED","ROUTE_CHANGE_FREQ","ROUTE_WALK_ANIME_ON","ROUTE_WALK_ANIME_OFF","ROUTE_STEP_ANIME_ON","ROUTE_STEP_ANIME_OFF","ROUTE_DIR_FIX_ON","ROUTE_DIR_FIX_OFF","ROUTE_THROUGH_ON","ROUTE_THROUGH_OFF","ROUTE_TRANSPARENT_ON","ROUTE_TRANSPARENT_OFF","ROUTE_CHANGE_IMAGE","ROUTE_CHANGE_OPACITY","ROUTE_CHANGE_BLEND_MODE","ROUTE_PLAY_SE","ROUTE_SCRIPT","createEventCommand","indent","makeMapEvent","makeMapEventIamge","makeEventPageCondition","arg","makeMapEventPage","SCHEMA_DATA_MAP_INFO","makeMapName","mapId","makeMapInfoData","info","makeMapData","map","makeCommonEventData","makeTroopData","makeTroopMember","makeTroopEventConditions","mapInfo","isDataMapInfo","makeSystemAdvanced","advanced","SCHEMA_SYSTEM_ADVANCED","makeAudioFileParams","audioFileParams","makeSoundsArray","sounds","DEFAULT_SYSTEM_LABELS_BOOLEAN","MockSystemLabelDataTypes","createNoteEntity","makeRegex","readNoteObject","readNoteEx","readNote","note","regex","match","replaceNote","transformFunction","_subString","newText","getNoteValue","targetKey","setNoteValue","newValue","createControlCharFormat","char","id","fromStringArray","array","getControlChars","CTRL_CHAR_ACTOR","CTRL_CHAR_VARIABLE","createActorControlChars","actors","createSystemVariableControlChars","pair","DEFAULT_GLOBAL_LABELS","LABEL_REGISTRY_JP","makeCommand2_CommonEvent","toArrayCommonEvent","fromArrayCommonEvent","object","SCHEMA_COMMAND_CALL_COMMON_EVENT","toArrayInputNumber","fromArrayInputNumber","makeCommandInputNumber","SCHEMA_COMMAND_INPUT_NUMBER","SCHEMA_COMMAND_SCROLL_TEXT_HEAD","SCHEMA_COMMAND_SCROLL_TEXT_BODY","makeCommand2_ShowChoiceItem","fromArraySetupChoiceItem","toArraySetupChoiceItem","fromArraySetupChoice","toArraySetupChoice","makeCommandSetupChoice","SCHEMA_COMMAND_SHOW_CHOICE_ITEM","SCHEMA_COMMAND_SHOW_CHOICES","makeCommandShowMessage","CommandShowMessage","SCHEMA_COMMAND_SHOW_MESSAGE","SCHEMA_COMMAND_ANY_AUDIO","makeCommandAudioAny","audio","makeCommandPlayBGM","makeCommandPlayBGS","makeCommandPlayME","makeCommandPlaySE","makeCommandChangeBattleBGM","makeCommandChangeVictoryME","makeCommandChangeDefeatME","OPERAND_CONSTANT","OPERAND_VARIABLE","OPERAND_RANDOM","OPERAND_GAMEDATA","OPERAND_SCRIPT","getEnemyValue","getActorValue","ENEMY_PARAM_INDEX","toArrayOperandConstant","target","operation","toArrayOperandVariable","toArrayOperandRandom","toArrayOperandScript","toArrayOperandItemData","toArrayOperandActorStatus","toArrayOperandEnemyStatus","commonVent","showMessage","showChoices","showChoiceItem","inputNumber","audioCommand","isCommandAudio","isCommandCommonEvent","isCommandShowChoices","isCommandShowChoiceItem","isCommandInputNumber","isCommandShowMessage"],"mappings":"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"}