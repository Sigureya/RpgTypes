{"version":3,"file":"rpgTypes.cjs.js","sources":["../../src/libs/system/members/advanced/advanced.ts","../../src/libs/utils/types/audioFileParams/make.ts","../../src/libs/system/members/soundArray/make.ts","../../src/libs/system/members/terms/basic/make.ts","../../src/libs/system/members/terms/commands/make.ts","../../src/libs/system/members/terms/messages/make.ts","../../src/libs/system/members/terms/make.ts","../../src/libs/system/members/vehicle/make.ts","../../src/libs/system/members/menuCommands/make.ts","../../src/libs/system/members/itemCategories/make.ts","../../src/libs/system/setting/editor/make.ts","../../src/libs/system/booleanOptions.ts","../../src/libs/system/validate.ts","../../src/libs/system/members/testBattler/schema.ts","../../src/libs/system/members/attackMotion/schema.ts","../../src/libs/system/size.ts","../../src/libs/system/make.ts","../../src/libs/system/getSystemTypeNames.ts","../../src/libs/namedItemSource/constants.ts","../../src/libs/namedItemSource/format/core/rule/rule.ts","../../src/libs/namedItemSource/format/core/detectErrors.ts","../../src/libs/namedItemSource/format/core/sourceIdentifier/sourceId.ts","../../src/libs/namedItemSource/format/joinItemsSource.ts","../../src/libs/namedItemSource/format/applyFormat.ts","../../src/libs/namedItemSource/format/core/namedItem/namedItem.ts","../../src/libs/system/sourceId/constants.ts","../../src/libs/system/sourceId/sourceId.ts","../../src/libs/system/namedItems.ts","../../src/libs/rpg/labels/default.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/collaps/collaps.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/collaps/constants.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/partyAbility/partyAbility.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/specialFlags/specialFlags.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/specialFlags/constants.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/paramExtra/extraParam.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/paramExtra/constants.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/paramRegular/regularParam.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/paramRegular/constants.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/paramSpecial/specialParam.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/paramSpecial/constants.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/default.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/constants/sourceId.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/resolveLabels.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/constants/traitCode.ts","../../src/libs/rpg/data/main/traitContainers/trait/format.ts","../../src/libs/rpg/data/main/traitContainers/actor/schema.ts","../../src/libs/rpg/data/sourceConstants.ts","../../src/libs/rpg/data/main/traitContainers/armor/schema.ts","../../src/libs/rpg/data/main/traitContainers/class/schema.ts","../../src/libs/rpg/data/main/traitContainers/state/state.ts","../../src/libs/rpg/data/main/traitContainers/state/schema.ts","../../src/libs/rpg/data/main/traitContainers/weapon/schema.ts","../../src/libs/rpg/data/main/traitContainers/enemy/enemy.ts","../../src/libs/rpg/data/main/traitContainers/enemy/schema.ts","../../src/libs/rpg/data/main/members/damage/damageDefault.ts","../../src/libs/rpg/data/main/members/damage/make.ts","../../src/libs/rpg/data/main/usableItems/skill.ts","../../src/libs/rpg/data/main/usableItems/schema.ts","../../src/libs/rpg/data/main/usableItems/types/itemEffect/labels/defaultLabelSet.ts","../../src/libs/rpg/data/main/usableItems/types/itemEffect/define.ts","../../src/libs/rpg/data/main/usableItems/types/itemEffect/constants/effectCode.ts","../../src/libs/rpg/data/main/defaultDataLabels.ts","../../src/libs/rpg/data/main/validate.ts","../../src/libs/rpg/data/event/map/event/condition/make.ts","../../src/libs/rpg/data/event/map/event/make.ts","../../src/libs/rpg/data/event/map/mapInfo/schema.ts","../../src/libs/rpg/data/event/map/schema.ts","../../src/libs/rpg/data/event/map/event/condition/schema.ts","../../src/libs/rpg/data/event/map/event/eventCommand/moveRoute/schema.ts","../../src/libs/rpg/data/event/validate.ts","../../src/libs/rpg/data/note/note.ts","../../src/libs/rpg/data/controlChars/controlChars.ts","../../src/libs/rpg/labelRegistryDefault.ts","../../src/libs/eventCommand/validate.ts","../../src/libs/eventCommand/commands/actor/changeText/schema.ts","../../src/libs/eventCommand/commands/message/scrollText/schema.ts","../../src/libs/eventCommand/commands/audio/play/schema.ts","../../src/libs/eventCommand/unionSchema.ts","../../src/libs/eventCommand/commands/flow/callCommonEvent/schema.ts","../../src/libs/eventCommand/commands/message/setupChoice/schema.ts","../../src/libs/eventCommand/commands/message/inputNumber/schema.ts","../../src/libs/eventCommand/commands/message/showMessage/schema.ts","../../src/libs/eventCommand/commands/audio/play/make.ts","../../src/libs/eventCommand/commands/message/comment/make.ts","../../src/libs/rpg/data/event/map/event/eventCommand/eventCommandCodes.ts","../../src/libs/eventCommand/commands/message/inputNumber/make.ts","../../src/libs/eventCommand/commands/message/scrollText/make.ts","../../src/libs/eventCommand/commands/script/make.ts","../../src/libs/eventCommand/commands/variable/types/enemy/dataSource.ts","../../src/libs/eventCommand/commands/flow/controlSwtches/make.ts","../../src/libs/eventCommand/commands/flow/callCommonEvent/make.ts","../../src/libs/eventCommand/utils/clone/clone.ts","../../src/libs/rpg/data/main/usableItems/types/labels/item/itemDefault.ts","../../src/libs/rpg/data/main/usableItems/types/labels/skill/skillDefault.ts","../../src/libs/system/systemLabels.ts","../../src/libs/rpg/data/main/usableItems/types/labels/usableItemDefault.ts","../../src/libs/folderNames/data/fileNames.ts","../../src/libs/folderNames/folderName.ts","../../src/libs/folderNames/asset/audio.ts","../../src/libs/folderNames/asset/images.ts","../../src/libs/rpg/data/main/usableItems/types/hitType/constants.ts","../../src/libs/rpg/data/main/traitContainers/weapon/weaponDefault.ts","../../src/libs/eventCommand/commands/variable/constants.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/items/partyAbility/constants.ts","../../src/libs/rpg/data/event/map/event/eventCommand/types/domains/moveRoute/constants.ts","../../src/libs/rpg/data/main/members/damage/schema.ts","../../src/libs/system/members/advanced/schema.ts","../../src/libs/rpg/data/main/traitContainers/trait/types/schema.ts","../../src/libs/rpg/data/main/usableItems/types/itemEffect/constants/specialEffect.ts","../../src/libs/rpg/data/main/traitContainers/actor/actor.ts","../../src/libs/rpg/data/main/traitContainers/armor/armor.ts","../../src/libs/eventCommand/commands/message/setupChoice/make.ts","../../src/libs/rpg/data/dataToCtrlChar.ts","../../src/libs/rpg/data/controlChars/constants.ts","../../src/libs/rpg/data/event/map/event/eventCommand/make.ts","../../src/libs/rpg/data/main/traitContainers/trait/selectItems/namedItems.ts","../../src/libs/rpg/data/main/usableItems/types/itemEffect/format.ts","../../src/libs/eventCommand/commands/message/showMessage/convert.ts","../../src/libs/eventCommand/commands/variable/getValue.ts","../../src/libs/rpg/data/controlChars/getContolChars.ts","../../src/libs/eventCommand/validateAudio.ts","../../src/libs/eventCommand/validateTextBody.ts","../../src/libs/rpg/data/main/usableItems/item.ts","../../src/libs/rpg/data/main/traitContainers/class/class.ts","../../src/libs/eventCommand/commands/actor/changeText/make.ts","../../src/libs/rpg/data/event/makeEvent.ts","../../src/libs/rpg/data/event/map/make.ts","../../src/libs/rpg/data/event/map/mapInfo/make.ts","../../src/libs/rpg/data/main/traitContainers/weapon/make.ts","../../src/libs/eventCommand/commands/variable/convert.ts"],"sourcesContent":["export interface System_Advanced {\r\n  gameId: number;\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  uiAreaWidth: number;\r\n  uiAreaHeight: number;\r\n  windowOpacity: number;\r\n  screenScale: number;\r\n\r\n  numberFontFilename: string;\r\n  mainFontFilename: string;\r\n  fallbackFonts: string;\r\n  fontSize: number;\r\n}\r\n\r\nexport const makeSystemAdvanced = (\r\n  advanced: Partial<System_Advanced> = {}\r\n): System_Advanced => {\r\n  return {\r\n    gameId: advanced.gameId ?? 0,\r\n    screenWidth: advanced.screenWidth ?? 0,\r\n    screenHeight: advanced.screenHeight ?? 0,\r\n    uiAreaWidth: advanced.uiAreaWidth ?? 0,\r\n    uiAreaHeight: advanced.uiAreaHeight ?? 0,\r\n    windowOpacity: advanced.windowOpacity ?? 0,\r\n    screenScale: advanced.screenScale ?? 1,\r\n\r\n    numberFontFilename: advanced.numberFontFilename ?? \"\",\r\n    mainFontFilename: advanced.mainFontFilename ?? \"\",\r\n    fallbackFonts: advanced.fallbackFonts ?? \"\",\r\n    fontSize: advanced.fontSize ?? 28,\r\n  };\r\n};\r\n","import type { AudioFileParams } from \"./audioFileParams\";\r\n\r\nexport const makeAudioFileParams = (\r\n  audioFileParams: Partial<AudioFileParams> = {}\r\n): AudioFileParams => {\r\n  return {\r\n    name: audioFileParams.name ?? \"\",\r\n    volume: audioFileParams.volume ?? 100,\r\n    pitch: audioFileParams.pitch ?? 100,\r\n    pan: audioFileParams.pan ?? 0,\r\n  };\r\n};\r\n","import type { System_SoundsArray, System_SoundsObject } from \"./types\";\r\nimport { makeAudioFileParams } from \"@RpgTypes/utils\";\r\n\r\nexport const makeSoundsArray = (\r\n  sounds: Partial<System_SoundsObject> = {}\r\n): System_SoundsArray => {\r\n  return [\r\n    makeAudioFileParams(sounds.cursor),\r\n    makeAudioFileParams(sounds.ok),\r\n    makeAudioFileParams(sounds.cancel),\r\n    makeAudioFileParams(sounds.buzzer),\r\n    makeAudioFileParams(sounds.equip),\r\n    makeAudioFileParams(sounds.save),\r\n    makeAudioFileParams(sounds.load),\r\n    makeAudioFileParams(sounds.battleStart),\r\n    makeAudioFileParams(sounds.escape),\r\n    makeAudioFileParams(sounds.enemyAttack),\r\n    makeAudioFileParams(sounds.enemyDamage),\r\n    makeAudioFileParams(sounds.enemyCollapse),\r\n    makeAudioFileParams(sounds.bossCollapes1),\r\n    makeAudioFileParams(sounds.bossCollapes2),\r\n    makeAudioFileParams(sounds.actorDamage),\r\n    makeAudioFileParams(sounds.actorCollapse),\r\n    makeAudioFileParams(sounds.playRecovery),\r\n    makeAudioFileParams(sounds.playMiss),\r\n    makeAudioFileParams(sounds.playEvasion),\r\n    makeAudioFileParams(sounds.playMagicEvasion),\r\n    makeAudioFileParams(sounds.playReflection),\r\n    makeAudioFileParams(sounds.shop),\r\n    makeAudioFileParams(sounds.useItem),\r\n    makeAudioFileParams(sounds.useSkill),\r\n  ];\r\n};\r\n\r\nexport const makeSoundsObject = (\r\n  sounds: System_SoundsArray\r\n): System_SoundsObject => {\r\n  return {\r\n    cursor: sounds[0],\r\n    ok: sounds[1],\r\n    cancel: sounds[2],\r\n    buzzer: sounds[3],\r\n    equip: sounds[4],\r\n    save: sounds[5],\r\n    load: sounds[6],\r\n    battleStart: sounds[7],\r\n    escape: sounds[8],\r\n    enemyAttack: sounds[9],\r\n    enemyDamage: sounds[10],\r\n    enemyCollapse: sounds[11],\r\n    bossCollapes1: sounds[12],\r\n    bossCollapes2: sounds[13],\r\n    actorDamage: sounds[14],\r\n    actorCollapse: sounds[15],\r\n    playRecovery: sounds[16],\r\n    playMiss: sounds[17],\r\n    playEvasion: sounds[18],\r\n    playMagicEvasion: sounds[19],\r\n    playReflection: sounds[20],\r\n    shop: sounds[21],\r\n    useItem: sounds[22],\r\n    useSkill: sounds[23],\r\n  };\r\n};\r\n","import type { Terms_Basic, Terms_BasicArray } from \"./types\";\r\n\r\nexport const makeTermsBasic = (\r\n  terms: Partial<Terms_Basic>\r\n): Terms_BasicArray => {\r\n  return [\r\n    terms.level ?? \"Level\",\r\n    terms.levelA ?? \"Level\",\r\n    terms.hp ?? \"HP\",\r\n    terms.hpA ?? \"HP\",\r\n    terms.mp ?? \"MP\",\r\n    terms.mpA ?? \"MP\",\r\n    terms.tp ?? \"TP\",\r\n    terms.tpA ?? \"TP\",\r\n    terms.experience ?? \"EXP\",\r\n    terms.exp ?? \"EXP\",\r\n  ];\r\n};\r\n\r\nexport const makeTermsBasicFromArray = (\r\n  array: Terms_BasicArray\r\n): Terms_Basic => {\r\n  return {\r\n    level: array[0],\r\n    levelA: array[1],\r\n    hp: array[2],\r\n    hpA: array[3],\r\n    mp: array[4],\r\n    mpA: array[5],\r\n    tp: array[6],\r\n    tpA: array[7],\r\n    experience: array[8],\r\n    exp: array[9],\r\n  };\r\n};\r\n","import type { Terms_Command } from \"./types\";\r\nimport type { Terms_CommandArray } from \"./types\";\r\n\r\nexport const makeTermsCommandArray = (\r\n  param: Partial<Terms_Command>\r\n): Terms_CommandArray => {\r\n  return makeTermsCommandArrayWithNulls(param, \"\");\r\n};\r\n\r\nexport const makeTermsCommandArrayWithNulls = <T extends \"\" | null>(\r\n  param: Partial<Terms_Command>,\r\n  empty: T\r\n): Terms_CommandArray<T> => {\r\n  return [\r\n    param.fight ?? \"Fight\",\r\n    param.escape ?? \"Escape\",\r\n    param.attack ?? \"Attack\",\r\n    param.guard ?? \"Guard\",\r\n    param.item ?? \"Item\",\r\n    param.skill ?? \"Skill\",\r\n    param.equip ?? \"Equip\",\r\n    param.status ?? \"Status\",\r\n    param.formation ?? \"Formation\",\r\n    param.save ?? \"Save\",\r\n    param.gameEnd ?? \"Game End\",\r\n    param.options ?? \"Options\",\r\n    param.weapon ?? \"Weapon\",\r\n    param.armor ?? \"Armor\",\r\n    param.keyItem ?? \"Key Item\",\r\n    param.equip2 ?? \"Equip2\",\r\n    param.optimize ?? \"Optimize\",\r\n    param.clear ?? \"Clear\",\r\n    param.newGame ?? \"New Game\",\r\n    param.continue_ ?? \"Continue\",\r\n    empty,\r\n    param.toTitle ?? \"To Title\",\r\n    param.cancel ?? \"Cancel\",\r\n    empty,\r\n    param.buy ?? \"Buy\",\r\n    param.sell ?? \"Sell\",\r\n  ];\r\n};\r\n\r\nexport const makeTermsCommandFromArray = <T extends \"\" | null = \"\">(\r\n  param: Terms_CommandArray<T>\r\n): Terms_Command => {\r\n  return {\r\n    fight: param[0],\r\n    escape: param[1],\r\n    attack: param[2],\r\n    guard: param[3],\r\n    item: param[4],\r\n    skill: param[5],\r\n    equip: param[6],\r\n    status: param[7],\r\n    formation: param[8],\r\n    save: param[9],\r\n    gameEnd: param[10],\r\n    options: param[11],\r\n    weapon: param[12],\r\n    armor: param[13],\r\n    keyItem: param[14],\r\n    equip2: param[15],\r\n    optimize: param[16],\r\n    clear: param[17],\r\n    newGame: param[18],\r\n    continue_: param[19],\r\n    toTitle: param[21],\r\n    cancel: param[22],\r\n\r\n    buy: param[24],\r\n    sell: param[25],\r\n  };\r\n};\r\n","import type { Terms_Messages } from \"./types\";\r\n\r\nconst validate = (msg: unknown, fallback: string): string => {\r\n  return typeof msg === \"string\" ? msg : fallback;\r\n};\r\n\r\nexport const makeTermsMessages = (\r\n  msg: Partial<Terms_Messages>\r\n): Terms_Messages => {\r\n  return {\r\n    actionFailure: validate(msg.actionFailure, \"Action failed.\"),\r\n    actorDamage: validate(msg.actorDamage, \"%1 took %2 damage.\"),\r\n    actorRecovery: validate(msg.actorRecovery, \"%1 recovered %2 HP.\"),\r\n    actorGain: validate(msg.actorGain, \"%1 gained %2.\"),\r\n    actorLoss: validate(msg.actorLoss, \"%1 lost %2.\"),\r\n    actorDrain: validate(msg.actorDrain, \"%1 drained %2 HP.\"),\r\n    actorNoDamage: validate(msg.actorNoDamage, \"%1 was not damaged.\"),\r\n    actorNoHit: validate(msg.actorNoHit, \"%1 was not hit.\"),\r\n    alwaysDash: validate(msg.alwaysDash, \"Always dash.\"),\r\n    bgmVolume: validate(msg.bgmVolume, \"BGM volume\"),\r\n    bgsVolume: validate(msg.bgsVolume, \"BGS volume\"),\r\n    commandRemember: validate(msg.commandRemember, \"Command remember.\"),\r\n    criticalToActor: validate(msg.criticalToActor, \"%1 dealt %2 damage to %3.\"),\r\n    criticalToEnemy: validate(msg.criticalToEnemy, \"%1 dealt %2 damage to %3.\"),\r\n    counterAttack: validate(msg.counterAttack, \"%1 countered!\"),\r\n    debuffAdd: validate(msg.debuffAdd, \"%1's %2 was lowered.\"),\r\n    defeat: validate(msg.defeat, \"Defeat.\"),\r\n    enemyDamage: validate(msg.enemyDamage, \"%1 took %2 damage.\"),\r\n    enemyDrain: validate(msg.enemyDrain, \"%1 drained %2 HP.\"),\r\n    enemyGain: validate(msg.enemyGain, \"%1 gained %2.\"),\r\n    enemyLoss: validate(msg.enemyLoss, \"%1 lost %2.\"),\r\n    enemyNoDamage: validate(msg.enemyNoDamage, \"%1 was not damaged.\"),\r\n    enemyNoHit: validate(msg.enemyNoHit, \"%1 was not hit.\"),\r\n    enemyRecovery: validate(msg.enemyRecovery, \"%1 recovered %2 HP.\"),\r\n    evasion: validate(msg.evasion, \"%1 evaded the attack!\"),\r\n    autosave: validate(msg.autosave, \"Autosave\"),\r\n    escapeFailure: validate(msg.escapeFailure, \"Escape failed.\"),\r\n    escapeStart: validate(msg.escapeStart, \"%1 started to escape!\"),\r\n    emerge: validate(msg.emerge, \"%1 appeared!\"),\r\n    expNext: validate(msg.expNext, \"Next level in %1 EXP.\"),\r\n    expTotal: validate(msg.expTotal, \"Total EXP: %1\"),\r\n    file: validate(msg.file, \"File\"),\r\n    buffAdd: validate(msg.buffAdd, \"%1's %2 was raised.\"),\r\n    buffRemove: validate(msg.buffRemove, \"%1's %2 was lowered.\"),\r\n    obtainExp: validate(msg.obtainExp, \"%1 EXP obtained.\"),\r\n    obtainGold: validate(msg.obtainGold, \"%1 gold obtained.\"),\r\n    obtainItem: validate(msg.obtainItem, \"%1 obtained %2.\"),\r\n    obtainSkill: validate(msg.obtainSkill, \"%1 learned %2.\"),\r\n    levelUp: validate(msg.levelUp, \"%1 leveled up!\"),\r\n    partyName: validate(msg.partyName, \"Party\"),\r\n    loadMessage: validate(msg.loadMessage, \"Load %1?\"),\r\n    meVolume: validate(msg.meVolume, \"ME volume\"),\r\n    possession: validate(msg.possession, \"Possession\"),\r\n    preemptive: validate(msg.preemptive, \"%1 attacked first!\"),\r\n    saveMessage: validate(msg.saveMessage, \"Save %1?\"),\r\n    seVolume: validate(msg.seVolume, \"SE volume\"),\r\n    magicEvasion: validate(msg.magicEvasion, \"%1 evaded the magic!\"),\r\n    magicReflection: validate(msg.magicReflection, \"%1 reflected the magic!\"),\r\n    substitute: validate(msg.substitute, \"%1 took the hit!\"),\r\n    surprise: validate(msg.surprise, \"%1 surprised the enemy!\"),\r\n    touchUI: validate(msg.touchUI, \"Touch UI\"),\r\n    useItem: validate(msg.useItem, \"%1 used %2.\"),\r\n    victory: validate(msg.victory, \"Victory!\"),\r\n  };\r\n};\r\n","import type { Terms_ParamNames, Terms_ParamNamesArray } from \"./types\";\r\n\r\nexport const makeParamNamesArray = (\r\n  param: Partial<Terms_ParamNames>\r\n): Terms_ParamNamesArray => {\r\n  return [\r\n    param.mhp ?? \"\",\r\n    param.mmp ?? \"\",\r\n    param.atk ?? \"\",\r\n    param.def ?? \"\",\r\n    param.mat ?? \"\",\r\n    param.mdf ?? \"\",\r\n    param.agi ?? \"\",\r\n    param.luk ?? \"\",\r\n    param.hit ?? \"\",\r\n    param.eva ?? \"\",\r\n  ];\r\n};\r\n","import { makeAudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { Data_Vehicle } from \"./types\";\r\n\r\nexport const makeVehicleData = (\r\n  vehicle: Partial<Data_Vehicle> = {}\r\n): Data_Vehicle => ({\r\n  characterIndex: vehicle.characterIndex ?? 0,\r\n  characterName: vehicle.characterName ?? \"\",\r\n  bgm: makeAudioFileParams(vehicle.bgm ?? {}),\r\n  startMapId: vehicle.startMapId ?? 0,\r\n  startX: vehicle.startX ?? 0,\r\n  startY: vehicle.startY ?? 0,\r\n});\r\n","import type { MenuCommandsEnabledArray } from \"./types\";\r\nimport type { MenuCommandsEnabled } from \"./types\";\r\n\r\nexport const makeMenuCommandsEnabled = (\r\n  param: Partial<MenuCommandsEnabled> = {}\r\n): MenuCommandsEnabledArray => {\r\n  return [\r\n    param.item ?? true,\r\n    param.skill ?? true,\r\n    param.equip ?? true,\r\n    param.status ?? true,\r\n    param.formation ?? true,\r\n    param.save ?? true,\r\n  ];\r\n};\r\n\r\nexport const makeMenuCommandsEnabledFromArray = (\r\n  array: MenuCommandsEnabledArray\r\n): MenuCommandsEnabled => {\r\n  return {\r\n    item: array[0],\r\n    skill: array[1],\r\n    equip: array[2],\r\n    status: array[3],\r\n    formation: array[4],\r\n    save: array[5],\r\n  };\r\n};\r\n","import type { ItemCategories, ItemCategoriesArray } from \"./types\";\r\n\r\nexport const makeItemCategories = (\r\n  param: Partial<ItemCategories> = {}\r\n): ItemCategoriesArray => {\r\n  return [\r\n    param.item ?? true,\r\n    param.weapon ?? true,\r\n    param.armor ?? true,\r\n    param.keyItem ?? true,\r\n  ];\r\n};\r\nexport const makeItemCategoriesFromArray = (\r\n  param: ItemCategoriesArray\r\n): ItemCategories => {\r\n  return {\r\n    item: param[0],\r\n    weapon: param[1],\r\n    armor: param[2],\r\n    keyItem: param[3],\r\n  };\r\n};\r\n","import type { EditorSettings } from \"./types\";\r\n\r\nexport const makeEditorSetting = (\r\n  param: Partial<EditorSettings> = {}\r\n): EditorSettings => {\r\n  return {\r\n    jsonFormatLevel: param.jsonFormatLevel ?? 0,\r\n    messageWidth1: param.messageWidth1 ?? 816,\r\n    messageWidth2: param.messageWidth2 ?? 816,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_BooleanOptions } from \"./subset\";\r\n\r\nexport const makeBooleanOptions = (\r\n  options: Partial<System_BooleanOptions> = {}\r\n): System_BooleanOptions => {\r\n  return {\r\n    optAutosave: options.optAutosave ?? true,\r\n    optDisplayTp: options.optDisplayTp ?? true,\r\n    optDrawTitle: options.optDrawTitle ?? true,\r\n    optExtraExp: options.optExtraExp ?? true,\r\n    optFloorDeath: options.optFloorDeath ?? true,\r\n    optFollowers: options.optFollowers ?? true,\r\n    optKeyItemsNumber: options.optKeyItemsNumber ?? true,\r\n    optSideView: options.optSideView ?? true,\r\n    optSlipDeath: options.optSlipDeath ?? true,\r\n    optTransparent: options.optTransparent ?? true,\r\n    optMessageSkip: options.optMessageSkip ?? true,\r\n    optSplashScreen: options.optSplashScreen ?? true,\r\n  } satisfies Record<keyof System_BooleanOptions, boolean>;\r\n};\r\n\r\nexport const SCHEMA_SYSTEM_BOOLEAN_OPTIONS = {\r\n  type: \"object\",\r\n  additionalProperties: true,\r\n  required: [\r\n    \"optAutosave\",\r\n    \"optDisplayTp\",\r\n    \"optDrawTitle\",\r\n    \"optExtraExp\",\r\n    \"optFloorDeath\",\r\n    \"optFollowers\",\r\n    \"optKeyItemsNumber\",\r\n    \"optSideView\",\r\n    \"optSlipDeath\",\r\n    \"optTransparent\",\r\n    \"optMessageSkip\",\r\n    \"optSplashScreen\",\r\n  ] satisfies Array<keyof System_BooleanOptions>,\r\n  properties: {\r\n    optAutosave: { type: \"boolean\" },\r\n    optDisplayTp: { type: \"boolean\" },\r\n    optDrawTitle: { type: \"boolean\" },\r\n    optExtraExp: { type: \"boolean\" },\r\n    optFloorDeath: { type: \"boolean\" },\r\n    optFollowers: { type: \"boolean\" },\r\n    optKeyItemsNumber: { type: \"boolean\" },\r\n    optSideView: { type: \"boolean\" },\r\n    optSlipDeath: { type: \"boolean\" },\r\n    optTransparent: { type: \"boolean\" },\r\n    optMessageSkip: { type: \"boolean\" },\r\n    optSplashScreen: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<System_BooleanOptions>;\r\n","import Ajv from \"ajv\";\r\nimport type { System_BooleanOptions, System_ImageSize } from \"./subset\";\r\nimport { SCHEMA_SYSTEM_BOOLEAN_OPTIONS } from \"./booleanOptions\";\r\nimport { SCHEMA_SYSTEM_TEST_BATTLER } from \"./members/testBattler/schema\";\r\nimport type { AttackMotion, TestBattler } from \"./members\";\r\nimport { SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION } from \"./members/attackMotion/schema\";\r\nimport { SCHEMA_SYSTEM_IMAGE_SIZE } from \"./size\";\r\n\r\nconst ajv = new Ajv({ strict: false });\r\nconst booleanOptions = ajv.compile(SCHEMA_SYSTEM_BOOLEAN_OPTIONS);\r\n\r\nexport const isSystemBooleanOptions = (\r\n  data: object\r\n): data is System_BooleanOptions => {\r\n  return booleanOptions(data);\r\n};\r\n\r\nconst testBattler = ajv.compile(SCHEMA_SYSTEM_TEST_BATTLER);\r\n\r\nexport const isTestBattler = (data: unknown): data is TestBattler => {\r\n  return testBattler(data);\r\n};\r\n\r\nconst attackMotion = ajv.compile(SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION);\r\nexport const isAttackMotion = (data: unknown): data is AttackMotion => {\r\n  return attackMotion(data);\r\n};\r\nconst imageSize = ajv.compile(SCHEMA_SYSTEM_IMAGE_SIZE);\r\nexport const isImageSize = (data: unknown): data is System_ImageSize => {\r\n  return imageSize(data);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { TestBattler } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_TEST_BATTLER = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"actorId\", \"equips\", \"level\"],\r\n  properties: {\r\n    actorId: { type: \"integer\" },\r\n\r\n    level: { type: \"integer\", minimum: 1 },\r\n    equips: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<TestBattler>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AttackMotion } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"type\", \"weaponImageId\"],\r\n  properties: {\r\n    type: { type: \"number\" },\r\n    weaponImageId: { type: \"number\" },\r\n  },\r\n} as const satisfies JSONSchemaType<AttackMotion>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_ImageSize } from \"./subset\";\r\n\r\nexport const SCHEMA_SYSTEM_IMAGE_SIZE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"tileSize\", \"faceSize\", \"iconSize\"],\r\n  properties: {\r\n    tileSize: { type: \"integer\", minimum: 0 },\r\n    faceSize: { type: \"integer\", minimum: 0 },\r\n    iconSize: { type: \"integer\", minimum: 0 },\r\n  },\r\n} as const satisfies JSONSchemaType<System_ImageSize>;\r\n","import type { AudioFileParams } from \"@RpgTypes/utils\";\r\nimport { makeAudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  System_Terms,\r\n  System_TermsPartial,\r\n  Terms_Messages,\r\n  TestBattler,\r\n} from \"./members\";\r\nimport {\r\n  makeItemCategories,\r\n  makeMenuCommandsEnabled,\r\n  makeParamNamesArray,\r\n  makeSoundsArray,\r\n  makeSystemAdvanced,\r\n  makeTermsBasic,\r\n  makeTermsCommand,\r\n  makeTermsMessages,\r\n  makeVehicleData,\r\n} from \"./members\";\r\nimport type { Data_System } from \"./system\";\r\nimport type { EditorSettings } from \"./setting\";\r\nimport { makeEditorSetting } from \"./setting\";\r\nimport type { SystemDataFragments } from \"./systemSegments\";\r\nimport type {\r\n  System_DataNames,\r\n  System_Debug,\r\n  System_Images,\r\n  System_GameInitial,\r\n  System_Bgm,\r\n  System_BooleanOptions,\r\n  System_ImageSize,\r\n} from \"./subset\";\r\nimport { makeBooleanOptions } from \"./booleanOptions\";\r\nimport { isImageSize, isTestBattler } from \"./validate\";\r\n\r\nexport const makeSystemData = (\r\n  p: Partial<SystemDataFragments>\r\n): Data_System => {\r\n  const vehicles = p.vehicles ?? {};\r\n\r\n  const dataNames: Partial<System_DataNames> = p.dataNames ?? {};\r\n  const debug: Partial<System_Debug> = p.debug ?? {};\r\n  const images: Partial<System_Images> = p.images ?? {};\r\n  const gameInit: Partial<System_GameInitial> = p.gameInit ?? {};\r\n  const bgm: Partial<System_Bgm> = p.bgm ?? {};\r\n\r\n  const size = cloneSize(p.size);\r\n\r\n  return {\r\n    ...(makeBooleanOptions(p.options) satisfies Record<\r\n      string & keyof System_BooleanOptions,\r\n      boolean\r\n    >),\r\n    currencyUnit: p.texts?.currencyUnit ?? \"\",\r\n    gameTitle: p.texts?.gameTitle ?? \"\",\r\n    sounds: makeSoundsArray(p.sounds) satisfies AudioFileParams[],\r\n    editor: makeEditorSetting(p.editing) satisfies Record<\r\n      keyof EditorSettings,\r\n      number\r\n    >,\r\n    advanced: makeSystemAdvanced(p.advanced),\r\n    title1Name: images.title1Name ?? \"\",\r\n    title2Name: images.title2Name ?? \"\",\r\n    battleback1Name: images.battleback1Name ?? \"\",\r\n    battleback2Name: images.battleback2Name ?? \"\",\r\n\r\n    armorTypes: cloneStringArray(dataNames.armorTypes),\r\n    elements: cloneStringArray(dataNames.elements),\r\n    equipTypes: cloneStringArray(dataNames.equipTypes),\r\n    weaponTypes: cloneStringArray(dataNames.weaponTypes),\r\n    skillTypes: cloneStringArray(dataNames.skillTypes),\r\n    switches: cloneStringArray(dataNames.switches),\r\n    variables: cloneStringArray(dataNames.variables),\r\n    magicSkills: cloneNumberArray([]),\r\n    airship: makeVehicleData(vehicles.airship),\r\n    boat: makeVehicleData(vehicles.boat),\r\n    ship: makeVehicleData(vehicles.ship),\r\n    defeatMe: makeAudioFileParams(p.me?.defeatMe),\r\n    gameoverMe: makeAudioFileParams(p.me?.gameoverMe),\r\n    titleBgm: makeAudioFileParams(bgm.titleBgm),\r\n\r\n    tileSize: size.tileSize,\r\n    faceSize: size.faceSize,\r\n    iconSize: size.iconSize,\r\n    versionId: 1,\r\n    attackMotions: [],\r\n    testBattlers: cloneObjectArray(debug.testBattlers, cloneTestBattler),\r\n    battleBgm: makeAudioFileParams(bgm.battleBgm),\r\n    victoryMe: makeAudioFileParams(p.me?.victoryMe),\r\n    editMapId: debug.editMapId ?? 0,\r\n    locale: \"\",\r\n    startMapId: gameInit.startMapId ?? 0,\r\n    startX: gameInit.startX ?? 0,\r\n    startY: gameInit.startY ?? 0,\r\n    testTroopId: debug.testTroopId ?? 0,\r\n    windowTone: [0, 0, 0, 0],\r\n    terms: makeTerms(p.terms ?? {}) satisfies System_Terms,\r\n    itemCategories: makeItemCategories(p.itemCategories) satisfies boolean[],\r\n    partyMembersArray: cloneNumberArray(gameInit.partyMembersArray),\r\n    battleSystem: 0,\r\n    battlerHue: 0,\r\n    battlerName: debug.battlerName ?? \"\",\r\n    menuCommands: makeMenuCommandsEnabled(p.menuComamnds) satisfies boolean[],\r\n  };\r\n};\r\n\r\nexport default makeSystemData;\r\n\r\nconst makeTerms = (terms: System_TermsPartial): System_Terms => {\r\n  return {\r\n    basic: makeTermsBasic(terms.basic ?? {}) satisfies string[],\r\n    commands: makeTermsCommand(terms.commands ?? {}) satisfies string[],\r\n    params: makeParamNamesArray(terms.params ?? {}) satisfies string[],\r\n    messages: makeTermsMessages(terms.messages ?? {}) satisfies Record<\r\n      keyof Terms_Messages,\r\n      string\r\n    >,\r\n  };\r\n};\r\n\r\nconst cloneStringArray = (array?: ReadonlyArray<string>) => {\r\n  return array ? [...array] : [];\r\n};\r\n\r\nconst cloneNumberArray = (array?: ReadonlyArray<number>) => {\r\n  return array ? [...array] : [];\r\n};\r\n\r\nconst cloneSize = (data: unknown): System_ImageSize => {\r\n  return isImageSize(data)\r\n    ? {\r\n        tileSize: data.tileSize,\r\n        faceSize: data.faceSize,\r\n        iconSize: data.iconSize,\r\n      }\r\n    : {\r\n        tileSize: 48,\r\n        faceSize: 144,\r\n        iconSize: 32,\r\n      };\r\n};\r\n\r\nconst cloneObjectArray = <T>(\r\n  array: ReadonlyArray<unknown> | undefined,\r\n  fn: (data: unknown) => T\r\n) => {\r\n  return array ? array.map(fn) : [];\r\n};\r\n\r\nconst cloneTestBattler = (data: unknown): TestBattler => {\r\n  return isTestBattler(data)\r\n    ? {\r\n        actorId: data.actorId,\r\n        equips: cloneNumberArray(data.equips),\r\n        level: data.level,\r\n      }\r\n    : {\r\n        actorId: 0,\r\n        equips: [],\r\n        level: 1,\r\n      };\r\n};\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type { Data_System } from \"./system\";\r\nimport type { System_ParamNames } from \"./subset\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<Data_System, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<Data_System, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<Data_System, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<Data_System, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<Data_System, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<Data_System, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getParamNames = (system: System_ParamNames): Data_NamedItem[] => {\r\n  return system.terms.params.map(makeNamedItem);\r\n};\r\n\r\nexport const getSwitches = (\r\n  system: Pick<Data_System, \"switches\">\r\n): Data_NamedItem[] => {\r\n  return system.switches.map(makeNamedItem);\r\n};\r\n","export const AUTHOR_RMMZ = \"rmmz\" as const;\r\nexport const SRC_COLOR = \"colors\" as const;\r\n","import type {\r\n  FormatRule,\r\n  FormatField,\r\n  FormatRuleCompiled,\r\n  SourceKeyConcept,\r\n  FormatItemMapper,\r\n  FormatItemMapperCompiled,\r\n} from \"./types\";\r\n\r\nexport const compileFormatRule = <T, SoruceKey extends SourceKeyConcept>(\r\n  rule: FormatRule<T, SoruceKey>\r\n): FormatRuleCompiled<T, SoruceKey> => ({\r\n  properties: rule.placeHolders.map<FormatField<T>>((placeHolder) => ({\r\n    dataKey: placeHolder,\r\n    placeHolder: `{${placeHolder}}`,\r\n  })),\r\n  itemMappers: getItemMappersFromRule(rule).map(compileFormatItemMapper),\r\n});\r\n\r\nexport const getItemMappersFromRule = <T, SoruceKey extends SourceKeyConcept>(\r\n  rule: FormatRule<T, SoruceKey>\r\n): ReadonlyArray<FormatItemMapper<T, SoruceKey>> => {\r\n  const list = rule.itemMappers ?? [];\r\n  return rule.itemMapper ? [...list, rule.itemMapper] : list;\r\n};\r\n\r\nexport const getPlaceHolderKeys = <T>(rule: FormatRule<T>): Set<string> => {\r\n  const set = new Set<string>(rule.placeHolders);\r\n  if (rule.itemMapper) {\r\n    set.add(rule.itemMapper.placeHolder);\r\n  }\r\n  if (rule.itemMappers) {\r\n    rule.itemMappers.forEach((mapper) => {\r\n      set.add(mapper.placeHolder);\r\n    });\r\n  }\r\n\r\n  return set;\r\n};\r\n\r\nexport const compileFormatItemMapper = <T, SoruceKey extends SourceKeyConcept>(\r\n  itemMappers: FormatItemMapper<T, SoruceKey>\r\n): FormatItemMapperCompiled<T, SoruceKey> => {\r\n  return {\r\n    placeHolder: `{${itemMappers.placeHolder}}`,\r\n    kindKey: itemMappers.kindKey,\r\n    dataIdKey: itemMappers.dataIdKey,\r\n    map: itemMappers.map.map((pair) => ({\r\n      kindId: pair.kindId,\r\n      sourceId: pair.sourceId,\r\n    })),\r\n  };\r\n};\r\n\r\nexport const execFormatRule = <\r\n  Schema,\r\n  Data extends Schema,\r\n  SoruceKey extends SourceKeyConcept\r\n>(\r\n  baseText: string,\r\n  data: Data,\r\n  rule: FormatRuleCompiled<Schema, SoruceKey>\r\n): string => {\r\n  return rule.properties.reduce(\r\n    (text, r) => replacePlaceholder(text, data, r),\r\n    baseText\r\n  );\r\n};\r\n\r\nconst replacePlaceholder = <Schema, Data extends Schema>(\r\n  baseText: string,\r\n  data: Data,\r\n  rule: FormatField<Schema>\r\n): string => {\r\n  const value = data[rule.dataKey];\r\n  if (value === undefined || value === null) {\r\n    return baseText;\r\n  }\r\n  return baseText.replaceAll(rule.placeHolder, String(value));\r\n};\r\n","import type {\r\n  FormatErrorLabels,\r\n  FormatLimits,\r\n  FormatErrorGroup,\r\n  FormatErrorItem,\r\n} from \"./formatErrorTypes\";\r\nimport type { FormatInput, FormatWithSource } from \"./types\";\r\nimport type { FormatRule, SourceKeyConcept, FormatItemMapper } from \"./rule\";\r\nimport { getItemMappersFromRule, getPlaceHolderKeys } from \"./rule\";\r\n\r\nexport const isValidFormatErrorGroup = (\r\n  formatError: FormatErrorGroup\r\n): boolean => {\r\n  return (\r\n    formatError.syntaxErrors.length === 0 &&\r\n    formatError.semanticErrors.length === 0\r\n  );\r\n};\r\n\r\nexport const collectFormatErrors = <\r\n  T extends object,\r\n  Src extends SourceKeyConcept\r\n>(\r\n  formatList: ReadonlyArray<FormatInput>,\r\n  formatRule: FormatRule<T, Src>,\r\n  errorTexts: FormatErrorLabels,\r\n  limits: FormatLimits = {\r\n    placeHolderMaxLength: 50,\r\n    formatMaxLength: 200,\r\n  }\r\n): FormatErrorGroup[] => {\r\n  return formatList.reduce<FormatErrorGroup[]>((acc, format) => {\r\n    const errors = detectFormatErrors(format, formatRule, errorTexts, limits);\r\n    if (!isValidFormatErrorGroup(errors)) {\r\n      acc.push(errors);\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nexport const detectFormatErrors = <\r\n  T extends object,\r\n  Src extends SourceKeyConcept\r\n>(\r\n  format: FormatInput,\r\n  formatRule: FormatRule<T, Src>,\r\n  errorTexts: FormatErrorLabels,\r\n  limits: FormatLimits = {\r\n    placeHolderMaxLength: 50,\r\n    formatMaxLength: 200,\r\n  }\r\n): FormatErrorGroup => {\r\n  if (format.pattern.length >= limits.formatMaxLength) {\r\n    return {\r\n      formatLabel: format.label,\r\n      syntaxErrors: [\r\n        {\r\n          message: errorTexts.formatVeryLong,\r\n          reason: format.pattern.slice(0, limits.formatMaxLength),\r\n        },\r\n      ],\r\n      semanticErrors: [],\r\n    };\r\n  }\r\n  const dataSourceErrorResult = detectItemMapperErrors(\r\n    format,\r\n    formatRule,\r\n    errorTexts\r\n  );\r\n  const invalidPlaceholdersResult = detectInvalidPlaceholders(\r\n    format.pattern,\r\n    formatRule,\r\n    errorTexts,\r\n    limits.placeHolderMaxLength\r\n  );\r\n  return {\r\n    formatLabel: format.label,\r\n    syntaxErrors: invalidPlaceholdersResult,\r\n    semanticErrors: dataSourceErrorResult,\r\n  };\r\n};\r\n\r\nconst detectInvalidPlaceholders = <T extends object>(\r\n  format: string,\r\n  rule: FormatRule<T>,\r\n  errorTexts: FormatErrorLabels,\r\n  placeHolderMaxLength: number\r\n): FormatErrorItem[] => {\r\n  const matched = Array.from(format.matchAll(/\\{([.a-zA-Z0-9]+)\\}/g));\r\n  const placeHolderKeys: ReadonlySet<string> = getPlaceHolderKeys(rule);\r\n  return matched.reduce<FormatErrorItem[]>((acc, item) => {\r\n    const text: string = item[1];\r\n\r\n    if (text.length === 0) {\r\n      return acc;\r\n    }\r\n    if (text.length > placeHolderMaxLength) {\r\n      acc.push({\r\n        message: errorTexts.longPlaceHolder,\r\n        reason: text.slice(0, placeHolderMaxLength),\r\n      });\r\n      return acc;\r\n    }\r\n    if (!placeHolderKeys.has(text)) {\r\n      acc.push({\r\n        message: errorTexts.extraPlaceHolder,\r\n        reason: text,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nconst detectItemMapperErrors = <T extends object>(\r\n  format: FormatWithSource,\r\n  formatRule: FormatRule<T>,\r\n  errorTexts: FormatErrorLabels\r\n): FormatErrorItem[] => {\r\n  return getItemMappersFromRule(formatRule).reduce<FormatErrorItem[]>(\r\n    (rule, item) => {\r\n      const error = checkItemMapperSourceError(format, item, errorTexts);\r\n      if (error) {\r\n        rule.push(error);\r\n      }\r\n      return rule;\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nconst checkItemMapperSourceError = <T, SourceKey extends SourceKeyConcept>(\r\n  format: FormatWithSource,\r\n  rule: FormatItemMapper<T, SourceKey>,\r\n  errorTexts: FormatErrorLabels\r\n): FormatErrorItem | undefined => {\r\n  const includedName: boolean = format.pattern.includes(rule.placeHolder);\r\n  const hasSource: boolean = !!format.dataSource;\r\n  if (!includedName && hasSource) {\r\n    return {\r\n      message: errorTexts.missingName,\r\n      reason: rule.placeHolder,\r\n    };\r\n  }\r\n  if (includedName && !hasSource) {\r\n    return {\r\n      message: errorTexts.missingSourceId,\r\n      reason: rule.placeHolder,\r\n    };\r\n  }\r\n  return undefined;\r\n};\r\n","import type { SourceIdentifier } from \"./types\";\r\n\r\nexport const joinSoruceId = (source: SourceIdentifier): string => {\r\n  return `${source.author}.${source.module}.${source.kind}`;\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  FormatCompiled,\r\n  FormatLabelResolved,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"./core\";\r\nimport { joinSoruceId } from \"./core\";\r\n\r\nexport const joinItemsSoruce = <Key>(\r\n  formatList: ReadonlyArray<FormatLabelResolved<Key>>,\r\n  namedItemSources: ReadonlyArray<NamedItemSource>\r\n): Map<Key, FormatCompiled> => {\r\n  const sourceMap = mappingNamedItems(namedItemSources);\r\n  return formatList.reduce<Map<Key, FormatCompiled>>((acc, label) => {\r\n    const entry = buildFinalFormatEntry(label, sourceMap);\r\n    acc.set(label.targetKey, entry);\r\n    return acc;\r\n  }, new Map());\r\n};\r\n\r\nconst buildFinalFormatEntry = <T>(\r\n  format: FormatLabelResolved<T>,\r\n  sourceMap: ReadonlyMap<string, NamedItemSource>\r\n): FormatCompiled => {\r\n  const source = resolveDataSource(format.dataSource, sourceMap);\r\n  return {\r\n    patternCompiled: format.pattern,\r\n    label: format.label,\r\n    data: source ? source.items : undefined,\r\n  };\r\n};\r\n\r\nconst resolveDataSource = (\r\n  source: SourceIdentifier | undefined,\r\n  sourceMap: ReadonlyMap<string, NamedItemSource>\r\n): NamedItemSource | undefined => {\r\n  if (!source) {\r\n    return undefined;\r\n  }\r\n  return sourceMap.get(joinSoruceId(source));\r\n};\r\n\r\nconst mappingNamedItems = (\r\n  list: ReadonlyArray<NamedItemSource>\r\n): Map<string, NamedItemSource> => {\r\n  return list.reduce<Map<string, NamedItemSource>>((map, item) => {\r\n    const newItem: NamedItemSource = {\r\n      items: cloneItems(item.items), // 余計な情報の削除を兼ねてコピー\r\n      source: item.source,\r\n      label: item.label,\r\n    };\r\n    map.set(joinSoruceId(item.source), newItem);\r\n    return map;\r\n  }, new Map());\r\n};\r\n\r\nconst cloneItems = (list: ReadonlyArray<Data_NamedItem>): Data_NamedItem[] => {\r\n  return list.map<Data_NamedItem>((item) => ({ id: item.id, name: item.name }));\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  FormatCompiled,\r\n  FormatResult,\r\n  FormatRuleCompiled,\r\n} from \"./core\";\r\nimport { execFormatRule, makeItemName } from \"./core\";\r\nimport type { FormatLookupKeys } from \"./core/accessor\";\r\n\r\nconst xxxxx = <Key, Schema, Data extends Schema>(\r\n  data: Data,\r\n  rule: FormatRuleCompiled<Schema>,\r\n  sourceMap: Map<Key, FormatCompiled>,\r\n  fallback: FormatCompiled,\r\n  lookup: FormatLookupKeys<Data, Key>\r\n): FormatResult => {\r\n  const key: Key = lookup.extractMapKey(data);\r\n  const entry: FormatCompiled = sourceMap.get(key) ?? fallback;\r\n\r\n  return {\r\n    label: entry.label,\r\n    text: applyFormatRule(data, entry.data, rule, entry.patternCompiled, (d) =>\r\n      lookup.extractDataId(d)\r\n    ),\r\n  };\r\n};\r\n\r\nconst formatItemName = <Schema, Data extends Schema>(\r\n  text: string,\r\n  data: Data,\r\n  rule: FormatRuleCompiled<Schema>,\r\n  list: ReadonlyArray<Data_NamedItem>,\r\n  getDataId: (data: Data) => number\r\n): string => {\r\n  const itemName: string = makeItemName(list, getDataId(data));\r\n  return rule.itemMappers.reduce((currentText, itemMapper) => {\r\n    return currentText.replaceAll(itemMapper.placeHolder, itemName);\r\n  }, text);\r\n};\r\n\r\nexport const applyFormatRule = <Schema, Data extends Schema>(\r\n  data: Data,\r\n  list: ReadonlyArray<Data_NamedItem> | undefined,\r\n  rule: FormatRuleCompiled<Schema>,\r\n  format: string,\r\n  getDataId: (data: Data) => number\r\n): string => {\r\n  const text: string = execFormatRule(format, data, rule);\r\n  return list ? formatItemName(text, data, rule, list, getDataId) : text;\r\n};\r\n","import type { Data_NamedItem } from \"./types\";\r\n\r\nexport const findItemById = <T extends Data_NamedItem>(\r\n  dataId: number,\r\n  list: ReadonlyArray<T>\r\n): T | undefined => {\r\n  const item = list[dataId];\r\n  if (item) {\r\n    if (item.id === dataId) {\r\n      return item;\r\n    }\r\n  }\r\n\r\n  return list.find((i) => i.id === dataId);\r\n};\r\n\r\nexport const makeItemName = (\r\n  list: ReadonlyArray<Data_NamedItem>,\r\n  dataId: number\r\n): string => {\r\n  const item = findItemById(dataId, list);\r\n  return item ? item.name : `?data[${dataId}]`;\r\n};\r\n","export const MODULE_SYSTEM = \"system\" as const;\r\n\r\nexport const SRC_WEAPON_TYPES = \"weaponTypes\" as const;\r\nexport const SRC_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_ELEMENTS = \"elements\" as const;\r\n\r\nexport const SRC_VARIABLE = \"variables\" as const;\r\nexport const SRC_SWITCHES = \"switches\" as const;\r\n","import { AUTHOR_RMMZ } from \"@RpgTypes/namedItemSource\";\r\nimport type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport {\r\n  MODULE_SYSTEM,\r\n  SRC_ELEMENTS,\r\n  SRC_ARMOR_TYPES,\r\n  SRC_EQUIP_TYPES,\r\n  SRC_SKILL_TYPES,\r\n  SRC_SWITCHES,\r\n  SRC_VARIABLE,\r\n  SRC_WEAPON_TYPES,\r\n} from \"./constants\";\r\n\r\nexport const systemElementsSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_ELEMENTS,\r\n});\r\n\r\nexport const systemArmorTypesSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_ARMOR_TYPES,\r\n});\r\n\r\nexport const systemEquipTypesSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_EQUIP_TYPES,\r\n});\r\n\r\nexport const systemSkillTypesSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_SKILL_TYPES,\r\n});\r\n\r\nexport const systemSwitchesSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_SWITCHES,\r\n});\r\n\r\nexport const systemVariablesSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_VARIABLE,\r\n});\r\n\r\nexport const systemWeaponTypesSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_SYSTEM,\r\n  kind: SRC_WEAPON_TYPES,\r\n});\r\n","import type { NamedItemSource } from \"src/namedItemSource\";\r\n\r\nimport {\r\n  getElementTypes,\r\n  getEquipTypes,\r\n  getWeaponTypes,\r\n  getSkillTypes,\r\n  getArmorTypes,\r\n  getVariableNames,\r\n  getSwitches,\r\n} from \"./getSystemTypeNames\";\r\nimport type { Data_System } from \"./system\";\r\nimport type { SystemLabel_DataNames } from \"./systemLabels\";\r\nimport {\r\n  systemElementsSourceId,\r\n  systemEquipTypesSourceId,\r\n  systemSkillTypesSourceId,\r\n  systemWeaponTypesSourceId,\r\n  systemArmorTypesSourceId,\r\n  systemSwitchesSourceId,\r\n  systemVariablesSourceId,\r\n} from \"./sourceId\";\r\nimport type { System_DataNames } from \"./subset\";\r\n\r\nexport const defineSystemItems = (\r\n  system: System_DataNames,\r\n  label: Record<keyof System_DataNames, string>\r\n): NamedItemSource[] => {\r\n  return [\r\n    buildElementTypesSource(system, label),\r\n    buildEquipTypesSource(system, label),\r\n    buildWeaponTypesSource(system, label),\r\n    buildSkillTypesSource(system, label),\r\n    buildArmorTypesSource(system, label),\r\n    buildVariableNamesSource(system, label),\r\n    buildSwitchesSource(system, label),\r\n  ];\r\n};\r\nexport const buildArmorTypesSource = (\r\n  system: Pick<Data_System, \"armorTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getArmorTypes(system),\r\n  label: label.armorTypes,\r\n  source: systemArmorTypesSourceId(),\r\n});\r\n\r\nexport const buildElementTypesSource = (\r\n  system: Pick<Data_System, \"elements\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getElementTypes(system),\r\n  label: label.elements,\r\n  source: systemElementsSourceId(),\r\n});\r\n\r\nexport const buildEquipTypesSource = (\r\n  system: Pick<Data_System, \"equipTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getEquipTypes(system),\r\n  label: label.equipTypes,\r\n  source: systemEquipTypesSourceId(),\r\n});\r\n\r\nexport const buildSkillTypesSource = (\r\n  system: Pick<Data_System, \"skillTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSkillTypes(system),\r\n  label: label.skillTypes,\r\n  source: systemSkillTypesSourceId(),\r\n});\r\n\r\nexport const buildVariableNamesSource = (\r\n  system: Pick<Data_System, \"variables\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getVariableNames(system),\r\n  label: label.variables,\r\n  source: systemVariablesSourceId(),\r\n});\r\n\r\nexport const buildSwitchesSource = (\r\n  system: Pick<Data_System, \"switches\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSwitches(system),\r\n  label: label.switches,\r\n  source: systemSwitchesSourceId(),\r\n});\r\n\r\nexport const buildWeaponTypesSource = (\r\n  system: Pick<Data_System, \"weaponTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getWeaponTypes(system),\r\n  label: label.weaponTypes,\r\n  source: systemWeaponTypesSourceId(),\r\n});\r\n","import type { GlobalLabel } from \"./globalLabels\";\r\n\r\nexport const DEFAULT_GLOBAL_LABELS = {\r\n  id: \"識別子\",\r\n  name: \"名前\",\r\n  note: \"メモ\",\r\n  description: \"説明\",\r\n  iconIndex: \"アイコンインデックス\",\r\n  occasion: \"使用タイミング\",\r\n  params: \"パラメータ\",\r\n  repeats: \"繰り返し回数\",\r\n  scope: \"範囲\",\r\n  speed: \"速度補正\",\r\n  successRate: \"成功率\",\r\n  animationId: \"アニメーションID\",\r\n  displayType: \"表示タイプ\",\r\n  characterIndex: \"キャラクターインデックス\",\r\n  characterName: \"キャラクター名\",\r\n  effectName: \"効果名\",\r\n  faceIndex: \"顔グラフィックインデックス\",\r\n  faceName: \"顔グラフィック名\",\r\n  flashTimings: \"フラッシュタイミング\",\r\n  list: \"リスト\",\r\n  messageType: \"メッセージタイプ\",\r\n  offsetX: \"オフセットX\",\r\n  offsetY: \"オフセットY\",\r\n  overlay: \"オーバーレイ\",\r\n  priority: \"優先度\",\r\n  restriction: \"制約\",\r\n  rotation: \"回転\",\r\n  scale: \"スケール\",\r\n  soundTimings: \"サウンドタイミング\",\r\n  stepsToRemove: \"解除までの歩数\",\r\n  type: \"タイプ\",\r\n  variance: \"分散度\",\r\n  unknownCode: \"不明なコード\",\r\n  content: \"内容\",\r\n  apply: \"適用\",\r\n  turn: \"ターン\",\r\n  commonEvent: \"コモンイベント\",\r\n  normal: \"通常\",\r\n  dualWield: \"二刀流\",\r\n  bossCollaps: \"ボス崩壊\",\r\n  instantCollaps: \"即時崩壊\",\r\n  noneCollaps: \"崩壊なし\",\r\n  escape: \"逃走\",\r\n} as const satisfies GlobalLabel;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./constants\";\r\nimport type { CollapsOptionLabels } from \"./labels\";\r\nimport type {\r\n  Data_NamedItem,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"src/namedItemSource\";\r\nimport { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\nimport { type GlobalLabel } from \"src/rpg\";\r\nimport { MODULE_TRAIT, SRC_TRAIT_COLLAPS } from \"src/rpg\";\r\n\r\nexport const collapsSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_TRAIT_COLLAPS,\r\n});\r\n\r\nexport const defineTraitCollapseType = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource => ({\r\n  items: collapsOptionsToArray(labels.options, global),\r\n  label: labels.domainName,\r\n  source: collapsSourceId(),\r\n});\r\n\r\nexport const collapsOptionsToArray = (\r\n  options: CollapsOptionLabels,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","import { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\nimport type { Data_NamedItem, SourceIdentifier } from \"src/namedItemSource\";\r\nimport {\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n} from \"./constants\";\r\nimport type { PartyAbilityOptionLabels } from \"./labels\";\r\nimport { MODULE_TRAIT, SRC_TRAIT_PARTY_ABILITY } from \"src/rpg\";\r\n\r\nexport const partyAbilitySourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_TRAIT_PARTY_ABILITY,\r\n});\r\n\r\nexport const partyAbilityToArray = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport {\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./constants\";\r\nimport type { SpecialFlagOptions } from \"./labels\";\r\nimport type {\r\n  Data_NamedItem,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"src/namedItemSource\";\r\nimport { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\nimport { MODULE_TRAIT, SRC_TRAIT_SPECIAL_FLAG } from \"src/rpg\";\r\n\r\nexport const defineTraitSpecialFlag = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => ({\r\n  items: specialFlagToArray(label.options),\r\n  label: label.domainName,\r\n  source: specialFlagSourceId(),\r\n});\r\n\r\nexport const specialFlagSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_TRAIT_SPECIAL_FLAG,\r\n});\r\n\r\nexport const specialFlagToArray = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","import {\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n} from \"./constants\";\r\nimport type { ExtraParamLabels } from \"./labels\";\r\nimport type {\r\n  Data_NamedItem,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"src/namedItemSource\";\r\nimport { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\nimport { MODULE_TRAIT, SRC_PARAMS_EXTRA } from \"src/rpg\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\n\r\nexport const extraParamSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_PARAMS_EXTRA,\r\n});\r\n\r\nexport const defineTraitExtraParam = (\r\n  xparam: TraitLabelWithOption<ExtraParamLabels>\r\n): NamedItemSource => ({\r\n  items: extraParamsToArray(xparam.options),\r\n  label: xparam.domainName,\r\n  source: extraParamSourceId(),\r\n});\r\n\r\nexport const extraParamsToArray = (\r\n  xparam: ExtraParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","import type {\r\n  Data_NamedItem,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"src/namedItemSource\";\r\nimport { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\n\r\nimport { MODULE_TRAIT, SRC_PARAMS_REGULAR } from \"src/rpg\";\r\nimport {\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./constants\";\r\nimport type { RegularParamLabels } from \"./labels\";\r\n\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\n\r\nexport const regularParamSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_PARAMS_REGULAR,\r\n});\r\n\r\nexport const defineTraitRegularParam = (\r\n  param: TraitLabelWithOption<RegularParamLabels>\r\n): NamedItemSource => ({\r\n  items: regularParamsToArray(param.options),\r\n  label: param.domainName,\r\n  source: regularParamSourceId(),\r\n});\r\n\r\nexport const regularParamsToArray = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","import {\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_EXR,\r\n} from \"./constants\";\r\nimport type { SpecialParamLabels } from \"./labels\";\r\nimport type {\r\n  Data_NamedItem,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"src/namedItemSource\";\r\n\r\nimport { MODULE_TRAIT, SRC_PARAMS_SPECIAL } from \"src/rpg\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\n\r\nexport const specialParamSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_TRAIT,\r\n  kind: SRC_PARAMS_SPECIAL,\r\n});\r\n\r\nexport const defineTraitSpecialParam = (\r\n  specialParam: TraitLabelWithOption<SpecialParamLabels>\r\n): NamedItemSource => ({\r\n  items: specialParamsToArray(specialParam.options),\r\n  label: specialParam.domainName,\r\n  source: specialParamSourceId(),\r\n});\r\n\r\nexport const specialParamsToArray = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guardEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guardEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { TraitLabelSet } from \"./labelSet\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  RawTraitLabel,\r\n  TraitLabelWithOption,\r\n} from \"./items\";\r\n\r\nexport const FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_PARAM_RATE_MUL = \"{name} * {value}%\" as const;\r\nconst FORMAT_PARAM_RATE_PLUS = \"{name} + {value}%\" as const;\r\nexport const FORMAT_PARAM_VALUE = \"{value}\" as const;\r\n\r\nexport const LABEL_SET_TRAIT = {\r\n  domainName: \"特徴\",\r\n  options: {\r\n    regularParam: {\r\n      domainName: \"基本能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        maxHp: \"最大HP\",\r\n        maxMp: \"最大MP\",\r\n        atk: \"攻撃力\",\r\n        def: \"防御力\",\r\n        matk: \"魔法攻撃力\",\r\n        mdef: \"魔法防御力\",\r\n        agi: \"敏捷性\",\r\n        luk: \"運\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<RegularParamLabels>,\r\n    extraParam: {\r\n      domainName: \"追加能力値\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n      options: {\r\n        hitRate: \"命中率\",\r\n        evasionRate: \"回避率\",\r\n        criticalRate: \"クリティカル率\",\r\n        criticalEvasionRate: \"クリティカル回避率\",\r\n        magicEvasionRate: \"魔法回避率\",\r\n        magicReflectionRate: \"魔法反射率\",\r\n        counterAttackRate: \"反撃率\",\r\n        hpRegenerationRate: \"HP再生率\",\r\n        mpRegenerationRate: \"MP再生率\",\r\n        tpRegenerationRate: \"TP再生率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<ExtraParamLabels>,\r\n    specialParam: {\r\n      domainName: \"特殊能力値\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n      options: {\r\n        targetRate: \"狙われ率\",\r\n        guardEffectRate: \"防御効果率\",\r\n        recoveryEffectRate: \"回復効果率\",\r\n        pharmacology: \"薬の知識\",\r\n        mpCostRate: \"MP消費率\",\r\n        tpChargeRate: \"TPチャージ率\",\r\n        physicalDamageRate: \"物理ダメージ率\",\r\n        magicDamageRate: \"魔法ダメージ率\",\r\n        floorDamageRate: \"床ダメージ率\",\r\n        experienceRate: \"経験値率\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialParamLabels>,\r\n    specialFlag: {\r\n      domainName: \"特殊フラグ\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        autoBattle: \"自動戦闘\",\r\n        guard: \"防御\",\r\n        substitute: \"身代わり\",\r\n        preventEscape: \"逃走防止\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<SpecialFlagOptions>,\r\n    collaps: {\r\n      domainName: \"消滅エフェクト\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        bossCollaps: \"ボス崩壊\",\r\n        instantCollaps: \"即時崩壊\",\r\n        noneCollaps: \"崩壊なし\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<CollapsOptionLabels>,\r\n    partyAbility: {\r\n      domainName: \"パーティ能力\",\r\n      format: FORMAT_NAME,\r\n      options: {\r\n        cancelSurprise: \"不意打ち無効\",\r\n        dropItemDouble: \"アイテムドロップ2倍\",\r\n        encounterHalf: \"エンカウント半減\",\r\n        encounterNone: \"エンカウントなし\",\r\n        goldDouble: \"ゴールド2倍\",\r\n        raisePreemptive: \"先制攻撃率アップ\",\r\n      },\r\n    } as const satisfies TraitLabelWithOption<PartyAbilityOptionLabels>,\r\n    elementRate: {\r\n      domainName: \"属性有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    debuffRate: {\r\n      domainName: \"弱体有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateRate: {\r\n      domainName: \"ステート有効度\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    stateResist: {\r\n      domainName: \"ステート無効\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackElement: {\r\n      domainName: \"攻撃属性\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    attackState: {\r\n      domainName: \"攻撃ステート\",\r\n      format: FORMAT_PARAM_RATE_PLUS,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSpeed: {\r\n      domainName: \"攻撃速度補正\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    attackTimes: {\r\n      domainName: \"攻撃追加回数\",\r\n      format: FORMAT_PARAM_VALUE,\r\n    } as const satisfies RawTraitLabel,\r\n    actionPlus: {\r\n      domainName: \"行動追加\",\r\n      format: FORMAT_PARAM_RATE_MUL,\r\n    } as const satisfies RawTraitLabel,\r\n    attackSkill: {\r\n      domainName: \"攻撃スキル\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipWeaponType: {\r\n      domainName: \"装備武器タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipArmorType: {\r\n      domainName: \"装備防具タイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipLock: {\r\n      domainName: \"装備固定\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    equipSeal: {\r\n      domainName: \"装備封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    slotType: {\r\n      domainName: \"スロットタイプ\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillAdd: {\r\n      domainName: \"スキル追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeAdd: {\r\n      domainName: \"スキルタイプ追加\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n    skillTypeSeal: {\r\n      domainName: \"スキルタイプ封印\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies RawTraitLabel,\r\n  },\r\n} as const satisfies DomainLabel<TraitLabelSet>;\r\n","export const MODULE_TRAIT = \"trait\" as const;\r\n\r\nexport const SRC_PARAMS_REGULAR = \"params\" as const;\r\nexport const SRC_PARAMS_EXTRA = \"xparams\" as const;\r\nexport const SRC_PARAMS_SPECIAL = \"sparams\" as const;\r\nexport const SRC_TRAIT_COLLAPS = \"collaps\" as const;\r\nexport const SRC_TRAIT_PARTY_ABILITY = \"partyAbiility\" as const;\r\nexport const SRC_TRAIT_SPECIAL_FLAG = \"sflag\";\r\n","import {\r\n  systemArmorTypesSourceId,\r\n  systemElementsSourceId,\r\n  systemSkillTypesSourceId,\r\n  systemEquipTypesSourceId,\r\n  systemWeaponTypesSourceId,\r\n} from \"@RpgTypes/system\";\r\nimport { skillSourceId, stateSourceId } from \"src/rpg\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./constants\";\r\nimport type { TraitLabelResolved } from \"./types\";\r\nimport type { TraitLabelSet } from \"./labelSet\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RawTraitLabel,\r\n  RegularParamLabels,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  TraitLabelWithOption,\r\n} from \"./items\";\r\nimport {\r\n  collapsSourceId,\r\n  extraParamSourceId,\r\n  partyAbilitySourceId,\r\n  regularParamSourceId,\r\n  specialFlagSourceId,\r\n  specialParamSourceId,\r\n} from \"./items\";\r\n\r\nexport const resolveTraitLabels = (\r\n  labels: TraitLabelSet\r\n): TraitLabelResolved[] => {\r\n  return [\r\n    elementRate(labels.elementRate),\r\n    debuffRate(labels.debuffRate),\r\n    stateRate(labels.stateRate),\r\n    stateResist(labels.stateResist),\r\n\r\n    regularParam(labels.regularParam),\r\n    extraParam(labels.extraParam),\r\n    specialParam(labels.specialParam),\r\n    attackElement(labels.attackElement),\r\n    atttackState(labels.attackState),\r\n    attackSpeed(labels.attackSpeed),\r\n    attackTimes(labels.attackTimes),\r\n    attackSkill(labels.attackSkill),\r\n\r\n    skillTypeAdd(labels.skillTypeAdd),\r\n    skillTypeSeal(labels.skillTypeSeal),\r\n    skillAdd(labels.skillAdd),\r\n    skillSeal(labels.skillAdd),\r\n\r\n    equipWeaponType(labels.equipWeaponType),\r\n    equipArmorType(labels.equipArmorType),\r\n    equipLock(labels.equipLock),\r\n    equipSeal(labels.equipSeal),\r\n    slotType(labels.slotType),\r\n\r\n    actionPlus(labels.actionPlus),\r\n    specialFlag(labels.specialFlag),\r\n    collaps(labels.collaps),\r\n    partyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst elementRate = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ELEMENT_RATE,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst debuffRate = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_DEBUFF_RATE,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst stateRate = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_STATE_RATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst stateResist = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_STATE_RESIST,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst regularParam = (\r\n  labels: TraitLabelWithOption<RegularParamLabels>\r\n): TraitLabelResolved => ({\r\n  format: labels.format,\r\n  label: labels.domainName,\r\n  code: TRAIT_PARAM,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst extraParam = (\r\n  labels: TraitLabelWithOption<ExtraParamLabels>\r\n): TraitLabelResolved => ({\r\n  format: labels.format,\r\n  label: labels.domainName,\r\n  code: TRAIT_XPARAM,\r\n  dataSource: extraParamSourceId(),\r\n});\r\n\r\nconst specialParam = (\r\n  labels: TraitLabelWithOption<SpecialParamLabels>\r\n): TraitLabelResolved => ({\r\n  format: labels.format,\r\n  label: labels.domainName,\r\n  code: TRAIT_SPARAM,\r\n  dataSource: specialParamSourceId(),\r\n});\r\n\r\nconst attackElement = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ATTACK_ELEMENT,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst atttackState = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ATTACK_STATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst attackSpeed = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ATTACK_SPEED,\r\n});\r\n\r\nconst attackTimes = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ATTACK_TIMES,\r\n});\r\n\r\nconst attackSkill = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ATTACK_SKILL,\r\n});\r\n\r\nconst skillTypeAdd = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_SKILL_TYPE_ADD,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillTypeSeal = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_SKILL_TYPE_SEAL,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillAdd = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_SKILL_ADD,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillSeal = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_SKILL_SEAL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst equipWeaponType = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_EQUIP_WEAPON_TYPE,\r\n  dataSource: systemWeaponTypesSourceId(),\r\n});\r\n\r\nconst equipArmorType = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_EQUIP_ARMOR_TYPE,\r\n  dataSource: systemArmorTypesSourceId(),\r\n});\r\n\r\nconst equipLock = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_EQUIP_LOCK,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst equipSeal = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_EQUIP_SEAL,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst slotType = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_SLOT_TYPE,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst actionPlus = (label: RawTraitLabel): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_ACTION_PLUS,\r\n});\r\n\r\nconst specialFlag = (\r\n  labels: TraitLabelWithOption<SpecialFlagOptions>\r\n): TraitLabelResolved => ({\r\n  format: labels.format,\r\n  label: labels.domainName,\r\n  code: TRAIT_SPECIAL_FLAG,\r\n  dataSource: specialFlagSourceId(),\r\n});\r\n\r\nconst collaps = (\r\n  label: TraitLabelWithOption<CollapsOptionLabels>\r\n): TraitLabelResolved => ({\r\n  format: label.format,\r\n  label: label.domainName,\r\n  code: TRAIT_COLLAPSE_TYPE,\r\n  dataSource: collapsSourceId(),\r\n});\r\n\r\nconst partyAbility = (\r\n  labels: TraitLabelWithOption<PartyAbilityOptionLabels>\r\n): TraitLabelResolved => ({\r\n  format: labels.format,\r\n  label: labels.domainName,\r\n  code: TRAIT_PARTY_ABILITY,\r\n  dataSource: partyAbilitySourceId(),\r\n});\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","import type {\r\n  FormatErrorLabels,\r\n  FormatRule,\r\n  FormatWithSource,\r\n  Data_NamedItem,\r\n  FormatErrorGroup,\r\n  FormatInput,\r\n} from \"src/namedItemSource\";\r\nimport {\r\n  detectFormatErrors,\r\n  applyFormatRule,\r\n  compileFormatRule,\r\n} from \"src/namedItemSource\";\r\nimport type { Trait } from \"./types\";\r\n\r\nconst RULE_TRAIT = {\r\n  itemMapper: {\r\n    placeHolder: \"name\",\r\n    dataIdKey: \"dataId\",\r\n    kindKey: \"code\",\r\n    map: [],\r\n  },\r\n  placeHolders: [\"value\"],\r\n  itemMappers: [],\r\n} as const satisfies FormatRule<Trait>;\r\n\r\nexport const formatTraitText = (\r\n  descriptor: FormatWithSource,\r\n  trait: Trait,\r\n  items: ReadonlyArray<Data_NamedItem>\r\n): string => {\r\n  const rule = compileFormatRule(RULE_TRAIT);\r\n  return applyFormatRule(\r\n    trait,\r\n    items,\r\n    rule,\r\n    descriptor.pattern,\r\n    (t) => t.dataId\r\n  );\r\n};\r\n\r\nexport const detectTraitFormatErrors = (\r\n  format: FormatInput,\r\n  errorTexts: FormatErrorLabels\r\n): FormatErrorGroup => {\r\n  return detectFormatErrors(format, RULE_TRAIT, errorTexts);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Actor } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_ACTOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"nickname\",\r\n    \"battlerName\",\r\n    \"characterName\",\r\n    \"characterIndex\",\r\n    \"faceName\",\r\n    \"faceIndex\",\r\n    \"classId\",\r\n    \"initialLevel\",\r\n    \"maxLevel\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    battlerName: { type: \"string\" },\r\n    characterName: { type: \"string\" },\r\n    characterIndex: { type: \"integer\" },\r\n    faceName: { type: \"string\" },\r\n    faceIndex: { type: \"integer\", minimum: 0, maximum: 7 },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    nickname: { type: \"string\" },\r\n\r\n    profile: { type: \"string\" },\r\n    initialLevel: { type: \"integer\", minimum: 0 },\r\n    maxLevel: { type: \"integer\" },\r\n    classId: { type: \"integer\", minimum: 0 },\r\n    equips: { type: \"array\", items: { type: \"integer\" } },\r\n    note: { type: \"string\" },\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Actor>;\r\n\r\nexport const normalizeDataActor = (data: Partial<Data_Actor>): Data_Actor => {\r\n  return {\r\n    name: data.name ?? \"\",\r\n    id: data.id ?? 0,\r\n    battlerName: data.battlerName ?? \"\",\r\n    characterName: data.characterName ?? \"\",\r\n    characterIndex: data.characterIndex ?? 0,\r\n    faceName: data.faceName ?? \"\",\r\n    faceIndex: data.faceIndex ?? 0,\r\n    traits: [],\r\n    note: data.note ?? \"\",\r\n    classId: data.classId ?? 0,\r\n    nickname: data.nickname ?? \"\",\r\n    profile: data.profile ?? \"\",\r\n    equips: [],\r\n    initialLevel: data.initialLevel ?? 0,\r\n    maxLevel: data.maxLevel ?? 0,\r\n  };\r\n};\r\n","export const MODULE_DATA = \"data\" as const;\r\n\r\nexport const SRC_DATA_ACTOR = \"actor\" as const;\r\nexport const SRC_DATA_MAP = \"map\" as const;\r\nexport const SRC_DATA_ENEMY = \"enemy\" as const;\r\nexport const SRC_DATA_STATE = \"state\" as const;\r\nexport const SRC_DATA_SKILL = \"skill\" as const;\r\nexport const SRC_DATA_ITEMS = \"items\" as const;\r\nexport const SRC_DATA_WEAPON = \"weapon\" as const;\r\nexport const SRC_DATA_ARMOR = \"armor\" as const;\r\nexport const SRC_DATA_CLASS = \"class\" as const;\r\nexport const SRC_DATA_COMMON_EVNET = \"common_event\" as const;\r\nexport const SRC_DATA_TROOP = \"troop\" as const;\r\n","import type { ParamArray } from \"../members\";\r\nimport type { Trait } from \"../trait\";\r\nimport type { Data_Armor } from \"./types\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_ARMMOR = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n    \"atypeId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    atypeId: { type: \"integer\", minimum: 0 },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Armor>;\r\n","import type { Data_Class } from \"./types\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_CLASS = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"note\",\r\n    \"expParams\",\r\n    \"params\",\r\n    \"learnings\",\r\n    \"traits\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    expParams: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<Data_Class[\"params\"]>,\r\n    learnings: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          level: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n        },\r\n        required: [\"level\", \"skillId\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"learnings\"]>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Class[\"traits\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} satisfies JSONSchemaType<Data_Class>;\r\n","import type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport { AUTHOR_RMMZ } from \"@RpgTypes/namedItemSource\";\r\nimport type { Data_State } from \"./types\";\r\nimport { SRC_DATA_STATE, MODULE_DATA } from \"../../../sourceConstants\";\r\n\r\nexport const makeStateData = (data: Partial<Data_State> = {}): Data_State => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  iconIndex: data.iconIndex ?? 0,\r\n  message1: data.message1 ?? \"\",\r\n  message2: data.message2 ?? \"\",\r\n  message3: data.message3 ?? \"\",\r\n  message4: data.message4 ?? \"\",\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n\r\n  messageType: data.messageType ?? 0,\r\n  releaseByDamage: data.releaseByDamage ?? false,\r\n  restriction: data.restriction ?? 0,\r\n  priority: data.priority ?? 0,\r\n  motion: data.motion ?? 0,\r\n  overlay: data.overlay ?? 0,\r\n  removeAtBattleEnd: data.removeAtBattleEnd ?? false,\r\n  removeByRestriction: data.removeByRestriction ?? false,\r\n  autoRemovalTiming: data.autoRemovalTiming ?? 0,\r\n  minTurns: data.minTurns ?? 0,\r\n  maxTurns: data.maxTurns ?? 0,\r\n  removeByDamage: data.removeByDamage ?? false,\r\n  chanceByDamage: data.chanceByDamage ?? 0,\r\n  removeByWalking: data.removeByWalking ?? false,\r\n  stepsToRemove: data.stepsToRemove ?? 0,\r\n});\r\n\r\nexport const stateSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_STATE,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_State } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_STATE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"message3\",\r\n    \"message4\",\r\n    \"restriction\",\r\n    \"priority\",\r\n    \"motion\",\r\n    \"overlay\",\r\n    \"removeAtBattleEnd\",\r\n    \"removeByDamage\",\r\n    \"removeByWalking\",\r\n    \"removeByRestriction\",\r\n    \"autoRemovalTiming\",\r\n    \"minTurns\",\r\n    \"maxTurns\",\r\n    \"chanceByDamage\",\r\n    \"stepsToRemove\",\r\n    \"note\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n    message3: { type: \"string\" },\r\n    message4: { type: \"string\" },\r\n\r\n    restriction: { type: \"integer\" },\r\n    priority: { type: \"integer\" },\r\n    motion: { type: \"integer\" },\r\n    overlay: { type: \"integer\" },\r\n\r\n    removeAtBattleEnd: { type: \"boolean\" },\r\n    removeByDamage: { type: \"boolean\" },\r\n\r\n    removeByWalking: { type: \"boolean\" },\r\n    removeByRestriction: { type: \"boolean\" },\r\n\r\n    messageType: { type: \"integer\" },\r\n    releaseByDamage: { type: \"boolean\" },\r\n    autoRemovalTiming: { type: \"integer\" },\r\n\r\n    minTurns: { type: \"integer\" },\r\n    maxTurns: { type: \"integer\" },\r\n\r\n    chanceByDamage: { type: \"integer\" },\r\n    stepsToRemove: { type: \"integer\" },\r\n    note: { type: \"string\" },\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Data_State[\"traits\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_State>;\r\n","import type { Damage, ParamArray, Trait } from \"src/rpg\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_WEAPON = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"price\",\r\n    \"params\",\r\n    \"traits\",\r\n    \"note\",\r\n    \"etypeId\",\r\n    \"animationId\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n    etypeId: { type: \"integer\", minimum: 0 },\r\n    wtypeId: { type: \"integer\", minimum: 0 },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } satisfies JSONSchemaType<ParamArray>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\", minimum: 0 },\r\n        elementId: { type: \"integer\", minimum: 0 },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        critical: { type: \"boolean\", default: false },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n    } satisfies JSONSchemaType<Damage>,\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Weapon>;\r\n","import type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport { AUTHOR_RMMZ } from \"@RpgTypes/namedItemSource\";\r\nimport { MODULE_DATA, SRC_DATA_ENEMY } from \"src/rpg\";\r\nimport type { Data_Enemy, DropItem, Enemy_Action } from \"./types\";\r\n\r\nexport const makeDropItem = (dropItem: Partial<DropItem> = {}): DropItem => ({\r\n  dataId: dropItem.dataId ?? 0,\r\n  denominator: dropItem.denominator ?? 0,\r\n  kind: dropItem.kind ?? 0,\r\n});\r\n\r\nexport const makeEnemyAction = (\r\n  action: Partial<Enemy_Action> = {}\r\n): Enemy_Action => ({\r\n  conditionParam1: action.conditionParam1 ?? 0,\r\n  conditionParam2: action.conditionParam2 ?? 0,\r\n  conditionType: action.conditionType ?? 0,\r\n  rating: action.rating ?? 0,\r\n\r\n  skillId: action.skillId ?? 0,\r\n});\r\n\r\nexport const makeEnemyData = (data: Partial<Data_Enemy> = {}): Data_Enemy => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  battlerName: data.battlerName ?? \"\",\r\n  battlerHue: data.battlerHue ?? 0,\r\n  dropItems: data.dropItems?.map(() => makeDropItem()) ?? [],\r\n  exp: data.exp ?? 0,\r\n  gold: data.gold ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  actions: [],\r\n});\r\n\r\nexport const enemySourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_ENEMY,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { ParamArray, Trait } from \"src/rpg\";\r\nimport type { Data_Enemy, DropItem, Enemy_Action } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_ENEMY = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"battlerName\",\r\n    \"battlerHue\",\r\n    \"exp\",\r\n    \"gold\",\r\n    \"note\",\r\n    \"params\",\r\n    \"dropItems\",\r\n    \"traits\",\r\n    \"actions\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    battlerHue: { type: \"integer\", minimum: 0 },\r\n    battlerName: { type: \"string\" },\r\n    exp: { type: \"integer\", minimum: 0 },\r\n    gold: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    params: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"integer\" }, // mhp\r\n        { type: \"integer\" }, // mmp\r\n        { type: \"integer\" }, // atk\r\n        { type: \"integer\" }, // def\r\n        { type: \"integer\" }, // mat\r\n        { type: \"integer\" }, // mdf\r\n        { type: \"integer\" }, // agi\r\n        { type: \"integer\" }, // luk\r\n      ],\r\n      minItems: 8,\r\n      maxItems: 8,\r\n    } as const satisfies JSONSchemaType<ParamArray>,\r\n    actions: {\r\n      type: \"array\",\r\n\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"conditionParam1\",\r\n          \"conditionParam2\",\r\n          \"conditionType\",\r\n          \"skillId\",\r\n          \"rating\",\r\n        ],\r\n        properties: {\r\n          conditionParam1: { type: \"integer\" },\r\n          conditionParam2: { type: \"integer\" },\r\n          conditionType: { type: \"integer\" },\r\n          skillId: { type: \"integer\" },\r\n          rating: { type: \"integer\" },\r\n        },\r\n      },\r\n    } satisfies JSONSchemaType<Enemy_Action[]>,\r\n\r\n    traits: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value\"],\r\n      },\r\n    } satisfies JSONSchemaType<Trait[]>,\r\n\r\n    dropItems: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          kind: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          denominator: { type: \"integer\", minimum: 0 },\r\n          rate: { type: \"number\" },\r\n        },\r\n        required: [\"kind\", \"dataId\", \"denominator\"],\r\n      },\r\n    } satisfies JSONSchemaType<DropItem[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Enemy>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DamageLabels } from \"./damageLabels\";\r\n\r\nexport const DEFAULT_DAMAGE_LABELS = {\r\n  domainName: \"ダメージ\",\r\n  options: {},\r\n} as const satisfies DomainLabel<DamageLabels>;\r\n","import type { Damage } from \"./damage\";\r\n\r\nexport const makeDamage = (damage: Partial<Damage> = {}): Damage => ({\r\n  type: damage.type ?? 0,\r\n  elementId: damage.elementId ?? 0,\r\n  formula: damage.formula ?? \"\",\r\n  variance: damage.variance ?? 0,\r\n  critical: damage.critical ?? false,\r\n});\r\n","import type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport { makeDamage } from \"../members\";\r\nimport type { Data_Skill } from \"./types\";\r\nimport { AUTHOR_RMMZ } from \"src/namedItemSource\";\r\nimport { MODULE_DATA, SRC_DATA_SKILL } from \"../../sourceConstants\";\r\n\r\nexport const skillSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_SKILL,\r\n});\r\n\r\nexport const makeSkillData = (skill: Partial<Data_Skill> = {}): Data_Skill => ({\r\n  stypeId: skill.stypeId ?? 0,\r\n  requiredWtypeId1: skill.requiredWtypeId1 ?? 0,\r\n  requiredWtypeId2: skill.requiredWtypeId2 ?? 0,\r\n  animationId: skill.animationId ?? 0,\r\n  damage: makeDamage(skill.damage ?? {}),\r\n  description: skill.description ?? \"\",\r\n  effects: [],\r\n  hitType: skill.hitType ?? 0,\r\n  iconIndex: skill.iconIndex ?? 0,\r\n  id: skill.id ?? 0,\r\n  message1: skill.message1 ?? \"\",\r\n  message2: skill.message2 ?? \"\",\r\n  messageType: skill.messageType ?? 0,\r\n  name: skill.name ?? \"\",\r\n  note: skill.note ?? \"\",\r\n  mpCost: skill.mpCost ?? 0,\r\n  occasion: skill.occasion ?? 0,\r\n  repeats: skill.repeats ?? 0,\r\n  scope: skill.scope ?? 0,\r\n  speed: skill.speed ?? 0,\r\n  successRate: skill.successRate ?? 0,\r\n  tpCost: skill.tpCost ?? 0,\r\n  tpGain: skill.tpGain ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Item, Data_Skill } from \"./types\";\r\n\r\nexport const SCHEMA_DATA_SKILL = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"message1\",\r\n    \"message2\",\r\n    \"messageType\",\r\n    \"mpCost\",\r\n    \"requiredWtypeId1\",\r\n    \"requiredWtypeId2\",\r\n    \"stypeId\",\r\n    \"tpCost\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"note\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n    message1: { type: \"string\" },\r\n    message2: { type: \"string\" },\r\n\r\n    messageType: { type: \"integer\" },\r\n    mpCost: { type: \"integer\" },\r\n    requiredWtypeId1: { type: \"integer\" },\r\n    requiredWtypeId2: { type: \"integer\" },\r\n    stypeId: { type: \"integer\" },\r\n    tpCost: { type: \"integer\" },\r\n\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n\r\n    note: { type: \"string\" },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<Data_Skill>;\r\n\r\nexport const SCHEMA_DATA_ITEM = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"description\",\r\n    \"iconIndex\",\r\n    \"note\",\r\n    \"animationId\",\r\n    \"hitType\",\r\n    \"occasion\",\r\n    \"repeats\",\r\n    \"scope\",\r\n    \"speed\",\r\n    \"successRate\",\r\n    \"tpGain\",\r\n    \"consumable\",\r\n    \"price\",\r\n    \"effects\",\r\n  ],\r\n\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    description: { type: \"string\" },\r\n    iconIndex: { type: \"integer\", minimum: 0 },\r\n\r\n    note: { type: \"string\" },\r\n    animationId: { type: \"integer\", minimum: 0 },\r\n    hitType: { type: \"integer\" },\r\n    occasion: { type: \"integer\" },\r\n    repeats: { type: \"integer\" },\r\n    scope: { type: \"integer\" },\r\n    speed: { type: \"integer\" },\r\n    successRate: { type: \"integer\" },\r\n    tpGain: { type: \"integer\" },\r\n    consumable: { type: \"boolean\" },\r\n    price: { type: \"integer\", minimum: 0 },\r\n    itypeId: { type: \"integer\" },\r\n\r\n    effects: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          dataId: { type: \"integer\" },\r\n          value1: { type: \"integer\" },\r\n          value2: { type: \"integer\" },\r\n        },\r\n        required: [\"code\", \"dataId\", \"value1\", \"value2\"],\r\n        additionalProperties: false,\r\n      },\r\n    } satisfies JSONSchemaType<Data_Item[\"effects\"]>,\r\n    damage: {\r\n      type: \"object\",\r\n      properties: {\r\n        type: { type: \"integer\" },\r\n        elementId: { type: \"integer\" },\r\n        formula: { type: \"string\" },\r\n        variance: { type: \"integer\" },\r\n        critical: { type: \"boolean\" },\r\n      },\r\n      required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n      additionalProperties: false,\r\n    } satisfies JSONSchemaType<Data_Skill[\"damage\"]>,\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Item>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { EffectLabelDefinition, ItemEffectLabelSet } from \"./types\";\r\n\r\nconst FORMAT_GROW = \"{name} + {value1}\" as const;\r\nconst FORMAT_STATE = \"{name} {value1}%\" as const;\r\nconst FORMAT_RECOVER = \"{value1}% + {value2}\" as const;\r\nconst FORMAT_ADD_BUFF = \"{name} {value1}ターン\" as const;\r\nconst FORMAT_NAME = \"{name}\" as const;\r\n\r\nexport const LABEL_SET_ITEM_EFFECT = {\r\n  domainName: \"使用効果\",\r\n  options: {\r\n    addBuff: {\r\n      desc: \"バフを付与する\",\r\n      domainName: \"バフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addDebuff: {\r\n      desc: \"デバフを付与する\",\r\n      domainName: \"デバフ付与\",\r\n      format: FORMAT_ADD_BUFF,\r\n    } as const satisfies EffectLabelDefinition,\r\n    gainTp: {\r\n      desc: \"TPを指定した量だけ増加させます。\",\r\n      domainName: \"TP増加\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    grow: {\r\n      desc: \"成長効果\",\r\n      domainName: \"成長効果\",\r\n      format: FORMAT_GROW,\r\n    } as const satisfies EffectLabelDefinition,\r\n    learnSkill: {\r\n      desc: \"スキルを習得する\",\r\n      domainName: \"スキル習得\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverHp: {\r\n      desc: \"HPを回復します。最大HPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"HP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    recoverMp: {\r\n      desc: \"MPを回復します。最大MPに対する割合と一定値のいずれか一方または両方を指定します。アイテムの場合は、特殊能力値[薬の知識]の倍率が適用されます。\",\r\n      domainName: \"MP回復\",\r\n      format: FORMAT_RECOVER,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeBuff: {\r\n      desc: \"バフを解除する\",\r\n      domainName: \"バフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeDebuff: {\r\n      desc: \"デバフを解除する\",\r\n      domainName: \"デバフ解除\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    removeState: {\r\n      desc: \"指定したステートを付加します。\",\r\n      domainName: \"ステート付加\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    special: {\r\n      desc: \"特殊効果\",\r\n      domainName: \"特殊効果\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n    addState: {\r\n      desc: \"状態異常を解除する\",\r\n      domainName: \"ステート解除\",\r\n      format: FORMAT_STATE,\r\n    } as const satisfies EffectLabelDefinition,\r\n    commonEvent: {\r\n      desc: \"コモンイベントを実行する\",\r\n      domainName: \"コモンイベント\",\r\n      format: FORMAT_NAME,\r\n    } as const satisfies EffectLabelDefinition,\r\n  },\r\n} as const satisfies DomainLabel<ItemEffectLabelSet>;\r\n","import { AUTHOR_RMMZ } from \"@RpgTypes/namedItemSource\";\r\nimport {\r\n  MODULE_DATA,\r\n  regularParamSourceId,\r\n  skillSourceId,\r\n  SRC_DATA_COMMON_EVNET,\r\n  stateSourceId,\r\n} from \"src/rpg\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./constants\";\r\nimport type { SourceIdentifier } from \"src/namedItemSource\";\r\n\r\nexport const resolveItemEffectLabels = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved[] => {\r\n  return [\r\n    defineEffectRecoverHp(labels),\r\n    defineEffectRecoverMp(labels),\r\n    defineEffectGainTp(labels),\r\n    defineEffectAddState(labels),\r\n    defineEffectRemoveState(labels),\r\n    defineEffectAddBuff(labels),\r\n    defineEffectAddDebuff(labels),\r\n    defineEffectRemoveBuff(labels),\r\n    defineEffectRemoveDebuff(labels),\r\n    defineEffectGrow(labels),\r\n    defineEffectLearnSkill(labels),\r\n    defineEffectCommonEvent(labels),\r\n  ];\r\n};\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  dataSource?: SourceIdentifier\r\n): EffectDefinitionResolved => ({\r\n  code,\r\n  label: baseLabel.domainName,\r\n  format: baseLabel.format,\r\n  description: baseLabel.desc,\r\n  dataSource: dataSource,\r\n});\r\nconst defineEffectRecoverHp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_HP, labels.recoverHp);\r\n\r\nconst defineEffectRecoverMp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_MP, labels.recoverMp);\r\n\r\nconst defineEffectGainTp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_GAIN_TP, labels.gainTp);\r\n\r\nconst defineEffectAddState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_STATE, labels.addState, stateSourceId());\r\n\r\nconst defineEffectRemoveState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_STATE, labels.removeState, stateSourceId());\r\n\r\nconst defineEffectAddBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_BUFF, labels.addBuff, regularParamSourceId());\r\n\r\nconst defineEffectAddDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_DEBUFF, labels.addDebuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_BUFF, labels.removeBuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    labels.removeDebuff,\r\n    regularParamSourceId()\r\n  );\r\n\r\nconst defineEffectGrow = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_GROW, labels.grow, regularParamSourceId());\r\n\r\nconst defineEffectLearnSkill = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_LEARN_SKILL, labels.learnSkill, skillSourceId());\r\n\r\nconst defineEffectCommonEvent = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_COMMON_EVENT, labels.commonEvent, {\r\n    author: AUTHOR_RMMZ,\r\n    module: MODULE_DATA,\r\n    kind: SRC_DATA_COMMON_EVNET,\r\n  });\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { DataLabels } from \"./dataLabels\";\r\nimport type {\r\n  ActorLabels,\r\n  ArmorLabels,\r\n  ClassLabels,\r\n  EnemyLabels,\r\n  StateLabels,\r\n  WeaponLabels,\r\n} from \"./traitContainers\";\r\nimport type { ItemLabels, SkillLabels, UsableItemLabels } from \"./usableItems\";\r\n\r\nexport const LABEL_SET_DATA = {\r\n  actor: {\r\n    domainName: \"アクター\",\r\n    options: {\r\n      initialEquipments: \"初期装備\",\r\n      faceImage: \"顔画像\",\r\n      characterImage: \"キャラクター画像\",\r\n      svBattlerImage: \"SVバトラー画像\",\r\n      nickname: \"ニックネーム\",\r\n      profile: \"プロフィール\",\r\n      classId: \"職業ID\",\r\n      initialLevel: \"初期レベル\",\r\n      maxLevel: \"最大レベル\",\r\n    },\r\n  } as const satisfies DomainLabel<ActorLabels>,\r\n  class: {\r\n    domainName: \"職業\",\r\n    options: {\r\n      params: \"パラメータ\",\r\n      learnings: \"習得スキル\",\r\n      expParams: \"経験値パラメータ\",\r\n    },\r\n  } as const satisfies DomainLabel<ClassLabels>,\r\n  armor: {\r\n    domainName: \"防具\",\r\n    options: {\r\n      armorTypeId: \"防具タイプID\",\r\n      slotTypeId: \"スロットタイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<ArmorLabels>,\r\n  enemy: {\r\n    domainName: \"敵キャラ\",\r\n    options: {\r\n      dropItems: \"ドロップアイテム\",\r\n      battlerHue: \"バトラーヒュー\",\r\n      battlerName: \"バトラー名\",\r\n      gold: \"ゴールド\",\r\n    },\r\n  } as const satisfies DomainLabel<EnemyLabels>,\r\n  item: {\r\n    domainName: \"アイテム\",\r\n    options: {\r\n      consumable: \"消耗品\",\r\n    },\r\n  } as const satisfies DomainLabel<ItemLabels>,\r\n  skill: {\r\n    domainName: \"スキル\",\r\n    options: {\r\n      requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n      requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n      mpCost: \"MP消費\",\r\n      tpCost: \"TP消費\",\r\n    },\r\n  } as const satisfies DomainLabel<SkillLabels>,\r\n  state: {\r\n    domainName: \"ステート\",\r\n    options: {\r\n      restriction: \"制約\",\r\n      priority: \"優先度\",\r\n      motion: \"モーション\",\r\n      overlay: \"オーバーレイ\",\r\n      removeAtBattleEnd: \"戦闘終了時解除\",\r\n      removeByRestriction: \"制約による解除\",\r\n      autoRemovalTiming: \"自動解除タイミング\",\r\n      minTurns: \"最小ターン数\",\r\n      maxTurns: \"最大ターン数\",\r\n      removeByDamage: \"ダメージによる解除\",\r\n      chanceByDamage: \"ダメージによる解除確率\",\r\n      removeByWalking: \"歩行による解除\",\r\n      stepsToRemove: \"解除までの歩数\",\r\n    },\r\n  } as const satisfies DomainLabel<StateLabels>,\r\n  weapon: {\r\n    domainName: \"武器\",\r\n    options: {\r\n      weaponTypeId: \"武器タイプID\",\r\n    },\r\n  } as const satisfies DomainLabel<WeaponLabels>,\r\n  usableItem: {\r\n    domainName: \"\",\r\n    options: {\r\n      scope: \"範囲\",\r\n      speed: \"速度補正\",\r\n      successRate: \"成功率\",\r\n    },\r\n  } as const satisfies DomainLabel<UsableItemLabels>,\r\n} as const satisfies DataLabels;\r\n","import Ajv from \"ajv\";\r\nimport type {\r\n  Data_Actor,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_State,\r\n  Data_Weapon,\r\n} from \"./traitContainers\";\r\nimport {\r\n  SCHEMA_DATA_ACTOR,\r\n  SCHEMA_DATA_ARMMOR,\r\n  SCHEMA_DATA_CLASS,\r\n  SCHEMA_DATA_ENEMY,\r\n  SCHEMA_DATA_STATE,\r\n  SCHEMA_DATA_WEAPON,\r\n} from \"./traitContainers\";\r\nimport type { Data_Item, Data_Skill } from \"./usableItems\";\r\nimport { SCHEMA_DATA_ITEM, SCHEMA_DATA_SKILL } from \"./usableItems\";\r\n\r\nconst ajv = new Ajv();\r\nconst item = ajv.compile(SCHEMA_DATA_ITEM);\r\nconst skill = ajv.compile(SCHEMA_DATA_SKILL);\r\nconst actor = ajv.compile(SCHEMA_DATA_ACTOR);\r\nconst armor = ajv.compile(SCHEMA_DATA_ARMMOR);\r\nconst weapon = ajv.compile(SCHEMA_DATA_WEAPON);\r\nconst enemy = ajv.compile(SCHEMA_DATA_ENEMY);\r\nconst state = ajv.compile(SCHEMA_DATA_STATE);\r\nconst class_ = ajv.compile(SCHEMA_DATA_CLASS);\r\n\r\nexport const isDataItem = (data: unknown): data is Data_Item => {\r\n  return item(data);\r\n};\r\n\r\nexport const isDataSkill = (data: unknown): data is Data_Skill => {\r\n  return skill(data);\r\n};\r\n\r\nexport const isDataActor = (data: unknown): data is Data_Actor => {\r\n  return actor(data);\r\n};\r\n\r\nexport const isDataArmor = (data: unknown): data is Data_Armor => {\r\n  return armor(data);\r\n};\r\n\r\nexport const isDataWeapon = (data: unknown): data is Data_Weapon => {\r\n  return weapon(data);\r\n};\r\n\r\nexport const isDataEnemy = (data: unknown): data is Data_Enemy => {\r\n  return enemy(data);\r\n};\r\n\r\nexport const isDataState = (data: unknown): data is Data_State => {\r\n  return state(data);\r\n};\r\n\r\nexport const isDataClass = (data: unknown): data is Data_Class => {\r\n  return class_(data);\r\n};\r\n","import type { MapEvent_PageCondition, PageConditionArg } from \"./condition\";\r\n\r\nexport const makeEventPageCondition = (\r\n  arg: Partial<PageConditionArg> = {}\r\n): MapEvent_PageCondition => {\r\n  return {\r\n    switch1Id: arg.switch1Id ?? 0,\r\n    switch1Valid: arg.switch1Id !== undefined,\r\n    switch2Id: arg.switch2Id ?? 0,\r\n    switch2Valid: arg.switch2Id !== undefined,\r\n    variableId: arg.variableId ?? 0,\r\n    variableValid: arg.variableId !== undefined,\r\n    variableValue: arg.variableValue ?? 0,\r\n    selfSwitchCh: arg.selfSwitchCh ?? \"A\",\r\n    selfSwitchValid: arg.selfSwitchCh !== undefined,\r\n    itemId: arg.itemId ?? 0,\r\n    itemValid: arg.itemId !== undefined,\r\n    actorId: arg.actorId ?? 0,\r\n    actorValid: arg.actorId !== undefined,\r\n  };\r\n};\r\n","import { makeEventPageCondition } from \"./condition\";\r\nimport type { MapEvent } from \"./mapEvent\";\r\nimport type { MapEvent_Image, MapEventPage } from \"./page\";\r\n\r\nexport const makeMapEvent = (): MapEvent => {\r\n  return {\r\n    id: 1,\r\n    name: \"\",\r\n    pages: [],\r\n    note: \"\",\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventIamge = (): MapEvent_Image => {\r\n  return {\r\n    characterIndex: 0,\r\n    characterName: \"\",\r\n    direction: 2,\r\n    pattern: 0,\r\n    tileId: 0,\r\n  };\r\n};\r\n\r\nexport const makeMapEventPage = (): MapEventPage => {\r\n  return {\r\n    conditions: makeEventPageCondition(),\r\n    list: [],\r\n    directionFix: false,\r\n    image: makeMapEventIamge(),\r\n    moveFrequency: 5,\r\n    moveRoute: {\r\n      list: [],\r\n      repeat: false,\r\n      skippable: false,\r\n      wait: false,\r\n    },\r\n  };\r\n};\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_DATA_MAP_INFO = {\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"id\",\r\n    \"expanded\",\r\n    \"order\",\r\n    \"parentId\",\r\n    \"scrollX\",\r\n    \"scrollY\",\r\n  ],\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    id: { type: \"integer\", minimum: 0 },\r\n    expanded: { type: \"boolean\" },\r\n    order: { type: \"integer\" },\r\n    parentId: { type: \"integer\" },\r\n    scrollX: { type: \"integer\" },\r\n    scrollY: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_MapInfo>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Map } from \"./map\";\r\nimport type { Encounter } from \"./members\";\r\nimport type { AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  MapEvent,\r\n  MapEvent_Image,\r\n  MapEvent_PageCondition,\r\n  MapEventPage,\r\n} from \"./event\";\r\nimport { SCHEMA_MOVEROUTE_DATA } from \"./event/eventCommand/moveRoute/schema\";\r\nimport type { MoveRouteDataUnkwnown } from \"./event/eventCommand/moveRoute\";\r\nimport { SCHEMA_MAP_EVENT_PAGE_CONDITION } from \"./event/condition/schema\";\r\n\r\nexport const SCHEMA_MAP_EVENT_IMAGE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"characterIndex\",\r\n    \"characterName\",\r\n    \"direction\",\r\n    \"pattern\",\r\n    \"tileId\",\r\n  ],\r\n  properties: {\r\n    characterIndex: { type: \"integer\", minimum: 0 },\r\n    characterName: { type: \"string\" },\r\n    direction: { type: \"integer\", enum: [2, 4, 6, 8] },\r\n    pattern: { type: \"integer\" },\r\n    tileId: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<MapEvent_Image>;\r\n\r\nexport const SCHEMA_MAP_EVENT_PAGE = {\r\n  type: \"object\",\r\n  required: [\r\n    \"image\",\r\n    \"moveRoute\",\r\n    \"conditions\",\r\n    \"directionFix\",\r\n    \"moveFrequency\",\r\n  ] satisfies (keyof MapEventPage)[],\r\n  properties: {\r\n    moveFrequency: { type: \"integer\" },\r\n    directionFix: { type: \"boolean\" },\r\n    conditions:\r\n      SCHEMA_MAP_EVENT_PAGE_CONDITION satisfies JSONSchemaType<MapEvent_PageCondition>,\r\n\r\n    image: SCHEMA_MAP_EVENT_IMAGE satisfies JSONSchemaType<MapEvent_Image>,\r\n    moveRoute:\r\n      SCHEMA_MOVEROUTE_DATA satisfies JSONSchemaType<MoveRouteDataUnkwnown>,\r\n  },\r\n} as const satisfies JSONSchemaType<Omit<MapEventPage, \"list\">>;\r\n\r\nexport const SCHEMA_DATA_MAP = {\r\n  type: \"object\",\r\n\r\n  required: [\r\n    \"battleback1Name\",\r\n    \"battleback2Name\",\r\n    \"note\",\r\n    \"width\",\r\n    \"height\",\r\n    \"x\",\r\n    \"y\",\r\n    \"parallaxSy\",\r\n    \"parallaxSx\",\r\n    \"parallaxLoopY\",\r\n    \"parallaxLoopX\",\r\n    \"disableDashing\",\r\n    \"parallaxName\",\r\n    \"parallaxShow\",\r\n    \"displayName\",\r\n    \"data\",\r\n    \"autoplayBgm\",\r\n    \"bgm\",\r\n    \"autoplayBgs\",\r\n    \"bgs\",\r\n  ] satisfies (keyof Data_Map)[],\r\n  properties: {\r\n    data: { type: \"array\", items: { type: \"integer\" } },\r\n    battleback1Name: { type: \"string\" },\r\n    battleback2Name: { type: \"string\" },\r\n\r\n    parallaxLoopY: { type: \"boolean\" },\r\n    parallaxLoopX: { type: \"boolean\" },\r\n    parallaxName: { type: \"string\" },\r\n    parallaxShow: { type: \"boolean\" },\r\n    parallaxSy: { type: \"integer\" },\r\n    parallaxSx: { type: \"integer\" },\r\n\r\n    x: { type: \"integer\", minimum: 0 },\r\n    y: { type: \"integer\", minimum: 0 },\r\n    width: { type: \"integer\", minimum: 0 },\r\n    height: { type: \"integer\", minimum: 0 },\r\n    note: { type: \"string\" },\r\n\r\n    displayName: { type: \"string\" },\r\n    disableDashing: { type: \"boolean\" },\r\n\r\n    autoplayBgm: { type: \"boolean\" },\r\n    bgm: {\r\n      type: \"object\",\r\n      required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        pan: { type: \"integer\" },\r\n        pitch: { type: \"integer\" },\r\n        volume: { type: \"integer\" },\r\n      },\r\n    } as const satisfies JSONSchemaType<AudioFileParams>,\r\n\r\n    autoplayBgs: { type: \"boolean\" },\r\n    bgs: {\r\n      type: \"object\",\r\n      required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        pan: { type: \"integer\" },\r\n        pitch: { type: \"integer\" },\r\n        volume: { type: \"integer\" },\r\n      },\r\n    } as const satisfies JSONSchemaType<AudioFileParams>,\r\n\r\n    encounterList: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\"regionSet\", \"troopId\", \"weight\"],\r\n        properties: {\r\n          regionSet: { type: \"array\", items: { type: \"integer\" } },\r\n          troopId: { type: \"integer\" },\r\n          weight: { type: \"integer\" },\r\n        },\r\n      } satisfies JSONSchemaType<Encounter>,\r\n    } satisfies JSONSchemaType<Encounter[]>,\r\n    events: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\r\n          \"id\",\r\n          \"name\",\r\n          \"x\",\r\n          \"y\",\r\n          \"pages\",\r\n        ] satisfies (keyof MapEvent)[],\r\n        properties: {\r\n          id: { type: \"integer\" },\r\n          name: { type: \"string\" },\r\n          x: { type: \"integer\" },\r\n          y: { type: \"integer\" },\r\n          note: { type: \"string\" },\r\n          pages: {\r\n            type: \"array\",\r\n            items: SCHEMA_MAP_EVENT_PAGE,\r\n          },\r\n        },\r\n      } as const,\r\n    },\r\n  }, // satisfies Record<keyof Data_Map, unknown>,\r\n} as const satisfies JSONSchemaType<Omit<Data_Map, \"events\">>;\r\n// evetntsはコモンイベントが入ってて複雑。簡略化して対応する\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MapEvent_PageCondition } from \"./condition\";\r\n\r\nexport const SCHEMA_MAP_EVENT_PAGE_CONDITION = {\r\n  type: \"object\",\r\n  required: [\r\n    \"switch1Id\",\r\n    \"switch1Valid\",\r\n    \"switch2Id\",\r\n    \"switch2Valid\",\r\n    \"variableId\",\r\n    \"variableValid\",\r\n    \"selfSwitchCh\",\r\n    \"selfSwitchValid\",\r\n    \"variableValue\",\r\n    \"itemId\",\r\n    \"itemValid\",\r\n    \"actorId\",\r\n    \"actorValid\",\r\n  ],\r\n  properties: {\r\n    switch1Id: { type: \"integer\", minimum: 0 },\r\n    switch1Valid: { type: \"boolean\" },\r\n    switch2Id: { type: \"integer\", minimum: 0 },\r\n    switch2Valid: { type: \"boolean\" },\r\n    variableId: { type: \"integer\", minimum: 0 },\r\n    variableValid: { type: \"boolean\" },\r\n    selfSwitchCh: { type: \"string\" },\r\n    selfSwitchValid: { type: \"boolean\" },\r\n    variableValue: { type: \"integer\" },\r\n    itemId: { type: \"integer\", minimum: 0 },\r\n    itemValid: { type: \"boolean\" },\r\n    actorId: { type: \"integer\" },\r\n    actorValid: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<MapEvent_PageCondition>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { MoveRouteDataUnkwnown } from \"./moveRoute\";\r\nimport type { AudioFileParams } from \"@RpgTypes/utils\";\r\n\r\nexport const SCHEMA_MOVEROUTE_DATA = {\r\n  type: \"object\",\r\n  required: [\"wait\", \"repeat\", \"skippable\", \"list\"],\r\n  properties: {\r\n    wait: { type: \"boolean\" },\r\n    repeat: { type: \"boolean\" },\r\n    skippable: { type: \"boolean\" },\r\n    list: {\r\n      type: \"array\",\r\n      items: {\r\n        type: \"object\",\r\n        required: [\"code\", \"parameters\"],\r\n        properties: {\r\n          code: { type: \"integer\" },\r\n          parameters: {\r\n            type: \"array\",\r\n            items: {\r\n              oneOf: [\r\n                { type: \"string\" },\r\n                { type: \"number\" },\r\n                {\r\n                  type: \"object\",\r\n                  required: [\"name\", \"pan\", \"pitch\", \"volume\"],\r\n                  properties: {\r\n                    name: { type: \"string\" },\r\n                    pan: { type: \"integer\" },\r\n                    pitch: { type: \"integer\" },\r\n                    volume: { type: \"integer\" },\r\n                  },\r\n                } satisfies JSONSchemaType<AudioFileParams>,\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<MoveRouteDataUnkwnown>;\r\n","import Ajv from \"ajv\";\r\nimport type { Data_MapInfo } from \"./map\";\r\nimport { SCHEMA_DATA_MAP_INFO } from \"./map\";\r\nimport { SCHEMA_DATA_MAP } from \"./map/schema\";\r\n\r\nconst ajv = new Ajv();\r\n\r\nconst mapInfo = ajv.compile(SCHEMA_DATA_MAP_INFO);\r\n\r\nconst mapData = ajv.compile(SCHEMA_DATA_MAP);\r\n\r\nexport const isDataMapInfo = (data: unknown): data is Data_MapInfo => {\r\n  return mapInfo(data);\r\n};\r\n\r\nexport const isDataMap = (data: unknown): data is Data_MapInfo => {\r\n  return mapData(data);\r\n};\r\n","import type { NoteReadResult } from \"./types\";\r\n\r\nexport const createNoteEntity = (key: string, value: string): string => {\r\n  return `<${key}:${value}>`;\r\n};\r\n\r\nexport const makeRegex = () => /<([^<>:]+):([^>]*)>/g;\r\n\r\nexport const readNoteObject = <Result, T extends { note: string }>(\r\n  data: T,\r\n  fn: (key: string, value: string, data: T) => Result\r\n): Result[] => readNoteEx(data.note, (key, value) => fn(key, value, data));\r\n\r\nexport const readNote = (note: string): NoteReadResult[] => {\r\n  return readNoteEx(note, (key, value) => [key, value]);\r\n};\r\n/**\r\n * note文字列を解析し、キーと値のペアを取得します。\r\n * タグが閉じられていない場合、その要素は無視されます。\r\n */\r\nexport const readNoteEx = <Result>(\r\n  note: string,\r\n  fn: (key: string, value: string) => Result\r\n): Result[] => {\r\n  const regex = makeRegex();\r\n  return Array.from(note.matchAll(regex), (match) => fn(match[1], match[2]));\r\n};\r\n\r\n/**\r\n *\r\n * @param note\r\n * @param transformFunction この関数の戻り値でvalueを置き換える\r\n * @returns\r\n */\r\nexport const replaceNote = (\r\n  note: string,\r\n  transformFunction: (key: string, value: string) => string\r\n): string => {\r\n  if (note.length >= 1000) {\r\n    throw new Error(\"Note text is too long. Please shorten it.\");\r\n  }\r\n\r\n  return note.replaceAll(\r\n    makeRegex(),\r\n    (_subString, key: string, value: string) => {\r\n      const newText = transformFunction(key, value);\r\n      if (newText.length >= 1000) {\r\n        throw new Error(\"Note text is too long. Please shorten it.\");\r\n      }\r\n      return createNoteEntity(key, newText);\r\n    }\r\n  );\r\n};\r\n\r\nexport const getNoteValue = (\r\n  note: string,\r\n  targetKey: string\r\n): string | undefined => {\r\n  const regex = makeRegex();\r\n  const match = Array.from(note.matchAll(regex)).find(\r\n    (m) => m[1] === targetKey\r\n  );\r\n  return match ? match[2] : undefined;\r\n};\r\n\r\nexport const setNoteValue = (\r\n  note: string,\r\n  targetKey: string,\r\n  newValue: string\r\n): string => {\r\n  const regex = makeRegex();\r\n\r\n  return note.replace(regex, (match, key: string) => {\r\n    if (key === targetKey) {\r\n      return createNoteEntity(key, newValue); // 対象キーの場合のみ値を差し替え\r\n    }\r\n    return match; // 対象外はそのまま\r\n  });\r\n};\r\n","export const createControlCharFormat = <C extends string>(\r\n  char: C,\r\n  id: number\r\n) => {\r\n  return `\\\\${char}[${id}]` as const;\r\n};\r\n\r\nexport const fromStringArray = <C extends string>(\r\n  char: C,\r\n  array: ReadonlyArray<string>\r\n) => {\r\n  return array.map((text, index) => ({\r\n    text,\r\n    controlChar: createControlCharFormat(char, index),\r\n  }));\r\n};\r\n","import type { LabelRegistry } from \"./labelRegistry\";\r\nimport {\r\n  DEFAULT_DAMAGE_LABELS,\r\n  LABEL_SET_DATA,\r\n  LABEL_SET_TRAIT,\r\n  LABEL_SET_ITEM_EFFECT,\r\n} from \"./data\";\r\nimport { DEFAULT_GLOBAL_LABELS } from \"./labels\";\r\n\r\nexport const LABEL_REGISTRY_JP = {\r\n  rpg: {\r\n    damage: DEFAULT_DAMAGE_LABELS,\r\n    data: LABEL_SET_DATA,\r\n    traits: LABEL_SET_TRAIT,\r\n    itemEffect: LABEL_SET_ITEM_EFFECT,\r\n  },\r\n  global: DEFAULT_GLOBAL_LABELS,\r\n} as const satisfies LabelRegistry;\r\n","import Ajv from \"ajv\";\r\nimport {\r\n  SCHEMA_COMMAND_EMPTY_PARAM,\r\n  SCHEMA_COMMAND_TEXT_BODY,\r\n} from \"./unionSchema\";\r\nimport type {\r\n  CommandUnion_ChangeActorText,\r\n  Command_ScrollTextHeader,\r\n  CommandUnion_AnyAudio,\r\n  Command_CommonEvent,\r\n  Command_ShowChoices,\r\n  Command_ShowChoiceWhen,\r\n  Command_InputNumber,\r\n  Command_ShowMessageHeader,\r\n} from \"./commands\";\r\nimport { SCHEMA_COMMAND_CHANGE_ACTOR_TEXT } from \"./commands/actor/changeText/schema\";\r\nimport { SCHEMA_COMMAND_ANY_AUDIO } from \"./commands/audio/play/schema\";\r\nimport { SCHEMA_COMMAND_CALL_COMMON_EVENT } from \"./commands/flow/callCommonEvent/schema\";\r\nimport { SCHEMA_COMMAND_INPUT_NUMBER } from \"./commands/message/inputNumber/schema\";\r\nimport { SCHEMA_COMMAND_SCROLL_TEXT_HEAD } from \"./commands/message/scrollText/schema\";\r\nimport {\r\n  SCHEMA_COMMAND_SHOW_CHOICE_WHEN,\r\n  SCHEMA_COMMAND_SHOW_CHOICES,\r\n} from \"./commands/message/setupChoice/schema\";\r\nimport { SCHEMA_COMMAND_SHOW_MESSAGE } from \"./commands/message/showMessage/schema\";\r\nimport type {\r\n  CommandUnion_EmptyParam,\r\n  CommandUnion_TextBody,\r\n} from \"./unionTypes\";\r\n\r\nconst ajv = new Ajv();\r\n// schemaはindex.ts無しで直接importすること！\r\n// 過去に循環参照エラーで苦しんでます\r\n\r\n// 各Schemaはtype以外はimportしないこと\r\n// 定数の解決に失敗してエラーになることがある\r\nconst changeActorText = ajv.compile(SCHEMA_COMMAND_CHANGE_ACTOR_TEXT);\r\nexport const isCommandChangeActorText = (\r\n  data: unknown\r\n): data is CommandUnion_ChangeActorText => {\r\n  return changeActorText(data);\r\n};\r\n\r\nconst scrollTextHead = ajv.compile(SCHEMA_COMMAND_SCROLL_TEXT_HEAD);\r\nexport const isCommandScrollTextHead = (\r\n  data: unknown\r\n): data is Command_ScrollTextHeader => {\r\n  return scrollTextHead(data);\r\n};\r\n\r\nconst audioCommand = ajv.compile(SCHEMA_COMMAND_ANY_AUDIO);\r\nexport const isCommandAudio = (\r\n  data: unknown\r\n): data is CommandUnion_AnyAudio => {\r\n  return audioCommand(data);\r\n};\r\n\r\nconst emptyParam = ajv.compile(SCHEMA_COMMAND_EMPTY_PARAM);\r\nexport const isCommandNonParam = (\r\n  data: unknown\r\n): data is CommandUnion_EmptyParam => {\r\n  return emptyParam(data);\r\n};\r\n\r\nconst textBody = ajv.compile(SCHEMA_COMMAND_TEXT_BODY);\r\nexport const isCommandTextBody = (\r\n  command: unknown\r\n): command is CommandUnion_TextBody => {\r\n  return textBody(command);\r\n};\r\n\r\nconst commonVent = ajv.compile(SCHEMA_COMMAND_CALL_COMMON_EVENT);\r\nexport const isCommandCommonEvent = (\r\n  data: unknown\r\n): data is Command_CommonEvent => {\r\n  return commonVent(data);\r\n};\r\n\r\nconst showChoices = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICES);\r\nexport const isCommandShowChoices = (\r\n  data: unknown\r\n): data is Command_ShowChoices => {\r\n  return showChoices(data);\r\n};\r\n\r\nconst showChoiceItem = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICE_WHEN);\r\nexport const isCommandShowChoiceItem = (\r\n  data: unknown\r\n): data is Command_ShowChoiceWhen => {\r\n  return showChoiceItem(data);\r\n};\r\n\r\nconst inputNumber = ajv.compile(SCHEMA_COMMAND_INPUT_NUMBER);\r\nexport const isCommandInputNumber = (\r\n  data: unknown\r\n): data is Command_InputNumber => {\r\n  return inputNumber(data);\r\n};\r\n\r\nconst showMessage = ajv.compile(SCHEMA_COMMAND_SHOW_MESSAGE);\r\nexport const isCommandShowMessage = (\r\n  data: unknown\r\n): data is Command_ShowMessageHeader => {\r\n  return showMessage(data);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_ChangeActorText } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CHANGE_ACTOR_TEXT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [320, 324, 325],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\", minimum: 0 }, // actorId\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_ChangeActorText>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ScrollTextHeader, Command_ScrollTextBody } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_HEAD = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 105 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // speed\r\n        { type: \"boolean\" }, // skip\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextHeader>;\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_BODY = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 405 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }], // content\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextBody>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_AnyAudio } from \"./types\";\r\nimport type { AudioFileParams } from \"src/libs/utils\";\r\n\r\n// enumは意図的に直書き。\r\n// 定数を使うとimport解決でエラーが起こる\r\nexport const SCHEMA_COMMAND_ANY_AUDIO = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [132, 133, 139, 241, 245, 249, 250],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            name: { type: \"string\" },\r\n            volume: { type: \"integer\" },\r\n            pitch: { type: \"integer\" },\r\n            pan: { type: \"integer\" },\r\n          },\r\n          required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n          additionalProperties: false,\r\n        } satisfies JSONSchemaType<AudioFileParams>,\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_AnyAudio>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type {\r\n  CommandUnion_EmptyParam,\r\n  CommandUnion_TextBody,\r\n} from \"./unionTypes\";\r\n// enumは意図的に数値直書き。\r\n// importで定数を取り込むと参照解決の問題でエラーになることがある\r\nexport const SCHEMA_COMMAND_TEXT_BODY = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [108, 355, 401, 405, 408, 655] satisfies ReadonlyArray<\r\n        CommandUnion_TextBody[\"code\"]\r\n      >,\r\n    },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_TextBody>;\r\n\r\nexport const SCHEMA_COMMAND_EMPTY_PARAM = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: { type: \"array\", minItems: 0, maxItems: 0 },\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        0, 109, 112, 113, 115, 204, 206, 213, 214, 216, 217, 221, 222, 243, 244,\r\n        251, 314, 315, 340, 351, 352, 353, 354, 411,\r\n      ] satisfies ReadonlyArray<CommandUnion_EmptyParam[\"code\"]>,\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_CommonEvent } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CALL_COMMON_EVENT = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 117 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"number\", minimum: 0, default: 0 }],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_CommonEvent>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowChoiceWhen } from \"./types/item\";\r\nimport type { Command_ShowChoices } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICE_WHEN = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 402 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\" }, // index\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoiceWhen>;\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICES = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 102 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 5,\r\n      maxItems: 5,\r\n      items: [\r\n        { type: \"array\", items: { type: \"string\" } }, // choices\r\n        { type: \"integer\" }, // cancelType\r\n        { type: \"integer\" }, // defaultType\r\n        { type: \"integer\" }, // positionType\r\n        { type: \"integer\" }, // background\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoices>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_InputNumber } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_INPUT_NUMBER = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 103 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // variableId\r\n        { type: \"number\" }, // digits\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_InputNumber>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowMessageHeader } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_MESSAGE = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    code: { type: \"integer\", const: 101 }, // Assuming 101 is the code for ShowMessage\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"string\" }, // facename\r\n        { type: \"integer\", minimum: 0, maximum: 7 }, // faceIndex\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // background\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // positionType\r\n        { type: \"string\" }, // speakerName\r\n      ] as const,\r\n\r\n      minItems: 5,\r\n      maxItems: 5,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Command_ShowMessageHeader>;\r\n","import { makeAudioFileParams, type AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n  Command_ChangeDefeatME,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeBattleBGM,\r\n  CommandUnion_AnyAudio,\r\n} from \"./types\";\r\nimport {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_DEFEAT_ME,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_BATTLE_BGM,\r\n} from \"src/rpg\";\r\n\r\nexport const makeAudioCommand = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  filename: string\r\n) => {\r\n  return makeCommandAudioAny(code, makeAudioFileParams({ name: filename }));\r\n};\r\n\r\nexport const makeCommandAudioAny = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n) => {\r\n  return {\r\n    code,\r\n    parameters: [makeAudioFileParams(audio)] satisfies [AudioFileParams],\r\n    indent,\r\n  };\r\n};\r\n\r\nexport const makeCommandPlayBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGM => makeCommandAudioAny(PLAY_BGM, audio, indent);\r\n\r\nexport const makeCommandPlayBGS = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGS => makeCommandAudioAny(PLAY_BGS, audio, indent);\r\n\r\nexport const makeCommandPlayME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayME => makeCommandAudioAny(PLAY_ME, audio, indent);\r\n\r\nexport const makeCommandPlaySE = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlaySE => makeCommandAudioAny(PLAY_SE, audio, indent);\r\n\r\nexport const makeCommandChangeBattleBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeBattleBGM =>\r\n  makeCommandAudioAny(CHANGE_BATTLE_BGM, audio, indent);\r\n\r\nexport const makeCommandChangeVictoryME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeVictoryME =>\r\n  makeCommandAudioAny(CHANGE_VICTORY_ME, audio, indent);\r\n\r\nexport const makeCommandChangeDefeatME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeDefeatME =>\r\n  makeCommandAudioAny(CHANGE_DEFEAT_ME, audio, indent);\r\n","import { COMMENT_HEAD, COMMENT_BODY } from \"src/rpg\";\r\nimport type {\r\n  ParamArray_Comment,\r\n  ParamObject_Comment,\r\n  Command_CommentHeader,\r\n  Command_CommentBody,\r\n} from \"./types\";\r\n\r\nexport const makeCommentArray = (comment: string): ParamArray_Comment => {\r\n  return [comment];\r\n};\r\n\r\nexport const convertCommentArrayToObject = (\r\n  paramArray: ParamArray_Comment\r\n): ParamObject_Comment => ({\r\n  comment: paramArray[0],\r\n});\r\n\r\nexport const makeCommandCommentHeader = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentHeader => ({\r\n  code: COMMENT_HEAD,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommandCommentBody = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentBody => ({\r\n  code: COMMENT_BODY,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommentCommandArray = (\r\n  comments: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return comments.map((comment, index) =>\r\n    index === 0\r\n      ? makeCommandCommentHeader(comment, indent)\r\n      : makeCommandCommentBody(comment, indent)\r\n  ) as [Command_CommentHeader, ...Command_CommentBody[]];\r\n};\r\n","export const NO_OPERATION = 0 as const;\r\nexport const SHOW_MESSAGE = 101 as const;\r\nexport const SHOW_MESSAGE_BODY = 401 as const;\r\nexport const SHOW_CHOICES = 102 as const;\r\nexport const SHOW_CHOICES_ITEM = 402 as const;\r\nexport const INPUT_NUMBER = 103 as const;\r\nexport const SELECT_ITEM = 104 as const;\r\nexport const SHOW_SCROLLING_TEXT = 105 as const;\r\nexport const SHOW_SCROLLING_TEXT_BODY = 405 as const;\r\nexport const COMMENT_HEAD = 108 as const;\r\nexport const COMMENT_BODY = 408 as const;\r\nexport const SKIP = 109 as const;\r\nexport const CONDITIONAL_BRANCH = 111 as const;\r\nexport const CONDITIONAL_BRANCH_ELSE = 411 as const;\r\nexport const LOOP = 112 as const;\r\nexport const LOOP_BREAK = 113 as const;\r\nexport const EXIT_EVENT_PROCESSING = 115 as const;\r\nexport const COMMON_EVENT = 117 as const;\r\nexport const LABEL = 118 as const;\r\nexport const LABEL_JUMP = 119 as const;\r\nexport const CONTROL_SWITCHES = 121 as const;\r\nexport const CONTROL_VARIABLES = 122 as const;\r\nexport const CONTROL_SELF_SWITCH = 123 as const;\r\nexport const CONTROL_TIMER = 124 as const;\r\nexport const CHANGE_GOLD = 125 as const;\r\nexport const CHANGE_ITEMS = 126 as const;\r\nexport const CHANGE_WEAPONS = 127 as const;\r\nexport const CHANGE_ARMORS = 128 as const;\r\nexport const CHANGE_PARTY_MEMBER = 129 as const;\r\nexport const CHANGE_BATTLE_BGM = 132 as const;\r\nexport const CHANGE_VICTORY_ME = 133 as const;\r\nexport const CHANGE_SAVE_ACCESS = 134 as const;\r\nexport const CHANGE_MENU_ACCESS = 135 as const;\r\nexport const CHANGE_ENCOUNTER = 136 as const;\r\nexport const CHANGE_FORMATION_ACCESS = 137 as const;\r\nexport const CHANGE_WINDOW_COLOR = 138 as const;\r\n\r\nexport const CHANGE_DEFEAT_ME = 139 as const;\r\nexport const CHANGE_VEHICLE_BGM = 140 as const;\r\n\r\nexport const TRANSFER_PLAYER = 201 as const;\r\nexport const SET_VEHICLE_LOCATION = 202 as const;\r\nexport const SET_EVENT_LOCATION = 203 as const;\r\nexport const SCROLL_MAP = 204 as const;\r\nexport const SET_MOVEMENT_ROUTE = 205 as const;\r\nexport const GET_ONOFF_VEHICLE = 206 as const;\r\nexport const CHANGE_TRANSPARENCY = 211 as const;\r\nexport const SHOW_ANIMATION = 212 as const;\r\nexport const SHOW_BALLOON_ICON = 213 as const;\r\nexport const ERASE_EVENT = 214 as const;\r\nexport const CHANGE_PLAYER_FOLLOWERS = 216 as const;\r\nexport const GATHER_FOLLOWERS = 217 as const;\r\nexport const FADEOUT_SCREEN = 221 as const;\r\nexport const FADEIN_SCREEN = 222 as const;\r\nexport const TINT_SCREEN = 223 as const;\r\nexport const FLASH_SCREEN = 224 as const;\r\nexport const SHAKE_SCREEN = 225 as const;\r\n\r\nexport const WAIT = 230 as const;\r\nexport const SHOW_PICTURE = 231 as const;\r\nexport const MOVE_PICTURE = 232 as const;\r\nexport const ROTATE_PICTURE = 233 as const;\r\nexport const TINT_PICTURE = 234 as const;\r\nexport const ERASE_PICTURE = 235 as const;\r\nexport const SET_WEATHER_EFFECT = 236 as const;\r\n\r\nexport const PLAY_BGM = 241 as const;\r\nexport const FADEOUT_BGM = 242 as const;\r\nexport const SAVE_BGM = 243 as const;\r\nexport const RESUME_BGM = 244 as const;\r\n\r\nexport const PLAY_BGS = 245 as const;\r\nexport const FADEOUT_BGS = 246 as const;\r\nexport const PLAY_ME = 249 as const;\r\nexport const PLAY_SE = 250 as const;\r\nexport const STOP_SE = 251 as const;\r\n\r\nexport const PLAY_MOVIE = 261 as const;\r\n\r\nexport const CHANGE_TILESET = 282 as const;\r\nexport const CHANGE_BATTLE_BACKGROUND = 283 as const;\r\nexport const CHANGE_PARALLAX = 284 as const;\r\nexport const GET_LOCATION_INFO = 285 as const;\r\n\r\nexport const BATTLE_PROCESSING = 301 as const;\r\n\r\nexport const SHOP_PROCESSING = 302 as const;\r\nexport const SHOP_PROCESSING_BODY = 605 as const;\r\nexport const NAME_INPUT_PROCESSING = 303 as const;\r\nexport const CHANGE_HP = 311 as const;\r\nexport const CHANGE_MP = 312 as const;\r\nexport const CHANGE_TP = 313 as const;\r\nexport const RECOVER_ALL = 314 as const;\r\nexport const CHANGE_EXP = 315 as const;\r\n\r\nexport const CHANGE_NAME = 320 as const;\r\nexport const CHANGE_CLASS = 321 as const;\r\nexport const CHANGE_ACTOR_IMAGES = 322 as const;\r\nexport const CHANGE_VEHICLE_IMAGE = 323 as const;\r\nexport const CHANGE_NICKNAME = 324 as const;\r\nexport const CHANGE_PROFILE = 325 as const;\r\n\r\nexport const CHANGE_ENEMY_HP = 331 as const;\r\nexport const CHANGE_ENEMY_MP = 332 as const;\r\n\r\nexport const CHANGE_ENEMY_STATE = 333 as const;\r\nexport const ENEMY_RECOVER_ALL = 334 as const;\r\nexport const ENEMY_APPEAR = 335 as const;\r\nexport const ENEMY_TRANSFORM = 336 as const;\r\nexport const SHOW_BATTLE_ANIMATION = 337 as const;\r\nexport const FORCE_ACTION = 339 as const;\r\nexport const ABORT_BATTLE = 340 as const;\r\nexport const OPEN_MENU_SCREEN = 351 as const;\r\n\r\nexport const CHANGE_ENEMY_TP = 342 as const;\r\n\r\nexport const OPEN_SAVE_SCREEN = 352 as const;\r\nexport const GAME_OVER = 353 as const;\r\nexport const RETURN_TO_TITLE_SCREEN = 354 as const;\r\nexport const SCRIPT_EVAL = 355 as const;\r\nexport const SCRIPT_EVAL_BODY = 655 as const;\r\nexport const PLUGIN_COMMAND_MV = 356 as const;\r\nexport const PLUGIN_COMMAND_MZ = 357 as const;\r\n","import { INPUT_NUMBER } from \"src/rpg\";\r\nimport type {\r\n  Command_InputNumber,\r\n  ParamArray_InputNumber,\r\n  ParamObject_InputNumber,\r\n} from \"./types\";\r\n\r\nexport const toArrayInputNumber = (\r\n  param: Partial<ParamObject_InputNumber>\r\n): ParamArray_InputNumber => [param.variableId ?? 0, param.digits ?? 0];\r\n\r\nexport const fromArrayInputNumber = (\r\n  array: ParamArray_InputNumber\r\n): ParamObject_InputNumber => ({\r\n  variableId: array[0],\r\n  digits: array[1],\r\n});\r\n\r\nexport const makeCommandInputNumber = (\r\n  param: Partial<ParamObject_InputNumber> | undefined,\r\n  indent: number = 0\r\n): Command_InputNumber => ({\r\n  code: INPUT_NUMBER,\r\n  indent,\r\n  parameters: toArrayInputNumber(param ?? {}),\r\n});\r\n","import { SHOW_SCROLLING_TEXT, SHOW_SCROLLING_TEXT_BODY } from \"src/rpg\";\r\nimport type {\r\n  Command_ScrollTextBody,\r\n  Command_ScrollTextHeader,\r\n  ParamArray_ScrollTextHeader,\r\n  ParamObject_ScrollTextHeader,\r\n} from \"./types\";\r\nimport type {\r\n  ParamArray_ScrollTextBody,\r\n  ParamObject_ScrollTextBody,\r\n} from \"./types\";\r\n\r\nexport const toArrayScrollingTextHeader = (\r\n  param: Partial<ParamObject_ScrollTextHeader> = {}\r\n): ParamArray_ScrollTextHeader => {\r\n  return [param?.speed ?? 4, param?.skip ?? false];\r\n};\r\n\r\nexport const fromArrayScrollingTextHeader = (\r\n  array: ParamArray_ScrollTextHeader\r\n): ParamObject_ScrollTextHeader => {\r\n  return {\r\n    speed: array[0],\r\n    skip: array[1],\r\n  };\r\n};\r\n\r\nexport const makeCommandScrollingTextHeader = (\r\n  param: Partial<ParamObject_ScrollTextHeader> = {},\r\n  indent: number = 0\r\n): Command_ScrollTextHeader => {\r\n  return {\r\n    code: SHOW_SCROLLING_TEXT,\r\n    indent,\r\n    parameters: toArrayScrollingTextHeader(param),\r\n  };\r\n};\r\n\r\nexport const toArrayScrollingTextBody = (\r\n  text: string = \"\"\r\n): ParamArray_ScrollTextBody => {\r\n  return [text];\r\n};\r\n\r\nexport const fromArrayScrollingTextBody = (\r\n  array: ParamArray_ScrollTextBody\r\n): ParamObject_ScrollTextBody => {\r\n  return {\r\n    content: array[0],\r\n  };\r\n};\r\nexport const makeCommandScrollingTextBody = (\r\n  text: string = \"\",\r\n  indent: number = 0\r\n): Command_ScrollTextBody => {\r\n  return {\r\n    code: SHOW_SCROLLING_TEXT_BODY,\r\n    indent: indent ?? 0,\r\n    parameters: toArrayScrollingTextBody(text),\r\n  };\r\n};\r\n","import type { Command_ScriptBody, Command_ScriptHeader } from \"./types\";\r\nimport { SCRIPT_EVAL, SCRIPT_EVAL_BODY } from \"src/rpg\";\r\n\r\nexport const makeCommandScriptHeader = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptHeader => {\r\n  return {\r\n    code: SCRIPT_EVAL,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\n\r\nexport const makeCommandScriptBody = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptBody => {\r\n  return {\r\n    code: SCRIPT_EVAL_BODY,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\nexport const makeCommandScriptArray = (\r\n  lines: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return lines.map((line, index) =>\r\n    index === 0\r\n      ? makeCommandScriptHeader(line, indent)\r\n      : makeCommandScriptBody(line, indent)\r\n  ) as [Command_ScriptHeader, ...Command_ScriptBody[]];\r\n};\r\n","export const ENEMY_PARAM_INDEX = {\r\n  HP: 0,\r\n  MP: 1,\r\n  MHP: 2,\r\n  MMP: 3,\r\n  ATK: 4,\r\n  DEF: 5,\r\n  MAT: 6,\r\n  MDF: 7,\r\n  AGI: 8,\r\n  LUK: 9,\r\n  TP: 10,\r\n} as const;\r\n","import type {\r\n  Command_ControlSwitches,\r\n  ParamArray_ControlSwitches,\r\n  Paramobject_ControlSwitches,\r\n} from \"./types\";\r\nimport { CONTROL_SWITCHES } from \"src/rpg\";\r\n\r\nexport const fromArrayControlSwitches = (\r\n  param: ParamArray_ControlSwitches\r\n): Paramobject_ControlSwitches => {\r\n  return {\r\n    min: param[0],\r\n    max: param[1],\r\n    value: param[2],\r\n  };\r\n};\r\n\r\nexport const toArrayControlSwitches = (\r\n  object: Paramobject_ControlSwitches\r\n): ParamArray_ControlSwitches => {\r\n  return [object.min, object.max, object.value];\r\n};\r\n\r\nexport const makeCommandControlSwitches = (\r\n  param: Paramobject_ControlSwitches,\r\n  indent = 0\r\n): Command_ControlSwitches => ({\r\n  code: CONTROL_SWITCHES,\r\n  indent,\r\n  parameters: toArrayControlSwitches(param),\r\n});\r\n","import { COMMON_EVENT } from \"src/rpg\";\r\nimport type { Command_CommonEvent, ParamObject_CommonEvent } from \"./types\";\r\nimport type { ParamArray_CommonEvent } from \"./types\";\r\n\r\nexport const makeCommandCommonEvent = (\r\n  param: Partial<ParamObject_CommonEvent> | undefined,\r\n  indent: number = 0\r\n): Command_CommonEvent => ({\r\n  code: COMMON_EVENT,\r\n  indent,\r\n  parameters: toArrayCommonEvent(param ?? {}),\r\n});\r\n\r\nexport const fromArrayCommonEvent = (\r\n  array: ParamArray_CommonEvent\r\n): ParamObject_CommonEvent => ({\r\n  eventId: array[0],\r\n});\r\n\r\nexport const toArrayCommonEvent = (\r\n  object: Partial<ParamObject_CommonEvent>\r\n): ParamArray_CommonEvent => [object.eventId ?? 0];\r\n","import type {\r\n  EventCommandLike2,\r\n  EventCommandUnknown,\r\n} from \"@RpgTypes/eventCommand/frame\";\r\n\r\nexport const cloneParameters = <\r\n  Param extends ReadonlyArray<number | boolean | string>\r\n>(\r\n  param: Param\r\n): Param => {\r\n  return [...param] as unknown as Param;\r\n};\r\n\r\nexport const cloneEventCommand = <\r\n  Param extends Array<number | boolean | string>\r\n>(\r\n  command: EventCommandLike2<number, Param>\r\n) => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: cloneParameters<Param>(command.parameters),\r\n  };\r\n};\r\n\r\nconst isPrimitive = (value: unknown): value is string | number | boolean =>\r\n  typeof value === \"string\" ||\r\n  typeof value === \"number\" ||\r\n  typeof value === \"boolean\";\r\n\r\nexport const isCloneableCommand = (\r\n  value: EventCommandUnknown\r\n): value is EventCommandLike2<number, (string | number | boolean)[]> => {\r\n  return value.parameters.every(isPrimitive);\r\n};\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { ItemLabels } from \"./itemLabels\";\r\n\r\nexport const DEFAULT_ITEM_LABELS = {\r\n  domainName: \"アイテム\",\r\n  options: {\r\n    consumable: \"消耗品\",\r\n  },\r\n} as const satisfies DomainLabel<ItemLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { SkillLabels } from \"./skillLabels\";\r\n\r\nexport const DEFAULT_SKILL_LABELS = {\r\n  domainName: \"スキル\",\r\n  options: {\r\n    requiredWeaponTypeId1: \"必要武器タイプ1\",\r\n    requiredWeaponTypeId2: \"必要武器タイプ2\",\r\n    mpCost: \"MP消費\",\r\n    tpCost: \"TP消費\",\r\n  },\r\n} as const satisfies DomainLabel<SkillLabels>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  System_Bgm,\r\n  System_BooleanOptions,\r\n  System_DataNames,\r\n  System_Images,\r\n  System_Text,\r\n} from \"./subset\";\r\ntype AsLabel<T> = Record<keyof T, string>;\r\n\r\nexport type SystemLabel_DataNames = AsLabel<System_DataNames>;\r\nexport type SystemLabel_Images = AsLabel<System_Images>;\r\nexport type SystemLabel_Text = AsLabel<System_Text>;\r\nexport type SystemLabel_Bgm = AsLabel<System_Bgm>;\r\nexport type SystemLabel_BoolanOptions = AsLabel<System_BooleanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_BOOLEAN = {\r\n  domainName: \"オプション\",\r\n  options: {\r\n    optDrawTitle: \"ゲームタイトルの描画\",\r\n    optDisplayTp: \"ウィンドウにTPを表示\",\r\n    optFloorDeath: \"床ダメージで戦闘不能\",\r\n    optSlipDeath: \"スリップダメージで戦闘不能\",\r\n    optAutosave: \"オートセーブを有効化\",\r\n    optExtraExp: \"控えメンバーも経験値を獲得\",\r\n    optFollowers: \"隊列歩行\",\r\n    optSideView: \"戦闘をサイドビューにする\",\r\n    optKeyItemsNumber: \"大事なものの個数を表示\",\r\n    optTransparent: \"透明状態で開始\",\r\n    optMessageSkip: \"メッセージスキップを有効化\",\r\n    optSplashScreen: \"スプラッシュ画面を表示\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_BoolanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_DATA_TYPES = {\r\n  domainName: \"タイプ\",\r\n  options: {\r\n    armorTypes: \"防具タイプ\",\r\n    elements: \"属性\",\r\n    equipTypes: \"装備タイプ\",\r\n    skillTypes: \"スキルタイプ\",\r\n    weaponTypes: \"武器タイプ\",\r\n    switches: \"スイッチ\",\r\n    variables: \"変数\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_DataNames>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { UsableItemLabels } from \"./usableItemLabels\";\r\n\r\nexport const DEFAULT_USABLE_ITEM_LABELS = {\r\n  domainName: \"\",\r\n  options: {\r\n    scope: \"範囲\",\r\n    speed: \"速度補正\",\r\n    successRate: \"成功率\",\r\n  },\r\n} as const satisfies DomainLabel<UsableItemLabels>;\r\n","export const FILENAME_SYSTEM = \"System.json\";\r\nexport const FILENAME_ACTORS = \"Actors.json\";\r\nexport const FILENAME_CLASSES = \"Classes.json\";\r\nexport const FILENAME_SKILLS = \"Skills.json\";\r\nexport const FILENAME_ITEMS = \"Items.json\";\r\nexport const FILENAME_WEAPONS = \"Weapons.json\";\r\nexport const FILENAME_ARMORS = \"Armors.json\";\r\nexport const FILENAME_ENEMIES = \"Enemies.json\";\r\nexport const FILENAME_TROOPS = \"Troops.json\";\r\nexport const FILENAME_STATES = \"States.json\";\r\nexport const FILENAME_ANIMATIONS = \"Animations.json\";\r\nexport const FILENAME_TILESET = \"Tilesets.json\";\r\nexport const FILENAME_COMMON_EVENTS = \"CommonEvents.json\";\r\nexport const FILENAME_MAP_INFOS = \"MapInfos.json\";\r\n","export const FOLDER_DATA = \"data\" as const;\r\nexport const FOLDER_IMG = \"img\" as const;\r\nexport const FOLDER_AUDIO = \"audio\" as const;\r\nexport const FOLDER_JS = \"js\" as const;\r\n","export const FOLDER_AUDIO_BGM = \"bgm\" as const;\r\nexport const FOLDER_AUDIO_SE = \"se\" as const;\r\nexport const FOLDER_AUDIO_ME = \"me\" as const;\r\nexport const FOLDER_AUDIO_BGS = \"bgs\" as const;\r\n","export const FOLDER_IMG_BATTLEBACK1 = \"battlebacks1\" as const;\r\nexport const FOLDER_IMG_BATTLEBACK2 = \"battlebacks2\" as const;\r\nexport const FOLDER_IMG_CHACTERS = \"characters\" as const;\r\nexport const FOLDER_IMG_ENEMIES = \"enemies\" as const;\r\nexport const FOLDER_IMG_FACES = \"faces\" as const;\r\nexport const FOLDER_IMG_PARALLACES = \"parallaxes\" as const;\r\nexport const FOLDER_IMG_PICTURES = \"pictures\" as const;\r\nexport const FOLDER_IMG_SV_ACTORS = \"sv_actors\" as const;\r\nexport const FOLDER_IMG_SV_ENEMIES = \"sv_enemies\" as const;\r\nexport const FOLDER_IMG_SYSTEM = \"system\" as const;\r\nexport const FOLDER_IMG_TILESETS = \"tilesets\" as const;\r\nexport const FOLDER_IMG_TITLES1 = \"titles1\" as const;\r\nexport const FOLDER_IMG_TITLES2 = \"titles2\" as const;\r\n","export const HITTYPE_CERTAIN = 0 as const;\r\nexport const HITTYPE_PHYSICAL = 1 as const;\r\nexport const HITTYPE_MAGICAL = 2 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { WeaponLabels } from \"./weaponLabels\";\r\n\r\nexport const LABELS_DATA_WEAPON = {\r\n  domainName: \"武器\",\r\n  options: {\r\n    weaponTypeId: \"武器タイプID\",\r\n  },\r\n} as const satisfies DomainLabel<WeaponLabels>;\r\n","export const OPERAND_CONSTANT = 0 as const;\r\nexport const OPERAND_VARIABLE = 1 as const;\r\nexport const OPERAND_RANDOM = 2 as const;\r\nexport const OPERAND_GAMEDATA = 3 as const;\r\nexport const OPERAND_SCRIPT = 4 as const;\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","export const ROUTE_END = 0 as const;\r\nexport const ROUTE_MOVE_DOWN = 1 as const;\r\nexport const ROUTE_MOVE_LEFT = 2 as const;\r\nexport const ROUTE_MOVE_RIGHT = 3 as const;\r\nexport const ROUTE_MOVE_UP = 4 as const;\r\nexport const ROUTE_MOVE_LOWER_L = 5 as const;\r\nexport const ROUTE_MOVE_LOWER_R = 6 as const;\r\nexport const ROUTE_MOVE_UPPER_L = 7 as const;\r\nexport const ROUTE_MOVE_UPPER_R = 8 as const;\r\nexport const ROUTE_MOVE_RANDOM = 9 as const;\r\nexport const ROUTE_MOVE_TOWARD = 10 as const;\r\nexport const ROUTE_MOVE_AWAY = 11 as const;\r\nexport const ROUTE_MOVE_FORWARD = 12 as const;\r\nexport const ROUTE_MOVE_BACKWARD = 13 as const;\r\nexport const ROUTE_JUMP = 14 as const;\r\nexport const ROUTE_WAIT = 15 as const;\r\nexport const ROUTE_TURN_DOWN = 16 as const;\r\nexport const ROUTE_TURN_LEFT = 17 as const;\r\nexport const ROUTE_TURN_RIGHT = 18 as const;\r\nexport const ROUTE_TURN_UP = 19 as const;\r\nexport const ROUTE_TURN_90D_R = 20 as const;\r\nexport const ROUTE_TURN_90D_L = 21 as const;\r\nexport const ROUTE_TURN_180D = 22 as const;\r\nexport const ROUTE_TURN_90D_R_L = 23 as const;\r\nexport const ROUTE_TURN_RANDOM = 24 as const;\r\nexport const ROUTE_TURN_TOWARD = 25 as const;\r\nexport const ROUTE_TURN_AWAY = 26 as const;\r\nexport const ROUTE_SWITCH_ON = 27 as const;\r\nexport const ROUTE_SWITCH_OFF = 28 as const;\r\nexport const ROUTE_CHANGE_SPEED = 29 as const;\r\nexport const ROUTE_CHANGE_FREQ = 30 as const;\r\nexport const ROUTE_WALK_ANIME_ON = 31 as const;\r\nexport const ROUTE_WALK_ANIME_OFF = 32 as const;\r\nexport const ROUTE_STEP_ANIME_ON = 33 as const;\r\nexport const ROUTE_STEP_ANIME_OFF = 34 as const;\r\nexport const ROUTE_DIR_FIX_ON = 35 as const;\r\nexport const ROUTE_DIR_FIX_OFF = 36 as const;\r\nexport const ROUTE_THROUGH_ON = 37 as const;\r\nexport const ROUTE_THROUGH_OFF = 38 as const;\r\nexport const ROUTE_TRANSPARENT_ON = 39 as const;\r\nexport const ROUTE_TRANSPARENT_OFF = 40 as const;\r\nexport const ROUTE_CHANGE_IMAGE = 41 as const;\r\nexport const ROUTE_CHANGE_OPACITY = 42 as const;\r\nexport const ROUTE_CHANGE_BLEND_MODE = 43 as const;\r\nexport const ROUTE_PLAY_SE = 44 as const;\r\nexport const ROUTE_SCRIPT = 45 as const;\r\n","import type { Damage } from \"./damage\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nexport const SCHEMA_DAMAGE = {\r\n  type: \"object\",\r\n  required: [\"type\", \"elementId\", \"formula\", \"variance\", \"critical\"],\r\n  properties: {\r\n    type: { type: \"integer\", minimum: 0 },\r\n    elementId: { type: \"integer\", minimum: 0 },\r\n    formula: { type: \"string\" },\r\n    variance: { type: \"integer\" },\r\n    critical: { type: \"boolean\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Damage>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_Advanced } from \"./advanced\";\r\n\r\nexport const SCHEMA_SYSTEM_ADVANCED = {\r\n  type: \"object\",\r\n  properties: {\r\n    gameId: { type: \"integer\" },\r\n    screenWidth: { type: \"integer\" },\r\n    screenHeight: { type: \"integer\" },\r\n    uiAreaWidth: { type: \"integer\" },\r\n    uiAreaHeight: { type: \"integer\" },\r\n    windowOpacity: { type: \"integer\" },\r\n    screenScale: { type: \"number\" },\r\n\r\n    numberFontFilename: { type: \"string\" },\r\n    mainFontFilename: { type: \"string\" },\r\n    fallbackFonts: { type: \"string\" },\r\n    fontSize: { type: \"integer\" },\r\n  },\r\n  required: [\r\n    \"gameId\",\r\n    \"screenWidth\",\r\n    \"screenHeight\",\r\n    \"uiAreaWidth\",\r\n    \"uiAreaHeight\",\r\n    \"windowOpacity\",\r\n    \"screenScale\",\r\n    \"numberFontFilename\",\r\n    \"mainFontFilename\",\r\n    \"fallbackFonts\",\r\n    \"fontSize\",\r\n  ],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<System_Advanced>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Trait } from \"./trait\";\r\n\r\nexport const TYPENAME_TRAIT = \"Trait\" as const;\r\n\r\nexport const SCHEMA_TRAIT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"dataId\", \"value\"],\r\n  properties: {\r\n    code: { type: \"integer\" },\r\n    dataId: { type: \"integer\" },\r\n    value: { type: \"integer\" },\r\n  },\r\n} as const satisfies JSONSchemaType<Trait>;\r\n","export const SPECIAL_EFFECT_ESCAPE = 0 as const;\r\n","import type { Data_Actor } from \"./types\";\r\nimport { MODULE_DATA, SRC_DATA_ACTOR } from \"src/rpg\";\r\nimport { AUTHOR_RMMZ, type SourceIdentifier } from \"src/namedItemSource\";\r\n\r\nexport const makeActorData = (actor: Partial<Data_Actor> = {}): Data_Actor => ({\r\n  name: actor.name ?? \"\",\r\n  id: actor.id ?? 0,\r\n  battlerName: actor.battlerName ?? \"\",\r\n  characterName: actor.characterName ?? \"\",\r\n  characterIndex: actor.characterIndex ?? 0,\r\n  faceName: actor.faceName ?? \"\",\r\n  faceIndex: actor.faceIndex ?? 0,\r\n  traits: [],\r\n  note: actor.note ?? \"\",\r\n  classId: actor.classId ?? 0,\r\n  nickname: actor.nickname ?? \"\",\r\n  profile: actor.profile ?? \"\",\r\n  equips: [],\r\n  initialLevel: actor.initialLevel ?? 0,\r\n  maxLevel: actor.maxLevel ?? 0,\r\n});\r\n\r\nexport const actorSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_ACTOR,\r\n});\r\n","import { AUTHOR_RMMZ, type SourceIdentifier } from \"src/namedItemSource\";\r\n\r\nimport type { Data_Armor } from \"./types\";\r\nimport { SRC_DATA_ARMOR, MODULE_DATA } from \"../../../sourceConstants\";\r\n\r\nexport const makeArmorData = (armor: Partial<Data_Armor> = {}): Data_Armor => ({\r\n  id: armor.id ?? 0,\r\n  name: armor.name ?? \"\",\r\n  iconIndex: armor.iconIndex ?? 0,\r\n  description: armor.description ?? \"\",\r\n  traits: armor.traits ?? [],\r\n  note: armor.note ?? \"\",\r\n  atypeId: armor.atypeId ?? 0,\r\n  params: armor.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: armor.etypeId ?? 0,\r\n  price: armor.price ?? 0,\r\n});\r\n\r\nexport const armorSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_ARMOR,\r\n});\r\n","import { SHOW_CHOICES, SHOW_CHOICES_ITEM } from \"src/rpg\";\r\nimport type {\r\n  ParamArray_SetupChoice,\r\n  ParamObject_SetupChoice,\r\n  Command_ShowChoices,\r\n} from \"./types/body\";\r\nimport type {\r\n  ParamObject_ShowChoiceWhen,\r\n  Command_ShowChoiceWhen,\r\n  ParamArray_ShowChoiceWhen,\r\n} from \"./types/item\";\r\n\r\nexport const makeCommandShowChoiceItem = (\r\n  param: Partial<ParamObject_ShowChoiceWhen> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoiceWhen => ({\r\n  code: SHOW_CHOICES_ITEM,\r\n  indent,\r\n  parameters: [param?.index ?? 0, param?.name ?? \"\"],\r\n});\r\n\r\nexport const fromArraySetupChoiceItem = (\r\n  array: ParamArray_ShowChoiceWhen\r\n): ParamObject_ShowChoiceWhen => ({\r\n  index: array[0],\r\n  name: array[1],\r\n});\r\n\r\nexport const toArraySetupChoiceItem = (\r\n  object: Partial<ParamObject_ShowChoiceWhen>\r\n): ParamArray_ShowChoiceWhen => [object.index ?? 0, object.name ?? \"\"];\r\n\r\nexport const fromArraySetupChoice = (\r\n  array: ParamArray_SetupChoice\r\n): ParamObject_SetupChoice => ({\r\n  choices: array[0],\r\n  cancelType: array[1],\r\n  defaultType: array[2],\r\n  positionType: array[3],\r\n  background: array[4],\r\n});\r\n\r\nexport const toArraySetupChoice = (\r\n  object: Partial<ParamObject_SetupChoice>\r\n): ParamArray_SetupChoice => [\r\n  object.choices ?? [],\r\n  object.cancelType ?? 0,\r\n  object.defaultType ?? 0,\r\n  object.positionType ?? 2,\r\n  object.background ?? 0,\r\n];\r\n\r\nexport const makeCommandSetupChoice = (\r\n  param: Partial<ParamObject_SetupChoice> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoices => ({\r\n  code: SHOW_CHOICES,\r\n  indent,\r\n  parameters: [\r\n    param?.choices ?? [],\r\n    param?.cancelType ?? 0,\r\n    param?.defaultType ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.background ?? 0,\r\n  ],\r\n});\r\n\r\nexport const cloneChoices = (\r\n  command: Command_ShowChoices\r\n): Command_ShowChoices => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: [\r\n      [...command.parameters[0]],\r\n      command.parameters[1],\r\n      command.parameters[2],\r\n      command.parameters[3],\r\n      command.parameters[4],\r\n    ],\r\n  };\r\n};\r\n","import type { Data_System } from \"@RpgTypes/system\";\r\nimport type { ControlCharInfo } from \"./controlChars\";\r\nimport { createControlCharFormat } from \"./controlChars\";\r\nimport { CTRL_CHAR_ACTOR, CTRL_CHAR_VARIABLE } from \"./controlChars/constants\";\r\nimport type { Data_Actor } from \"./main\";\r\n\r\nexport const createActorControlChars = (\r\n  actors: ReadonlyArray<Data_Actor>\r\n): ControlCharInfo[] => {\r\n  return actors.map<ControlCharInfo>((actor) => ({\r\n    text: actor.name,\r\n    controlChar: createControlCharFormat(CTRL_CHAR_ACTOR, actor.id),\r\n  }));\r\n};\r\n\r\nexport const createSystemVariableControlChars = (\r\n  system: Pick<Data_System, \"variables\">\r\n): ControlCharInfo[] => {\r\n  return system.variables\r\n    .map<ControlCharInfo>((name, index) => ({\r\n      text: name || \"\",\r\n      controlChar: createControlCharFormat(CTRL_CHAR_VARIABLE, index),\r\n    }))\r\n    .filter((pair) => pair.text !== \"\");\r\n};\r\n","export const CTRL_CHAR_ACTOR = \"N\" as const;\r\nexport const CTRL_CHAR_VARIABLE = \"V\" as const;\r\nexport const CTRL_CHAR_POSTION_X = \"PX\" as const;\r\nexport const CTRL_CHAR_POSTION_Y = \"PY\" as const;\r\nexport const CTRL_CHAR_GOLD = \"G\" as const;\r\nexport const CTRL_CHAR_PARTY = \"P\" as const;\r\nexport const CTRL_CHAR_COLOR = \"C\" as const;\r\nexport const CTRL_CHAR_ICON = \"I\" as const;\r\nexport const CTRL_CHAR_FONT_SIZE = \"FS\" as const;\r\n","import type { CommandParamaterType } from \"@RpgTypes/eventCommand\";\r\nimport type { EventCommandLike } from \"./eventComandLike\";\r\nimport type { EventCode } from \"./eventCommand\";\r\n\r\nexport const createEventCommand = <\r\n  Code extends EventCode,\r\n  Param extends CommandParamaterType<Code>\r\n>(\r\n  code: Code,\r\n  param: Param,\r\n  indent: number = 0\r\n): EventCommandLike<Code, Param> => {\r\n  return {\r\n    code,\r\n    indent,\r\n    parameters: param,\r\n  };\r\n};\r\n","import {\r\n  defineTraitRegularParam,\r\n  defineTraitExtraParam,\r\n  defineTraitSpecialParam,\r\n  defineTraitCollapseType,\r\n  defineTraitSpecialFlag,\r\n} from \"./items\";\r\nimport type { NamedItemSource } from \"src/namedItemSource\";\r\nimport type { GlobalLabel, TraitLabelSet } from \"src/rpg\";\r\n\r\nexport const defineTraitItems = (\r\n  set: TraitLabelSet,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineTraitRegularParam(set.regularParam),\r\n    defineTraitExtraParam(set.extraParam),\r\n    defineTraitSpecialParam(set.specialParam),\r\n    defineTraitCollapseType(set.collaps, global),\r\n    defineTraitSpecialFlag(set.specialFlag),\r\n  ];\r\n};\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type { ItemEffect } from \"./itemEffect\";\r\nimport type { EffectDefinitionResolved } from \"./labels\";\r\nconst FORMAT_NAME = \"{name}\" as const;\r\nconst FORMAT_VALUE1 = \"{value1}\" as const;\r\nconst FORMAT_VALUE2 = \"{value2}\" as const;\r\n\r\nexport const formatItemEffectText = (\r\n  effectDefine: EffectDefinitionResolved,\r\n  effect: ItemEffect,\r\n  items: Data_NamedItem[]\r\n): string => {\r\n  const item = items.find((item) => item.id === effect.dataId);\r\n  const name: string = item ? item.name : \"Unknown Item\";\r\n  return effectDefine.format\r\n    .replaceAll(FORMAT_VALUE1, effect.value1.toString())\r\n    .replaceAll(FORMAT_VALUE2, effect.value2.toString())\r\n    .replaceAll(FORMAT_NAME, name);\r\n};\r\n","import type {\r\n  Command_ShowMessageBody,\r\n  Command_ShowMessageHeader,\r\n  ParamArray_ShowMessage,\r\n  ParamObject_ShowMessage,\r\n} from \"./types\";\r\nimport { SHOW_MESSAGE, SHOW_MESSAGE_BODY } from \"src/rpg\";\r\n\r\nexport const makeCommandShowMessage = (\r\n  param: Partial<ParamObject_ShowMessage> | undefined,\r\n  indent: number = 0\r\n): Command_ShowMessageHeader => ({\r\n  code: SHOW_MESSAGE,\r\n  indent,\r\n  parameters: [\r\n    param?.facename ?? \"\",\r\n    param?.faceIndex ?? 0,\r\n    param?.background ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.speakerName ?? \"\",\r\n  ],\r\n});\r\n\r\nexport const fromArrayShowMessageHeader = (\r\n  array: ParamArray_ShowMessage\r\n): ParamObject_ShowMessage => {\r\n  return {\r\n    facename: array[0],\r\n    faceIndex: array[1],\r\n    background: array[2],\r\n    positionType: array[3],\r\n    speakerName: array[4],\r\n  };\r\n};\r\n\r\nexport const toArrayShowMessageHeader = (\r\n  object: ParamObject_ShowMessage\r\n): ParamArray_ShowMessage => {\r\n  return [\r\n    object.facename,\r\n    object.faceIndex,\r\n    object.background,\r\n    object.positionType,\r\n    object.speakerName,\r\n  ];\r\n};\r\n\r\nexport const makeCommandShowMessageBody = (\r\n  text: string,\r\n  indent: number = 0\r\n): Command_ShowMessageBody => ({\r\n  code: SHOW_MESSAGE_BODY,\r\n  indent,\r\n  parameters: [text],\r\n});\r\n","import type {\r\n  DataOperand_Enemy,\r\n  Operand_EnemyStatus,\r\n  DataOperand_Actor,\r\n  Operand_ActorStatus,\r\n} from \"./types\";\r\n\r\nexport const getEnemyValue = (\r\n  enemy: DataOperand_Enemy,\r\n  param: Operand_EnemyStatus\r\n): number => {\r\n  switch (param[6]) {\r\n    case 0:\r\n      return enemy.hp;\r\n    case 1:\r\n      return enemy.mp;\r\n    case 10:\r\n      return enemy.tp;\r\n  }\r\n  if (param[6] >= 2 && param[6] <= 9) {\r\n    return enemy.param(param[6] - 2);\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getActorValue = (\r\n  actor: DataOperand_Actor,\r\n  param: Operand_ActorStatus\r\n) => {\r\n  switch (param[6]) {\r\n    case 0: // Level\r\n      return actor.level;\r\n    case 1: // EXP\r\n      return actor.currentExp();\r\n    case 2: // HP\r\n      return actor.hp;\r\n    case 3: // MP\r\n      return actor.mp;\r\n    case 12: // TP\r\n      return actor.tp;\r\n  }\r\n  if (param[6] >= 4 && param[6] <= 11) {\r\n    return actor.param(param[6] - 4);\r\n  }\r\n  return 0;\r\n};\r\n","import type { ControlChar } from \"./types\";\r\n\r\n/**\r\n * 指定されたテキストから制御文字を抽出し、ControlChar配列として返します。\r\n * 制御文字の形式: \\(文字)[数字]\r\n * 文字の大文字小文字を区別しない。\r\n */\r\nexport const getControlChars = (text: string): ControlChar[] => {\r\n  // 正規表現: \\(制御文字)[数字]\r\n  const regex = /\\\\([A-Za-z]+)\\[(\\d+)]/g;\r\n  return Array.from(text.matchAll(regex)).map<ControlChar>(\r\n    (match: RegExpMatchArray) => ({\r\n      char: match[1],\r\n      id: parseInt(match[2], 10),\r\n    })\r\n  );\r\n};\r\n","import {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_BATTLE_BGM,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_DEFEAT_ME,\r\n} from \"src/rpg\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_ChangeBattleBGM,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeDefeatME,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n} from \"./commands/audio\";\r\nimport { isCommandAudio } from \"./validate\";\r\n\r\nexport const isCommandPlayBgm = (\r\n  command: unknown\r\n): command is Command_PlayBGM => {\r\n  return isCommandAudio(command) && command.code === PLAY_BGM;\r\n};\r\n\r\nexport const isCommandPlayBgs = (\r\n  command: unknown\r\n): command is Command_PlayBGS => {\r\n  return isCommandAudio(command) && command.code === PLAY_BGS;\r\n};\r\n\r\nexport const isCommandPlayMe = (\r\n  command: unknown\r\n): command is Command_PlayME => {\r\n  return isCommandAudio(command) && command.code === PLAY_ME;\r\n};\r\n\r\nexport const isCommandPlaySe = (\r\n  command: unknown\r\n): command is Command_PlaySE => {\r\n  return isCommandAudio(command) && command.code === PLAY_SE;\r\n};\r\n\r\nexport const isCommandChangeBattleBgm = (\r\n  command: unknown\r\n): command is Command_ChangeBattleBGM => {\r\n  return isCommandAudio(command) && command.code === CHANGE_BATTLE_BGM;\r\n};\r\n\r\nexport const isCommandChangeVictoryMe = (\r\n  command: unknown\r\n): command is Command_ChangeVictoryME => {\r\n  return isCommandAudio(command) && command.code === CHANGE_VICTORY_ME;\r\n};\r\n\r\nexport const isCommandChangeDefeatMe = (\r\n  command: unknown\r\n): command is Command_ChangeDefeatME => {\r\n  return isCommandAudio(command) && command.code === CHANGE_DEFEAT_ME;\r\n};\r\n","import {\r\n  SHOW_MESSAGE_BODY,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n  COMMENT_BODY,\r\n  COMMENT_HEAD,\r\n  SCRIPT_EVAL_BODY,\r\n  SCRIPT_EVAL,\r\n} from \"src/rpg\";\r\nimport type {\r\n  Command_ShowMessageBody,\r\n  Command_CommentBody,\r\n  Command_CommentHeader,\r\n  Command_ScrollTextBody,\r\n  Command_ScriptHeader,\r\n  Command_ScriptBody,\r\n} from \"./commands\";\r\nimport { isCommandTextBody } from \"./validate\";\r\n\r\nexport const isCommandShowMessageBody = (\r\n  command: unknown\r\n): command is Command_ShowMessageBody => {\r\n  return isCommandTextBody(command) && command.code === SHOW_MESSAGE_BODY;\r\n};\r\n\r\nexport const isCommandShowScrollingTextBody = (\r\n  command: unknown\r\n): command is Command_ScrollTextBody => {\r\n  return (\r\n    isCommandTextBody(command) && command.code === SHOW_SCROLLING_TEXT_BODY\r\n  );\r\n};\r\n\r\nexport const isCommandCommentHeader = (\r\n  command: unknown\r\n): command is Command_CommentHeader => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_HEAD;\r\n};\r\n\r\nexport const isCommandCommentBody = (\r\n  command: unknown\r\n): command is Command_CommentBody => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_BODY;\r\n};\r\n\r\nexport const isCommandScriptHeader = (\r\n  command: unknown\r\n): command is Command_ScriptHeader => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL;\r\n};\r\n\r\nexport const isCommandScriptBody = (\r\n  command: unknown\r\n): command is Command_ScriptBody => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL_BODY;\r\n};\r\n","import { AUTHOR_RMMZ, type SourceIdentifier } from \"src/namedItemSource\";\r\nimport { SRC_DATA_ITEMS, MODULE_DATA } from \"src/rpg\";\r\nimport type { Data_Item } from \"./types\";\r\nimport { makeDamage } from \"../members\";\r\n\r\nexport const itemSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_ITEMS,\r\n});\r\n\r\nexport const makeItemData = (item: Partial<Data_Item> = {}): Data_Item => ({\r\n  animationId: item.animationId ?? 0,\r\n  id: item.id ?? 0,\r\n  name: item.name ?? \"\",\r\n  iconIndex: item.iconIndex ?? 0,\r\n  description: item.description ?? \"\",\r\n  itypeId: item.itypeId ?? 0,\r\n\r\n  note: item.note ?? \"\",\r\n  consumable: item.consumable ?? false,\r\n  scope: item.scope ?? 0,\r\n  occasion: item.occasion ?? 0,\r\n  speed: item.speed ?? 0,\r\n  successRate: item.successRate ?? 0,\r\n  repeats: item.repeats ?? 0,\r\n  tpGain: item.tpGain ?? 0,\r\n  hitType: item.hitType ?? 0,\r\n  damage: makeDamage(item.damage ?? {}),\r\n  effects: [],\r\n  price: 0,\r\n});\r\n","import { AUTHOR_RMMZ, type SourceIdentifier } from \"src/namedItemSource\";\r\nimport type { Data_Class } from \"./types\";\r\n\r\nimport { MODULE_DATA, SRC_DATA_CLASS } from \"src/rpg\";\r\nexport const makeClassData = (data: Partial<Data_Class> = {}): Data_Class => ({\r\n  name: data.name ?? \"\",\r\n  id: data.id ?? 0,\r\n  traits: [],\r\n  note: data.note ?? \"\",\r\n  params: [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  learnings: data.learnings ?? [],\r\n  expParams: data.expParams ?? [],\r\n});\r\n\r\nexport const classSourceId = (): SourceIdentifier => ({\r\n  author: AUTHOR_RMMZ,\r\n  module: MODULE_DATA,\r\n  kind: SRC_DATA_CLASS,\r\n});\r\n","import { CHANGE_NAME, CHANGE_NICKNAME, CHANGE_PROFILE } from \"src/rpg\";\r\nimport type {\r\n  ParamObject_ChangeActorName,\r\n  Command_ChangeActorName as Command_ChangeActorName,\r\n  Command_ChangeActorNickName,\r\n  Command_ChangeActorProfile,\r\n  ParamObject_ChangeActorNickName,\r\n  ParamObject_ChangeActorProfile,\r\n} from \"./types\";\r\n\r\nexport const makeCommandChangeActorName = (\r\n  param: ParamObject_ChangeActorName,\r\n  indent: number = 0\r\n): Command_ChangeActorName => ({\r\n  code: CHANGE_NAME,\r\n  parameters: [param.actorId, param.name],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorNickName = (\r\n  param: ParamObject_ChangeActorNickName,\r\n  indent: number = 0\r\n): Command_ChangeActorNickName => ({\r\n  code: CHANGE_NICKNAME,\r\n  parameters: [param.actorId, param.nickname],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorProfile = (\r\n  param: ParamObject_ChangeActorProfile,\r\n  indent: number = 0\r\n): Command_ChangeActorProfile => ({\r\n  code: CHANGE_PROFILE,\r\n  parameters: [param.actorId, param.profile],\r\n  indent,\r\n});\r\n","import type { Data_Troop, Troop_EventConditions, Troop_Member } from \"./troop\";\r\nimport type { Data_CommonEvent } from \"./commonEvent\";\r\n\r\nexport const makeCommonEventData = (\r\n  data: Partial<Data_CommonEvent> = {}\r\n): Data_CommonEvent => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  trigger: data.trigger ?? 0,\r\n  list: data.list ?? [],\r\n  switchId: data.switchId ?? 0,\r\n});\r\n\r\nexport const makeTroopData = (data: Partial<Data_Troop> = {}): Data_Troop => ({\r\n  id: data.id ?? 0,\r\n  name: data.name ?? \"\",\r\n  members: data.members ?? [],\r\n  pages: data.pages ?? [],\r\n});\r\n\r\nexport const makeTroopMember = (\r\n  data: Partial<Troop_Member> = {}\r\n): Troop_Member => ({\r\n  enemyId: data.enemyId ?? 0,\r\n  x: data.x ?? 0,\r\n  y: data.y ?? 0,\r\n  hidden: data.hidden ?? false,\r\n});\r\n\r\nexport const makeTroopEventConditions = (\r\n  data: Partial<Troop_EventConditions> = {}\r\n): Troop_EventConditions => ({\r\n  actorHp: data.actorHp ?? 0,\r\n  actorId: data.actorId ?? 0,\r\n  enemyValid: data.enemyValid ?? 0,\r\n  switchValid: data.switchValid ?? 0,\r\n});\r\n","import type { Data_Map } from \"./map\";\r\n\r\nexport const makeMapData = (map: Partial<Data_Map> = {}): Data_Map => {\r\n  return {\r\n    data: map.data ?? [],\r\n    battleback1Name: map.battleback1Name ?? \"\",\r\n    battleback2Name: map.battleback2Name ?? \"\",\r\n\r\n    autoplayBgm: map.autoplayBgm ?? false,\r\n    autoplayBgs: map.autoplayBgs ?? false,\r\n    parallaxLoopX: map.parallaxLoopX ?? false,\r\n    parallaxLoopY: map.parallaxLoopY ?? false,\r\n    parallaxName: map.parallaxName ?? \"\",\r\n    parallaxShow: map.parallaxShow ?? false,\r\n    parallaxSx: map.parallaxSx ?? 0,\r\n    parallaxSy: map.parallaxSy ?? 0,\r\n\r\n    x: map.x ?? 0,\r\n    y: map.y ?? 0,\r\n    width: map.width ?? 0,\r\n    height: map.height ?? 0,\r\n    note: map.note ?? \"\",\r\n\r\n    bgm: map.bgm ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    bgs: map.bgs ?? { name: \"\", pan: 0, pitch: 100, volume: 100 },\r\n    disableDashing: map.disableDashing ?? false,\r\n    displayName: map.displayName ?? \"\",\r\n    encounterList: map.encounterList ?? [],\r\n    events: map.events ?? [],\r\n  };\r\n};\r\n","import type { Data_MapInfo } from \"./mapInfo\";\r\n\r\nconst makeMapName = (mapId: number) => {\r\n  return mapId.toString().padStart(3, \"0\");\r\n};\r\n\r\nexport const makeMapInfoData = (\r\n  info: { id: number } & Partial<Data_MapInfo> = { id: 0 }\r\n): Data_MapInfo => {\r\n  return {\r\n    name: info.name ?? makeMapName(info.id),\r\n    id: info.id,\r\n    expanded: info.expanded ?? false,\r\n    order: info.order ?? 0,\r\n    parentId: info.parentId ?? 0,\r\n    scrollX: info.scrollX ?? 0,\r\n    scrollY: info.scrollY ?? 0,\r\n  };\r\n};\r\n","import { makeDamage } from \"src/rpg\";\r\nimport type { Data_Weapon } from \"./weapon\";\r\n\r\nexport const makeWeaponData = (\r\n  weapon: Partial<Data_Weapon> = {}\r\n): Data_Weapon => ({\r\n  id: weapon.id ?? 0,\r\n  name: weapon.name ?? \"\",\r\n  iconIndex: weapon.iconIndex ?? 0,\r\n  description: weapon.description ?? \"\",\r\n  traits: weapon.traits ?? [],\r\n  note: weapon.note ?? \"\",\r\n  animationId: weapon.animationId ?? 0,\r\n  params: weapon.params ?? [\r\n    0, // maxhp\r\n    0, // maxmp\r\n    0, // atk\r\n    0, // def\r\n    0, // mat\r\n    0, // mdf\r\n    0, // agi\r\n    0, // luk\r\n  ],\r\n  etypeId: weapon.etypeId ?? 0,\r\n  price: weapon.price ?? 0,\r\n  damage: makeDamage(weapon.damage ?? {}),\r\n  wtypeId: weapon.wtypeId ?? 0,\r\n});\r\n","import {\r\n  OPERAND_CONSTANT,\r\n  OPERAND_RANDOM,\r\n  OPERAND_VARIABLE,\r\n  OPERAND_GAMEDATA,\r\n  OPERAND_SCRIPT,\r\n} from \"./constants\";\r\nimport type * as Type from \"./types\";\r\nimport { ENEMY_PARAM_INDEX } from \"./types/enemy/dataSource\";\r\n\r\nexport const toArrayOperandConstant = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Constant,\r\n  operation: number = 0\r\n): Type.Operand_Constatant => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_CONSTANT,\r\n  value.value,\r\n];\r\n\r\nexport const toArrayOperandVariable = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Variable,\r\n  operation: number = 0\r\n): Type.Operand_Variable => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_VARIABLE,\r\n  value.variableId,\r\n];\r\nexport const toArrayOperandRandom = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Random,\r\n  operation: number = 0\r\n): Type.Operand_Random => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_RANDOM,\r\n  value.min,\r\n  value.max,\r\n];\r\n\r\nexport const toArrayOperandScript = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Script,\r\n  operation: number = 0\r\n): Type.Operand_Script => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_SCRIPT,\r\n  value.code,\r\n];\r\nexport const toArrayOperandItemData = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ItemData,\r\n  operation: number = 0\r\n): Type.Operand_ItemData => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  value.type,\r\n  value.itemId,\r\n];\r\n\r\nexport const toArrayOperandActorStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ActorStatus,\r\n  operation: number = 0\r\n): Type.Operand_ActorStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  3,\r\n  value.index,\r\n  value.param,\r\n];\r\n\r\nexport const toArrayOperandEnemyStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Enemy,\r\n  operation: number = 0\r\n): Type.Operand_EnemyStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  4,\r\n  value.index,\r\n  ENEMY_PARAM_INDEX[value.param],\r\n];\r\n"],"names":["makeSystemAdvanced","advanced","gameId","screenWidth","screenHeight","uiAreaWidth","uiAreaHeight","windowOpacity","screenScale","numberFontFilename","mainFontFilename","fallbackFonts","fontSize","makeAudioFileParams","audioFileParams","name","volume","pitch","pan","makeSoundsArray","sounds","cursor","ok","cancel","buzzer","equip","save","load","battleStart","escape","enemyAttack","enemyDamage","enemyCollapse","bossCollapes1","bossCollapes2","actorDamage","actorCollapse","playRecovery","playMiss","playEvasion","playMagicEvasion","playReflection","shop","useItem","useSkill","makeTermsBasic","terms","level","levelA","hp","hpA","mp","mpA","tp","tpA","experience","exp","makeTermsCommandArray","param","makeTermsCommandArrayWithNulls","empty","fight","attack","guard","item","skill","status","formation","gameEnd","options","weapon","armor","keyItem","equip2","optimize","clear","newGame","continue_","toTitle","buy","sell","validate","msg","fallback","makeTermsMessages","actionFailure","actorRecovery","actorGain","actorLoss","actorDrain","actorNoDamage","actorNoHit","alwaysDash","bgmVolume","bgsVolume","commandRemember","criticalToActor","criticalToEnemy","counterAttack","debuffAdd","defeat","enemyDrain","enemyGain","enemyLoss","enemyNoDamage","enemyNoHit","enemyRecovery","evasion","autosave","escapeFailure","escapeStart","emerge","expNext","expTotal","file","buffAdd","buffRemove","obtainExp","obtainGold","obtainItem","obtainSkill","levelUp","partyName","loadMessage","meVolume","possession","preemptive","saveMessage","seVolume","magicEvasion","magicReflection","substitute","surprise","touchUI","victory","makeParamNamesArray","mhp","mmp","atk","def","mat","mdf","agi","luk","hit","eva","makeVehicleData","vehicle","characterIndex","characterName","bgm","startMapId","startX","startY","makeMenuCommandsEnabled","makeItemCategories","makeEditorSetting","jsonFormatLevel","messageWidth1","messageWidth2","makeBooleanOptions","optAutosave","optDisplayTp","optDrawTitle","optExtraExp","optFloorDeath","optFollowers","optKeyItemsNumber","optSideView","optSlipDeath","optTransparent","optMessageSkip","optSplashScreen","ajv","Ajv","strict","compile","type","additionalProperties","required","properties","testBattler","actorId","minimum","equips","items","weaponImageId","imageSize","tileSize","faceSize","iconSize","makeTerms","basic","commands","makeTermsCommand","params","messages","cloneStringArray","array","cloneNumberArray","cloneSize","data","cloneObjectArray","fn","map","cloneTestBattler","makeNamedItem","index","id","getVariableNames","system","variables","getElementTypes","elements","getEquipTypes","equipTypes","getSkillTypes","skillTypes","getWeaponTypes","weaponTypes","getArmorTypes","armorTypes","getSwitches","switches","AUTHOR_RMMZ","compileFormatRule","rule","placeHolders","placeHolder","dataKey","itemMappers","getItemMappersFromRule","compileFormatItemMapper","list","itemMapper","kindKey","dataIdKey","pair","kindId","sourceId","replacePlaceholder","baseText","value","replaceAll","String","detectInvalidPlaceholders","format","errorTexts","placeHolderMaxLength","matched","Array","from","matchAll","placeHolderKeys","set","Set","add","forEach","mapper","reduce","acc","text","length","push","message","longPlaceHolder","reason","slice","has","extraPlaceHolder","detectItemMapperErrors","formatRule","error","checkItemMapperSourceError","includedName","pattern","includes","hasSource","dataSource","missingName","missingSourceId","joinSoruceId","source","author","module","kind","buildFinalFormatEntry","sourceMap","resolveDataSource","patternCompiled","label","get","mappingNamedItems","newItem","cloneItems","Map","applyFormatRule","getDataId","r","execFormatRule","itemName","dataId","find","i","findItemById","currentText","MODULE_SYSTEM","systemElementsSourceId","systemArmorTypesSourceId","systemEquipTypesSourceId","systemSkillTypesSourceId","systemSwitchesSourceId","systemVariablesSourceId","systemWeaponTypesSourceId","buildArmorTypesSource","buildElementTypesSource","buildEquipTypesSource","buildSkillTypesSource","buildVariableNamesSource","buildSwitchesSource","buildWeaponTypesSource","DEFAULT_GLOBAL_LABELS","note","description","iconIndex","occasion","repeats","scope","speed","successRate","animationId","displayType","effectName","faceIndex","faceName","flashTimings","messageType","offsetX","offsetY","overlay","priority","restriction","rotation","scale","soundTimings","stepsToRemove","variance","unknownCode","content","apply","turn","commonEvent","normal","dualWield","bossCollaps","instantCollaps","noneCollaps","collapsSourceId","MODULE_TRAIT","SRC_TRAIT_COLLAPS","defineTraitCollapseType","labels","global","collapsOptionsToArray","domainName","partyAbilitySourceId","SRC_TRAIT_PARTY_ABILITY","defineTraitSpecialFlag","specialFlagToArray","specialFlagSourceId","SRC_TRAIT_SPECIAL_FLAG","autoBattle","preventEscape","extraParamSourceId","SRC_PARAMS_EXTRA","defineTraitExtraParam","xparam","extraParamsToArray","hitRate","evasionRate","criticalRate","criticalEvasionRate","magicEvasionRate","magicReflectionRate","counterAttackRate","hpRegenerationRate","mpRegenerationRate","tpRegenerationRate","regularParamSourceId","SRC_PARAMS_REGULAR","defineTraitRegularParam","regularParamsToArray","maxHp","maxMp","matk","mdef","specialParamSourceId","SRC_PARAMS_SPECIAL","defineTraitSpecialParam","specialParam","specialParamsToArray","specialParams","targetRate","guardEffectRate","recoveryEffectRate","pharmacology","mpCostRate","tpChargeRate","physicalDamageRate","magicDamageRate","floorDamageRate","experienceRate","FORMAT_NAME","FORMAT_PARAM_RATE_MUL","FORMAT_PARAM_RATE_PLUS","FORMAT_PARAM_VALUE","LABEL_SET_TRAIT","regularParam","extraParam","specialFlag","collaps","partyAbility","cancelSurprise","dropItemDouble","encounterHalf","encounterNone","goldDouble","raisePreemptive","elementRate","debuffRate","stateRate","stateResist","attackElement","attackState","attackSpeed","attackTimes","actionPlus","attackSkill","equipWeaponType","equipArmorType","equipLock","equipSeal","slotType","skillAdd","skillSeal","skillTypeAdd","skillTypeSeal","code","stateSourceId","atttackState","skillSourceId","RULE_TRAIT","SCHEMA_DATA_ACTOR","battlerName","maximum","nickname","profile","initialLevel","maxLevel","classId","traits","MODULE_DATA","SRC_DATA_ACTOR","SRC_DATA_ENEMY","SRC_DATA_STATE","SRC_DATA_SKILL","SRC_DATA_ITEMS","SRC_DATA_ARMOR","SRC_DATA_CLASS","SRC_DATA_COMMON_EVNET","SCHEMA_DATA_ARMMOR","price","etypeId","atypeId","minItems","maxItems","SCHEMA_DATA_CLASS","expParams","learnings","skillId","SCHEMA_DATA_STATE","message1","message2","message3","message4","motion","removeAtBattleEnd","removeByDamage","removeByWalking","removeByRestriction","releaseByDamage","autoRemovalTiming","minTurns","maxTurns","chanceByDamage","SCHEMA_DATA_WEAPON","wtypeId","damage","elementId","formula","critical","default","makeDropItem","dropItem","denominator","SCHEMA_DATA_ENEMY","battlerHue","gold","actions","conditionParam1","conditionParam2","conditionType","rating","dropItems","rate","DEFAULT_DAMAGE_LABELS","makeDamage","SCHEMA_DATA_SKILL","mpCost","requiredWtypeId1","requiredWtypeId2","stypeId","tpCost","hitType","tpGain","effects","value1","value2","SCHEMA_DATA_ITEM","consumable","itypeId","FORMAT_STATE","FORMAT_RECOVER","FORMAT_ADD_BUFF","LABEL_SET_ITEM_EFFECT","addBuff","desc","addDebuff","gainTp","grow","learnSkill","recoverHp","recoverMp","removeBuff","removeDebuff","removeState","special","addState","defineEffect","baseLabel","defineEffectRecoverHp","defineEffectRecoverMp","defineEffectGainTp","defineEffectAddState","defineEffectRemoveState","defineEffectAddBuff","defineEffectAddDebuff","defineEffectRemoveBuff","defineEffectRemoveDebuff","defineEffectGrow","defineEffectLearnSkill","defineEffectCommonEvent","LABEL_SET_DATA","actor","initialEquipments","faceImage","characterImage","svBattlerImage","class","armorTypeId","slotTypeId","enemy","requiredWeaponTypeId1","requiredWeaponTypeId2","state","weaponTypeId","usableItem","class_","makeEventPageCondition","arg","switch1Id","switch1Valid","switch2Id","switch2Valid","variableId","variableValid","variableValue","selfSwitchCh","selfSwitchValid","itemId","itemValid","actorValid","makeMapEventIamge","direction","tileId","SCHEMA_DATA_MAP_INFO","expanded","order","parentId","scrollX","scrollY","SCHEMA_DATA_MAP","battleback1Name","battleback2Name","parallaxLoopY","parallaxLoopX","parallaxName","parallaxShow","parallaxSy","parallaxSx","x","y","width","height","displayName","disableDashing","autoplayBgm","autoplayBgs","bgs","encounterList","regionSet","troopId","weight","events","pages","moveFrequency","directionFix","conditions","image","enum","moveRoute","wait","repeat","skippable","parameters","oneOf","mapInfo","mapData","createNoteEntity","key","makeRegex","readNoteEx","regex","match","createControlCharFormat","char","LABEL_REGISTRY_JP","rpg","itemEffect","changeActorText","indent","scrollTextHead","const","audioCommand","isCommandAudio","emptyParam","textBody","isCommandTextBody","command","commonVent","showChoices","showChoiceItem","inputNumber","showMessage","makeCommandAudioAny","audio","makeCommentArray","comment","makeCommandCommentHeader","makeCommandCommentBody","toArrayInputNumber","digits","toArrayScrollingTextHeader","skip","toArrayScrollingTextBody","makeCommandScriptHeader","script","makeCommandScriptBody","ENEMY_PARAM_INDEX","HP","MP","MHP","MMP","ATK","DEF","MAT","MDF","AGI","LUK","TP","toArrayControlSwitches","object","min","max","toArrayCommonEvent","eventId","cloneParameters","isPrimitive","paramArray","actors","controlChar","filter","limits","formatMaxLength","formatLabel","syntaxErrors","formatVeryLong","semanticErrors","dataSourceErrorResult","invalidPlaceholdersResult","paramIndex","effectDefine","effect","toString","descriptor","trait","t","choices","cancelType","defaultType","positionType","background","facename","speakerName","currentExp","parseInt","targetKey","m","every","formatList","namedItemSources","entry","filename","lines","line","comments","trigger","switchId","action","info","mapId","padStart","p","vehicles","dataNames","debug","images","gameInit","size","currencyUnit","texts","gameTitle","editor","editing","title1Name","title2Name","magicSkills","airship","boat","ship","defeatMe","me","gameoverMe","titleBgm","versionId","attackMotions","testBattlers","battleBgm","victoryMe","editMapId","locale","testTroopId","windowTone","itemCategories","partyMembersArray","battleSystem","menuCommands","menuComamnds","members","actorHp","enemyValid","switchValid","enemyId","hidden","transformFunction","Error","_subString","newText","newValue","replace","target","operation","startId","endId"],"mappings":"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"}