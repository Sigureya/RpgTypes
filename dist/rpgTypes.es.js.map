{"version":3,"file":"rpgTypes.es.js","sources":["../src/rmmz/rpg/data/event/map/event/eventCommand/eventCommandCodes.ts","../src/rmmz/rpg/data/gameData.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/collaps/collaps.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/collaps/constants.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramExtra/extraParam.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramExtra/constants.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramRegular/regularParam.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramRegular/constants.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramSpecial/specialParam.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/paramSpecial/constants.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/partyAbility/partyAbility.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/partyAbility/constants.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/specialFlags/specialFlags.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/items/specialFlags/constants.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/namedItems.ts","../src/libs/namedItemSource/constants.ts","../src/libs/namedItemSource/format/core/rule/core/compile.ts","../src/libs/namedItemSource/format/core/rule/core/sourceIdentifier/sourceId.ts","../src/libs/namedItemSource/format/core/rule/getPlaceHolders.ts","../src/libs/namedItemSource/format/core/rule/rule.ts","../src/libs/namedItemSource/format/core/rule/constants.ts","../src/libs/namedItemSource/format/core/detectErrors.ts","../src/libs/namedItemSource/format/mergeItemsSource.ts","../src/libs/namedItemSource/format/applyFormat.ts","../src/libs/namedItemSource/format/core/namedItem/namedItem.ts","../src/rmmz/rpg/data/main/usableItems/core/itemEffect/define.ts","../src/rmmz/rpg/data/main/usableItems/core/itemEffect/effectCode/constants.ts","../src/rmmz/rpg/data/resolveTraitLabels.ts","../src/rmmz/rpg/data/main/traitContainers/trait/core/constants/traitCode.ts","../src/rmmz/system/core/advanced/advanced.ts","../src/rmmz/system/core/advanced/schema.ts","../src/rmmz/system/core/attackMotion/schema.ts","../src/libs/utils/types/audioFileParams/make.ts","../src/rmmz/system/core/audio/soundArray/soundArray.ts","../src/rmmz/system/core/audio/schema.ts","../src/rmmz/system/core/battle/schema.ts","../src/rmmz/system/core/booleanOptions/gameMenu/gameMenu.ts","../src/rmmz/system/core/booleanOptions/gameMenu/itemCategories/itemCategories.ts","../src/rmmz/system/core/booleanOptions/gameMenu/menuCommands/make.ts","../src/rmmz/system/core/booleanOptions/gameMenu/schema.ts","../src/rmmz/system/core/booleanOptions/gameMenu/itemCategories/schema.ts","../src/rmmz/system/core/booleanOptions/gameMenu/menuCommands/schema.ts","../src/rmmz/system/core/booleanOptions/gameSetting/options.ts","../src/rmmz/system/core/booleanOptions/gameSetting/schema.ts","../src/rmmz/system/core/gameInitial/gameInitial.ts","../src/rmmz/system/core/gameInitial/schema.ts","../src/rmmz/system/core/images/schema.ts","../src/rmmz/system/core/other/schema.ts","../src/rmmz/system/core/rpgDataTypes/getSystemTypeNames.ts","../src/rmmz/system/core/rpgDataTypes/namedItems.ts","../src/rmmz/system/core/rpgDataTypes/kindConstants.ts","../src/rmmz/system/core/rpgDataTypes/schema.ts","../src/rmmz/system/core/rpgDataTypes/dataTypes.ts","../src/rmmz/system/core/terms/basic/make.ts","../src/rmmz/system/core/terms/commands/commands.ts","../src/rmmz/system/core/terms/messages/make.ts","../src/rmmz/system/core/terms/commands/schema.ts","../src/rmmz/system/core/terms/messages/schema.ts","../src/rmmz/system/core/terms/schema.ts","../src/rmmz/system/core/terms/basic/schema.ts","../src/rmmz/system/core/terms/paramArray/schema.ts","../src/rmmz/system/core/terms/terms.ts","../src/rmmz/system/core/titleCommandWindow/titleCommandWindow.ts","../src/rmmz/system/core/titleCommandWindow/schema.ts","../src/rmmz/system/core/vehicle/vehicle.ts","../src/rmmz/system/core/vehicle/schema.ts","../src/rmmz/system/gameEdit/gameEdit.ts","../src/rmmz/system/gameEdit/testPlay/schema.ts","../src/rmmz/system/gameEdit/schema.ts","../src/rmmz/system/gameEdit/editor/schema.ts","../src/rmmz/system/systemLabels.ts","../src/rmmz/system/schemaBundle.ts","../src/rmmz/system/schemaMerge.ts","../src/rmmz/system/validate.ts","../src/rmmz/system/make.ts","../src/app/format/trait/formatTraits.ts","../src/libs/templates/domainLabel/domainLabel.ts","../src/rmmz/eventCommand/commands/actor/changeText/make.ts","../src/rmmz/eventCommand/commands/audio/play/make.ts","../src/rmmz/eventCommand/commands/flow/callCommonEvent/make.ts","../src/rmmz/eventCommand/commands/flow/controlSwtches/make.ts","../src/rmmz/eventCommand/commands/message/comment/make.ts","../src/rmmz/eventCommand/commands/message/inputNumber/make.ts","../src/rmmz/eventCommand/commands/message/scrollText/make.ts","../src/rmmz/eventCommand/commands/message/setupChoice/make.ts","../src/rmmz/eventCommand/commands/message/showMessage/convert.ts","../src/rmmz/eventCommand/commands/script/make.ts","../src/rmmz/eventCommand/commands/variable/constants.ts","../src/rmmz/eventCommand/commands/variable/types/enemy/dataSource.ts","../src/rmmz/eventCommand/commands/variable/convert.ts","../src/rmmz/eventCommand/commands/variable/getValue.ts","../src/rmmz/eventCommand/utils/clone/clone.ts","../src/rmmz/eventCommand/validate.ts","../src/rmmz/eventCommand/commands/actor/changeText/schema.ts","../src/rmmz/eventCommand/commands/message/scrollText/schema.ts","../src/rmmz/eventCommand/commands/audio/play/schema.ts","../src/rmmz/eventCommand/unionSchema.ts","../src/rmmz/eventCommand/commands/flow/callCommonEvent/schema.ts","../src/rmmz/eventCommand/commands/message/setupChoice/schema.ts","../src/rmmz/eventCommand/commands/message/inputNumber/schema.ts","../src/rmmz/eventCommand/commands/message/showMessage/schema.ts","../src/rmmz/eventCommand/validateAudio.ts","../src/rmmz/eventCommand/validateTextBody.ts","../src/rmmz/folderNames/asset/audio.ts","../src/rmmz/folderNames/asset/images.ts","../src/rmmz/folderNames/data/fileNames.ts","../src/rmmz/folderNames/folderName.ts"],"sourcesContent":["export const NO_OPERATION = 0 as const;\r\nexport const SHOW_MESSAGE = 101 as const;\r\nexport const SHOW_MESSAGE_BODY = 401 as const;\r\nexport const SHOW_CHOICES = 102 as const;\r\nexport const SHOW_CHOICES_ITEM = 402 as const;\r\nexport const INPUT_NUMBER = 103 as const;\r\nexport const SELECT_ITEM = 104 as const;\r\nexport const SHOW_SCROLLING_TEXT = 105 as const;\r\nexport const SHOW_SCROLLING_TEXT_BODY = 405 as const;\r\nexport const COMMENT_HEAD = 108 as const;\r\nexport const COMMENT_BODY = 408 as const;\r\nexport const SKIP = 109 as const;\r\nexport const CONDITIONAL_BRANCH = 111 as const;\r\nexport const CONDITIONAL_BRANCH_ELSE = 411 as const;\r\nexport const LOOP = 112 as const;\r\nexport const LOOP_BREAK = 113 as const;\r\nexport const EXIT_EVENT_PROCESSING = 115 as const;\r\nexport const COMMON_EVENT = 117 as const;\r\nexport const LABEL = 118 as const;\r\nexport const LABEL_JUMP = 119 as const;\r\nexport const CONTROL_SWITCHES = 121 as const;\r\nexport const CONTROL_VARIABLES = 122 as const;\r\nexport const CONTROL_SELF_SWITCH = 123 as const;\r\nexport const CONTROL_TIMER = 124 as const;\r\nexport const CHANGE_GOLD = 125 as const;\r\nexport const CHANGE_ITEMS = 126 as const;\r\nexport const CHANGE_WEAPONS = 127 as const;\r\nexport const CHANGE_ARMORS = 128 as const;\r\nexport const CHANGE_PARTY_MEMBER = 129 as const;\r\nexport const CHANGE_BATTLE_BGM = 132 as const;\r\nexport const CHANGE_VICTORY_ME = 133 as const;\r\nexport const CHANGE_SAVE_ACCESS = 134 as const;\r\nexport const CHANGE_MENU_ACCESS = 135 as const;\r\nexport const CHANGE_ENCOUNTER = 136 as const;\r\nexport const CHANGE_FORMATION_ACCESS = 137 as const;\r\nexport const CHANGE_WINDOW_COLOR = 138 as const;\r\n\r\nexport const CHANGE_DEFEAT_ME = 139 as const;\r\nexport const CHANGE_VEHICLE_BGM = 140 as const;\r\n\r\nexport const TRANSFER_PLAYER = 201 as const;\r\nexport const SET_VEHICLE_LOCATION = 202 as const;\r\nexport const SET_EVENT_LOCATION = 203 as const;\r\nexport const SCROLL_MAP = 204 as const;\r\nexport const SET_MOVEMENT_ROUTE = 205 as const;\r\nexport const GET_ONOFF_VEHICLE = 206 as const;\r\nexport const CHANGE_TRANSPARENCY = 211 as const;\r\nexport const SHOW_ANIMATION = 212 as const;\r\nexport const SHOW_BALLOON_ICON = 213 as const;\r\nexport const ERASE_EVENT = 214 as const;\r\nexport const CHANGE_PLAYER_FOLLOWERS = 216 as const;\r\nexport const GATHER_FOLLOWERS = 217 as const;\r\nexport const FADEOUT_SCREEN = 221 as const;\r\nexport const FADEIN_SCREEN = 222 as const;\r\nexport const TINT_SCREEN = 223 as const;\r\nexport const FLASH_SCREEN = 224 as const;\r\nexport const SHAKE_SCREEN = 225 as const;\r\n\r\nexport const WAIT = 230 as const;\r\nexport const SHOW_PICTURE = 231 as const;\r\nexport const MOVE_PICTURE = 232 as const;\r\nexport const ROTATE_PICTURE = 233 as const;\r\nexport const TINT_PICTURE = 234 as const;\r\nexport const ERASE_PICTURE = 235 as const;\r\nexport const SET_WEATHER_EFFECT = 236 as const;\r\n\r\nexport const PLAY_BGM = 241 as const;\r\nexport const FADEOUT_BGM = 242 as const;\r\nexport const SAVE_BGM = 243 as const;\r\nexport const RESUME_BGM = 244 as const;\r\n\r\nexport const PLAY_BGS = 245 as const;\r\nexport const FADEOUT_BGS = 246 as const;\r\nexport const PLAY_ME = 249 as const;\r\nexport const PLAY_SE = 250 as const;\r\nexport const STOP_SE = 251 as const;\r\n\r\nexport const PLAY_MOVIE = 261 as const;\r\n\r\nexport const CHANGE_TILESET = 282 as const;\r\nexport const CHANGE_BATTLE_BACKGROUND = 283 as const;\r\nexport const CHANGE_PARALLAX = 284 as const;\r\nexport const GET_LOCATION_INFO = 285 as const;\r\n\r\nexport const BATTLE_PROCESSING = 301 as const;\r\n\r\nexport const SHOP_PROCESSING = 302 as const;\r\nexport const SHOP_PROCESSING_BODY = 605 as const;\r\nexport const NAME_INPUT_PROCESSING = 303 as const;\r\nexport const CHANGE_HP = 311 as const;\r\nexport const CHANGE_MP = 312 as const;\r\nexport const CHANGE_TP = 313 as const;\r\nexport const RECOVER_ALL = 314 as const;\r\nexport const CHANGE_EXP = 315 as const;\r\n\r\nexport const CHANGE_NAME = 320 as const;\r\nexport const CHANGE_CLASS = 321 as const;\r\nexport const CHANGE_ACTOR_IMAGES = 322 as const;\r\nexport const CHANGE_VEHICLE_IMAGE = 323 as const;\r\nexport const CHANGE_NICKNAME = 324 as const;\r\nexport const CHANGE_PROFILE = 325 as const;\r\n\r\nexport const CHANGE_ENEMY_HP = 331 as const;\r\nexport const CHANGE_ENEMY_MP = 332 as const;\r\n\r\nexport const CHANGE_ENEMY_STATE = 333 as const;\r\nexport const ENEMY_RECOVER_ALL = 334 as const;\r\nexport const ENEMY_APPEAR = 335 as const;\r\nexport const ENEMY_TRANSFORM = 336 as const;\r\nexport const SHOW_BATTLE_ANIMATION = 337 as const;\r\nexport const FORCE_ACTION = 339 as const;\r\nexport const ABORT_BATTLE = 340 as const;\r\nexport const OPEN_MENU_SCREEN = 351 as const;\r\n\r\nexport const CHANGE_ENEMY_TP = 342 as const;\r\n\r\nexport const OPEN_SAVE_SCREEN = 352 as const;\r\nexport const GAME_OVER = 353 as const;\r\nexport const RETURN_TO_TITLE_SCREEN = 354 as const;\r\nexport const SCRIPT_EVAL = 355 as const;\r\nexport const SCRIPT_EVAL_BODY = 655 as const;\r\nexport const PLUGIN_COMMAND_MV = 356 as const;\r\nexport const PLUGIN_COMMAND_MZ = 357 as const;\r\n","import type { NamedItemSource } from \"src/namedItemSource\";\r\nimport type { Data_CommonEventLike } from \"./event\";\r\nimport type { GameData } from \"./gameDataTypes\";\r\nimport type {\r\n  DataLabels,\r\n  Data_Skill,\r\n  Data_Actor,\r\n  Data_State,\r\n  Data_Armor,\r\n  Data_Class,\r\n  Data_Enemy,\r\n  Data_Item,\r\n  Data_Weapon,\r\n} from \"./main\";\r\nimport type {\r\n  SourceId_DataSkill,\r\n  SourceId_DataState,\r\n  SourceId_DataActor,\r\n  SourceId_DataArmor,\r\n  SourceId_DataClass,\r\n  SourceId_DataEnemy,\r\n  SourceId_DataItem,\r\n  SourceId_DataWeapon,\r\n  SourceId_DataCommonEvent,\r\n} from \"./main/sourceIdTypes\";\r\n\r\nexport const defineGameDataSources = (\r\n  data: GameData,\r\n  dataLabels: DataLabels\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineSkill(data.skills, dataLabels),\r\n    defineActor(data.actors, dataLabels),\r\n    defineState(data.states, dataLabels),\r\n    defineArmor(data.armors, dataLabels),\r\n    defineClass(data.classes, dataLabels),\r\n    defineEnemy(data.enemies, dataLabels),\r\n    defineItem(data.items, dataLabels),\r\n    defineWeapon(data.weapons, dataLabels),\r\n    defineCommonEvent(data.commonEvents, dataLabels),\r\n  ];\r\n};\r\n\r\nconst defineSkill = (\r\n  skills: Data_Skill[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    label: labels.skill.domainName,\r\n    items: skills,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"skill\",\r\n    } satisfies SourceId_DataSkill,\r\n  };\r\n};\r\n\r\nconst defineActor = (\r\n  actors: Data_Actor[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: actors,\r\n    label: labels.actor.domainName,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"actor\",\r\n    } satisfies SourceId_DataActor,\r\n  };\r\n};\r\n\r\nconst defineState = (\r\n  states: Data_State[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: states,\r\n    label: labels.state.domainName,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"state\",\r\n    } satisfies SourceId_DataState,\r\n  };\r\n};\r\n\r\nconst defineArmor = (\r\n  armors: Data_Armor[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: armors,\r\n    label: labels.armor.domainName,\r\n    source: {\r\n      author: \"rmmz\",\r\n      kind: \"armor\",\r\n      module: \"data\",\r\n    } satisfies SourceId_DataArmor,\r\n  };\r\n};\r\n\r\nconst defineClass = (\r\n  classes: Data_Class[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: classes,\r\n    label: labels.class.domainName,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"class\",\r\n    } satisfies SourceId_DataClass,\r\n  };\r\n};\r\n\r\nconst defineEnemy = (\r\n  enemies: Data_Enemy[],\r\n  labels: DataLabels\r\n): NamedItemSource => {\r\n  return {\r\n    items: enemies,\r\n    label: labels.enemy.domainName,\r\n    source: {\r\n      author: \"rmmz\",\r\n      module: \"data\",\r\n      kind: \"enemy\",\r\n    } satisfies SourceId_DataEnemy,\r\n  };\r\n};\r\n\r\nconst defineItem = (\r\n  items: Data_Item[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: items,\r\n  label: labels.item.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"item\",\r\n  } satisfies SourceId_DataItem,\r\n});\r\nconst defineWeapon = (\r\n  weapons: Data_Weapon[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: weapons,\r\n  label: labels.weapon.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"weapon\",\r\n  } satisfies SourceId_DataWeapon,\r\n});\r\n\r\nconst defineCommonEvent = (\r\n  commonEvents: Data_CommonEventLike[],\r\n  labels: DataLabels\r\n): NamedItemSource => ({\r\n  items: commonEvents,\r\n  label: labels.commonEvent.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"common_event\",\r\n  } satisfies SourceId_DataCommonEvent,\r\n});\r\n","import type { SourceId_TraitCollaps } from \"@RpgTypes/rpg\";\r\nimport type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n} from \"./constants\";\r\nimport type { CollapsOptionLabels, NormalLabel } from \"./labels\";\r\n\r\nexport const defineTraitCollapseType = (\r\n  labels: DomainLabel<CollapsOptionLabels>,\r\n  global: NormalLabel\r\n): NamedItemSource => ({\r\n  items: collapsOptionsToArray(labels.options, global),\r\n  label: labels.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"collaps\",\r\n  } satisfies SourceId_TraitCollaps,\r\n});\r\n\r\nexport const collapsOptionsToArray = (\r\n  options: CollapsOptionLabels,\r\n  global: NormalLabel\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n","export const COLLAPS_NORMAL = 0 as const;\r\nexport const COLLAPS_BOSS = 1 as const;\r\nexport const COLLAPS_INSTANT = 2 as const;\r\nexport const COLLAPS_NONE = 3 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitExtraParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n} from \"./constants\";\r\nimport type { ExtraParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitExtraParam = (\r\n  xparam: TraitLabelWithOption<ExtraParamLabels>\r\n): NamedItemSource => ({\r\n  items: extraParamsToArray(xparam.options),\r\n  label: xparam.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"xparams\",\r\n  } satisfies SourceId_TraitExtraParam,\r\n});\r\n\r\nexport const extraParamsToArray = (\r\n  xparam: ExtraParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Hit Rate\r\n */\r\nexport const EXTRA_PARAM_HIT = 0 as const;\r\n\r\n/**\r\n * * Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_EVA = 1 as const;\r\n\r\n/**\r\n * * Critical Hit Rate\r\n */\r\nexport const EXTRA_PARAM_CRI = 2 as const;\r\n\r\n/**\r\n * * Critical Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_CEV = 3 as const;\r\n\r\n/**\r\n * * Magic Evasion Rate\r\n */\r\nexport const EXTRA_PARAM_MEV = 4 as const;\r\n/**\r\n * * Magic Reflection Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRF = 5 as const;\r\n/**\r\n * * Counter Attack Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_CNT = 6 as const;\r\n/**\r\n * * HP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_HRG = 7 as const;\r\n/**\r\n * * MP Regeneration Rate\r\n */\r\n\r\nexport const EXTRA_PARAM_MRG = 8 as const;\r\n/**\r\n * * TP Regeneration Rate\r\n * */\r\n\r\nexport const EXTRA_PARAM_TRG = 9 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitRegularParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"./constants\";\r\nimport type { RegularParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitRegularParam = (\r\n  param: TraitLabelWithOption<RegularParamLabels>\r\n): NamedItemSource => ({\r\n  items: regularParamsToArray(param.options),\r\n  label: param.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"params\",\r\n  } satisfies SourceId_TraitRegularParam,\r\n});\r\n\r\nexport const regularParamsToArray = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n","/**\r\n * * Maximum HP\r\n */\r\nexport const REGULAR_PARAM_MAX_HP = 0 as const;\r\n\r\n/**\r\n * * Maximum MP\r\n */\r\nexport const REGULAR_PARAM_MAX_MP = 1 as const;\r\n/**\r\n * * Attack Power\r\n */\r\nexport const REGULAR_PARAM_ATK = 2 as const;\r\n/**\r\n * * Defense Power\r\n */\r\nexport const REGULAR_PARAM_DEF = 3 as const;\r\n/**\r\n * * Magic Attack Power\r\n */\r\nexport const REGULAR_PARAM_MATK = 4 as const;\r\n\r\n/**\r\n * * Magic Defense Power\r\n */\r\nexport const REGULAR_PARAM_MDEF = 5 as const;\r\n\r\n/**\r\n * * Agility\r\n */\r\nexport const REGULAR_PARAM_AGI = 6 as const;\r\n/**\r\n * * Luck\r\n */\r\nexport const REGULAR_PARAM_LUK = 7 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitSpecialParam } from \"../sourceIdTypes\";\r\nimport type { TraitLabelWithOption } from \"../traitLabel\";\r\nimport {\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_EXR,\r\n} from \"./constants\";\r\nimport type { SpecialParamLabels } from \"./labels\";\r\n\r\nexport const defineTraitSpecialParam = (\r\n  specialParam: TraitLabelWithOption<SpecialParamLabels>\r\n): NamedItemSource => ({\r\n  items: specialParamsToArray(specialParam.options),\r\n  label: specialParam.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sparams\",\r\n  } satisfies SourceId_TraitSpecialParam,\r\n});\r\n\r\nexport const specialParamsToArray = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guardEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guardEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","/**\r\n * * Target Rate\r\n */\r\nexport const SPECIAL_PARAM_TGR = 0 as const;\r\n\r\n/**\r\n * * Guard Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_GRD = 1 as const;\r\n\r\n/**\r\n * * Recovery Effect Rate\r\n */\r\nexport const SPECIAL_PARAM_REC = 2 as const;\r\n\r\n/**\r\n * * Pharmacology\r\n */\r\nexport const SPECIAL_PARAM_PHA = 3 as const;\r\n\r\n/**\r\n * * MP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_MCR = 4 as const;\r\n\r\n/**\r\n * * TP Cost Rate\r\n */\r\nexport const SPECIAL_PARAM_TCR = 5 as const;\r\n\r\n/**\r\n * * Physical Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_PDR = 6 as const;\r\n\r\n/**\r\n * * Magic Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_MDR = 7 as const;\r\n\r\n/**\r\n * * Floor Damage Rate\r\n */\r\nexport const SPECIAL_PARAM_FDR = 8 as const;\r\n\r\n/**\r\n * * Experience Rate\r\n */\r\nexport const SPECIAL_PARAM_EXR = 9 as const;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { SourceId_TraitPartyAbility } from \"../sourceIdTypes\";\r\nimport {\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n} from \"./constants\";\r\nimport type { PartyAbilityOptionLabels } from \"./labels\";\r\n\r\nexport const defineTraitPartyAbility = (\r\n  options: DomainLabel<PartyAbilityOptionLabels>\r\n): NamedItemSource => ({\r\n  items: partyAbilityToArray(options.options),\r\n  label: options.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"partyAbility\",\r\n  } satisfies SourceId_TraitPartyAbility,\r\n});\r\n\r\nexport const partyAbilityToArray = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n","export const PARTY_ABILITY_ENCOUNTER_HALF = 0 as const;\r\nexport const PARTY_ABILITY_ENCOUNTER_NONE = 1 as const;\r\nexport const PARTY_ABILITY_CANCEL_SURPRISE = 2 as const;\r\nexport const PARTY_ABILITY_RAISE_PREEMPTIVE = 3 as const;\r\nexport const PARTY_ABILITY_GOLD_DOUBLE = 4 as const;\r\nexport const PARTY_ABILITY_DROP_ITEM_DOUBLE = 5 as const;\r\n","import type { Data_NamedItem, NamedItemSource } from \"src/namedItemSource\";\r\nimport type { DomainLabel } from \"src/templates\";\r\nimport type { SourceId_TraitSpecialFlag } from \"../sourceIdTypes\";\r\nimport {\r\n  FLAG_ID_AUTO_BATTLE,\r\n  FLAG_ID_GUARD,\r\n  FLAG_ID_PRESERVE_TP,\r\n  FLAG_ID_SUBSTITUTE,\r\n} from \"./constants\";\r\nimport type { SpecialFlagOptions } from \"./labels\";\r\n\r\nexport const defineTraitSpecialFlag = (\r\n  label: DomainLabel<SpecialFlagOptions>\r\n): NamedItemSource => ({\r\n  items: specialFlagToArray(label.options),\r\n  label: label.domainName,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sflag\",\r\n  } satisfies SourceId_TraitSpecialFlag,\r\n});\r\n\r\nexport const specialFlagToArray = (\r\n  label: SpecialFlagOptions\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: FLAG_ID_AUTO_BATTLE,\r\n      name: label.autoBattle,\r\n    },\r\n    {\r\n      id: FLAG_ID_GUARD,\r\n      name: label.guard,\r\n    },\r\n    {\r\n      id: FLAG_ID_SUBSTITUTE,\r\n      name: label.substitute,\r\n    },\r\n    {\r\n      id: FLAG_ID_PRESERVE_TP,\r\n      name: label.preventEscape,\r\n    },\r\n  ];\r\n};\r\n","export const FLAG_ID_AUTO_BATTLE = 0 as const;\r\nexport const FLAG_ID_GUARD = 1 as const;\r\nexport const FLAG_ID_SUBSTITUTE = 2 as const;\r\nexport const FLAG_ID_PRESERVE_TP = 3 as const;\r\n","import type { GlobalLabel, TraitLabelSet } from \"@RpgTypes/rpg\";\r\nimport type { NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  defineTraitRegularParam,\r\n  defineTraitExtraParam,\r\n  defineTraitSpecialParam,\r\n  defineTraitCollapseType,\r\n  defineTraitSpecialFlag,\r\n  defineTraitPartyAbility,\r\n} from \"./items\";\r\n\r\nexport const defineTraitItems = (\r\n  set: TraitLabelSet,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): NamedItemSource[] => {\r\n  return [\r\n    defineTraitRegularParam(set.regularParam),\r\n    defineTraitExtraParam(set.extraParam),\r\n    defineTraitSpecialParam(set.specialParam),\r\n    defineTraitCollapseType(set.collaps, global),\r\n    defineTraitSpecialFlag(set.specialFlag),\r\n    defineTraitPartyAbility(set.partyAbility),\r\n  ];\r\n};\r\n","export const AUTHOR_RMMZ = \"rmmz\" as const;\r\nexport const SRC_COLOR = \"colors\" as const;\r\n","import type { PickByTypeKeys } from \"@RpgTypes/templates\";\r\nimport type { FormatArrayIndexCompiled } from \"./array\";\r\nimport type {\r\n  FormatArrayInput,\r\n  FormatPlaceholder,\r\n  FormatProperties,\r\n  FormatPropertiesCompiled,\r\n} from \"./direct\";\r\nimport type { SourceIdentifier } from \"./sourceIdentifier\";\r\n\r\nexport const compileFormatPropeties = <T>(\r\n  props: FormatProperties<T>\r\n): FormatPropertiesCompiled<T> => ({\r\n  numbers: props.numbers ? compilePlaceholders(props.numbers) : [],\r\n  strings: props.strings ? compilePlaceholders(props.strings) : [],\r\n});\r\n\r\nconst compilePlaceholders = <T, V extends number | string>(\r\n  keys: ReadonlyArray<PickByTypeKeys<T, V>>\r\n): FormatPlaceholder<T, V>[] => {\r\n  return keys.map((key) => ({\r\n    dataKey: key,\r\n    placeHolder: `{${key}}`,\r\n  }));\r\n};\r\n\r\nexport const compileArrayPlaceholder = <T, Source extends string | number>(\r\n  input: FormatArrayInput<T, Source>\r\n): FormatArrayIndexCompiled<T, Source> => {\r\n  return {\r\n    dataKey: input.dataIdKey,\r\n    placeHolder: `{${input.dataIdKey}}`,\r\n    sourceId: input.sourceId,\r\n  };\r\n};\r\n\r\nexport const compileArrayPlaceholderEX = <T>(\r\n  input: FormatArrayInput<T, SourceIdentifier>\r\n): FormatArrayIndexCompiled<T, SourceIdentifier> => {\r\n  return {\r\n    dataKey: input.dataIdKey,\r\n    placeHolder: `{${input.dataIdKey}}`,\r\n    sourceId: {\r\n      author: input.sourceId.author,\r\n      kind: input.sourceId.kind,\r\n      module: input.sourceId.module,\r\n    },\r\n  };\r\n};\r\n","import type { SourceIdentifier } from \"./types\";\r\n\r\nexport const joinSoruceId = (source: SourceIdentifier): string => {\r\n  return `${source.author}.${source.module}.${source.kind}`;\r\n};\r\n","import type { FormatItemMapper, FormatRule } from \"./core\";\r\n\r\nconst getDataKeys2 = <T>(rule: FormatRule<T>): Set<string & keyof T> => {\r\n  return new Set<string & keyof T>([\r\n    ...(rule.placeHolder?.numbers ?? []),\r\n    ...(rule.placeHolder?.strings ?? []),\r\n    ...(rule.arrayIndex?.map((a) => a.dataIdKey) ?? []),\r\n    ...(rule.itemMappers?.map((m) => m.kindKey) ?? []),\r\n    ...(rule.itemMapper ? [rule.itemMapper.kindKey] : []),\r\n  ]);\r\n};\r\n\r\nexport const getPlaceHolderKeys = <T>(rule: FormatRule<T>): Set<string> => {\r\n  const set = new Set<string>(rule.placeHolder?.numbers ?? []);\r\n  if (rule.itemMapper) {\r\n    set.add(rule.itemMapper.placeHolder);\r\n  }\r\n  if (rule.itemMappers) {\r\n    rule.itemMappers.forEach((mapper) => {\r\n      set.add(mapper.placeHolder);\r\n    });\r\n  }\r\n\r\n  return set;\r\n};\r\n\r\nexport const getDataKeysFromFormatRule = <T>(\r\n  rule: FormatRule<T>\r\n): Set<string & keyof T> => {\r\n  const set = new Set<string & keyof T>(rule.placeHolder?.numbers ?? []);\r\n  if (rule.itemMapper) {\r\n    set.add(rule.itemMapper.kindKey);\r\n  }\r\n  if (rule.itemMappers) {\r\n    rule.itemMappers.forEach((mapper) => {\r\n      set.add(mapper.kindKey);\r\n    });\r\n  }\r\n  return set;\r\n};\r\n\r\nexport const getItemMappersFromRule = <T>(\r\n  rule: FormatRule<T>\r\n): ReadonlyArray<FormatItemMapper<T>> => {\r\n  const list = rule.itemMappers ?? [];\r\n  return rule.itemMapper ? [...list, rule.itemMapper] : [...list];\r\n};\r\n","import {\r\n  FORMAT_PLACEHOLDER_KEY,\r\n  DEFAULT_LABEL,\r\n  DEFAULT_TEXT,\r\n} from \"./constants\";\r\nimport type {\r\n  FormatItemMapper,\r\n  FormatItemMapperCompiled,\r\n  FormatPlaceholder,\r\n  FormatRule,\r\n  FormatRuleCompiled,\r\n} from \"./core\";\r\nimport { compileArrayPlaceholderEX, compileFormatPropeties } from \"./core\";\r\nimport {\r\n  getDataKeysFromFormatRule,\r\n  getItemMappersFromRule,\r\n} from \"./getPlaceHolders\";\r\n\r\nexport const compileFormatRule = <T>(\r\n  rule: FormatRule<T>,\r\n  extraItems: ReadonlyArray<FormatItemMapper<T>> = []\r\n): FormatRuleCompiled<T> => ({\r\n  itemMappers: [...getItemMappersFromRule(rule), ...extraItems].map(\r\n    compileItemMapper\r\n  ),\r\n  fallbackFormat: {\r\n    text: generateFallbackFormatText(rule),\r\n    label: generateFallbackLabel(rule),\r\n  },\r\n  properties: compileFormatPropeties(rule.placeHolder ?? {}),\r\n  arrayIndex: rule.arrayIndex\r\n    ? rule.arrayIndex.map(compileArrayPlaceholderEX)\r\n    : [],\r\n});\r\n\r\nconst compileItemMapper = <T>(\r\n  itemMappers: FormatItemMapper<T>\r\n): FormatItemMapperCompiled<T> => {\r\n  return {\r\n    placeHolder: `{${itemMappers.placeHolder}}`,\r\n    kindKey: itemMappers.kindKey,\r\n    dataIdKey: itemMappers.dataIdKey,\r\n  };\r\n};\r\n\r\nconst generateFallbackFormatText = <T>(rule: FormatRule<T>): string => {\r\n  if (rule.fallbackFormat) {\r\n    if (rule.fallbackFormat.text !== undefined) {\r\n      return rule.fallbackFormat.text;\r\n    }\r\n  }\r\n  const set: ReadonlySet<string & keyof T> = getDataKeysFromFormatRule(rule);\r\n  if (set.size === 0) {\r\n    return DEFAULT_TEXT;\r\n  }\r\n\r\n  return Array.from(set)\r\n    .map((item) => `${item}:{${item}}`)\r\n    .join(\", \");\r\n};\r\n\r\nconst generateFallbackLabel = <T>(rule: FormatRule<T>): string => {\r\n  if (rule.fallbackFormat?.label !== undefined) {\r\n    return rule.fallbackFormat.label;\r\n  }\r\n  return DEFAULT_LABEL;\r\n};\r\n\r\nexport const resolveUnknownLabel = <T>(\r\n  rule: FormatRuleCompiled<T>,\r\n  key: string\r\n): string => {\r\n  return rule.fallbackFormat.label.replace(FORMAT_PLACEHOLDER_KEY, key);\r\n};\r\n\r\nexport const applyPlaceholdersToText = <Schema, Data extends Schema>(\r\n  baseText: string,\r\n  data: Data,\r\n  rule: FormatRuleCompiled<Schema>\r\n): string => {\r\n  const numText: string = rule.properties.numbers.reduce(\r\n    (text, field) => replacePlaceholder(text, data, field),\r\n    baseText\r\n  );\r\n  return rule.properties.strings.reduce(\r\n    (text, field) => replacePlaceholder(text, data, field),\r\n    numText\r\n  );\r\n};\r\n\r\nconst replacePlaceholder = <\r\n  Schema,\r\n  Data extends Schema,\r\n  Value extends number | string\r\n>(\r\n  baseText: string,\r\n  data: Data,\r\n  field: FormatPlaceholder<Schema, Value>\r\n): string => {\r\n  const value = data[field.dataKey satisfies keyof Data];\r\n  if (value === undefined || value === null) {\r\n    return baseText;\r\n  }\r\n  return baseText.replaceAll(field.placeHolder, String(value));\r\n};\r\n","export const FORMAT_PLACEHOLDER_KEY = \"{key}\";\r\nexport const DEFAULT_LABEL = \"unknown key:{key}\";\r\nexport const DEFAULT_TEXT = \"value not found\";\r\n","import type {\r\n  FormatErrorLabels,\r\n  FormatLimits,\r\n  FormatErrorGroup,\r\n  FormatErrorItem,\r\n} from \"./formatErrorTypes\";\r\nimport type { FormatRule, FormatItemMapper } from \"./rule\";\r\nimport { getItemMappersFromRule, getPlaceHolderKeys } from \"./rule\";\r\nimport type { FormatInput, FormatWithSource } from \"./types\";\r\n\r\nexport const isValidFormatErrorGroup = (\r\n  formatError: FormatErrorGroup\r\n): boolean => {\r\n  return (\r\n    formatError.syntaxErrors.length === 0 &&\r\n    formatError.semanticErrors.length === 0\r\n  );\r\n};\r\n\r\nexport const collectFormatErrors = <T extends object>(\r\n  formatList: ReadonlyArray<FormatInput>,\r\n  formatRule: FormatRule<T>,\r\n  errorTexts: FormatErrorLabels,\r\n  limits: FormatLimits = {\r\n    placeHolderMaxLength: 50,\r\n    formatMaxLength: 200,\r\n  }\r\n): FormatErrorGroup[] => {\r\n  return formatList.reduce<FormatErrorGroup[]>((acc, format) => {\r\n    const errors = detectFormatErrors(format, formatRule, errorTexts, limits);\r\n    if (!isValidFormatErrorGroup(errors)) {\r\n      acc.push(errors);\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nexport const detectFormatErrors = <T extends object>(\r\n  format: FormatInput,\r\n  formatRule: FormatRule<T>,\r\n  errorTexts: FormatErrorLabels,\r\n  limits: FormatLimits = {\r\n    placeHolderMaxLength: 50,\r\n    formatMaxLength: 200,\r\n  }\r\n): FormatErrorGroup => {\r\n  if (format.pattern.length >= limits.formatMaxLength) {\r\n    return {\r\n      formatLabel: format.label,\r\n      syntaxErrors: [\r\n        {\r\n          message: errorTexts.formatVeryLong,\r\n          reason: format.pattern.slice(0, limits.formatMaxLength),\r\n        },\r\n      ],\r\n      semanticErrors: [],\r\n    };\r\n  }\r\n  return {\r\n    formatLabel: format.label,\r\n    semanticErrors: detectItemMapperErrors(format, formatRule, errorTexts),\r\n    syntaxErrors: detectInvalidPlaceholders(\r\n      format.pattern,\r\n      formatRule,\r\n      errorTexts,\r\n      limits.placeHolderMaxLength\r\n    ),\r\n  };\r\n};\r\n\r\nconst detectInvalidPlaceholders = <T extends object>(\r\n  format: string,\r\n  rule: FormatRule<T>,\r\n  errorTexts: FormatErrorLabels,\r\n  placeHolderMaxLength: number\r\n): FormatErrorItem[] => {\r\n  const matched = Array.from(format.matchAll(/\\{([.a-zA-Z0-9]+)\\}/g));\r\n  const placeHolderKeys: ReadonlySet<string> = getPlaceHolderKeys(rule);\r\n  return matched.reduce<FormatErrorItem[]>((acc, item) => {\r\n    const text: string = item[1];\r\n\r\n    if (text.length === 0) {\r\n      return acc;\r\n    }\r\n    if (text.length > placeHolderMaxLength) {\r\n      acc.push({\r\n        message: errorTexts.longPlaceHolder,\r\n        reason: text.slice(0, placeHolderMaxLength),\r\n      });\r\n      return acc;\r\n    }\r\n    if (!placeHolderKeys.has(text)) {\r\n      acc.push({\r\n        message: errorTexts.extraPlaceHolder,\r\n        reason: text,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nconst detectItemMapperErrors = <T extends object>(\r\n  format: FormatWithSource,\r\n  formatRule: FormatRule<T>,\r\n  errorTexts: FormatErrorLabels\r\n): FormatErrorItem[] => {\r\n  return getItemMappersFromRule(formatRule).reduce<FormatErrorItem[]>(\r\n    (rule, item) => {\r\n      const error = checkItemMapperSourceError(format, item, errorTexts);\r\n      if (error) {\r\n        rule.push(error);\r\n      }\r\n      return rule;\r\n    },\r\n    []\r\n  );\r\n};\r\n\r\nconst checkItemMapperSourceError = <T>(\r\n  format: FormatWithSource,\r\n  rule: FormatItemMapper<T>,\r\n  errorTexts: FormatErrorLabels\r\n): FormatErrorItem | undefined => {\r\n  const includedName: boolean = format.pattern.includes(rule.placeHolder);\r\n  const hasSource: boolean = !!format.dataSource;\r\n  if (!includedName && hasSource) {\r\n    return {\r\n      message: errorTexts.missingName,\r\n      reason: rule.placeHolder,\r\n    };\r\n  }\r\n  if (includedName && !hasSource) {\r\n    return {\r\n      message: errorTexts.missingSourceId,\r\n      reason: rule.placeHolder,\r\n    };\r\n  }\r\n  return undefined;\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  FormatCompiled,\r\n  FormatLabelResolved,\r\n  NamedItemSource,\r\n  SourceIdentifier,\r\n} from \"./core\";\r\nimport { joinSoruceId } from \"./core\";\r\n\r\nexport const mergeItemsSource = <Key>(\r\n  formatList: ReadonlyArray<FormatLabelResolved<Key>>,\r\n  namedItemSources: ReadonlyArray<NamedItemSource>\r\n): Map<Key, FormatCompiled> => {\r\n  const sourceMap = mappingNamedItems(namedItemSources);\r\n  return formatList.reduce<Map<Key, FormatCompiled>>((acc, label) => {\r\n    const entry = buildFinalFormatEntry(label, sourceMap);\r\n    acc.set(label.kindId, entry);\r\n    return acc;\r\n  }, new Map());\r\n};\r\n\r\nconst buildFinalFormatEntry = <T>(\r\n  format: FormatLabelResolved<T>,\r\n  sourceMap: ReadonlyMap<string, NamedItemSource>\r\n): FormatCompiled => {\r\n  const source = resolveDataSource(format.dataSource, sourceMap);\r\n  return {\r\n    patternCompiled: format.pattern,\r\n    label: format.label,\r\n    data: source ? source.items : undefined,\r\n  };\r\n};\r\n\r\nconst resolveDataSource = (\r\n  source: SourceIdentifier | undefined,\r\n  sourceMap: ReadonlyMap<string, NamedItemSource>\r\n): NamedItemSource | undefined => {\r\n  if (!source) {\r\n    return undefined;\r\n  }\r\n  return sourceMap.get(joinSoruceId(source));\r\n};\r\n\r\nconst mappingNamedItems = (\r\n  list: ReadonlyArray<NamedItemSource>\r\n): Map<string, NamedItemSource> => {\r\n  return list.reduce<Map<string, NamedItemSource>>((map, item) => {\r\n    const newItem: NamedItemSource = {\r\n      items: cloneItems(item.items), // 余計な情報の削除を兼ねてコピー\r\n      source: item.source,\r\n      label: item.label,\r\n    };\r\n    map.set(joinSoruceId(item.source), newItem);\r\n    return map;\r\n  }, new Map());\r\n};\r\n\r\nconst cloneItems = (list: ReadonlyArray<Data_NamedItem>): Data_NamedItem[] => {\r\n  return list.map<Data_NamedItem>((item) => ({ id: item.id, name: item.name }));\r\n};\r\n","import type { CompiledFormatBundle } from \"./bundle\";\r\nimport type {\r\n  Data_NamedItem,\r\n  FormatCompiled,\r\n  FormatErrorLabels,\r\n  FormatLabelResolved,\r\n  FormatResult,\r\n  FormatRule,\r\n  FormatRuleCompiled,\r\n  NamedItemSource,\r\n} from \"./core\";\r\nimport {\r\n  compileFormatRule,\r\n  applyPlaceholdersToText,\r\n  getItemName,\r\n  resolveUnknownLabel,\r\n} from \"./core\";\r\nimport type { FormatLookupKeys } from \"./core/accessor\";\r\nimport { collectFormatErrors } from \"./core/detectErrors\";\r\nimport { mergeItemsSource } from \"./mergeItemsSource\";\r\n\r\nexport const compileFormatBundle = <T extends object, KindKey>(\r\n  rule: FormatRule<T>,\r\n  formatList: ReadonlyArray<FormatLabelResolved<KindKey>>,\r\n  namedItemSources: ReadonlyArray<NamedItemSource>,\r\n  errorTexts: FormatErrorLabels\r\n): CompiledFormatBundle<T, KindKey> => {\r\n  return {\r\n    soruceMap: mergeItemsSource(formatList, namedItemSources),\r\n    errors: collectFormatErrors(formatList, rule, errorTexts),\r\n    compiledRule: compileFormatRule(rule),\r\n  };\r\n};\r\n\r\nexport const isValidFormatBundle = <T extends object, KindKey>(\r\n  bundle: CompiledFormatBundle<T, KindKey>\r\n): boolean => {\r\n  return bundle.errors.length === 0;\r\n};\r\n\r\nexport const formatWithCompiledBundle = <T extends object, KindKey>(\r\n  data: T,\r\n  bundle: CompiledFormatBundle<T, KindKey>,\r\n  lookup: FormatLookupKeys<T, KindKey>\r\n): FormatResult => {\r\n  const key: KindKey = lookup.extractMapKey(data);\r\n  const entry = bundle.soruceMap.get(key);\r\n  return entry\r\n    ? formatTextForMatchedEntry(data, bundle.compiledRule, entry, (d) =>\r\n        lookup.extractDataId(d)\r\n      )\r\n    : formatTextForFallback(data, bundle.compiledRule, key, lookup);\r\n};\r\n\r\nconst formatTextForMatchedEntry = <T extends object>(\r\n  data: T,\r\n  rule: FormatRuleCompiled<T>,\r\n  format: FormatCompiled,\r\n  getDataId: (data: T) => number\r\n): FormatResult => {\r\n  return {\r\n    label: format.label,\r\n    text: applyFormatRule(\r\n      data,\r\n      format.data,\r\n      rule,\r\n      format.patternCompiled,\r\n      getDataId\r\n    ),\r\n  };\r\n};\r\n\r\nconst formatTextForFallback = <T extends object, KindKey>(\r\n  data: T,\r\n  rule: FormatRuleCompiled<T>,\r\n  key: KindKey,\r\n  lookup: FormatLookupKeys<T, KindKey>\r\n): FormatResult => {\r\n  return {\r\n    label: resolveUnknownLabel(rule, lookup.unknownKey(key)),\r\n    text: applyFormatRule(\r\n      data,\r\n      undefined,\r\n      rule,\r\n      rule.fallbackFormat.text,\r\n      (d) => lookup.extractDataId(d)\r\n    ),\r\n  };\r\n};\r\n\r\nexport const applyFormatRule = <Schema, Data extends Schema>(\r\n  data: Data,\r\n  list: ReadonlyArray<Data_NamedItem> | undefined,\r\n  rule: FormatRuleCompiled<Schema>,\r\n  format: string,\r\n  getDataId: (data: Data) => number\r\n): string => {\r\n  const text: string = applyPlaceholdersToText(format, data, rule);\r\n  return list ? formatWithItemName(text, data, rule, list, getDataId) : text;\r\n};\r\n\r\nconst formatWithItemName = <Schema, Data extends Schema>(\r\n  text: string,\r\n  data: Data,\r\n  rule: FormatRuleCompiled<Schema>,\r\n  list: ReadonlyArray<Data_NamedItem>,\r\n  getDataId: (data: Data) => number\r\n): string => {\r\n  const itemName: string = getItemName(list, getDataId(data));\r\n  return rule.itemMappers.reduce((currentText, itemMapper) => {\r\n    return currentText.replaceAll(itemMapper.placeHolder, itemName);\r\n  }, text);\r\n};\r\n","import type { Data_NamedItem } from \"./types\";\r\n\r\nexport const findItemById = <T extends Data_NamedItem>(\r\n  dataId: number,\r\n  list: ReadonlyArray<T>\r\n): T | undefined => {\r\n  const item: T = list[dataId];\r\n  if (item) {\r\n    if (item.id === dataId) {\r\n      return item;\r\n    }\r\n  }\r\n\r\n  return list.find((i) => i.id === dataId);\r\n};\r\n\r\nexport const getItemName = (\r\n  list: ReadonlyArray<Data_NamedItem>,\r\n  dataId: number\r\n): string => {\r\n  const item = findItemById(dataId, list);\r\n  return item ? item.name : `?data[${dataId}]`;\r\n};\r\n","import {\r\n  EFFECT_SPECIAL,\r\n  type SourceId_DataCommonEvent,\r\n  type SourceId_DataSkill,\r\n  type SourceId_DataState,\r\n  type SourceId_TraitRegularParam,\r\n} from \"@RpgTypes/rpg\";\r\nimport type { SourceIdentifier } from \"src/namedItemSource\";\r\nimport {\r\n  EFFECT_ADD_STATE,\r\n  EFFECT_GROW,\r\n  EFFECT_RECOVER_HP,\r\n  EFFECT_ADD_BUFF,\r\n  EFFECT_ADD_DEBUFF,\r\n  EFFECT_REMOVE_BUFF,\r\n  EFFECT_COMMON_EVENT,\r\n  EFFECT_GAIN_TP,\r\n  EFFECT_LEARN_SKILL,\r\n  EFFECT_RECOVER_MP,\r\n  EFFECT_REMOVE_DEBUFF,\r\n  EFFECT_REMOVE_STATE,\r\n} from \"./effectCode\";\r\nimport type {\r\n  EffectDefinitionResolved,\r\n  EffectLabelDefinition,\r\n  ItemEffectLabelSet,\r\n} from \"./labels\";\r\n\r\nexport const resolveItemEffectLabels = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved[] => {\r\n  return [\r\n    defineEffectRecoverHp(labels),\r\n    defineEffectRecoverMp(labels),\r\n    defineEffectGainTp(labels),\r\n    defineEffectAddState(labels),\r\n    defineEffectRemoveState(labels),\r\n    defineEffectAddBuff(labels),\r\n    defineEffectAddDebuff(labels),\r\n    defineEffectRemoveBuff(labels),\r\n    defineEffectRemoveDebuff(labels),\r\n    defineEffectSpecial(labels),\r\n    defineEffectGrow(labels),\r\n    defineEffectLearnSkill(labels),\r\n    defineEffectCommonEvent(labels),\r\n  ];\r\n};\r\n\r\nconst regularParamSourceId = (): SourceId_TraitRegularParam => ({\r\n  author: \"rmmz\",\r\n  module: \"trait\",\r\n  kind: \"params\",\r\n});\r\n\r\nconst stateSourceId = (): SourceId_DataState => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"state\",\r\n});\r\n\r\nconst defineEffect = (\r\n  code: number,\r\n  baseLabel: EffectLabelDefinition,\r\n  dataSource?: SourceIdentifier\r\n): EffectDefinitionResolved => ({\r\n  kindId: code,\r\n  label: baseLabel.domainName,\r\n  pattern: baseLabel.format,\r\n  description: baseLabel.desc,\r\n  dataSource: dataSource,\r\n});\r\n\r\nconst defineEffectSpecial = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_SPECIAL, labels.special);\r\n\r\nconst defineEffectRecoverHp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_HP, labels.recoverHp);\r\n\r\nconst defineEffectRecoverMp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_RECOVER_MP, labels.recoverMp);\r\n\r\nconst defineEffectGainTp = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved => defineEffect(EFFECT_GAIN_TP, labels.gainTp);\r\n\r\nconst defineEffectAddState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_STATE, labels.addState, stateSourceId());\r\n\r\nconst defineEffectRemoveState = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_STATE, labels.removeState, stateSourceId());\r\n\r\nconst defineEffectAddBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_BUFF, labels.addBuff, regularParamSourceId());\r\n\r\nconst defineEffectAddDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_ADD_DEBUFF, labels.addDebuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveBuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_REMOVE_BUFF, labels.removeBuff, regularParamSourceId());\r\n\r\nconst defineEffectRemoveDebuff = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(\r\n    EFFECT_REMOVE_DEBUFF,\r\n    labels.removeDebuff,\r\n    regularParamSourceId()\r\n  );\r\n\r\nconst defineEffectGrow = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_GROW, labels.grow, regularParamSourceId());\r\n\r\nconst defineEffectLearnSkill = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_LEARN_SKILL, labels.learnSkill, {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"skill\",\r\n  } satisfies SourceId_DataSkill);\r\n\r\nconst defineEffectCommonEvent = (\r\n  labels: ItemEffectLabelSet\r\n): EffectDefinitionResolved =>\r\n  defineEffect(EFFECT_COMMON_EVENT, labels.commonEvent, {\r\n    author: \"rmmz\",\r\n    module: \"data\",\r\n    kind: \"common_event\",\r\n  } satisfies SourceId_DataCommonEvent);\r\n","export const EFFECT_RECOVER_HP = 11 as const;\r\nexport const EFFECT_RECOVER_MP = 12 as const;\r\nexport const EFFECT_GAIN_TP = 13 as const;\r\nexport const EFFECT_ADD_STATE = 21 as const;\r\nexport const EFFECT_REMOVE_STATE = 22 as const;\r\nexport const EFFECT_ADD_BUFF = 31 as const;\r\nexport const EFFECT_ADD_DEBUFF = 32 as const;\r\nexport const EFFECT_REMOVE_BUFF = 33 as const;\r\nexport const EFFECT_REMOVE_DEBUFF = 34 as const;\r\nexport const EFFECT_SPECIAL = 41 as const;\r\nexport const EFFECT_GROW = 42 as const;\r\nexport const EFFECT_LEARN_SKILL = 43 as const;\r\nexport const EFFECT_COMMON_EVENT = 44 as const;\r\n","import type {\r\n  SourceId_SystemArmorTypes,\r\n  SourceId_SystemElements,\r\n  SourceId_SystemEquipTypes,\r\n  SourceId_SystemSkillTypes,\r\n  SourceId_SystemWeaponTypes,\r\n} from \"@RpgTypes/system\";\r\nimport type { SourceId_DataState, SourceId_DataSkill } from \"./main\";\r\nimport {\r\n  TRAIT_ELEMENT_RATE,\r\n  TRAIT_DEBUFF_RATE,\r\n  TRAIT_STATE_RATE,\r\n  TRAIT_STATE_RESIST,\r\n  TRAIT_PARAM,\r\n  TRAIT_XPARAM,\r\n  TRAIT_SPARAM,\r\n  TRAIT_ATTACK_ELEMENT,\r\n  TRAIT_ATTACK_STATE,\r\n  TRAIT_ATTACK_SPEED,\r\n  TRAIT_ATTACK_TIMES,\r\n  TRAIT_ATTACK_SKILL,\r\n  TRAIT_ACTION_PLUS,\r\n  TRAIT_SPECIAL_FLAG,\r\n  TRAIT_COLLAPSE_TYPE,\r\n  TRAIT_PARTY_ABILITY,\r\n  TRAIT_EQUIP_ARMOR_TYPE,\r\n  TRAIT_EQUIP_LOCK,\r\n  TRAIT_EQUIP_SEAL,\r\n  TRAIT_EQUIP_WEAPON_TYPE,\r\n  TRAIT_SKILL_ADD,\r\n  TRAIT_SKILL_SEAL,\r\n  TRAIT_SLOT_TYPE,\r\n  TRAIT_SKILL_TYPE_ADD,\r\n  TRAIT_SKILL_TYPE_SEAL,\r\n} from \"./main/traitContainers/trait/core/constants\";\r\nimport type {\r\n  CollapsOptionLabels,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  RawTraitLabel,\r\n  RegularParamLabels,\r\n  SourceId_TraitCollaps,\r\n  SourceId_TraitExtraParam,\r\n  SourceId_TraitPartyAbility,\r\n  SourceId_TraitRegularParam,\r\n  SourceId_TraitSpecialFlag,\r\n  SourceId_TraitSpecialParam,\r\n  SpecialFlagOptions,\r\n  SpecialParamLabels,\r\n  TraitLabelWithOption,\r\n} from \"./main/traitContainers/trait/core/items\";\r\nimport type { TraitLabelSet } from \"./main/traitContainers/trait/core/labelSet\";\r\nimport type { TraitFormat } from \"./main/traitContainers/trait/core/types\";\r\n\r\nexport const resolveTraitLabels = (labels: TraitLabelSet): TraitFormat[] => {\r\n  return [\r\n    elementRate(labels.elementRate),\r\n    debuffRate(labels.debuffRate),\r\n    stateRate(labels.stateRate),\r\n    stateResist(labels.stateResist),\r\n\r\n    regularParam(labels.regularParam),\r\n    extraParam(labels.extraParam),\r\n    specialParam(labels.specialParam),\r\n    attackElement(labels.attackElement),\r\n    atttackState(labels.attackState),\r\n    attackSpeed(labels.attackSpeed),\r\n    attackTimes(labels.attackTimes),\r\n    attackSkill(labels.attackSkill),\r\n\r\n    skillTypeAdd(labels.skillTypeAdd),\r\n    skillTypeSeal(labels.skillTypeSeal),\r\n    skillAdd(labels.skillAdd),\r\n    skillSeal(labels.skillSeal),\r\n\r\n    equipWeaponType(labels.equipWeaponType),\r\n    equipArmorType(labels.equipArmorType),\r\n    equipLock(labels.equipLock),\r\n    equipSeal(labels.equipSeal),\r\n    slotType(labels.slotType),\r\n\r\n    actionPlus(labels.actionPlus),\r\n    specialFlag(labels.specialFlag),\r\n    collaps(labels.collaps),\r\n    partyAbility(labels.partyAbility),\r\n  ];\r\n};\r\n\r\nconst regularParamSourceId = (): SourceId_TraitRegularParam => ({\r\n  author: \"rmmz\",\r\n  module: \"trait\",\r\n  kind: \"params\",\r\n});\r\n\r\nconst elementRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ELEMENT_RATE,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst debuffRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_DEBUFF_RATE,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst stateRate = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_STATE_RATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst stateResist = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_STATE_RESIST,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst regularParam = (\r\n  labels: TraitLabelWithOption<RegularParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.domainName,\r\n  kindId: TRAIT_PARAM,\r\n  dataSource: regularParamSourceId(),\r\n});\r\n\r\nconst extraParam = (\r\n  labels: TraitLabelWithOption<ExtraParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.domainName,\r\n  kindId: TRAIT_XPARAM,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"xparams\",\r\n  } satisfies SourceId_TraitExtraParam,\r\n});\r\n\r\nconst specialParam = (\r\n  labels: TraitLabelWithOption<SpecialParamLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.domainName,\r\n  kindId: TRAIT_SPARAM,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sparams\",\r\n  } satisfies SourceId_TraitSpecialParam,\r\n});\r\n\r\nconst attackElement = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ATTACK_ELEMENT,\r\n  dataSource: systemElementsSourceId(),\r\n});\r\n\r\nconst atttackState = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ATTACK_STATE,\r\n  dataSource: stateSourceId(),\r\n});\r\n\r\nconst attackSpeed = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ATTACK_SPEED,\r\n});\r\n\r\nconst attackTimes = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ATTACK_TIMES,\r\n});\r\n\r\nconst attackSkill = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ATTACK_SKILL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillTypeAdd = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_SKILL_TYPE_ADD,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillTypeSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_SKILL_TYPE_SEAL,\r\n  dataSource: systemSkillTypesSourceId(),\r\n});\r\n\r\nconst skillAdd = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_SKILL_ADD,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst skillSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_SKILL_SEAL,\r\n  dataSource: skillSourceId(),\r\n});\r\n\r\nconst equipWeaponType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_EQUIP_WEAPON_TYPE,\r\n  dataSource: systemWeaponTypesSourceId(),\r\n});\r\n\r\nconst equipArmorType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_EQUIP_ARMOR_TYPE,\r\n  dataSource: systemArmorTypesSourceId(),\r\n});\r\n\r\nconst equipLock = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_EQUIP_LOCK,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst equipSeal = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_EQUIP_SEAL,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst slotType = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_SLOT_TYPE,\r\n  dataSource: systemEquipTypesSourceId(),\r\n});\r\n\r\nconst actionPlus = (label: RawTraitLabel): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_ACTION_PLUS,\r\n});\r\n\r\nconst specialFlag = (\r\n  labels: TraitLabelWithOption<SpecialFlagOptions>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.domainName,\r\n  kindId: TRAIT_SPECIAL_FLAG,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"sflag\",\r\n  } satisfies SourceId_TraitSpecialFlag,\r\n});\r\n\r\nconst collaps = (\r\n  label: TraitLabelWithOption<CollapsOptionLabels>\r\n): TraitFormat => ({\r\n  pattern: label.format,\r\n  label: label.domainName,\r\n  kindId: TRAIT_COLLAPSE_TYPE,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"collaps\",\r\n  } satisfies SourceId_TraitCollaps,\r\n});\r\n\r\nconst partyAbility = (\r\n  labels: TraitLabelWithOption<PartyAbilityOptionLabels>\r\n): TraitFormat => ({\r\n  pattern: labels.format,\r\n  label: labels.domainName,\r\n  kindId: TRAIT_PARTY_ABILITY,\r\n  dataSource: {\r\n    author: \"rmmz\",\r\n    module: \"trait\",\r\n    kind: \"partyAbility\",\r\n  } satisfies SourceId_TraitPartyAbility,\r\n});\r\n\r\nconst stateSourceId = (): SourceId_DataState => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"state\",\r\n});\r\n\r\nconst skillSourceId = (): SourceId_DataSkill => ({\r\n  author: \"rmmz\",\r\n  module: \"data\",\r\n  kind: \"skill\",\r\n});\r\n\r\nconst systemElementsSourceId = (): SourceId_SystemElements => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"elements\",\r\n});\r\n\r\nconst systemSkillTypesSourceId = (): SourceId_SystemSkillTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"skillTypes\",\r\n});\r\n\r\nconst systemWeaponTypesSourceId = (): SourceId_SystemWeaponTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"weaponTypes\",\r\n});\r\n\r\nconst systemArmorTypesSourceId = (): SourceId_SystemArmorTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"armorTypes\",\r\n});\r\n\r\nconst systemEquipTypesSourceId = (): SourceId_SystemEquipTypes => ({\r\n  author: \"rmmz\",\r\n  module: \"system\",\r\n  kind: \"equipTypes\",\r\n});\r\n","export const TRAIT_ELEMENT_RATE = 11 as const;\r\nexport const TRAIT_DEBUFF_RATE = 12 as const;\r\nexport const TRAIT_STATE_RATE = 13 as const;\r\nexport const TRAIT_STATE_RESIST = 14 as const;\r\nexport const TRAIT_PARAM = 21 as const;\r\nexport const TRAIT_XPARAM = 22 as const;\r\nexport const TRAIT_SPARAM = 23 as const;\r\nexport const TRAIT_ATTACK_ELEMENT = 31 as const;\r\nexport const TRAIT_ATTACK_STATE = 32 as const;\r\nexport const TRAIT_ATTACK_SPEED = 33 as const;\r\nexport const TRAIT_ATTACK_TIMES = 34 as const;\r\nexport const TRAIT_ATTACK_SKILL = 35 as const;\r\nexport const TRAIT_SKILL_TYPE_ADD = 41 as const;\r\nexport const TRAIT_SKILL_TYPE_SEAL = 42 as const;\r\nexport const TRAIT_SKILL_ADD = 43 as const;\r\nexport const TRAIT_SKILL_SEAL = 44 as const;\r\nexport const TRAIT_EQUIP_WEAPON_TYPE = 51 as const;\r\nexport const TRAIT_EQUIP_ARMOR_TYPE = 52 as const;\r\nexport const TRAIT_EQUIP_LOCK = 53 as const;\r\nexport const TRAIT_EQUIP_SEAL = 54 as const;\r\nexport const TRAIT_SLOT_TYPE = 55 as const;\r\nexport const TRAIT_ACTION_PLUS = 61 as const;\r\nexport const TRAIT_SPECIAL_FLAG = 62 as const;\r\nexport const TRAIT_COLLAPSE_TYPE = 63 as const;\r\nexport const TRAIT_PARTY_ABILITY = 64 as const;\r\n","export interface System_Advanced {\r\n  gameId: number;\r\n  screenWidth: number;\r\n  screenHeight: number;\r\n  uiAreaWidth: number;\r\n  uiAreaHeight: number;\r\n  windowOpacity: number;\r\n  screenScale: number;\r\n\r\n  numberFontFilename: string;\r\n  mainFontFilename: string;\r\n  fallbackFonts: string;\r\n  fontSize: number;\r\n}\r\n\r\nexport const makeSystemAdvanced = (\r\n  advanced: Partial<System_Advanced> = {}\r\n): System_Advanced => {\r\n  return {\r\n    gameId: advanced.gameId ?? 0,\r\n    screenWidth: advanced.screenWidth ?? 0,\r\n    screenHeight: advanced.screenHeight ?? 0,\r\n    uiAreaWidth: advanced.uiAreaWidth ?? 0,\r\n    uiAreaHeight: advanced.uiAreaHeight ?? 0,\r\n    windowOpacity: advanced.windowOpacity ?? 0,\r\n    screenScale: advanced.screenScale ?? 1,\r\n\r\n    numberFontFilename: advanced.numberFontFilename ?? \"\",\r\n    mainFontFilename: advanced.mainFontFilename ?? \"\",\r\n    fallbackFonts: advanced.fallbackFonts ?? \"\",\r\n    fontSize: advanced.fontSize ?? 28,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_Advanced } from \"./advanced\";\r\n\r\nexport const SCHEMA_SYSTEM_ADVANCED = {\r\n  type: \"object\",\r\n  properties: {\r\n    gameId: { type: \"integer\" },\r\n    screenWidth: { type: \"integer\" },\r\n    screenHeight: { type: \"integer\" },\r\n    uiAreaWidth: { type: \"integer\" },\r\n    uiAreaHeight: { type: \"integer\" },\r\n    windowOpacity: { type: \"integer\" },\r\n    screenScale: { type: \"number\" },\r\n\r\n    numberFontFilename: { type: \"string\" },\r\n    mainFontFilename: { type: \"string\" },\r\n    fallbackFonts: { type: \"string\" },\r\n    fontSize: { type: \"integer\" },\r\n  },\r\n  required: [\r\n    \"gameId\",\r\n    \"screenWidth\",\r\n    \"screenHeight\",\r\n    \"uiAreaWidth\",\r\n    \"uiAreaHeight\",\r\n    \"windowOpacity\",\r\n    \"screenScale\",\r\n    \"numberFontFilename\",\r\n    \"mainFontFilename\",\r\n    \"fallbackFonts\",\r\n    \"fontSize\",\r\n  ],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<System_Advanced>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AttackMotion } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"type\", \"weaponImageId\"],\r\n  properties: {\r\n    type: { type: \"number\" },\r\n    weaponImageId: { type: \"number\" },\r\n  },\r\n} as const satisfies JSONSchemaType<AttackMotion>;\r\n","import type { AudioFileParams } from \"./audioFileParams\";\r\n\r\nexport const makeAudioFileParams = (\r\n  audioFileParams: Partial<AudioFileParams> = {}\r\n): AudioFileParams => {\r\n  return {\r\n    name: audioFileParams.name ?? \"\",\r\n    volume: audioFileParams.volume ?? 100,\r\n    pitch: audioFileParams.pitch ?? 100,\r\n    pan: audioFileParams.pan ?? 0,\r\n  };\r\n};\r\n","import { makeAudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { System_SoundsArray, System_SoundsObject } from \"./types\";\r\n\r\nexport const makeSoundsArray = (\r\n  sounds: Partial<System_SoundsObject> = {}\r\n): System_SoundsArray => {\r\n  return [\r\n    makeAudioFileParams(sounds.cursor),\r\n    makeAudioFileParams(sounds.ok),\r\n    makeAudioFileParams(sounds.cancel),\r\n    makeAudioFileParams(sounds.buzzer),\r\n    makeAudioFileParams(sounds.equip),\r\n    makeAudioFileParams(sounds.save),\r\n    makeAudioFileParams(sounds.load),\r\n    makeAudioFileParams(sounds.battleStart),\r\n    makeAudioFileParams(sounds.escape),\r\n    makeAudioFileParams(sounds.enemyAttack),\r\n    makeAudioFileParams(sounds.enemyDamage),\r\n    makeAudioFileParams(sounds.enemyCollapse),\r\n    makeAudioFileParams(sounds.bossCollapes1),\r\n    makeAudioFileParams(sounds.bossCollapes2),\r\n    makeAudioFileParams(sounds.actorDamage),\r\n    makeAudioFileParams(sounds.actorCollapse),\r\n    makeAudioFileParams(sounds.playRecovery),\r\n    makeAudioFileParams(sounds.playMiss),\r\n    makeAudioFileParams(sounds.playEvasion),\r\n    makeAudioFileParams(sounds.playMagicEvasion),\r\n    makeAudioFileParams(sounds.playReflection),\r\n    makeAudioFileParams(sounds.shop),\r\n    makeAudioFileParams(sounds.useItem),\r\n    makeAudioFileParams(sounds.useSkill),\r\n  ];\r\n};\r\n\r\nexport const makeSoundsObject = (\r\n  sounds: System_SoundsArray\r\n): System_SoundsObject => {\r\n  return {\r\n    cursor: sounds[0],\r\n    ok: sounds[1],\r\n    cancel: sounds[2],\r\n    buzzer: sounds[3],\r\n    equip: sounds[4],\r\n    save: sounds[5],\r\n    load: sounds[6],\r\n    battleStart: sounds[7],\r\n    escape: sounds[8],\r\n    enemyAttack: sounds[9],\r\n    enemyDamage: sounds[10],\r\n    enemyCollapse: sounds[11],\r\n    bossCollapes1: sounds[12],\r\n    bossCollapes2: sounds[13],\r\n    actorDamage: sounds[14],\r\n    actorCollapse: sounds[15],\r\n    playRecovery: sounds[16],\r\n    playMiss: sounds[17],\r\n    playEvasion: sounds[18],\r\n    playMagicEvasion: sounds[19],\r\n    playReflection: sounds[20],\r\n    shop: sounds[21],\r\n    useItem: sounds[22],\r\n    useSkill: sounds[23],\r\n  };\r\n};\r\n","import type { AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { JSONSchemaType } from \"ajv\";\r\nimport type { System_AudioFiles } from \"./types\";\r\n\r\nconst audioFileParamsSchema = {\r\n  type: \"object\",\r\n  properties: {\r\n    name: { type: \"string\" },\r\n    volume: { type: \"integer\", minimum: 0, maximum: 100 },\r\n    pitch: { type: \"integer\", minimum: 0, maximum: 100 },\r\n    pan: { type: \"integer\", minimum: -100, maximum: 100 },\r\n  },\r\n  required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<AudioFileParams>;\r\n\r\nexport const SCHEMA_SYSTEM_AUDIOFILES = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"battleBgm\",\r\n    \"victoryMe\",\r\n    \"gameoverMe\",\r\n    \"titleBgm\",\r\n    \"defeatMe\",\r\n    \"sounds\",\r\n  ],\r\n  properties: {\r\n    battleBgm: audioFileParamsSchema,\r\n    victoryMe: audioFileParamsSchema,\r\n    gameoverMe: audioFileParamsSchema,\r\n    titleBgm: audioFileParamsSchema,\r\n    defeatMe: audioFileParamsSchema,\r\n    sounds: {\r\n      type: \"array\",\r\n      items: audioFileParamsSchema,\r\n      minItems: 24,\r\n      maxItems: 24,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<System_AudioFiles>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { BattleRuleRMMZ } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_BATTLE_RULE_RMMZ = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"magicSkills\", \"battleSystem\"],\r\n  properties: {\r\n    magicSkills: {\r\n      type: \"array\",\r\n      items: { type: \"number\" },\r\n      minItems: 0,\r\n      uniqueItems: true,\r\n    },\r\n    battleSystem: { type: \"number\" },\r\n  },\r\n} as const satisfies JSONSchemaType<BattleRuleRMMZ>;\r\n","import type { System_BooleanGameMenuOptions } from \"./types\";\r\n\r\nexport const getItemCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[0];\r\n};\r\n\r\nexport const getSkillCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[1];\r\n};\r\n\r\nexport const getEquipCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[2];\r\n};\r\n\r\nexport const getStatusCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[3];\r\n};\r\n\r\nexport const getFormationCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[4];\r\n};\r\n\r\nexport const getSaveCommandEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.menuCommands[5];\r\n};\r\n\r\nexport const getItemCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[0];\r\n};\r\n\r\nexport const getWeaponCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[1];\r\n};\r\n\r\nexport const getArmorCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[2];\r\n};\r\n\r\nexport const getKeyItemCategoryEnabled = (\r\n  system: System_BooleanGameMenuOptions\r\n): boolean => {\r\n  return system.itemCategories[3];\r\n};\r\n","import type { ItemCategories, ItemCategoriesArray } from \"./types\";\r\n\r\nexport const makeItemCategories = (\r\n  param: Partial<ItemCategories> = {}\r\n): ItemCategoriesArray => {\r\n  return [\r\n    param.item ?? true,\r\n    param.weapon ?? true,\r\n    param.armor ?? true,\r\n    param.keyItem ?? true,\r\n  ];\r\n};\r\nexport const makeItemCategoriesFromArray = (\r\n  param: ItemCategoriesArray\r\n): ItemCategories => {\r\n  return {\r\n    item: param[0],\r\n    weapon: param[1],\r\n    armor: param[2],\r\n    keyItem: param[3],\r\n  };\r\n};\r\n","import type { MenuCommandsEnabledArray } from \"./types\";\r\nimport type { MenuCommandsEnabled } from \"./types\";\r\n\r\nexport const makeMenuCommandsEnabled = (\r\n  param: Partial<MenuCommandsEnabled> = {}\r\n): MenuCommandsEnabledArray => {\r\n  return [\r\n    param.item ?? true,\r\n    param.skill ?? true,\r\n    param.equip ?? true,\r\n    param.status ?? true,\r\n    param.formation ?? true,\r\n    param.save ?? true,\r\n  ];\r\n};\r\n\r\nexport const makeMenuCommandsEnabledFromArray = (\r\n  array: MenuCommandsEnabledArray\r\n): MenuCommandsEnabled => {\r\n  return {\r\n    item: array[0],\r\n    skill: array[1],\r\n    equip: array[2],\r\n    status: array[3],\r\n    formation: array[4],\r\n    save: array[5],\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { SCHEMA_SYSTEM_ITEM_CATEGORIES } from \"./itemCategories/schema\";\r\nimport { SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED } from \"./menuCommands/schema\";\r\nimport type { System_BooleanGameMenuOptions } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS = {\r\n  required: [\"itemCategories\", \"menuCommands\"],\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  properties: {\r\n    itemCategories: SCHEMA_SYSTEM_ITEM_CATEGORIES,\r\n    menuCommands: SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED,\r\n  },\r\n} as const satisfies JSONSchemaType<\r\n  Record<keyof System_BooleanGameMenuOptions, boolean[]>\r\n>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_SYSTEM_ITEM_CATEGORIES = {\r\n  type: \"array\",\r\n  maxItems: 4,\r\n  minItems: 4,\r\n  items: {\r\n    type: \"boolean\",\r\n  },\r\n} as const satisfies JSONSchemaType<boolean[]>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_SYSTEM_MENU_COMMANDS_ENABLED = {\r\n  type: \"array\",\r\n  maxItems: 6,\r\n  minItems: 6,\r\n  items: {\r\n    type: \"boolean\",\r\n  },\r\n} as const satisfies JSONSchemaType<boolean[]>;\r\n","import type { System_BooleanGameOptions } from \"./types\";\r\n\r\nexport const makeBooleanOptions = (\r\n  options: Partial<System_BooleanGameOptions> = {}\r\n): System_BooleanGameOptions => {\r\n  return {\r\n    optAutosave: options.optAutosave ?? true,\r\n    optDisplayTp: options.optDisplayTp ?? true,\r\n    optDrawTitle: options.optDrawTitle ?? true,\r\n    optExtraExp: options.optExtraExp ?? true,\r\n    optFloorDeath: options.optFloorDeath ?? true,\r\n    optFollowers: options.optFollowers ?? true,\r\n    optKeyItemsNumber: options.optKeyItemsNumber ?? true,\r\n    optSideView: options.optSideView ?? true,\r\n    optSlipDeath: options.optSlipDeath ?? true,\r\n    optTransparent: options.optTransparent ?? true,\r\n    optMessageSkip: options.optMessageSkip ?? true,\r\n    optSplashScreen: options.optSplashScreen ?? true,\r\n  } satisfies Record<keyof System_BooleanGameOptions, boolean>;\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_BooleanGameOptions } from \"./types\";\r\n\r\nconst SCHEMA_BOOLEAN = {\r\n  type: \"boolean\",\r\n} as const satisfies JSONSchemaType<boolean>;\r\n\r\nexport const SCHEMA_SYSTEM_BOOLEAN_OPTIONS = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\r\n    \"optAutosave\",\r\n    \"optDisplayTp\",\r\n    \"optDrawTitle\",\r\n    \"optExtraExp\",\r\n    \"optFloorDeath\",\r\n    \"optFollowers\",\r\n    \"optKeyItemsNumber\",\r\n    \"optSideView\",\r\n    \"optSlipDeath\",\r\n    \"optTransparent\",\r\n    \"optMessageSkip\",\r\n    \"optSplashScreen\",\r\n  ] satisfies Array<keyof System_BooleanGameOptions>,\r\n  properties: {\r\n    optAutosave: SCHEMA_BOOLEAN,\r\n    optDisplayTp: SCHEMA_BOOLEAN,\r\n    optDrawTitle: SCHEMA_BOOLEAN,\r\n    optExtraExp: SCHEMA_BOOLEAN,\r\n    optFloorDeath: SCHEMA_BOOLEAN,\r\n    optFollowers: SCHEMA_BOOLEAN,\r\n    optKeyItemsNumber: SCHEMA_BOOLEAN,\r\n    optSideView: SCHEMA_BOOLEAN,\r\n    optSlipDeath: SCHEMA_BOOLEAN,\r\n    optTransparent: SCHEMA_BOOLEAN,\r\n    optMessageSkip: SCHEMA_BOOLEAN,\r\n    optSplashScreen: SCHEMA_BOOLEAN,\r\n  },\r\n} as const satisfies JSONSchemaType<System_BooleanGameOptions>;\r\n","import type { System_GameInitial } from \"./types\";\r\n\r\nexport const makeGameInitial = (\r\n  gameInitial: Partial<System_GameInitial> = {}\r\n): System_GameInitial => ({\r\n  startMapId: gameInitial.startMapId ?? 0,\r\n  startX: gameInitial.startX ?? 0,\r\n  startY: gameInitial.startY ?? 0,\r\n  partyMembersArray: gameInitial.partyMembersArray\r\n    ? Array.from(gameInitial.partyMembersArray)\r\n    : [1],\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_GameInitial } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_GAME_INITIAL = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"startMapId\", \"startX\", \"startY\", \"partyMembersArray\"],\r\n  properties: {\r\n    startMapId: { type: \"integer\", minimum: 0 },\r\n    startX: { type: \"integer\", minimum: 0 },\r\n    startY: { type: \"integer\", minimum: 0 },\r\n    partyMembersArray: {\r\n      type: \"array\",\r\n      items: { type: \"integer\", minimum: 0 },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<System_GameInitial>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_ImageSize, System_TitleImages } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_IMAGE_SIZE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"tileSize\", \"faceSize\", \"iconSize\"],\r\n  properties: {\r\n    tileSize: { type: \"integer\", minimum: 0 },\r\n    faceSize: { type: \"integer\", minimum: 0 },\r\n    iconSize: { type: \"integer\", minimum: 0 },\r\n  },\r\n} as const satisfies JSONSchemaType<System_ImageSize>;\r\n\r\nexport const SCHEMA_SYSTEM_TITLE_IMAGES = {\r\n  additionalProperties: false,\r\n\r\n  type: \"object\",\r\n  required: [\"title1Name\", \"title2Name\"],\r\n  properties: {\r\n    title1Name: { type: \"string\" },\r\n    title2Name: { type: \"string\" },\r\n  },\r\n} as const satisfies JSONSchemaType<System_TitleImages>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_OtherData } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_OTHER_DATA = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\"locale\", \"versionId\", \"windowTone\"],\r\n  properties: {\r\n    locale: { type: \"string\" },\r\n    versionId: { type: \"number\" },\r\n    windowTone: {\r\n      type: \"array\",\r\n      items: { type: \"number\" },\r\n      minItems: 4,\r\n      maxItems: 4,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<System_OtherData>;\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type { System_RPG_DataNames } from \"./types\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<System_RPG_DataNames, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElementTypes = (\r\n  system: Pick<System_RPG_DataNames, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<System_RPG_DataNames, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<System_RPG_DataNames, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<System_RPG_DataNames, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<System_RPG_DataNames, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSwitches = (\r\n  system: Pick<System_RPG_DataNames, \"switches\">\r\n): Data_NamedItem[] => {\r\n  return system.switches.map(makeNamedItem);\r\n};\r\n","import type { NamedItemSource } from \"src/namedItemSource\";\r\nimport {\r\n  getElementTypes,\r\n  getEquipTypes,\r\n  getWeaponTypes,\r\n  getSkillTypes,\r\n  getArmorTypes,\r\n  getVariableNames,\r\n  getSwitches,\r\n} from \"./getSystemTypeNames\";\r\nimport {\r\n  SRC_SYSTEM_SWITCHES,\r\n  SRC_SYSTEM_WEAPON_TYPES,\r\n  SRC_SYSTEM_ARMOR_TYPES,\r\n  SRC_SYSTEM_ELEMENTS,\r\n  SRC_SYSTEM_EQUIP_TYPES,\r\n  SRC_SYSTEM_SKILL_TYPES,\r\n  SRC_SYSTEM_VARIABLES,\r\n} from \"./kindConstants\";\r\nimport type {\r\n  SourceId_SystemArmorTypes,\r\n  SourceId_SystemElements,\r\n  SourceId_SystemEquipTypes,\r\n  SourceId_SystemSkillTypes,\r\n  SourceId_SystemSwitches,\r\n  SourceId_SystemVariables,\r\n  SourceId_SystemWeaponTypes,\r\n} from \"./sourceIdTypes\";\r\nimport type { System_RPG_DataNames, SystemLabel_DataNames } from \"./types\";\r\n\r\nexport const defineSystemItems = (\r\n  system: System_RPG_DataNames,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource[] => {\r\n  return [\r\n    buildElementTypesSource(system, label),\r\n    buildEquipTypesSource(system, label),\r\n    buildWeaponTypesSource(system, label),\r\n    buildSkillTypesSource(system, label),\r\n    buildArmorTypesSource(system, label),\r\n    buildVariableNamesSource(system, label),\r\n    buildSwitchesSource(system, label),\r\n  ];\r\n};\r\nconst buildArmorTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"armorTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getArmorTypes(system),\r\n  label: label.options.armorTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_ARMOR_TYPES,\r\n  } satisfies SourceId_SystemArmorTypes,\r\n});\r\n\r\nconst buildElementTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"elements\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getElementTypes(system),\r\n  label: label.options.elements,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_ELEMENTS,\r\n  } satisfies SourceId_SystemElements,\r\n});\r\n\r\nconst buildEquipTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"equipTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getEquipTypes(system),\r\n  label: label.options.equipTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_EQUIP_TYPES,\r\n  } satisfies SourceId_SystemEquipTypes,\r\n});\r\n\r\nconst buildSkillTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"skillTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSkillTypes(system),\r\n  label: label.options.skillTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_SKILL_TYPES,\r\n  } satisfies SourceId_SystemSkillTypes,\r\n});\r\n\r\nconst buildVariableNamesSource = (\r\n  system: Pick<System_RPG_DataNames, \"variables\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getVariableNames(system),\r\n  label: label.options.variables,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_VARIABLES,\r\n  } satisfies SourceId_SystemVariables,\r\n});\r\n\r\nconst buildSwitchesSource = (\r\n  system: Pick<System_RPG_DataNames, \"switches\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getSwitches(system),\r\n  label: label.options.switches,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_SWITCHES,\r\n  } satisfies SourceId_SystemSwitches,\r\n});\r\n\r\nconst buildWeaponTypesSource = (\r\n  system: Pick<System_RPG_DataNames, \"weaponTypes\">,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource => ({\r\n  items: getWeaponTypes(system),\r\n  label: label.options.weaponTypes,\r\n  source: {\r\n    author: \"rmmz\",\r\n    module: \"system\",\r\n    kind: SRC_SYSTEM_WEAPON_TYPES,\r\n  } satisfies SourceId_SystemWeaponTypes,\r\n});\r\n","export const SRC_SYSTEM_ARMOR_TYPES = \"armorTypes\" as const;\r\nexport const SRC_SYSTEM_ELEMENTS = \"elements\" as const;\r\nexport const SRC_SYSTEM_EQUIP_TYPES = \"equipTypes\" as const;\r\nexport const SRC_SYSTEM_SKILL_TYPES = \"skillTypes\" as const;\r\nexport const SRC_SYSTEM_VARIABLES = \"variables\" as const;\r\nexport const SRC_SYSTEM_SWITCHES = \"switches\" as const;\r\nexport const SRC_SYSTEM_WEAPON_TYPES = \"weaponTypes\" as const;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { System_RPG_DataNames } from \"./types\";\r\n\r\nconst stringArraySchema = {\r\n  type: \"array\",\r\n  items: { type: \"string\" },\r\n} as const satisfies JSONSchemaType<string[]>;\r\n\r\nexport const SCHEMA_SYSTEM_RPG_DATA_NAMES = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"weaponTypes\",\r\n    \"skillTypes\",\r\n    \"elements\",\r\n    \"variables\",\r\n    \"equipTypes\",\r\n    \"switches\",\r\n    \"armorTypes\",\r\n  ],\r\n  properties: {\r\n    weaponTypes: stringArraySchema,\r\n    skillTypes: stringArraySchema,\r\n    elements: stringArraySchema,\r\n    variables: stringArraySchema,\r\n    equipTypes: stringArraySchema,\r\n    switches: stringArraySchema,\r\n    armorTypes: stringArraySchema,\r\n  },\r\n} as const satisfies JSONSchemaType<System_RPG_DataNames>;\r\n","import type { System_RPG_DataNames } from \"./types\";\r\n\r\nexport const makeDataNames = (\r\n  data: Partial<System_RPG_DataNames>\r\n): System_RPG_DataNames => ({\r\n  armorTypes: cloneStringArray(data.armorTypes),\r\n  elements: cloneStringArray(data.elements),\r\n  equipTypes: cloneStringArray(data.equipTypes),\r\n  weaponTypes: cloneStringArray(data.weaponTypes),\r\n  skillTypes: cloneStringArray(data.skillTypes),\r\n  variables: cloneStringArray(data.variables),\r\n  switches: cloneStringArray(data.switches),\r\n});\r\n\r\nconst cloneStringArray = (array?: ReadonlyArray<string>) => {\r\n  return array ? [...array] : [];\r\n};\r\n","import type { Terms_Basic, Terms_BasicArray } from \"./types\";\r\n\r\nexport const makeTermsBasic = (\r\n  terms: Partial<Terms_Basic>\r\n): Terms_BasicArray => {\r\n  return [\r\n    terms.level ?? \"Level\",\r\n    terms.levelA ?? \"Level\",\r\n    terms.hp ?? \"HP\",\r\n    terms.hpA ?? \"HP\",\r\n    terms.mp ?? \"MP\",\r\n    terms.mpA ?? \"MP\",\r\n    terms.tp ?? \"TP\",\r\n    terms.tpA ?? \"TP\",\r\n    terms.experience ?? \"EXP\",\r\n    terms.exp ?? \"EXP\",\r\n  ];\r\n};\r\n\r\nexport const makeTermsBasicFromArray = (\r\n  array: Terms_BasicArray\r\n): Terms_Basic => {\r\n  return {\r\n    level: array[0],\r\n    levelA: array[1],\r\n    hp: array[2],\r\n    hpA: array[3],\r\n    mp: array[4],\r\n    mpA: array[5],\r\n    tp: array[6],\r\n    tpA: array[7],\r\n    experience: array[8],\r\n    exp: array[9],\r\n  };\r\n};\r\n","import type { Terms_GameCommands } from \"./types\";\r\nimport type { Terms_CommandArray } from \"./types\";\r\n\r\nexport const makeTermsCommandArray = (\r\n  param: Partial<Terms_GameCommands>\r\n): Terms_CommandArray => {\r\n  return makeTermsCommandArrayWithNulls(param, \"\");\r\n};\r\n\r\nexport const makeTermsCommandArrayWithNulls = <T extends \"\" | null>(\r\n  param: Partial<Terms_GameCommands>,\r\n  empty: T\r\n): Terms_CommandArray<T> => {\r\n  return [\r\n    param.fight ?? \"Fight\",\r\n    param.escape ?? \"Escape\",\r\n    param.attack ?? \"Attack\",\r\n    param.guard ?? \"Guard\",\r\n    param.item ?? \"Item\",\r\n    param.skill ?? \"Skill\",\r\n    param.equip ?? \"Equip\",\r\n    param.status ?? \"Status\",\r\n    param.formation ?? \"Formation\",\r\n    param.save ?? \"Save\",\r\n    param.gameEnd ?? \"Game End\",\r\n    param.options ?? \"Options\",\r\n    param.weapon ?? \"Weapon\",\r\n    param.armor ?? \"Armor\",\r\n    param.keyItem ?? \"Key Item\",\r\n    param.equip2 ?? \"Equip2\",\r\n    param.optimize ?? \"Optimize\",\r\n    param.clear ?? \"Clear\",\r\n    param.newGame ?? \"New Game\",\r\n    param.continue_ ?? \"Continue\",\r\n    empty,\r\n    param.toTitle ?? \"To Title\",\r\n    param.cancel ?? \"Cancel\",\r\n    empty,\r\n    param.buy ?? \"Buy\",\r\n    param.sell ?? \"Sell\",\r\n  ];\r\n};\r\n\r\nexport const makeTermsCommandFromArray = <T extends \"\" | null = \"\">(\r\n  param: Terms_CommandArray<T>\r\n): Terms_GameCommands => {\r\n  return {\r\n    fight: param[0],\r\n    escape: param[1],\r\n    attack: param[2],\r\n    guard: param[3],\r\n    item: param[4],\r\n    skill: param[5],\r\n    equip: param[6],\r\n    status: param[7],\r\n    formation: param[8],\r\n    save: param[9],\r\n    gameEnd: param[10],\r\n    options: param[11],\r\n    weapon: param[12],\r\n    armor: param[13],\r\n    keyItem: param[14],\r\n    equip2: param[15],\r\n    optimize: param[16],\r\n    clear: param[17],\r\n    newGame: param[18],\r\n    continue_: param[19],\r\n    toTitle: param[21],\r\n    cancel: param[22],\r\n\r\n    buy: param[24],\r\n    sell: param[25],\r\n  };\r\n};\r\n","import type { Terms_Messages } from \"./types\";\r\n\r\nconst validate = (msg: unknown, fallback: string): string => {\r\n  return typeof msg === \"string\" ? msg : fallback;\r\n};\r\n\r\nexport const makeTermsMessages = (\r\n  msg: Partial<Terms_Messages>\r\n): Terms_Messages => {\r\n  return {\r\n    actionFailure: validate(msg.actionFailure, \"Action failed.\"),\r\n    actorDamage: validate(msg.actorDamage, \"%1 took %2 damage.\"),\r\n    actorRecovery: validate(msg.actorRecovery, \"%1 recovered %2 HP.\"),\r\n    actorGain: validate(msg.actorGain, \"%1 gained %2.\"),\r\n    actorLoss: validate(msg.actorLoss, \"%1 lost %2.\"),\r\n    actorDrain: validate(msg.actorDrain, \"%1 drained %2 HP.\"),\r\n    actorNoDamage: validate(msg.actorNoDamage, \"%1 was not damaged.\"),\r\n    actorNoHit: validate(msg.actorNoHit, \"%1 was not hit.\"),\r\n    alwaysDash: validate(msg.alwaysDash, \"Always dash.\"),\r\n    bgmVolume: validate(msg.bgmVolume, \"BGM volume\"),\r\n    bgsVolume: validate(msg.bgsVolume, \"BGS volume\"),\r\n    commandRemember: validate(msg.commandRemember, \"Command remember.\"),\r\n    criticalToActor: validate(msg.criticalToActor, \"%1 dealt %2 damage to %3.\"),\r\n    criticalToEnemy: validate(msg.criticalToEnemy, \"%1 dealt %2 damage to %3.\"),\r\n    counterAttack: validate(msg.counterAttack, \"%1 countered!\"),\r\n    debuffAdd: validate(msg.debuffAdd, \"%1's %2 was lowered.\"),\r\n    defeat: validate(msg.defeat, \"Defeat.\"),\r\n    enemyDamage: validate(msg.enemyDamage, \"%1 took %2 damage.\"),\r\n    enemyDrain: validate(msg.enemyDrain, \"%1 drained %2 HP.\"),\r\n    enemyGain: validate(msg.enemyGain, \"%1 gained %2.\"),\r\n    enemyLoss: validate(msg.enemyLoss, \"%1 lost %2.\"),\r\n    enemyNoDamage: validate(msg.enemyNoDamage, \"%1 was not damaged.\"),\r\n    enemyNoHit: validate(msg.enemyNoHit, \"%1 was not hit.\"),\r\n    enemyRecovery: validate(msg.enemyRecovery, \"%1 recovered %2 HP.\"),\r\n    evasion: validate(msg.evasion, \"%1 evaded the attack!\"),\r\n    autosave: validate(msg.autosave, \"Autosave\"),\r\n    escapeFailure: validate(msg.escapeFailure, \"Escape failed.\"),\r\n    escapeStart: validate(msg.escapeStart, \"%1 started to escape!\"),\r\n    emerge: validate(msg.emerge, \"%1 appeared!\"),\r\n    expNext: validate(msg.expNext, \"Next level in %1 EXP.\"),\r\n    expTotal: validate(msg.expTotal, \"Total EXP: %1\"),\r\n    file: validate(msg.file, \"File\"),\r\n    buffAdd: validate(msg.buffAdd, \"%1's %2 was raised.\"),\r\n    buffRemove: validate(msg.buffRemove, \"%1's %2 was lowered.\"),\r\n    obtainExp: validate(msg.obtainExp, \"%1 EXP obtained.\"),\r\n    obtainGold: validate(msg.obtainGold, \"%1 gold obtained.\"),\r\n    obtainItem: validate(msg.obtainItem, \"%1 obtained %2.\"),\r\n    obtainSkill: validate(msg.obtainSkill, \"%1 learned %2.\"),\r\n    levelUp: validate(msg.levelUp, \"%1 leveled up!\"),\r\n    partyName: validate(msg.partyName, \"Party\"),\r\n    loadMessage: validate(msg.loadMessage, \"Load %1?\"),\r\n    meVolume: validate(msg.meVolume, \"ME volume\"),\r\n    possession: validate(msg.possession, \"Possession\"),\r\n    preemptive: validate(msg.preemptive, \"%1 attacked first!\"),\r\n    saveMessage: validate(msg.saveMessage, \"Save %1?\"),\r\n    seVolume: validate(msg.seVolume, \"SE volume\"),\r\n    magicEvasion: validate(msg.magicEvasion, \"%1 evaded the magic!\"),\r\n    magicReflection: validate(msg.magicReflection, \"%1 reflected the magic!\"),\r\n    substitute: validate(msg.substitute, \"%1 took the hit!\"),\r\n    surprise: validate(msg.surprise, \"%1 surprised the enemy!\"),\r\n    touchUI: validate(msg.touchUI, \"Touch UI\"),\r\n    useItem: validate(msg.useItem, \"%1 used %2.\"),\r\n    victory: validate(msg.victory, \"Victory!\"),\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nconst SCHEMA_STRING = {\r\n  type: \"string\",\r\n} as const satisfies JSONSchemaType<string>;\r\nconst SCHEMA_STRING_NULL = {\r\n  type: \"string\",\r\n  nullable: true,\r\n} as const satisfies JSONSchemaType<string | null>;\r\n\r\nexport const SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY = {\r\n  type: \"array\",\r\n  items: [\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING_NULL,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING_NULL,\r\n    SCHEMA_STRING,\r\n    SCHEMA_STRING,\r\n  ] as const,\r\n  minItems: 26,\r\n  maxItems: 26,\r\n} as const;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Terms_Messages } from \"./types\";\r\n\r\nconst SCHEMA_STRING = {\r\n  type: \"string\",\r\n} as const satisfies JSONSchemaType<string>;\r\n\r\nexport const SCHEMA_SYSTEM_TERMS_MESSAGES = {\r\n  type: \"object\",\r\n  additionalProperties: false,\r\n  required: [\r\n    \"actionFailure\",\r\n    \"actorDamage\",\r\n    \"actorNoDamage\",\r\n    \"actorRecovery\",\r\n    \"actorGain\",\r\n    \"actorLoss\",\r\n    \"actorDrain\",\r\n    \"alwaysDash\",\r\n    \"bgmVolume\",\r\n    \"bgsVolume\",\r\n    \"commandRemember\",\r\n    \"criticalToActor\",\r\n    \"criticalToEnemy\",\r\n    \"counterAttack\",\r\n    \"debuffAdd\",\r\n    \"defeat\",\r\n    \"enemyDamage\",\r\n    \"enemyNoDamage\",\r\n    \"enemyRecovery\",\r\n    \"enemyGain\",\r\n    \"enemyLoss\",\r\n    \"enemyDrain\",\r\n    \"evasion\",\r\n    \"expNext\",\r\n    \"expTotal\",\r\n    \"escapeFailure\",\r\n    \"escapeStart\",\r\n    \"file\",\r\n    \"loadMessage\",\r\n    \"meVolume\",\r\n    \"magicEvasion\",\r\n    \"magicReflection\",\r\n    \"obtainExp\",\r\n    \"obtainGold\",\r\n    \"obtainItem\",\r\n    \"obtainSkill\",\r\n    \"partyName\",\r\n    \"preemptive\",\r\n    \"saveMessage\",\r\n    \"seVolume\",\r\n    \"substitute\",\r\n    \"touchUI\",\r\n    \"victory\",\r\n    \"useItem\",\r\n  ],\r\n  properties: {\r\n    actionFailure: SCHEMA_STRING,\r\n    actorDamage: SCHEMA_STRING,\r\n    actorNoDamage: SCHEMA_STRING,\r\n    actorRecovery: SCHEMA_STRING,\r\n    actorGain: SCHEMA_STRING,\r\n    actorLoss: SCHEMA_STRING,\r\n    actorDrain: SCHEMA_STRING,\r\n    alwaysDash: SCHEMA_STRING,\r\n    bgmVolume: SCHEMA_STRING,\r\n    bgsVolume: SCHEMA_STRING,\r\n    commandRemember: SCHEMA_STRING,\r\n    criticalToActor: SCHEMA_STRING,\r\n    criticalToEnemy: SCHEMA_STRING,\r\n    counterAttack: SCHEMA_STRING,\r\n    debuffAdd: SCHEMA_STRING,\r\n    defeat: SCHEMA_STRING,\r\n    enemyDamage: SCHEMA_STRING,\r\n    enemyNoDamage: SCHEMA_STRING,\r\n    enemyRecovery: SCHEMA_STRING,\r\n    enemyGain: SCHEMA_STRING,\r\n    enemyLoss: SCHEMA_STRING,\r\n    enemyDrain: SCHEMA_STRING,\r\n    evasion: SCHEMA_STRING,\r\n    expNext: SCHEMA_STRING,\r\n    expTotal: SCHEMA_STRING,\r\n    escapeFailure: SCHEMA_STRING,\r\n    escapeStart: SCHEMA_STRING,\r\n    file: SCHEMA_STRING,\r\n    loadMessage: SCHEMA_STRING,\r\n    meVolume: SCHEMA_STRING,\r\n    magicEvasion: SCHEMA_STRING,\r\n    magicReflection: SCHEMA_STRING,\r\n    obtainExp: SCHEMA_STRING,\r\n    obtainGold: SCHEMA_STRING,\r\n    obtainItem: SCHEMA_STRING,\r\n    obtainSkill: SCHEMA_STRING,\r\n    partyName: SCHEMA_STRING,\r\n    preemptive: SCHEMA_STRING,\r\n    saveMessage: SCHEMA_STRING,\r\n    seVolume: SCHEMA_STRING,\r\n    substitute: SCHEMA_STRING,\r\n    touchUI: SCHEMA_STRING,\r\n    victory: SCHEMA_STRING,\r\n    useItem: SCHEMA_STRING,\r\n    buffAdd: SCHEMA_STRING,\r\n    buffRemove: SCHEMA_STRING,\r\n    actorNoHit: SCHEMA_STRING,\r\n    enemyNoHit: SCHEMA_STRING,\r\n    autosave: SCHEMA_STRING,\r\n    emerge: SCHEMA_STRING,\r\n    levelUp: SCHEMA_STRING,\r\n    possession: SCHEMA_STRING,\r\n    surprise: SCHEMA_STRING,\r\n  },\r\n} as const satisfies JSONSchemaType<Terms_Messages>;\r\n","import type { JSONSchemaType, SchemaObject } from \"ajv\";\r\nimport { SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY } from \"./basic/schema\";\r\nimport { SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY } from \"./commands/schema\";\r\nimport { SCHEMA_SYSTEM_TERMS_MESSAGES } from \"./messages/schema\";\r\nimport { SCHEMA_SYSTEM_PARAM_NAMS_ARRAY } from \"./paramArray/schema\";\r\nimport type { System_Terms, System_TextBundle } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_TERMS_BUNDLE = {\r\n  required: [\r\n    \"terms\",\r\n    \"currencyUnit\",\r\n    \"gameTitle\",\r\n  ] satisfies (keyof System_TextBundle)[],\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  properties: {\r\n    currencyUnit: { type: \"string\" } satisfies JSONSchemaType<string>,\r\n    gameTitle: { type: \"string\" } satisfies JSONSchemaType<string>,\r\n    terms: {\r\n      additionalProperties: false,\r\n      type: \"object\",\r\n      required: [\r\n        \"messages\",\r\n        \"commands\",\r\n        \"basic\",\r\n        \"params\",\r\n      ] satisfies (keyof System_Terms)[],\r\n      properties: {\r\n        messages: SCHEMA_SYSTEM_TERMS_MESSAGES,\r\n        commands: SCHEMA_SYSTEM_MEMBERS_TERMS_COMMANDS_ARRAY,\r\n        basic: SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY,\r\n        params: SCHEMA_SYSTEM_PARAM_NAMS_ARRAY,\r\n      } satisfies Record<keyof System_Terms, SchemaObject>,\r\n    },\r\n  },\r\n} as const satisfies SchemaObject;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_SYSTEM_MEMBERS_TERMS_BASIC_ARRAY = {\r\n  type: \"array\",\r\n  items: { type: \"string\" },\r\n  minItems: 10,\r\n  maxItems: 10,\r\n} as const satisfies JSONSchemaType<string[]>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\n\r\nexport const SCHEMA_SYSTEM_PARAM_NAMS_ARRAY = {\r\n  type: \"array\",\r\n  items: {\r\n    type: \"string\",\r\n    minLength: 1,\r\n  },\r\n  minItems: 10,\r\n  maxItems: 10,\r\n  uniqueItems: true,\r\n} as const satisfies JSONSchemaType<string[]>;\r\n","import type { Data_NamedItem } from \"src/namedItemSource\";\r\nimport type {\r\n  SystemLabels_TermsParamNames,\r\n  Terms_ParamNamesArray,\r\n} from \"./paramArray\";\r\nimport type { System_Terms_Params } from \"./types\";\r\n\r\nexport const makeParamNamesArray = (\r\n  param: Partial<SystemLabels_TermsParamNames>\r\n): Terms_ParamNamesArray => {\r\n  return [\r\n    param.mhp ?? \"\",\r\n    param.mmp ?? \"\",\r\n    param.atk ?? \"\",\r\n    param.def ?? \"\",\r\n    param.mat ?? \"\",\r\n    param.mdf ?? \"\",\r\n    param.agi ?? \"\",\r\n    param.luk ?? \"\",\r\n    param.hit ?? \"\",\r\n    param.eva ?? \"\",\r\n  ];\r\n};\r\n\r\nexport const getParamNames = (\r\n  system: System_Terms_Params\r\n): Data_NamedItem[] => {\r\n  return system.terms.params.map((name, index) => ({\r\n    name: name,\r\n    id: index,\r\n  }));\r\n};\r\n","import type { TitleCommandWindow } from \"./types\";\r\n\r\nexport const makeTitleCommandWindow = (\r\n  param: Partial<TitleCommandWindow>\r\n): TitleCommandWindow => {\r\n  return {\r\n    background: param.background ?? 0,\r\n    offsetX: param.offsetX ?? 0,\r\n    offsetY: param.offsetY ?? 0,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { TitleCommandWindow } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_TITLE_COMMAND_WINDOW = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"background\", \"offsetX\", \"offsetY\"],\r\n  properties: {\r\n    background: { type: \"integer\", minimum: 0, maximum: 1000 },\r\n    offsetX: { type: \"integer\", minimum: -1000, maximum: 1000 },\r\n    offsetY: { type: \"integer\", minimum: -1000, maximum: 1000 },\r\n  },\r\n} as const satisfies JSONSchemaType<TitleCommandWindow>;\r\n","import { makeAudioFileParams } from \"@RpgTypes/utils\";\r\nimport type { Data_Vehicle } from \"./types\";\r\n\r\nexport const makeVehicleData = (\r\n  vehicle: Partial<Data_Vehicle> = {}\r\n): Data_Vehicle => ({\r\n  characterIndex: vehicle.characterIndex ?? 0,\r\n  characterName: vehicle.characterName ?? \"\",\r\n  bgm: makeAudioFileParams(vehicle.bgm ?? {}),\r\n  startMapId: vehicle.startMapId ?? 0,\r\n  startX: vehicle.startX ?? 0,\r\n  startY: vehicle.startY ?? 0,\r\n});\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Data_Vehicle } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_VEHICLE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"characterIndex\",\r\n    \"characterName\",\r\n    \"bgm\",\r\n    \"startMapId\",\r\n    \"startX\",\r\n    \"startY\",\r\n  ],\r\n  properties: {\r\n    characterIndex: { type: \"integer\", minimum: 0, maximum: 7 },\r\n    characterName: { type: \"string\", minLength: 1 },\r\n    bgm: {\r\n      type: \"object\",\r\n      additionalProperties: false,\r\n      required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n      properties: {\r\n        name: { type: \"string\" },\r\n        volume: { type: \"integer\", minimum: 0, maximum: 100 },\r\n        pitch: { type: \"integer\", minimum: 50, maximum: 150 },\r\n        pan: { type: \"integer\", minimum: -100, maximum: 100 },\r\n      },\r\n    },\r\n    startMapId: { type: \"integer\", minimum: 0 },\r\n    startX: { type: \"integer\", minimum: 0, maximum: 5000 },\r\n    startY: { type: \"integer\", minimum: 0, maximum: 5000 },\r\n  },\r\n} as const satisfies JSONSchemaType<Data_Vehicle>;\r\n","import type { EditorSettings } from \"./editor/types\";\r\n\r\nexport const makeEditorSetting = (\r\n  param: Partial<EditorSettings> = {}\r\n): EditorSettings => {\r\n  return {\r\n    jsonFormatLevel: param.jsonFormatLevel ?? 0,\r\n    messageWidth1: param.messageWidth1 ?? 816,\r\n    messageWidth2: param.messageWidth2 ?? 816,\r\n  };\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { TestBattler, System_TestBattle } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_TEST_BATTLER = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"actorId\", \"equips\", \"level\"],\r\n  properties: {\r\n    actorId: { type: \"integer\" },\r\n\r\n    level: { type: \"integer\", minimum: 1 },\r\n    equips: {\r\n      type: \"array\",\r\n      items: { type: \"integer\" },\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<TestBattler>;\r\n\r\nexport const SCHEMA_SYSTEM_TEST_PLAY = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"testBattlers\",\r\n    \"testTroopId\",\r\n    \"battleback1Name\",\r\n    \"battleback2Name\",\r\n  ],\r\n  properties: {\r\n    testBattlers: {\r\n      type: \"array\",\r\n      items: SCHEMA_SYSTEM_TEST_BATTLER,\r\n    },\r\n    testTroopId: { type: \"integer\", minimum: 0 },\r\n    battleback1Name: { type: \"string\" },\r\n    battleback2Name: { type: \"string\" },\r\n  },\r\n} as const satisfies JSONSchemaType<System_TestBattle>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport { SCHEMA_SYSTEM_EDITOR_SETTINGS } from \"./editor/schema\";\r\nimport { SCHEMA_SYSTEM_TEST_BATTLER } from \"./testPlay/schema\";\r\nimport type { System_GameEditorBundleRMMZ } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\r\n    \"battleback1Name\",\r\n    \"battleback2Name\",\r\n    \"battlerHue\",\r\n    \"battlerName\",\r\n    \"editMapId\",\r\n    \"editor\",\r\n    \"testBattlers\",\r\n    \"testTroopId\",\r\n  ],\r\n  properties: {\r\n    testBattlers: {\r\n      type: \"array\",\r\n      items: SCHEMA_SYSTEM_TEST_BATTLER,\r\n    },\r\n    testTroopId: { type: \"integer\", minimum: 0 },\r\n    battleback1Name: { type: \"string\" },\r\n    battleback2Name: { type: \"string\" },\r\n    editMapId: { type: \"integer\", minimum: 0 },\r\n    battlerHue: { type: \"integer\", minimum: 0 },\r\n    battlerName: { type: \"string\" },\r\n    editor: SCHEMA_SYSTEM_EDITOR_SETTINGS,\r\n  },\r\n} as const satisfies JSONSchemaType<System_GameEditorBundleRMMZ>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { EditorSettings, EditorSettingLables } from \"./types\";\r\n\r\nexport const SCHEMA_SYSTEM_EDITOR_SETTINGS: JSONSchemaType<EditorSettings> = {\r\n  additionalProperties: false,\r\n  type: \"object\",\r\n  required: [\"messageWidth1\", \"messageWidth2\", \"jsonFormatLevel\"],\r\n  properties: {\r\n    messageWidth1: { type: \"integer\", minimum: 0, maximum: 1000 },\r\n    messageWidth2: { type: \"integer\", minimum: 0, maximum: 1000 },\r\n    jsonFormatLevel: { type: \"integer\", minimum: 0, maximum: 4 },\r\n  },\r\n} as const satisfies JSONSchemaType<EditorSettings>;\r\n\r\nexport const SCHEMA_SYSTEM_EDITOR_SETTINGS_LABELS: JSONSchemaType<EditorSettingLables> =\r\n  {\r\n    additionalProperties: false,\r\n    type: \"object\",\r\n    required: [\"messageWidth1\", \"messageWidth2\", \"jsonFormatLevel\"],\r\n    properties: {\r\n      messageWidth1: { type: \"string\" },\r\n      messageWidth2: { type: \"string\" },\r\n      jsonFormatLevel: { type: \"string\" },\r\n    },\r\n  } as const satisfies JSONSchemaType<EditorSettingLables>;\r\n","import type { DomainLabel } from \"@RpgTypes/templates\";\r\nimport type {\r\n  System_Bgm,\r\n  System_BooleanGameOptions,\r\n  System_TitleImages,\r\n  SystemLabel_DataNames,\r\n  SystemLabels_GameCommands,\r\n} from \"./core\";\r\nimport type { SystemLabels_TermsParamNames } from \"./core/terms/paramArray\";\r\nimport type { System_Text } from \"./subset\";\r\ntype AsLabel<T> = Record<keyof T, string>;\r\n\r\nexport type SystemLabel_Images = AsLabel<System_TitleImages>;\r\nexport type SystemLabel_Text = AsLabel<System_Text>;\r\nexport type SystemLabel_Bgm = AsLabel<System_Bgm>;\r\nexport type SystemLabel_BoolanOptions = AsLabel<System_BooleanGameOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_BOOLEAN = {\r\n  domainName: \"オプション\",\r\n  options: {\r\n    optDrawTitle: \"ゲームタイトルの描画\",\r\n    optDisplayTp: \"ウィンドウにTPを表示\",\r\n    optFloorDeath: \"床ダメージで戦闘不能\",\r\n    optSlipDeath: \"スリップダメージで戦闘不能\",\r\n    optAutosave: \"オートセーブを有効化\",\r\n    optExtraExp: \"控えメンバーも経験値を獲得\",\r\n    optFollowers: \"隊列歩行\",\r\n    optSideView: \"戦闘をサイドビューにする\",\r\n    optKeyItemsNumber: \"大事なものの個数を表示\",\r\n    optTransparent: \"透明状態で開始\",\r\n    optMessageSkip: \"メッセージスキップを有効化\",\r\n    optSplashScreen: \"スプラッシュ画面を表示\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabel_BoolanOptions>;\r\n\r\nexport const DEFAULT_SYSTEM_LABELS_DATA_TYPES = {\r\n  domainName: \"タイプ\",\r\n\r\n  format: \"{name}\",\r\n\r\n  options: {\r\n    elements: \"属性\",\r\n    equipTypes: \"装備タイプ\",\r\n    skillTypes: \"スキルタイプ\",\r\n    weaponTypes: \"武器タイプ\",\r\n    armorTypes: \"防具タイプ\",\r\n    switches: \"スイッチ\",\r\n    variables: \"変数\",\r\n  },\r\n} as const satisfies SystemLabel_DataNames;\r\n\r\nexport const LABELS_SYSTEM_BATTLER_PARAMS = {\r\n  domainName: \"能力値\",\r\n  options: {\r\n    agi: \"敏捷\",\r\n    atk: \"攻撃力\",\r\n    def: \"防御力\",\r\n    eva: \"回避\",\r\n    hit: \"命中\",\r\n    luk: \"運\",\r\n    mat: \"魔法攻撃力\",\r\n    mdf: \"魔法防御力\",\r\n    mhp: \"最大HP\",\r\n    mmp: \"最大MP\",\r\n  },\r\n} as const satisfies DomainLabel<SystemLabels_TermsParamNames>;\r\n\r\nexport const LABELS_SYSTEM_GAME_COMMANDS = {\r\n  domainName: \"コマンド\",\r\n  options: {\r\n    item: \"アイテム\",\r\n    skill: \"スキル\",\r\n    equip: \"装備\",\r\n    status: \"ステータス\",\r\n    formation: \"編成\",\r\n    options: \"オプション\",\r\n    save: \"セーブ\",\r\n    gameEnd: \"ゲーム終了\",\r\n    armor: \"防具\",\r\n    weapon: \"武器\",\r\n    newGame: \"ニューゲーム\",\r\n    attack: \"攻撃\",\r\n    guard: \"防御\",\r\n    escape: \"逃げる\",\r\n    fight: \"戦う\",\r\n    buy: \"買う\",\r\n    sell: \"売る\",\r\n    cancel: \"キャンセル\",\r\n    clear: \"クリア\",\r\n    continue_: \"続きから\",\r\n    equip2: \"装備2\",\r\n    keyItem: \"大事なもの\",\r\n    optimize: \"最強装備\",\r\n    toTitle: \"タイトルへ戻る\",\r\n  },\r\n} satisfies DomainLabel<SystemLabels_GameCommands>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AttackMotion, Data_Vehicle, System_Advanced } from \"./core\";\r\nimport {\r\n  SCHEMA_SYSTEM_ADVANCED,\r\n  SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION,\r\n  SCHEMA_SYSTEM_VEHICLE,\r\n} from \"./core\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nexport const SCHEMA_SYSTEM_PARTIAL_BUNDLE = {\r\n  additionalProperties: false,\r\n  required: [\"airship\", \"boat\", \"ship\", \"advanced\", \"attackMotions\"],\r\n  type: \"object\",\r\n  properties: {\r\n    airship: SCHEMA_SYSTEM_VEHICLE satisfies JSONSchemaType<Data_Vehicle>,\r\n    boat: SCHEMA_SYSTEM_VEHICLE satisfies JSONSchemaType<Data_Vehicle>,\r\n    ship: SCHEMA_SYSTEM_VEHICLE satisfies JSONSchemaType<Data_Vehicle>,\r\n    advanced: SCHEMA_SYSTEM_ADVANCED satisfies JSONSchemaType<System_Advanced>,\r\n    attackMotions: {\r\n      type: \"array\",\r\n      items: SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION,\r\n    } satisfies JSONSchemaType<AttackMotion[]>,\r\n  },\r\n} as const satisfies JSONSchemaType<\r\n  Pick<Data_System, \"airship\" | \"boat\" | \"ship\" | \"advanced\" | \"attackMotions\">\r\n>;\r\n","import {\r\n  SCHEMA_SYSTEM_AUDIOFILES,\r\n  SCHEMA_SYSTEM_BATTLE_RULE_RMMZ,\r\n  SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS,\r\n  SCHEMA_SYSTEM_BOOLEAN_OPTIONS,\r\n  SCHEMA_SYSTEM_GAME_INITIAL,\r\n  SCHEMA_SYSTEM_IMAGE_SIZE,\r\n  SCHEMA_SYSTEM_OTHER_DATA,\r\n  SCHEMA_SYSTEM_RPG_DATA_NAMES,\r\n  SCHEMA_SYSTEM_TERMS_BUNDLE,\r\n  SCHEMA_SYSTEM_TITLE_IMAGES,\r\n} from \"./core\";\r\nimport { SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE } from \"./gameEdit\";\r\nimport { SCHEMA_SYSTEM_PARTIAL_BUNDLE } from \"./schemaBundle\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nexport interface PartialSystemSchema {\r\n  required: ReadonlyArray<keyof Data_System>;\r\n  properties: Record<string, object>;\r\n  additionalProperties: false;\r\n  type: \"object\";\r\n}\r\n\r\nexport const allSystemSchema = () => [\r\n  SCHEMA_SYSTEM_PARTIAL_BUNDLE,\r\n  SCHEMA_SYSTEM_AUDIOFILES,\r\n  SCHEMA_SYSTEM_BATTLE_RULE_RMMZ,\r\n  SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS,\r\n  SCHEMA_SYSTEM_BOOLEAN_OPTIONS,\r\n  SCHEMA_SYSTEM_GAME_INITIAL,\r\n  SCHEMA_SYSTEM_IMAGE_SIZE,\r\n  SCHEMA_SYSTEM_OTHER_DATA,\r\n  SCHEMA_SYSTEM_RPG_DATA_NAMES,\r\n  SCHEMA_SYSTEM_TERMS_BUNDLE,\r\n  SCHEMA_SYSTEM_TITLE_IMAGES,\r\n  SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE,\r\n];\r\n\r\nexport const mergeSystemSchema = (\r\n  list: ReadonlyArray<PartialSystemSchema>\r\n): PartialSystemSchema => {\r\n  const reducedList = reduce(list);\r\n  return {\r\n    additionalProperties: false,\r\n    type: \"object\",\r\n    required: Array.from(new Set(reducedList.required)),\r\n    properties: reducedList.properties,\r\n  };\r\n};\r\n\r\nconst reduce = (list: ReadonlyArray<PartialSystemSchema>) => {\r\n  type Type = Pick<PartialSystemSchema, \"required\" | \"properties\">;\r\n  return list.reduce<Type>(\r\n    (acc, item) => ({\r\n      required: [...acc.required, ...item.required],\r\n      properties: { ...acc.properties, ...item.properties },\r\n    }),\r\n    { required: [], properties: {} }\r\n  );\r\n};\r\n","import Ajv from \"ajv\";\r\nimport type { AttackMotion, System_ImageSize } from \"./core\";\r\nimport {\r\n  SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION,\r\n  SCHEMA_SYSTEM_IMAGE_SIZE,\r\n} from \"./core\";\r\nimport type { TestBattler } from \"./gameEdit\";\r\nimport { SCHEMA_SYSTEM_TEST_BATTLER } from \"./gameEdit/testPlay/schema\";\r\nimport { mergeSystemSchema, allSystemSchema } from \"./schemaMerge\";\r\nimport type { Data_System } from \"./system\";\r\n\r\nconst ajv = new Ajv({ strict: true });\r\n\r\nconst schema = mergeSystemSchema(allSystemSchema());\r\nconst systemValidate = ajv.compile(schema);\r\n\r\nexport const isDataSystem = (data: unknown): data is Data_System => {\r\n  return systemValidate(data);\r\n};\r\n\r\nconst testBattler = ajv.compile(SCHEMA_SYSTEM_TEST_BATTLER);\r\n\r\nexport const isTestBattler = (data: unknown): data is TestBattler => {\r\n  return testBattler(data);\r\n};\r\n\r\nconst attackMotion = ajv.compile(SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION);\r\nexport const isAttackMotion = (data: unknown): data is AttackMotion => {\r\n  return attackMotion(data);\r\n};\r\n\r\nconst imageSize = ajv.compile(SCHEMA_SYSTEM_IMAGE_SIZE);\r\nexport const isImageSize = (data: unknown): data is System_ImageSize => {\r\n  return imageSize(data);\r\n};\r\n","import type { AudioFileParams } from \"src/utils\";\r\nimport { makeAudioFileParams } from \"src/utils\";\r\nimport {\r\n  makeBooleanOptions,\r\n  makeDataNames,\r\n  makeItemCategories,\r\n  makeMenuCommandsEnabled,\r\n  makeParamNamesArray,\r\n  makeSoundsArray,\r\n  makeSystemAdvanced,\r\n  makeTermsBasic,\r\n  makeTermsCommand,\r\n  makeTermsMessages,\r\n  makeVehicleData,\r\n} from \"./core\";\r\nimport type {\r\n  System_BooleanGameOptions,\r\n  System_RPG_DataNames,\r\n  System_ImageSize,\r\n  System_Terms,\r\n  System_TermsPartial,\r\n  Terms_Messages,\r\n} from \"./core\";\r\nimport type { EditorSettings, TestBattler } from \"./gameEdit\";\r\nimport { makeEditorSetting } from \"./gameEdit\";\r\nimport type { Data_System } from \"./system\";\r\nimport type { SystemDataFragments } from \"./systemSegments\";\r\nimport { isImageSize, isTestBattler } from \"./validate\";\r\n\r\nexport const makeSystemData = (\r\n  fragments: Partial<SystemDataFragments>\r\n): Data_System => {\r\n  const size = cloneSize(fragments.size);\r\n\r\n  return {\r\n    ...(makeBooleanOptions(fragments.options) satisfies Record<\r\n      string & keyof System_BooleanGameOptions,\r\n      boolean\r\n    >),\r\n    currencyUnit: fragments.texts?.currencyUnit ?? \"\",\r\n    gameTitle: fragments.texts?.gameTitle ?? \"\",\r\n    sounds: makeSoundsArray(fragments.sounds) satisfies AudioFileParams[],\r\n    editor: makeEditorSetting(fragments.editing) satisfies Record<\r\n      keyof EditorSettings,\r\n      number\r\n    >,\r\n    advanced: makeSystemAdvanced(fragments.advanced),\r\n    title1Name: fragments.images?.title1Name ?? \"\",\r\n    title2Name: fragments.images?.title2Name ?? \"\",\r\n    ...(makeDataNames(fragments.dataNames ?? {}) satisfies Record<\r\n      keyof System_RPG_DataNames,\r\n      string[]\r\n    >),\r\n    magicSkills: cloneNumberArray([]),\r\n    airship: makeVehicleData(fragments.vehicles?.airship),\r\n    boat: makeVehicleData(fragments.vehicles?.boat),\r\n    ship: makeVehicleData(fragments.vehicles?.ship),\r\n    defeatMe: makeAudioFileParams(fragments.me?.defeatMe),\r\n    gameoverMe: makeAudioFileParams(fragments.me?.gameoverMe),\r\n    titleBgm: makeAudioFileParams(fragments.bgm?.titleBgm),\r\n\r\n    tileSize: size.tileSize,\r\n    faceSize: size.faceSize,\r\n    iconSize: size.iconSize,\r\n    versionId: 1,\r\n    attackMotions: [],\r\n    battleback1Name: fragments.battleTest?.battleback1Name ?? \"\",\r\n    battleback2Name: fragments.battleTest?.battleback2Name ?? \"\",\r\n    testTroopId: fragments.battleTest?.testTroopId ?? 0,\r\n    testBattlers: cloneObjectArray(\r\n      fragments.battleTest?.testBattlers,\r\n      cloneTestBattler\r\n    ),\r\n    battleBgm: makeAudioFileParams(fragments.bgm?.battleBgm),\r\n    victoryMe: makeAudioFileParams(fragments.me?.victoryMe),\r\n    editMapId: fragments.editorTemporary?.editMapId ?? 0,\r\n    battlerName: fragments.editorTemporary?.battlerName ?? \"\",\r\n    locale: \"\",\r\n    startMapId: fragments.gameInit?.startMapId ?? 0,\r\n    startX: fragments.gameInit?.startX ?? 0,\r\n    startY: fragments.gameInit?.startY ?? 0,\r\n    windowTone: [0, 0, 0, 0],\r\n    terms: makeTerms(fragments.terms ?? {}) satisfies System_Terms,\r\n    itemCategories: makeItemCategories(\r\n      fragments.itemCategories\r\n    ) satisfies boolean[],\r\n    partyMembersArray: cloneNumberArray(fragments.gameInit?.partyMembersArray),\r\n    battleSystem: 0,\r\n    battlerHue: 0,\r\n    menuCommands: makeMenuCommandsEnabled(\r\n      fragments.menuComamnds\r\n    ) satisfies boolean[],\r\n  };\r\n};\r\n\r\nexport default makeSystemData;\r\n\r\nconst makeTerms = (terms: System_TermsPartial): System_Terms => {\r\n  return {\r\n    basic: makeTermsBasic(terms.basic ?? {}) satisfies string[],\r\n    commands: makeTermsCommand(terms.commands ?? {}) satisfies string[],\r\n    params: makeParamNamesArray(terms.params ?? {}) satisfies string[],\r\n    messages: makeTermsMessages(terms.messages ?? {}) satisfies Record<\r\n      keyof Terms_Messages,\r\n      string\r\n    >,\r\n  };\r\n};\r\n\r\nconst cloneNumberArray = (array?: ReadonlyArray<number>) => {\r\n  return array ? [...array] : [];\r\n};\r\n\r\nconst cloneSize = (data: unknown): System_ImageSize => {\r\n  return isImageSize(data)\r\n    ? {\r\n        tileSize: data.tileSize,\r\n        faceSize: data.faceSize,\r\n        iconSize: data.iconSize,\r\n      }\r\n    : {\r\n        tileSize: 48,\r\n        faceSize: 144,\r\n        iconSize: 32,\r\n      };\r\n};\r\n\r\nconst cloneObjectArray = <T>(\r\n  array: ReadonlyArray<unknown> | undefined,\r\n  fn: (data: unknown) => T\r\n) => {\r\n  return array ? array.map(fn) : [];\r\n};\r\n\r\nconst cloneTestBattler = (data: unknown): TestBattler => {\r\n  return isTestBattler(data)\r\n    ? {\r\n        actorId: data.actorId,\r\n        equips: cloneNumberArray(data.equips),\r\n        level: data.level,\r\n      }\r\n    : {\r\n        actorId: 0,\r\n        equips: [],\r\n        level: 1,\r\n      };\r\n};\r\n","import type {\r\n  GameData,\r\n  DataLabels,\r\n  TraitLabelSet,\r\n  NormalLabel,\r\n  ItemEffectLabelSet,\r\n  EffectDefinitionResolved,\r\n} from \"@RpgTypes/rpg\";\r\nimport {\r\n  defineTraitItems,\r\n  defineGameDataSources,\r\n  resolveTraitLabels,\r\n  resolveItemEffectLabels,\r\n} from \"@RpgTypes/rpg\";\r\nimport type {\r\n  System_RPG_DataNames,\r\n  SystemLabel_DataNames,\r\n} from \"@RpgTypes/system\";\r\nimport { defineSystemItems } from \"@RpgTypes/system\";\r\nimport {\r\n  type NamedItemSource,\r\n  type FormatCompiled,\r\n  mergeItemsSource,\r\n} from \"src/namedItemSource\";\r\n\r\nexport const buildReferenceItemSources = (\r\n  gameData: GameData,\r\n  gameDataLabels: DataLabels,\r\n  traitLabels: TraitLabelSet,\r\n  global: NormalLabel,\r\n  system: System_RPG_DataNames,\r\n  label: SystemLabel_DataNames\r\n): NamedItemSource[] => {\r\n  return [\r\n    ...defineTraitItems(traitLabels, global),\r\n    ...defineGameDataSources(gameData, gameDataLabels),\r\n    ...defineSystemItems(system, label),\r\n  ];\r\n};\r\n\r\nexport const compileTraitDisplayData = (\r\n  namedItemSource: ReadonlyArray<NamedItemSource>,\r\n  traitLabels: TraitLabelSet\r\n): Map<number, FormatCompiled> => {\r\n  return mergeItemsSource(resolveTraitLabels(traitLabels), namedItemSource);\r\n};\r\n\r\nexport const compileItemEffectDisplayData = (\r\n  namedItemSource: ReadonlyArray<NamedItemSource>,\r\n  itemEffectLabels: ItemEffectLabelSet,\r\n  additional?: ReadonlyArray<EffectDefinitionResolved>\r\n): Map<number, FormatCompiled> => {\r\n  const list = resolveItemEffectLabels(itemEffectLabels);\r\n  return mergeItemsSource(\r\n    additional ? [...list, ...additional] : list,\r\n    namedItemSource\r\n  );\r\n};\r\n","import type { DomainName } from \"./types\";\r\n\r\nexport const domainNames = <T extends Record<string, DomainName>>(\r\n  record: T\r\n): string[] => {\r\n  return Object.entries<DomainName>(record).map(\r\n    ([, value]) => value.domainName\r\n  );\r\n};\r\n","import { CHANGE_NAME, CHANGE_NICKNAME, CHANGE_PROFILE } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  ParamObject_ChangeActorName,\r\n  Command_ChangeActorName as Command_ChangeActorName,\r\n  Command_ChangeActorNickName,\r\n  Command_ChangeActorProfile,\r\n  ParamObject_ChangeActorNickName,\r\n  ParamObject_ChangeActorProfile,\r\n} from \"./types\";\r\n\r\nexport const makeCommandChangeActorName = (\r\n  param: ParamObject_ChangeActorName,\r\n  indent: number = 0\r\n): Command_ChangeActorName => ({\r\n  code: CHANGE_NAME,\r\n  parameters: [param.actorId, param.name],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorNickName = (\r\n  param: ParamObject_ChangeActorNickName,\r\n  indent: number = 0\r\n): Command_ChangeActorNickName => ({\r\n  code: CHANGE_NICKNAME,\r\n  parameters: [param.actorId, param.nickname],\r\n  indent,\r\n});\r\n\r\nexport const makeCommandChangeActorProfile = (\r\n  param: ParamObject_ChangeActorProfile,\r\n  indent: number = 0\r\n): Command_ChangeActorProfile => ({\r\n  code: CHANGE_PROFILE,\r\n  parameters: [param.actorId, param.profile],\r\n  indent,\r\n});\r\n","import {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_BATTLE_BGM,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_DEFEAT_ME,\r\n} from \"@RpgTypes/rpg\";\r\nimport { makeAudioFileParams, type AudioFileParams } from \"@RpgTypes/utils\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n  Command_ChangeDefeatME,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeBattleBGM,\r\n  CommandUnion_AnyAudio,\r\n} from \"./types\";\r\n\r\nexport const makeAudioCommand = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  filename: string\r\n) => {\r\n  return makeCommandAudioAny(code, makeAudioFileParams({ name: filename }));\r\n};\r\n\r\nexport const makeCommandAudioAny = <Code extends CommandUnion_AnyAudio[\"code\"]>(\r\n  code: Code,\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n) => {\r\n  return {\r\n    code,\r\n    parameters: [makeAudioFileParams(audio)] satisfies [AudioFileParams],\r\n    indent,\r\n  };\r\n};\r\n\r\nexport const makeCommandPlayBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGM => makeCommandAudioAny(PLAY_BGM, audio, indent);\r\n\r\nexport const makeCommandPlayBGS = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayBGS => makeCommandAudioAny(PLAY_BGS, audio, indent);\r\n\r\nexport const makeCommandPlayME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlayME => makeCommandAudioAny(PLAY_ME, audio, indent);\r\n\r\nexport const makeCommandPlaySE = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_PlaySE => makeCommandAudioAny(PLAY_SE, audio, indent);\r\n\r\nexport const makeCommandChangeBattleBGM = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeBattleBGM =>\r\n  makeCommandAudioAny(CHANGE_BATTLE_BGM, audio, indent);\r\n\r\nexport const makeCommandChangeVictoryME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeVictoryME =>\r\n  makeCommandAudioAny(CHANGE_VICTORY_ME, audio, indent);\r\n\r\nexport const makeCommandChangeDefeatME = (\r\n  audio: AudioFileParams,\r\n  indent: number = 0\r\n): Command_ChangeDefeatME =>\r\n  makeCommandAudioAny(CHANGE_DEFEAT_ME, audio, indent);\r\n","import { COMMON_EVENT } from \"@RpgTypes/rpg\";\r\nimport type { Command_CommonEvent, ParamObject_CommonEvent } from \"./types\";\r\nimport type { ParamArray_CommonEvent } from \"./types\";\r\n\r\nexport const makeCommandCommonEvent = (\r\n  param: Partial<ParamObject_CommonEvent> | undefined,\r\n  indent: number = 0\r\n): Command_CommonEvent => ({\r\n  code: COMMON_EVENT,\r\n  indent,\r\n  parameters: toArrayCommonEvent(param ?? {}),\r\n});\r\n\r\nexport const fromArrayCommonEvent = (\r\n  array: ParamArray_CommonEvent\r\n): ParamObject_CommonEvent => ({\r\n  eventId: array[0],\r\n});\r\n\r\nexport const toArrayCommonEvent = (\r\n  object: Partial<ParamObject_CommonEvent>\r\n): ParamArray_CommonEvent => [object.eventId ?? 0];\r\n","import { CONTROL_SWITCHES } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ControlSwitches,\r\n  ParamArray_ControlSwitches,\r\n  Paramobject_ControlSwitches,\r\n} from \"./types\";\r\n\r\nexport const fromArrayControlSwitches = (\r\n  param: ParamArray_ControlSwitches\r\n): Paramobject_ControlSwitches => {\r\n  return {\r\n    min: param[0],\r\n    max: param[1],\r\n    value: param[2],\r\n  };\r\n};\r\n\r\nexport const toArrayControlSwitches = (\r\n  object: Paramobject_ControlSwitches\r\n): ParamArray_ControlSwitches => {\r\n  return [object.min, object.max, object.value];\r\n};\r\n\r\nexport const makeCommandControlSwitches = (\r\n  param: Paramobject_ControlSwitches,\r\n  indent = 0\r\n): Command_ControlSwitches => ({\r\n  code: CONTROL_SWITCHES,\r\n  indent,\r\n  parameters: toArrayControlSwitches(param),\r\n});\r\n","import { COMMENT_BODY, COMMENT_HEAD } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  ParamArray_Comment,\r\n  ParamObject_Comment,\r\n  Command_CommentHeader,\r\n  Command_CommentBody,\r\n} from \"./types\";\r\n\r\nexport const makeCommentArray = (comment: string): ParamArray_Comment => {\r\n  return [comment];\r\n};\r\n\r\nexport const convertCommentArrayToObject = (\r\n  paramArray: ParamArray_Comment\r\n): ParamObject_Comment => ({\r\n  comment: paramArray[0],\r\n});\r\n\r\nexport const makeCommandCommentHeader = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentHeader => ({\r\n  code: COMMENT_HEAD,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommandCommentBody = (\r\n  comment: string,\r\n  indent: number = 0\r\n): Command_CommentBody => ({\r\n  code: COMMENT_BODY,\r\n  indent,\r\n  parameters: makeCommentArray(comment),\r\n});\r\n\r\nexport const makeCommentCommandArray = (\r\n  comments: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return comments.map((comment, index) =>\r\n    index === 0\r\n      ? makeCommandCommentHeader(comment, indent)\r\n      : makeCommandCommentBody(comment, indent)\r\n  ) as [Command_CommentHeader, ...Command_CommentBody[]];\r\n};\r\n","import { INPUT_NUMBER } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_InputNumber,\r\n  ParamArray_InputNumber,\r\n  ParamObject_InputNumber,\r\n} from \"./types\";\r\n\r\nexport const toArrayInputNumber = (\r\n  param: Partial<ParamObject_InputNumber>\r\n): ParamArray_InputNumber => [param.variableId ?? 0, param.digits ?? 0];\r\n\r\nexport const fromArrayInputNumber = (\r\n  array: ParamArray_InputNumber\r\n): ParamObject_InputNumber => ({\r\n  variableId: array[0],\r\n  digits: array[1],\r\n});\r\n\r\nexport const makeCommandInputNumber = (\r\n  param: Partial<ParamObject_InputNumber> | undefined,\r\n  indent: number = 0\r\n): Command_InputNumber => ({\r\n  code: INPUT_NUMBER,\r\n  indent,\r\n  parameters: toArrayInputNumber(param ?? {}),\r\n});\r\n","import { SHOW_SCROLLING_TEXT, SHOW_SCROLLING_TEXT_BODY } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ScrollTextBody,\r\n  Command_ScrollTextHeader,\r\n  ParamArray_ScrollTextHeader,\r\n  ParamObject_ScrollTextHeader,\r\n} from \"./types\";\r\nimport type {\r\n  ParamArray_ScrollTextBody,\r\n  ParamObject_ScrollTextBody,\r\n} from \"./types\";\r\n\r\nexport const toArrayScrollingTextHeader = (\r\n  param: Partial<ParamObject_ScrollTextHeader> = {}\r\n): ParamArray_ScrollTextHeader => {\r\n  return [param?.speed ?? 4, param?.skip ?? false];\r\n};\r\n\r\nexport const fromArrayScrollingTextHeader = (\r\n  array: ParamArray_ScrollTextHeader\r\n): ParamObject_ScrollTextHeader => {\r\n  return {\r\n    speed: array[0],\r\n    skip: array[1],\r\n  };\r\n};\r\n\r\nexport const makeCommandScrollingTextHeader = (\r\n  param: Partial<ParamObject_ScrollTextHeader> = {},\r\n  indent: number = 0\r\n): Command_ScrollTextHeader => {\r\n  return {\r\n    code: SHOW_SCROLLING_TEXT,\r\n    indent,\r\n    parameters: toArrayScrollingTextHeader(param),\r\n  };\r\n};\r\n\r\nexport const toArrayScrollingTextBody = (\r\n  text: string = \"\"\r\n): ParamArray_ScrollTextBody => {\r\n  return [text];\r\n};\r\n\r\nexport const fromArrayScrollingTextBody = (\r\n  array: ParamArray_ScrollTextBody\r\n): ParamObject_ScrollTextBody => {\r\n  return {\r\n    content: array[0],\r\n  };\r\n};\r\nexport const makeCommandScrollingTextBody = (\r\n  text: string = \"\",\r\n  indent: number = 0\r\n): Command_ScrollTextBody => {\r\n  return {\r\n    code: SHOW_SCROLLING_TEXT_BODY,\r\n    indent: indent ?? 0,\r\n    parameters: toArrayScrollingTextBody(text),\r\n  };\r\n};\r\n","import { SHOW_CHOICES, SHOW_CHOICES_ITEM } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  ParamArray_SetupChoice,\r\n  ParamObject_SetupChoice,\r\n  Command_ShowChoices,\r\n} from \"./types/body\";\r\nimport type {\r\n  ParamObject_ShowChoiceWhen,\r\n  Command_ShowChoiceWhen,\r\n  ParamArray_ShowChoiceWhen,\r\n} from \"./types/item\";\r\n\r\nexport const makeCommandShowChoiceItem = (\r\n  param: Partial<ParamObject_ShowChoiceWhen> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoiceWhen => ({\r\n  code: SHOW_CHOICES_ITEM,\r\n  indent,\r\n  parameters: [param?.index ?? 0, param?.name ?? \"\"],\r\n});\r\n\r\nexport const fromArraySetupChoiceItem = (\r\n  array: ParamArray_ShowChoiceWhen\r\n): ParamObject_ShowChoiceWhen => ({\r\n  index: array[0],\r\n  name: array[1],\r\n});\r\n\r\nexport const toArraySetupChoiceItem = (\r\n  object: Partial<ParamObject_ShowChoiceWhen>\r\n): ParamArray_ShowChoiceWhen => [object.index ?? 0, object.name ?? \"\"];\r\n\r\nexport const fromArraySetupChoice = (\r\n  array: ParamArray_SetupChoice\r\n): ParamObject_SetupChoice => ({\r\n  choices: array[0],\r\n  cancelType: array[1],\r\n  defaultType: array[2],\r\n  positionType: array[3],\r\n  background: array[4],\r\n});\r\n\r\nexport const toArraySetupChoice = (\r\n  object: Partial<ParamObject_SetupChoice>\r\n): ParamArray_SetupChoice => [\r\n  object.choices ?? [],\r\n  object.cancelType ?? 0,\r\n  object.defaultType ?? 0,\r\n  object.positionType ?? 2,\r\n  object.background ?? 0,\r\n];\r\n\r\nexport const makeCommandSetupChoice = (\r\n  param: Partial<ParamObject_SetupChoice> | undefined,\r\n  indent: number = 0\r\n): Command_ShowChoices => ({\r\n  code: SHOW_CHOICES,\r\n  indent,\r\n  parameters: [\r\n    param?.choices ?? [],\r\n    param?.cancelType ?? 0,\r\n    param?.defaultType ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.background ?? 0,\r\n  ],\r\n});\r\n\r\nexport const cloneChoices = (\r\n  command: Command_ShowChoices\r\n): Command_ShowChoices => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: [\r\n      [...command.parameters[0]],\r\n      command.parameters[1],\r\n      command.parameters[2],\r\n      command.parameters[3],\r\n      command.parameters[4],\r\n    ],\r\n  };\r\n};\r\n","import { SHOW_MESSAGE, SHOW_MESSAGE_BODY } from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ShowMessageBody,\r\n  Command_ShowMessageHeader,\r\n  ParamArray_ShowMessage,\r\n  ParamObject_ShowMessage,\r\n} from \"./types\";\r\n\r\nexport const makeCommandShowMessage = (\r\n  param: Partial<ParamObject_ShowMessage> | undefined,\r\n  indent: number = 0\r\n): Command_ShowMessageHeader => ({\r\n  code: SHOW_MESSAGE,\r\n  indent,\r\n  parameters: [\r\n    param?.facename ?? \"\",\r\n    param?.faceIndex ?? 0,\r\n    param?.background ?? 0,\r\n    param?.positionType ?? 2,\r\n    param?.speakerName ?? \"\",\r\n  ],\r\n});\r\n\r\nexport const fromArrayShowMessageHeader = (\r\n  array: ParamArray_ShowMessage\r\n): ParamObject_ShowMessage => {\r\n  return {\r\n    facename: array[0],\r\n    faceIndex: array[1],\r\n    background: array[2],\r\n    positionType: array[3],\r\n    speakerName: array[4],\r\n  };\r\n};\r\n\r\nexport const toArrayShowMessageHeader = (\r\n  object: ParamObject_ShowMessage\r\n): ParamArray_ShowMessage => {\r\n  return [\r\n    object.facename,\r\n    object.faceIndex,\r\n    object.background,\r\n    object.positionType,\r\n    object.speakerName,\r\n  ];\r\n};\r\n\r\nexport const makeCommandShowMessageBody = (\r\n  text: string,\r\n  indent: number = 0\r\n): Command_ShowMessageBody => ({\r\n  code: SHOW_MESSAGE_BODY,\r\n  indent,\r\n  parameters: [text],\r\n});\r\n","import { SCRIPT_EVAL, SCRIPT_EVAL_BODY } from \"@RpgTypes/rpg\";\r\nimport type { Command_ScriptBody, Command_ScriptHeader } from \"./types\";\r\n\r\nexport const makeCommandScriptHeader = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptHeader => {\r\n  return {\r\n    code: SCRIPT_EVAL,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\n\r\nexport const makeCommandScriptBody = (\r\n  script: string,\r\n  indent: number = 0\r\n): Command_ScriptBody => {\r\n  return {\r\n    code: SCRIPT_EVAL_BODY,\r\n    indent,\r\n    parameters: [script],\r\n  };\r\n};\r\nexport const makeCommandScriptArray = (\r\n  lines: ReadonlyArray<string>,\r\n  indent: number = 0\r\n) => {\r\n  return lines.map((line, index) =>\r\n    index === 0\r\n      ? makeCommandScriptHeader(line, indent)\r\n      : makeCommandScriptBody(line, indent)\r\n  ) as [Command_ScriptHeader, ...Command_ScriptBody[]];\r\n};\r\n","export const OPERAND_CONSTANT = 0 as const;\r\nexport const OPERAND_VARIABLE = 1 as const;\r\nexport const OPERAND_RANDOM = 2 as const;\r\nexport const OPERAND_GAMEDATA = 3 as const;\r\nexport const OPERAND_SCRIPT = 4 as const;\r\n","export const ENEMY_PARAM_INDEX = {\r\n  HP: 0,\r\n  MP: 1,\r\n  MHP: 2,\r\n  MMP: 3,\r\n  ATK: 4,\r\n  DEF: 5,\r\n  MAT: 6,\r\n  MDF: 7,\r\n  AGI: 8,\r\n  LUK: 9,\r\n  TP: 10,\r\n} as const;\r\n","import {\r\n  OPERAND_CONSTANT,\r\n  OPERAND_RANDOM,\r\n  OPERAND_VARIABLE,\r\n  OPERAND_GAMEDATA,\r\n  OPERAND_SCRIPT,\r\n} from \"./constants\";\r\nimport type * as Type from \"./types\";\r\nimport { ENEMY_PARAM_INDEX } from \"./types/enemy/dataSource\";\r\n\r\nexport const toArrayOperandConstant = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Constant,\r\n  operation: number = 0\r\n): Type.Operand_Constatant => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_CONSTANT,\r\n  value.value,\r\n];\r\n\r\nexport const toArrayOperandVariable = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Variable,\r\n  operation: number = 0\r\n): Type.Operand_Variable => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_VARIABLE,\r\n  value.variableId,\r\n];\r\nexport const toArrayOperandRandom = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Random,\r\n  operation: number = 0\r\n): Type.Operand_Random => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_RANDOM,\r\n  value.min,\r\n  value.max,\r\n];\r\n\r\nexport const toArrayOperandScript = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Script,\r\n  operation: number = 0\r\n): Type.Operand_Script => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_SCRIPT,\r\n  value.code,\r\n];\r\nexport const toArrayOperandItemData = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ItemData,\r\n  operation: number = 0\r\n): Type.Operand_ItemData => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  value.type,\r\n  value.itemId,\r\n];\r\n\r\nexport const toArrayOperandActorStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_ActorStatus,\r\n  operation: number = 0\r\n): Type.Operand_ActorStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  3,\r\n  value.index,\r\n  value.param,\r\n];\r\n\r\nexport const toArrayOperandEnemyStatus = (\r\n  target: Type.ParamObject_WritingTarget,\r\n  value: Type.ParamObject_Operand_Enemy,\r\n  operation: number = 0\r\n): Type.Operand_EnemyStatus => [\r\n  target.startId,\r\n  target.endId ?? target.startId,\r\n  operation,\r\n  OPERAND_GAMEDATA,\r\n  4,\r\n  value.index,\r\n  ENEMY_PARAM_INDEX[value.param],\r\n];\r\n","import type {\r\n  DataOperand_Enemy,\r\n  Operand_EnemyStatus,\r\n  DataOperand_Actor,\r\n  Operand_ActorStatus,\r\n} from \"./types\";\r\n\r\nexport const getEnemyValue = (\r\n  enemy: DataOperand_Enemy,\r\n  param: Operand_EnemyStatus\r\n): number => {\r\n  switch (param[6]) {\r\n    case 0:\r\n      return enemy.hp;\r\n    case 1:\r\n      return enemy.mp;\r\n    case 10:\r\n      return enemy.tp;\r\n  }\r\n  if (param[6] >= 2 && param[6] <= 9) {\r\n    return enemy.param(param[6] - 2);\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getActorValue = (\r\n  actor: DataOperand_Actor,\r\n  param: Operand_ActorStatus\r\n) => {\r\n  switch (param[6]) {\r\n    case 0: // Level\r\n      return actor.level;\r\n    case 1: // EXP\r\n      return actor.currentExp();\r\n    case 2: // HP\r\n      return actor.hp;\r\n    case 3: // MP\r\n      return actor.mp;\r\n    case 12: // TP\r\n      return actor.tp;\r\n  }\r\n  if (param[6] >= 4 && param[6] <= 11) {\r\n    return actor.param(param[6] - 4);\r\n  }\r\n  return 0;\r\n};\r\n","import type {\r\n  EventCommandLike2,\r\n  EventCommandUnknown,\r\n} from \"@RpgTypes/eventCommand\";\r\n\r\nexport const cloneParameters = <\r\n  Param extends ReadonlyArray<number | boolean | string>\r\n>(\r\n  param: Param\r\n): Param => {\r\n  return [...param] as unknown as Param;\r\n};\r\n\r\nexport const cloneEventCommand = <\r\n  Param extends Array<number | boolean | string>\r\n>(\r\n  command: EventCommandLike2<number, Param>\r\n) => {\r\n  return {\r\n    code: command.code,\r\n    indent: command.indent,\r\n    parameters: cloneParameters<Param>(command.parameters),\r\n  };\r\n};\r\n\r\nconst isPrimitive = (value: unknown): value is string | number | boolean =>\r\n  typeof value === \"string\" ||\r\n  typeof value === \"number\" ||\r\n  typeof value === \"boolean\";\r\n\r\nexport const isCloneableCommand = (\r\n  value: EventCommandUnknown\r\n): value is EventCommandLike2<number, (string | number | boolean)[]> => {\r\n  return value.parameters.every(isPrimitive);\r\n};\r\n","import Ajv from \"ajv\";\r\nimport type {\r\n  CommandUnion_ChangeActorText,\r\n  Command_ScrollTextHeader,\r\n  CommandUnion_AnyAudio,\r\n  Command_CommonEvent,\r\n  Command_ShowChoices,\r\n  Command_ShowChoiceWhen,\r\n  Command_InputNumber,\r\n  Command_ShowMessageHeader,\r\n} from \"./commands\";\r\nimport { SCHEMA_COMMAND_CHANGE_ACTOR_TEXT } from \"./commands/actor/changeText/schema\";\r\nimport { SCHEMA_COMMAND_ANY_AUDIO } from \"./commands/audio/play/schema\";\r\nimport { SCHEMA_COMMAND_CALL_COMMON_EVENT } from \"./commands/flow/callCommonEvent/schema\";\r\nimport { SCHEMA_COMMAND_INPUT_NUMBER } from \"./commands/message/inputNumber/schema\";\r\nimport { SCHEMA_COMMAND_SCROLL_TEXT_HEAD } from \"./commands/message/scrollText/schema\";\r\nimport {\r\n  SCHEMA_COMMAND_SHOW_CHOICE_WHEN,\r\n  SCHEMA_COMMAND_SHOW_CHOICES,\r\n} from \"./commands/message/setupChoice/schema\";\r\nimport { SCHEMA_COMMAND_SHOW_MESSAGE } from \"./commands/message/showMessage/schema\";\r\nimport {\r\n  SCHEMA_COMMAND_EMPTY_PARAM,\r\n  SCHEMA_COMMAND_TEXT_BODY,\r\n} from \"./unionSchema\";\r\nimport type {\r\n  CommandUnion_EmptyParam,\r\n  CommandUnion_TextBody,\r\n} from \"./unionTypes\";\r\n\r\nconst ajv = new Ajv();\r\n// schemaはindex.ts無しで直接importすること！\r\n// 過去に循環参照エラーで苦しんでます\r\n\r\n// 各Schemaはtype以外はimportしないこと\r\n// 定数の解決に失敗してエラーになることがある\r\nconst changeActorText = ajv.compile(SCHEMA_COMMAND_CHANGE_ACTOR_TEXT);\r\nexport const isCommandChangeActorText = (\r\n  data: unknown\r\n): data is CommandUnion_ChangeActorText => {\r\n  return changeActorText(data);\r\n};\r\n\r\nconst scrollTextHead = ajv.compile(SCHEMA_COMMAND_SCROLL_TEXT_HEAD);\r\nexport const isCommandScrollTextHead = (\r\n  data: unknown\r\n): data is Command_ScrollTextHeader => {\r\n  return scrollTextHead(data);\r\n};\r\n\r\nconst audioCommand = ajv.compile(SCHEMA_COMMAND_ANY_AUDIO);\r\nexport const isCommandAudio = (\r\n  data: unknown\r\n): data is CommandUnion_AnyAudio => {\r\n  return audioCommand(data);\r\n};\r\n\r\nconst emptyParam = ajv.compile(SCHEMA_COMMAND_EMPTY_PARAM);\r\nexport const isCommandNonParam = (\r\n  data: unknown\r\n): data is CommandUnion_EmptyParam => {\r\n  return emptyParam(data);\r\n};\r\n\r\nconst textBody = ajv.compile(SCHEMA_COMMAND_TEXT_BODY);\r\nexport const isCommandTextBody = (\r\n  command: unknown\r\n): command is CommandUnion_TextBody => {\r\n  return textBody(command);\r\n};\r\n\r\nconst commonVent = ajv.compile(SCHEMA_COMMAND_CALL_COMMON_EVENT);\r\nexport const isCommandCommonEvent = (\r\n  data: unknown\r\n): data is Command_CommonEvent => {\r\n  return commonVent(data);\r\n};\r\n\r\nconst showChoices = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICES);\r\nexport const isCommandShowChoices = (\r\n  data: unknown\r\n): data is Command_ShowChoices => {\r\n  return showChoices(data);\r\n};\r\n\r\nconst showChoiceItem = ajv.compile(SCHEMA_COMMAND_SHOW_CHOICE_WHEN);\r\nexport const isCommandShowChoiceItem = (\r\n  data: unknown\r\n): data is Command_ShowChoiceWhen => {\r\n  return showChoiceItem(data);\r\n};\r\n\r\nconst inputNumber = ajv.compile(SCHEMA_COMMAND_INPUT_NUMBER);\r\nexport const isCommandInputNumber = (\r\n  data: unknown\r\n): data is Command_InputNumber => {\r\n  return inputNumber(data);\r\n};\r\n\r\nconst showMessage = ajv.compile(SCHEMA_COMMAND_SHOW_MESSAGE);\r\nexport const isCommandShowMessage = (\r\n  data: unknown\r\n): data is Command_ShowMessageHeader => {\r\n  return showMessage(data);\r\n};\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { CommandUnion_ChangeActorText } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CHANGE_ACTOR_TEXT = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [320, 324, 325],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\", minimum: 0 }, // actorId\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_ChangeActorText>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ScrollTextHeader, Command_ScrollTextBody } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_HEAD = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 105 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // speed\r\n        { type: \"boolean\" }, // skip\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextHeader>;\r\n\r\nexport const SCHEMA_COMMAND_SCROLL_TEXT_BODY = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 405 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }], // content\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ScrollTextBody>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { AudioFileParams } from \"src/utils\";\r\nimport type { CommandUnion_AnyAudio } from \"./types\";\r\n\r\n// enumは意図的に直書き。\r\n// 定数を使うとimport解決でエラーが起こる\r\nexport const SCHEMA_COMMAND_ANY_AUDIO = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [132, 133, 139, 241, 245, 249, 250],\r\n    },\r\n    indent: { type: \"integer\" },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [\r\n        {\r\n          type: \"object\",\r\n          properties: {\r\n            name: { type: \"string\" },\r\n            volume: { type: \"integer\" },\r\n            pitch: { type: \"integer\" },\r\n            pan: { type: \"integer\" },\r\n          },\r\n          required: [\"name\", \"volume\", \"pitch\", \"pan\"],\r\n          additionalProperties: false,\r\n        } satisfies JSONSchemaType<AudioFileParams>,\r\n      ],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_AnyAudio>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type {\r\n  CommandUnion_EmptyParam,\r\n  CommandUnion_TextBody,\r\n} from \"./unionTypes\";\r\n// enumは意図的に数値直書き。\r\n// importで定数を取り込むと参照解決の問題でエラーになることがある\r\nexport const SCHEMA_COMMAND_TEXT_BODY = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n\r\n  properties: {\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [108, 355, 401, 405, 408, 655] satisfies ReadonlyArray<\r\n        CommandUnion_TextBody[\"code\"]\r\n      >,\r\n    },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"string\" }],\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const satisfies JSONSchemaType<CommandUnion_TextBody>;\r\n\r\nexport const SCHEMA_COMMAND_EMPTY_PARAM = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: { type: \"array\", minItems: 0, maxItems: 0 },\r\n    code: {\r\n      type: \"integer\",\r\n      enum: [\r\n        0, 109, 112, 113, 115, 204, 206, 213, 214, 216, 217, 221, 222, 243, 244,\r\n        251, 314, 315, 340, 351, 352, 353, 354, 411,\r\n      ] satisfies ReadonlyArray<CommandUnion_EmptyParam[\"code\"]>,\r\n    },\r\n  },\r\n  additionalProperties: false,\r\n} as const;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_CommonEvent } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_CALL_COMMON_EVENT = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 117 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 1,\r\n      maxItems: 1,\r\n      items: [{ type: \"number\", minimum: 0, default: 0 }],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_CommonEvent>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowChoices } from \"./types\";\r\nimport type { Command_ShowChoiceWhen } from \"./types/item\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICE_WHEN = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 402 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"integer\" }, // index\r\n        { type: \"string\" }, // name\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoiceWhen>;\r\n\r\nexport const SCHEMA_COMMAND_SHOW_CHOICES = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 102 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 5,\r\n      maxItems: 5,\r\n      items: [\r\n        { type: \"array\", items: { type: \"string\" } }, // choices\r\n        { type: \"integer\" }, // cancelType\r\n        { type: \"integer\" }, // defaultType\r\n        { type: \"integer\" }, // positionType\r\n        { type: \"integer\" }, // background\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_ShowChoices>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_InputNumber } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_INPUT_NUMBER = {\r\n  type: \"object\",\r\n  properties: {\r\n    code: { type: \"number\", const: 103 },\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      minItems: 2,\r\n      maxItems: 2,\r\n      items: [\r\n        { type: \"number\" }, // variableId\r\n        { type: \"number\" }, // digits\r\n      ],\r\n    },\r\n  },\r\n  required: [\"code\", \"indent\", \"parameters\"],\r\n} as const satisfies JSONSchemaType<Command_InputNumber>;\r\n","import type { JSONSchemaType } from \"ajv\";\r\nimport type { Command_ShowMessageHeader } from \"./types\";\r\n\r\nexport const SCHEMA_COMMAND_SHOW_MESSAGE = {\r\n  type: \"object\",\r\n  required: [\"code\", \"parameters\", \"indent\"],\r\n  properties: {\r\n    code: { type: \"integer\", const: 101 }, // Assuming 101 is the code for ShowMessage\r\n    indent: { type: \"integer\", minimum: 0 },\r\n    parameters: {\r\n      type: \"array\",\r\n      items: [\r\n        { type: \"string\" }, // facename\r\n        { type: \"integer\", minimum: 0, maximum: 7 }, // faceIndex\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // background\r\n        { type: \"integer\", minimum: 0, maximum: 2 }, // positionType\r\n        { type: \"string\" }, // speakerName\r\n      ] as const,\r\n\r\n      minItems: 5,\r\n      maxItems: 5,\r\n    },\r\n  },\r\n} as const satisfies JSONSchemaType<Command_ShowMessageHeader>;\r\n","import {\r\n  PLAY_BGM,\r\n  PLAY_BGS,\r\n  PLAY_ME,\r\n  PLAY_SE,\r\n  CHANGE_BATTLE_BGM,\r\n  CHANGE_VICTORY_ME,\r\n  CHANGE_DEFEAT_ME,\r\n} from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_PlayBGM,\r\n  Command_PlayBGS,\r\n  Command_ChangeBattleBGM,\r\n  Command_ChangeVictoryME,\r\n  Command_ChangeDefeatME,\r\n  Command_PlayME,\r\n  Command_PlaySE,\r\n} from \"./commands/audio\";\r\nimport { isCommandAudio } from \"./validate\";\r\n\r\nexport const isCommandPlayBgm = (\r\n  command: unknown\r\n): command is Command_PlayBGM => {\r\n  return isCommandAudio(command) && command.code === PLAY_BGM;\r\n};\r\n\r\nexport const isCommandPlayBgs = (\r\n  command: unknown\r\n): command is Command_PlayBGS => {\r\n  return isCommandAudio(command) && command.code === PLAY_BGS;\r\n};\r\n\r\nexport const isCommandPlayMe = (\r\n  command: unknown\r\n): command is Command_PlayME => {\r\n  return isCommandAudio(command) && command.code === PLAY_ME;\r\n};\r\n\r\nexport const isCommandPlaySe = (\r\n  command: unknown\r\n): command is Command_PlaySE => {\r\n  return isCommandAudio(command) && command.code === PLAY_SE;\r\n};\r\n\r\nexport const isCommandChangeBattleBgm = (\r\n  command: unknown\r\n): command is Command_ChangeBattleBGM => {\r\n  return isCommandAudio(command) && command.code === CHANGE_BATTLE_BGM;\r\n};\r\n\r\nexport const isCommandChangeVictoryMe = (\r\n  command: unknown\r\n): command is Command_ChangeVictoryME => {\r\n  return isCommandAudio(command) && command.code === CHANGE_VICTORY_ME;\r\n};\r\n\r\nexport const isCommandChangeDefeatMe = (\r\n  command: unknown\r\n): command is Command_ChangeDefeatME => {\r\n  return isCommandAudio(command) && command.code === CHANGE_DEFEAT_ME;\r\n};\r\n","import {\r\n  SHOW_MESSAGE_BODY,\r\n  SHOW_SCROLLING_TEXT_BODY,\r\n  COMMENT_BODY,\r\n  COMMENT_HEAD,\r\n  SCRIPT_EVAL_BODY,\r\n  SCRIPT_EVAL,\r\n} from \"@RpgTypes/rpg\";\r\nimport type {\r\n  Command_ShowMessageBody,\r\n  Command_CommentBody,\r\n  Command_CommentHeader,\r\n  Command_ScrollTextBody,\r\n  Command_ScriptHeader,\r\n  Command_ScriptBody,\r\n} from \"./commands\";\r\nimport { isCommandTextBody } from \"./validate\";\r\n\r\nexport const isCommandShowMessageBody = (\r\n  command: unknown\r\n): command is Command_ShowMessageBody => {\r\n  return isCommandTextBody(command) && command.code === SHOW_MESSAGE_BODY;\r\n};\r\n\r\nexport const isCommandShowScrollingTextBody = (\r\n  command: unknown\r\n): command is Command_ScrollTextBody => {\r\n  return (\r\n    isCommandTextBody(command) && command.code === SHOW_SCROLLING_TEXT_BODY\r\n  );\r\n};\r\n\r\nexport const isCommandCommentHeader = (\r\n  command: unknown\r\n): command is Command_CommentHeader => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_HEAD;\r\n};\r\n\r\nexport const isCommandCommentBody = (\r\n  command: unknown\r\n): command is Command_CommentBody => {\r\n  return isCommandTextBody(command) && command.code === COMMENT_BODY;\r\n};\r\n\r\nexport const isCommandScriptHeader = (\r\n  command: unknown\r\n): command is Command_ScriptHeader => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL;\r\n};\r\n\r\nexport const isCommandScriptBody = (\r\n  command: unknown\r\n): command is Command_ScriptBody => {\r\n  return isCommandTextBody(command) && command.code === SCRIPT_EVAL_BODY;\r\n};\r\n","export const FOLDER_AUDIO_BGM = \"bgm\" as const;\r\nexport const FOLDER_AUDIO_SE = \"se\" as const;\r\nexport const FOLDER_AUDIO_ME = \"me\" as const;\r\nexport const FOLDER_AUDIO_BGS = \"bgs\" as const;\r\n","export const FOLDER_IMG_BATTLEBACK1 = \"battlebacks1\" as const;\r\nexport const FOLDER_IMG_BATTLEBACK2 = \"battlebacks2\" as const;\r\nexport const FOLDER_IMG_CHACTERS = \"characters\" as const;\r\nexport const FOLDER_IMG_ENEMIES = \"enemies\" as const;\r\nexport const FOLDER_IMG_FACES = \"faces\" as const;\r\nexport const FOLDER_IMG_PARALLACES = \"parallaxes\" as const;\r\nexport const FOLDER_IMG_PICTURES = \"pictures\" as const;\r\nexport const FOLDER_IMG_SV_ACTORS = \"sv_actors\" as const;\r\nexport const FOLDER_IMG_SV_ENEMIES = \"sv_enemies\" as const;\r\nexport const FOLDER_IMG_SYSTEM = \"system\" as const;\r\nexport const FOLDER_IMG_TILESETS = \"tilesets\" as const;\r\nexport const FOLDER_IMG_TITLES1 = \"titles1\" as const;\r\nexport const FOLDER_IMG_TITLES2 = \"titles2\" as const;\r\n","export const FILENAME_SYSTEM = \"System.json\";\r\nexport const FILENAME_ACTORS = \"Actors.json\";\r\nexport const FILENAME_CLASSES = \"Classes.json\";\r\nexport const FILENAME_SKILLS = \"Skills.json\";\r\nexport const FILENAME_ITEMS = \"Items.json\";\r\nexport const FILENAME_WEAPONS = \"Weapons.json\";\r\nexport const FILENAME_ARMORS = \"Armors.json\";\r\nexport const FILENAME_ENEMIES = \"Enemies.json\";\r\nexport const FILENAME_TROOPS = \"Troops.json\";\r\nexport const FILENAME_STATES = \"States.json\";\r\nexport const FILENAME_ANIMATIONS = \"Animations.json\";\r\nexport const FILENAME_TILESET = \"Tilesets.json\";\r\nexport const FILENAME_COMMON_EVENTS = \"CommonEvents.json\";\r\nexport const FILENAME_MAP_INFOS = \"MapInfos.json\";\r\n","export const FOLDER_DATA = \"data\" as const;\r\nexport const FOLDER_IMG = \"img\" as const;\r\nexport const FOLDER_AUDIO = \"audio\" as const;\r\nexport const FOLDER_JS = \"js\" as const;\r\n"],"names":["defineSkill","skills","labels","label","skill","domainName","items","source","author","module","kind","defineActor","actors","actor","defineState","states","state","defineArmor","armors","armor","defineClass","classes","class","defineEnemy","enemies","enemy","defineItem","item","defineWeapon","weapons","weapon","defineCommonEvent","commonEvents","commonEvent","defineTraitCollapseType","global","collapsOptionsToArray","options","id","name","normal","bossCollaps","instantCollaps","noneCollaps","extraParamsToArray","xparam","hitRate","evasionRate","criticalRate","criticalEvasionRate","magicEvasionRate","magicReflectionRate","counterAttackRate","hpRegenerationRate","mpRegenerationRate","tpRegenerationRate","regularParamsToArray","param","maxHp","maxMp","atk","def","matk","mdef","agi","luk","defineTraitSpecialParam","specialParam","specialParamsToArray","specialParams","targetRate","guardEffectRate","recoveryEffectRate","pharmacology","mpCostRate","tpChargeRate","physicalDamageRate","magicDamageRate","floorDamageRate","experienceRate","partyAbilityToArray","encounterHalf","encounterNone","cancelSurprise","raisePreemptive","goldDouble","dropItemDouble","specialFlagToArray","autoBattle","guard","substitute","preventEscape","defineTraitItems","set","regularParam","extraParam","collaps","specialFlag","partyAbility","AUTHOR_RMMZ","SRC_COLOR","compilePlaceholders","keys","map","key","dataKey","placeHolder","compileArrayPlaceholderEX","input","dataIdKey","sourceId","joinSoruceId","getItemMappersFromRule","rule","list","itemMappers","itemMapper","compileFormatRule","extraItems","compileItemMapper","fallbackFormat","text","generateFallbackFormatText","generateFallbackLabel","properties","props","numbers","strings","arrayIndex","kindKey","Set","add","forEach","mapper","size","Array","from","join","replacePlaceholder","baseText","data","field","value","replaceAll","String","detectFormatErrors","format","formatRule","errorTexts","limits","placeHolderMaxLength","formatMaxLength","pattern","length","formatLabel","syntaxErrors","message","formatVeryLong","reason","slice","semanticErrors","detectItemMapperErrors","detectInvalidPlaceholders","matched","matchAll","placeHolderKeys","reduce","acc","push","longPlaceHolder","has","extraPlaceHolder","error","checkItemMapperSourceError","includedName","includes","hasSource","dataSource","missingName","missingSourceId","mergeItemsSource","formatList","namedItemSources","sourceMap","mappingNamedItems","entry","buildFinalFormatEntry","kindId","Map","resolveDataSource","patternCompiled","get","newItem","cloneItems","applyFormatRule","getDataId","numText","applyPlaceholdersToText","formatWithItemName","itemName","dataId","find","i","findItemById","getItemName","currentText","defineEffect","code","baseLabel","description","desc","defineEffectSpecial","special","defineEffectRecoverHp","recoverHp","defineEffectRecoverMp","recoverMp","defineEffectGainTp","gainTp","defineEffectAddState","addState","defineEffectRemoveState","removeState","defineEffectAddBuff","addBuff","defineEffectAddDebuff","addDebuff","defineEffectRemoveBuff","removeBuff","defineEffectRemoveDebuff","removeDebuff","defineEffectGrow","grow","defineEffectLearnSkill","learnSkill","defineEffectCommonEvent","elementRate","systemElementsSourceId","debuffRate","stateRate","stateSourceId","stateResist","attackElement","atttackState","attackSpeed","attackTimes","attackSkill","skillSourceId","skillTypeAdd","systemSkillTypesSourceId","skillTypeSeal","skillAdd","skillSeal","equipWeaponType","systemWeaponTypesSourceId","equipArmorType","systemArmorTypesSourceId","equipLock","systemEquipTypesSourceId","equipSeal","slotType","actionPlus","makeSystemAdvanced","advanced","gameId","screenWidth","screenHeight","uiAreaWidth","uiAreaHeight","windowOpacity","screenScale","numberFontFilename","mainFontFilename","fallbackFonts","fontSize","SCHEMA_SYSTEM_ADVANCED","type","required","additionalProperties","SCHEMA_SYSTEM_MEMBERS_ATTACK_MOTION","weaponImageId","makeAudioFileParams","audioFileParams","volume","pitch","pan","makeSoundsArray","sounds","cursor","ok","cancel","buzzer","equip","save","load","battleStart","escape","enemyAttack","enemyDamage","enemyCollapse","bossCollapes1","bossCollapes2","actorDamage","actorCollapse","playRecovery","playMiss","playEvasion","playMagicEvasion","playReflection","shop","useItem","useSkill","makeSoundsObject","audioFileParamsSchema","minimum","maximum","SCHEMA_SYSTEM_AUDIOFILES","battleBgm","victoryMe","gameoverMe","titleBgm","defeatMe","minItems","maxItems","SCHEMA_SYSTEM_BATTLE_RULE_RMMZ","magicSkills","uniqueItems","battleSystem","getItemCommandEnabled","system","menuCommands","getSkillCommandEnabled","getEquipCommandEnabled","getStatusCommandEnabled","getFormationCommandEnabled","getSaveCommandEnabled","getItemCategoryEnabled","itemCategories","getWeaponCategoryEnabled","getArmorCategoryEnabled","getKeyItemCategoryEnabled","makeItemCategories","keyItem","makeItemCategoriesFromArray","makeMenuCommandsEnabled","status","formation","makeMenuCommandsEnabledFromArray","array","SCHEMA_SYSTEM_BOOLEAN_GAMEMENU_OPTIONS","makeBooleanOptions","optAutosave","optDisplayTp","optDrawTitle","optExtraExp","optFloorDeath","optFollowers","optKeyItemsNumber","optSideView","optSlipDeath","optTransparent","optMessageSkip","optSplashScreen","SCHEMA_BOOLEAN","SCHEMA_SYSTEM_BOOLEAN_OPTIONS","makeGameInitial","gameInitial","startMapId","startX","startY","partyMembersArray","SCHEMA_SYSTEM_GAME_INITIAL","SCHEMA_SYSTEM_IMAGE_SIZE","tileSize","faceSize","iconSize","SCHEMA_SYSTEM_TITLE_IMAGES","title1Name","title2Name","SCHEMA_SYSTEM_OTHER_DATA","locale","versionId","windowTone","makeNamedItem","index","getVariableNames","variables","getElementTypes","elements","getEquipTypes","equipTypes","getSkillTypes","skillTypes","getWeaponTypes","weaponTypes","getArmorTypes","armorTypes","getSwitches","switches","defineSystemItems","buildElementTypesSource","buildEquipTypesSource","buildWeaponTypesSource","buildSkillTypesSource","buildArmorTypesSource","buildVariableNamesSource","buildSwitchesSource","stringArraySchema","SCHEMA_SYSTEM_RPG_DATA_NAMES","makeDataNames","cloneStringArray","makeTermsBasic","terms","level","levelA","hp","hpA","mp","mpA","tp","tpA","experience","exp","makeTermsBasicFromArray","makeTermsCommandArray","makeTermsCommandArrayWithNulls","empty","fight","attack","gameEnd","equip2","optimize","clear","newGame","continue_","toTitle","buy","sell","makeTermsCommandFromArray","validate","msg","fallback","makeTermsMessages","actionFailure","actorRecovery","actorGain","actorLoss","actorDrain","actorNoDamage","actorNoHit","alwaysDash","bgmVolume","bgsVolume","commandRemember","criticalToActor","criticalToEnemy","counterAttack","debuffAdd","defeat","enemyDrain","enemyGain","enemyLoss","enemyNoDamage","enemyNoHit","enemyRecovery","evasion","autosave","escapeFailure","escapeStart","emerge","expNext","expTotal","file","buffAdd","buffRemove","obtainExp","obtainGold","obtainItem","obtainSkill","levelUp","partyName","loadMessage","meVolume","possession","preemptive","saveMessage","seVolume","magicEvasion","magicReflection","surprise","touchUI","victory","SCHEMA_STRING","SCHEMA_STRING_NULL","nullable","SCHEMA_SYSTEM_TERMS_BUNDLE","currencyUnit","gameTitle","messages","commands","basic","params","minLength","makeParamNamesArray","mhp","mmp","mat","mdf","hit","eva","getParamNames","makeTitleCommandWindow","background","offsetX","offsetY","SCHEMA_SYSTEM_TITLE_COMMAND_WINDOW","makeVehicleData","vehicle","characterIndex","characterName","bgm","SCHEMA_SYSTEM_VEHICLE","makeEditorSetting","jsonFormatLevel","messageWidth1","messageWidth2","SCHEMA_SYSTEM_TEST_BATTLER","actorId","equips","SCHEMA_SYSTEM_GAME_EDITOR_BUNDLE","testBattlers","testTroopId","battleback1Name","battleback2Name","editMapId","battlerHue","battlerName","editor","DEFAULT_SYSTEM_LABELS_BOOLEAN","DEFAULT_SYSTEM_LABELS_DATA_TYPES","LABELS_SYSTEM_BATTLER_PARAMS","LABELS_SYSTEM_GAME_COMMANDS","SCHEMA_SYSTEM_PARTIAL_BUNDLE","airship","boat","ship","attackMotions","ajv","Ajv","strict","schema","reducedList","mergeSystemSchema","systemValidate","compile","isDataSystem","testBattler","imageSize","makeSystemData","fragments","cloneSize","texts","editing","images","dataNames","cloneNumberArray","vehicles","me","battleTest","cloneObjectArray","cloneTestBattler","editorTemporary","gameInit","makeTerms","menuComamnds","makeTermsCommand","fn","buildReferenceItemSources","gameData","gameDataLabels","traitLabels","dataLabels","compileTraitDisplayData","namedItemSource","attackState","compileItemEffectDisplayData","itemEffectLabels","additional","domainNames","record","Object","entries","makeCommandChangeActorName","indent","parameters","makeCommandChangeActorNickName","nickname","makeCommandChangeActorProfile","profile","makeAudioCommand","filename","makeCommandAudioAny","audio","makeCommandPlayBGM","makeCommandPlayBGS","makeCommandPlayME","makeCommandPlaySE","makeCommandChangeBattleBGM","makeCommandChangeVictoryME","makeCommandChangeDefeatME","makeCommandCommonEvent","toArrayCommonEvent","fromArrayCommonEvent","eventId","object","fromArrayControlSwitches","min","max","toArrayControlSwitches","makeCommandControlSwitches","makeCommentArray","comment","convertCommentArrayToObject","paramArray","makeCommandCommentHeader","makeCommandCommentBody","makeCommentCommandArray","comments","toArrayInputNumber","variableId","digits","fromArrayInputNumber","makeCommandInputNumber","toArrayScrollingTextHeader","speed","skip","fromArrayScrollingTextHeader","makeCommandScrollingTextHeader","toArrayScrollingTextBody","fromArrayScrollingTextBody","content","makeCommandScrollingTextBody","makeCommandShowChoiceItem","fromArraySetupChoiceItem","toArraySetupChoiceItem","fromArraySetupChoice","choices","cancelType","defaultType","positionType","toArraySetupChoice","makeCommandSetupChoice","cloneChoices","command","makeCommandShowMessage","facename","faceIndex","speakerName","fromArrayShowMessageHeader","toArrayShowMessageHeader","makeCommandShowMessageBody","makeCommandScriptHeader","script","makeCommandScriptBody","makeCommandScriptArray","lines","line","OPERAND_CONSTANT","OPERAND_VARIABLE","OPERAND_RANDOM","OPERAND_GAMEDATA","OPERAND_SCRIPT","ENEMY_PARAM_INDEX","HP","MP","MHP","MMP","ATK","DEF","MAT","MDF","AGI","LUK","TP","toArrayOperandConstant","target","operation","startId","endId","toArrayOperandVariable","toArrayOperandRandom","toArrayOperandScript","toArrayOperandItemData","itemId","toArrayOperandActorStatus","toArrayOperandEnemyStatus","getEnemyValue","getActorValue","currentExp","cloneParameters","cloneEventCommand","isPrimitive","isCloneableCommand","every","changeActorText","enum","isCommandChangeActorText","scrollTextHead","const","isCommandScrollTextHead","audioCommand","isCommandAudio","emptyParam","isCommandNonParam","textBody","isCommandTextBody","commonVent","default","isCommandCommonEvent","showChoices","isCommandShowChoices","showChoiceItem","isCommandShowChoiceItem","inputNumber","isCommandInputNumber","showMessage","isCommandShowMessage","isCommandPlayBgm","isCommandPlayBgs","isCommandPlayMe","isCommandPlaySe","isCommandChangeBattleBgm","isCommandChangeVictoryMe","isCommandChangeDefeatMe","isCommandShowMessageBody","isCommandShowScrollingTextBody","isCommandCommentHeader","isCommandCommentBody","isCommandScriptHeader","isCommandScriptBody","FOLDER_AUDIO_BGM","FOLDER_AUDIO_SE","FOLDER_AUDIO_ME","FOLDER_AUDIO_BGS","FOLDER_IMG_BATTLEBACK1","FOLDER_IMG_BATTLEBACK2","FOLDER_IMG_CHACTERS","FOLDER_IMG_ENEMIES","FOLDER_IMG_FACES","FOLDER_IMG_PARALLACES","FOLDER_IMG_PICTURES","FOLDER_IMG_SV_ACTORS","FOLDER_IMG_SV_ENEMIES","FOLDER_IMG_SYSTEM","FOLDER_IMG_TILESETS","FOLDER_IMG_TITLES1","FOLDER_IMG_TITLES2","FILENAME_SYSTEM","FILENAME_ACTORS","FILENAME_CLASSES","FILENAME_SKILLS","FILENAME_ITEMS","FILENAME_WEAPONS","FILENAME_ARMORS","FILENAME_ENEMIES","FILENAME_TROOPS","FILENAME_STATES","FILENAME_ANIMATIONS","FILENAME_TILESET","FILENAME_COMMON_EVENTS","FILENAME_MAP_INFOS","FOLDER_DATA","FOLDER_IMG","FOLDER_AUDIO","FOLDER_JS"],"mappings":"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"}