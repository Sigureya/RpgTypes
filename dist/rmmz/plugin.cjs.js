"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const B=require("../shared/lookup.cjs.js"),E=(t,e)=>Object.entries(e).reduce((n,[r,s])=>{if(r in t){const m=t[r];if(typeof m=="string")return{...n,[r]:s(m)}}return n},{}),l=(t,e,n,r)=>({default:e,...E(n,r),kind:t}),x=(t,e,n)=>({default:[],...E(e,n),kind:t}),F="help",k="kind",v="text",_="struct",I=t=>{const e=JSON.parse(t);return Array.isArray(e)?e.map(y):typeof e=="object"&&e!==null?Object.fromEntries(Object.entries(e).map(([n,r])=>[n,y(r)])):e},y=t=>{if(typeof t!="string")return t;try{const e=JSON.parse(t);return Array.isArray(e)?e.map(y):typeof e=="object"&&e!==null?Object.fromEntries(Object.entries(e).map(([n,r])=>[n,y(r)])):e}catch{return t}},z=t=>{if(k in t.attr){const e=Z[t.attr.kind];if(e)return e(t)}return l("any","",t.attr,P)},a=t=>t,D=t=>t.replace("[","").replace("]","").split(",").map(e=>parseFloat(e.replaceAll('"',"").trim())).filter(e=>!isNaN(e)),P={default:a,text:a,desc:a,parent:a},w=t=>l("string","",t.attr,P),L=t=>{const e={default:n=>I(n),text:a,desc:a,parent:a};return x("string[]",t.attr,e)},o=(t,e)=>{const n={default:D,text:a,desc:a,parent:a};return x(e,t.attr,n)},c=(t,e)=>{const n={default:r=>parseInt(r,10),text:a,desc:a,parent:a};return l(e,0,t.attr,n)},Z={number:t=>(e=>{const n={default:r=>parseFloat(r),text:a,desc:a,decimals:r=>parseInt(r,10),min:r=>parseFloat(r),max:r=>parseFloat(r),parent:a};return l("number",0,e.attr,n)})(t),"number[]":t=>{const e={default:D,text:a,desc:a,decimals:n=>parseInt(n,10),min:n=>parseFloat(n),max:n=>parseFloat(n),parent:a};return x("number[]",t.attr,e)},string:w,"string[]":L,multiline_string:w,"multiline_string[]":L,combo:t=>{var n;const e=((n=t.options)==null?void 0:n.map(r=>r.option))??[];return{...l("combo","",t.attr,P),options:e}},select:t=>{var n;const e=((n=t.options)==null?void 0:n.map(r=>({option:r.option,value:r.value})))??[];return{...l("select","",t.attr,P),options:e}},actor:t=>c(t,"actor"),"actor[]":t=>o(t,"actor[]"),class:t=>c(t,"class"),"class[]":t=>o(t,"class[]"),skill:t=>c(t,"skill"),"skill[]":t=>o(t,"skill[]"),item:t=>c(t,"item"),"item[]":t=>o(t,"item[]"),weapon:t=>c(t,"weapon"),"weapon[]":t=>o(t,"weapon[]"),armor:t=>c(t,"armor"),"armor[]":t=>o(t,"armor[]"),state:t=>c(t,"state"),"state[]":t=>o(t,"state[]"),enemy:t=>c(t,"enemy"),"enemy[]":t=>o(t,"enemy[]"),common_event:t=>c(t,"common_event"),"common_event[]":t=>o(t,"common_event[]"),switch:t=>c(t,"switch"),"switch[]":t=>o(t,"switch[]"),variable:t=>c(t,"variable"),"variable[]":t=>o(t,"variable[]"),troop:t=>c(t,"troop"),"troop[]":t=>o(t,"troop[]"),boolean:t=>{const e={default:n=>n==="true",text:a,desc:a,on:a,off:a,parent:a};return l("boolean",!0,t.attr,e)},file:t=>{const e={default:a,text:a,desc:a,parent:a,dir:a};return{dir:"",...l("file","",t.attr,e)}},"file[]":t=>{const e={default:n=>I(n),text:a,desc:a,parent:a,dir:a};return{dir:"",...x("file[]",t.attr,e)}}},M=["string","multiline_string","select"],K="BODY",J="STRUCT",O="NONE",q=(t,e)=>{const n=t.lines.length>0?N(t):t,r=e[1]||void 0;return{...n,structName:r,blockType:r?J:"INVALID",locale:e[2],lines:[]}},H=t=>({...t.lines.length>0?N(t):t,blockType:K,structName:void 0,locale:void 0,lines:[]}),N=t=>t.blockType===K?{...t,bodies:t.bodies.concat([{lines:[...t.lines]}]),lines:[],blockType:O}:t.structName&&t.blockType===J?{...t,structs:t.structs.concat([{struct:t.structName,locale:t.locale,lines:[...t.lines]}]),blockType:O,structName:void 0,locale:void 0,lines:[]}:{...t,blockType:O,structName:void 0,lines:[]},U=t=>t.currentOption?{items:t.items.concat({option:t.currentOption,value:t.currentOption})}:t,A=t=>({...typeof t.desc=="string"?{desc:t.desc}:{},...typeof t.text=="string"?{text:t.text}:{}}),C=t=>{const e=V(t),n=G(e);return Y(n)},V=t=>{if(t.currentParam&&t.currentOption){const e=t.currentParam.attr.kind;if(e==="select"||e==="combo")return{...t,currentParam:{...t.currentParam,options:U(t.currentOption).items}}}return t},Y=t=>t.currentParam?{...t,params:[...t.params,t.currentParam],currentParam:null,currentContext:null}:t,G=t=>{if(!t.currentCommand)return t;const e=t.currentParam?[...t.currentCommand.args,t.currentParam]:t.currentCommand.args,n={...A(t.currentCommand),command:t.currentCommand.command,args:e};return{...t,commands:[...t.commands,n],currentCommand:null,currentParam:null,currentContext:null,currentOption:null}},S=(t,e)=>{const n=t.lines.reduce((r,s)=>{const m=s.trim().replace(/^\*\s?/,"");if(!m.startsWith("@"))return r.currentContext===F?{...r,helpLines:r.helpLines.concat(m)}:r;const[u,...p]=m.slice(1).split(" "),f=p.join(" ").trim(),b=e[u];return b?b(r,f):r},X());return C(n)},Q=(t,e)=>{const n=(u=>{const p=u.split(`
`),f={structs:[],bodies:[],structName:void 0,locale:void 0,lines:[],blockType:O},b=p.reduce((d,W)=>{const g=W.trim(),j=g.match(/^\/\*~struct~([A-Za-z0-9_]+)(?::([A-Za-z0-9_-]+))?/);return j?q(d,j):g==="/*:"?H(d):g==="*/"?d.lines.length>0?N(d):d:{...d,lines:d.lines.concat([g])}},f);return{structs:b.structs,bodies:b.bodies}})(t),r=n.structs.map(u=>(p=>{const f=S(p,R);return{name:p.struct,params:f.params}})(u)),s=(u=>{if(u.bodies.length!==0)return u.bodies[0]})(n);if(!s)return{params:[],commands:[],meta:{},helpLines:[],structs:r};const m=S(s,e);return{params:m.params,commands:m.commands,meta:m.meta,helpLines:m.helpLines,structs:r}},X=()=>({helpLines:[],params:[],commands:[],currentParam:null,currentCommand:null,currentContext:null,currentOption:null,dependencies:{base:[],orderBefore:[],orderAfter:[]},meta:{}}),i=(t,e,n)=>t.currentParam&&!(e in t.currentParam.attr)?{...t,currentParam:{...t.currentParam,attr:{...t.currentParam.attr,[e]:n}}}:t,h=(t,e,n)=>({...t,meta:{[e]:n,...t.meta}}),R={param:(t,e)=>{const n=C(t);return n.params.some(r=>r.name===e)?n:{...n,currentContext:"param",currentParam:{name:e,attr:{}}}},text:(t,e)=>t.currentParam?i(t,v,e):t.currentCommand&&!(v in t.currentCommand)?{...t,currentCommand:{...A(t.currentCommand),command:t.currentCommand.command,args:t.currentCommand.args,[v]:e}}:t,desc:(t,e)=>t.currentParam?i(t,"desc",e):t.currentCommand?{...t,currentCommand:{...t.currentCommand,desc:e}}:t,command:(t,e)=>{const n=C(t);return n.commands.some(r=>r.command===e)?n:{...n,currentCommand:{command:e,args:[]},currentParam:null}},arg:(t,e)=>{if(!t.currentCommand)return t;if(t.currentParam){const n={...A(t.currentCommand),command:t.currentCommand.command,args:t.currentCommand.args.concat(t.currentParam)};return{...t,commands:t.commands,currentCommand:n,currentContext:"arg",currentParam:{name:e,attr:{}}}}return{...t,currentParam:{name:e,attr:{}}}},help:t=>({...C(t),currentContext:F}),option:(t,e)=>{if(!t.currentParam)return t;const n=((r,s)=>r.currentOption?{items:r.items.concat({option:r.currentOption,value:r.currentOption}),currentOption:s}:{items:r.items,currentOption:s})(t.currentOption??{items:[]},e);return{...t,currentOption:n}},value:(t,e)=>{if(!t.currentOption)return t;const n=((r,s)=>r.currentOption?{items:r.items.concat({option:r.currentOption,value:s})}:{items:r.items})(t.currentOption,e);return{...t,currentOption:n}},type:(t,e)=>{if((n=>n.endsWith(">")&&n.startsWith("struct<"))(e)){const n=e.slice(7,-1),r=i(t,_,n);return i(r,k,_)}return t.currentParam?i(t,k,e):t},default:(t,e)=>i(t,"default",e),on:(t,e)=>i(t,"on",e),off:(t,e)=>i(t,"off",e),min:(t,e)=>i(t,"min",e),max:(t,e)=>i(t,"max",e),base:(t,e)=>{return{...t,dependencies:(n=t.dependencies,r=e,{orderAfter:n.orderAfter,orderBefore:n.orderBefore,base:n.base.concat(r)})};var n,r},orderAfter:(t,e)=>{return{...t,dependencies:(n=t.dependencies,r=e,{base:n.base,orderBefore:n.orderBefore,orderAfter:n.orderAfter.concat(r)})};var n,r},orderBefore:(t,e)=>{return{...t,dependencies:(n=t.dependencies,r=e,{base:n.base,orderAfter:n.orderAfter,orderBefore:n.orderBefore.concat(r)})};var n,r},author:(t,e)=>h(t,"author",e),plugindesc:(t,e)=>h(t,"plugindesc",e),url:(t,e)=>h(t,"url",e)},$=t=>tt((e=>Q(e,R))(t)),tt=t=>({target:"MZ",meta:t.meta,commands:et(t.commands),params:T(t.params),structs:nt(t.structs)}),T=t=>Object.fromEntries(t.map(e=>[e.name,z(e)])),et=t=>Object.fromEntries(t.map(e=>[e.command,{desc:e.desc,text:e.text,args:T(e.args)}])),nt=t=>Object.fromEntries(t.map(e=>[e.name,{params:T(e.params)}]));exports.isRmmzDataKind=B.isRmmzDataKind,exports.lookupKind=B.lookupKind,exports.compileAttributes=z,exports.paramHasText=t=>M.includes(t.kind),exports.pluginSourceToJSON=t=>$(t);
