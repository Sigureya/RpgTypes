{"version":3,"file":"namedItemSource.es.js","sources":["../src/labels/mergeLabel.ts","../src/transformers/data/system/getItemNames.ts","../src/transformers/traits/battlerParam/battlerParam.ts","../src/transformers/traits/battlerParam/makeOptions.ts"],"sourcesContent":["export type PrimitiveRecord<T> = {\r\n  [K in keyof T]: string;\r\n};\r\n\r\nexport const mergeWithDefaults = <T>(\r\n  defaultLabels: PrimitiveRecord<T>,\r\n  labels: Partial<T>\r\n): {\r\n  [K in keyof T]: string;\r\n} => {\r\n  const reulst = { ...defaultLabels };\r\n  for (const key in defaultLabels) {\r\n    const value = labels[key];\r\n    if (typeof value === \"string\") {\r\n      reulst[key] = value;\r\n    }\r\n  }\r\n  return reulst;\r\n};\r\n\r\nexport const mergeNestedPrimitiveRecords = <T>(\r\n  base: T,\r\n  override: Partial<{ [K in keyof T]: Partial<PrimitiveRecord<T[K]>> }>\r\n): T => {\r\n  const result: Partial<T> = {};\r\n  for (const domain in base) {\r\n    const domainBase = base[domain];\r\n    const domainOverride = override[domain] ?? {};\r\n    result[domain] = mergeWithDefaults(\r\n      domainBase as Required<typeof domainOverride>,\r\n      domainOverride\r\n    ) as T[typeof domain];\r\n  }\r\n  return result as T;\r\n};\r\n","import type {\r\n  Data_NamedItem,\r\n  Data_System,\r\n  System_ParamNames,\r\n} from \"@RpgTypes/schema\";\r\n\r\nconst makeNamedItem = (name: string, index: number): Data_NamedItem => ({\r\n  name: name,\r\n  id: index,\r\n});\r\n\r\nexport const getVariableNames = (\r\n  system: Pick<Data_System, \"variables\">\r\n): Data_NamedItem[] => {\r\n  return system.variables.map(makeNamedItem);\r\n};\r\n\r\nexport const getElements = (\r\n  system: Pick<Data_System, \"elements\">\r\n): Data_NamedItem[] => {\r\n  return system.elements.map(makeNamedItem);\r\n};\r\n\r\nexport const getEquipTypes = (\r\n  system: Pick<Data_System, \"equipTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.equipTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getSkillTypes = (\r\n  system: Pick<Data_System, \"skillTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.skillTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getWeaponTypes = (\r\n  system: Pick<Data_System, \"weaponTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.weaponTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getArmorTypes = (\r\n  system: Pick<Data_System, \"armorTypes\">\r\n): Data_NamedItem[] => {\r\n  return system.armorTypes.map(makeNamedItem);\r\n};\r\n\r\nexport const getParamNames = (system: System_ParamNames): Data_NamedItem[] => {\r\n  return system.terms.params.map(makeNamedItem);\r\n};\r\n","import type {\r\n  RegularParamLabels,\r\n  ExtraParamLabels,\r\n  SpecialParamLabels,\r\n} from \"@RpgTypes/schema\";\r\nimport {\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_LUK,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_MDEF,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  EXTRA_PARAM_TRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_TGR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n} from \"@RpgTypes/schema\";\r\n\r\nexport const regularParamName = (\r\n  paramIndex: number,\r\n  labels: RegularParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case REGULAR_PARAM_MAX_HP:\r\n      return labels.maxHp;\r\n    case REGULAR_PARAM_MAX_MP:\r\n      return labels.maxMp;\r\n    case REGULAR_PARAM_ATK:\r\n      return labels.atk;\r\n    case REGULAR_PARAM_DEF:\r\n      return labels.def;\r\n    case REGULAR_PARAM_MATK:\r\n      return labels.matk;\r\n    case REGULAR_PARAM_MDEF:\r\n      return labels.mdef;\r\n    case REGULAR_PARAM_AGI:\r\n      return labels.agi;\r\n    case REGULAR_PARAM_LUK:\r\n      return labels.luk;\r\n    default:\r\n      return `?rparams[${paramIndex}]`;\r\n  }\r\n};\r\n\r\nexport const extraParamName = (\r\n  paramIndex: number,\r\n  labels: ExtraParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case EXTRA_PARAM_CEV:\r\n      return labels.criticalEvasionRate;\r\n    case EXTRA_PARAM_EVA:\r\n      return labels.evasionRate;\r\n    case EXTRA_PARAM_CNT:\r\n      return labels.counterAttackRate;\r\n    case EXTRA_PARAM_CRI:\r\n      return labels.criticalRate;\r\n    case EXTRA_PARAM_HIT:\r\n      return labels.hitRate;\r\n    case EXTRA_PARAM_HRG:\r\n      return labels.hpRegenerationRate;\r\n    case EXTRA_PARAM_MEV:\r\n      return labels.magicEvasionRate;\r\n    case EXTRA_PARAM_MRF:\r\n      return labels.magicReflectionRate;\r\n    case EXTRA_PARAM_MRG:\r\n      return labels.mpRegenerationRate;\r\n    case EXTRA_PARAM_TRG:\r\n      return labels.tpRegenerationRate;\r\n  }\r\n  return `?xparams[${paramIndex}]`;\r\n};\r\n\r\nexport const specialParamName = (\r\n  paramIndex: number,\r\n  labels: SpecialParamLabels\r\n): string => {\r\n  switch (paramIndex) {\r\n    case SPECIAL_PARAM_EXR:\r\n      return labels.experienceRate;\r\n    case SPECIAL_PARAM_TGR:\r\n      return labels.targetRate;\r\n    case SPECIAL_PARAM_FDR:\r\n      return labels.floorDamageRate;\r\n    case SPECIAL_PARAM_GRD:\r\n      return labels.guradEffectRate;\r\n    case SPECIAL_PARAM_MCR:\r\n      return labels.mpCostRate;\r\n    case SPECIAL_PARAM_TCR:\r\n      return labels.tpChargeRate;\r\n    case SPECIAL_PARAM_PDR:\r\n      return labels.physicalDamageRate;\r\n    case SPECIAL_PARAM_MDR:\r\n      return labels.magicDamageRate;\r\n    case SPECIAL_PARAM_PHA:\r\n      return labels.pharmacology;\r\n    case SPECIAL_PARAM_REC:\r\n      return labels.recoveryEffectRate;\r\n  }\r\n  return `?sparams[${paramIndex}]`;\r\n};\r\n","import type {\r\n  CollapsOptionLabels,\r\n  Data_NamedItem,\r\n  ExtraParamLabels,\r\n  PartyAbilityOptionLabels,\r\n  SpecialParamLabels,\r\n  GlobalLabel,\r\n  RegularParamLabels,\r\n} from \"@sigureya/rpgtypes\";\r\nimport {\r\n  COLLAPS_NORMAL,\r\n  COLLAPS_BOSS,\r\n  COLLAPS_INSTANT,\r\n  COLLAPS_NONE,\r\n  PARTY_ABILITY_CANCEL_SURPRISE,\r\n  PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n  PARTY_ABILITY_ENCOUNTER_HALF,\r\n  PARTY_ABILITY_ENCOUNTER_NONE,\r\n  PARTY_ABILITY_GOLD_DOUBLE,\r\n  PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n  EXTRA_PARAM_TRG,\r\n  EXTRA_PARAM_CEV,\r\n  EXTRA_PARAM_CNT,\r\n  EXTRA_PARAM_CRI,\r\n  EXTRA_PARAM_EVA,\r\n  EXTRA_PARAM_HIT,\r\n  EXTRA_PARAM_HRG,\r\n  EXTRA_PARAM_MEV,\r\n  EXTRA_PARAM_MRF,\r\n  EXTRA_PARAM_MRG,\r\n  SPECIAL_PARAM_EXR,\r\n  SPECIAL_PARAM_FDR,\r\n  SPECIAL_PARAM_GRD,\r\n  SPECIAL_PARAM_MCR,\r\n  SPECIAL_PARAM_MDR,\r\n  SPECIAL_PARAM_PDR,\r\n  SPECIAL_PARAM_PHA,\r\n  SPECIAL_PARAM_REC,\r\n  SPECIAL_PARAM_TCR,\r\n  SPECIAL_PARAM_TGR,\r\n  REGULAR_PARAM_ATK,\r\n  REGULAR_PARAM_MAX_HP,\r\n  REGULAR_PARAM_MAX_MP,\r\n  REGULAR_PARAM_DEF,\r\n  REGULAR_PARAM_MATK,\r\n  REGULAR_PARAM_MDEF,\r\n  REGULAR_PARAM_AGI,\r\n  REGULAR_PARAM_LUK,\r\n} from \"@RpgTypes/schema\";\r\n\r\nexport const foldCollapsOptions = (\r\n  options: CollapsOptionLabels,\r\n  global: Pick<GlobalLabel, \"normal\">\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: COLLAPS_NORMAL,\r\n      name: global.normal,\r\n    },\r\n    {\r\n      id: COLLAPS_BOSS,\r\n      name: options.bossCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_INSTANT,\r\n      name: options.instantCollaps,\r\n    },\r\n    {\r\n      id: COLLAPS_NONE,\r\n      name: options.noneCollaps,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldPartyAbilityOptions = (\r\n  options: PartyAbilityOptionLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_HALF,\r\n      name: options.encounterHalf,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_ENCOUNTER_NONE,\r\n      name: options.encounterNone,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_CANCEL_SURPRISE,\r\n      name: options.cancelSurprise,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_RAISE_PREEMPTIVE,\r\n      name: options.raisePreemptive,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_GOLD_DOUBLE,\r\n      name: options.goldDouble,\r\n    },\r\n    {\r\n      id: PARTY_ABILITY_DROP_ITEM_DOUBLE,\r\n      name: options.dropItemDouble,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldRegularParam = (\r\n  param: RegularParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    { id: REGULAR_PARAM_MAX_HP, name: param.maxHp },\r\n    { id: REGULAR_PARAM_MAX_MP, name: param.maxMp },\r\n    { id: REGULAR_PARAM_ATK, name: param.atk },\r\n    { id: REGULAR_PARAM_DEF, name: param.def },\r\n    { id: REGULAR_PARAM_MATK, name: param.matk },\r\n    { id: REGULAR_PARAM_MDEF, name: param.mdef },\r\n    { id: REGULAR_PARAM_AGI, name: param.agi },\r\n    { id: REGULAR_PARAM_LUK, name: param.luk },\r\n  ];\r\n};\r\n\r\nexport const foldExtraParam = (xparam: ExtraParamLabels): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: EXTRA_PARAM_HIT,\r\n      name: xparam.hitRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_EVA,\r\n      name: xparam.evasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CRI,\r\n      name: xparam.criticalRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CEV,\r\n      name: xparam.criticalEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MEV,\r\n      name: xparam.magicEvasionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRF,\r\n      name: xparam.magicReflectionRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_CNT,\r\n      name: xparam.counterAttackRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_HRG,\r\n      name: xparam.hpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_MRG,\r\n      name: xparam.mpRegenerationRate,\r\n    },\r\n    {\r\n      id: EXTRA_PARAM_TRG,\r\n      name: xparam.tpRegenerationRate,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const foldSpecialParams = (\r\n  specialParams: SpecialParamLabels\r\n): Data_NamedItem[] => {\r\n  return [\r\n    {\r\n      id: SPECIAL_PARAM_TGR,\r\n      name: specialParams.targetRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_GRD,\r\n      name: specialParams.guradEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_REC,\r\n      name: specialParams.recoveryEffectRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PHA,\r\n      name: specialParams.pharmacology,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MCR,\r\n      name: specialParams.mpCostRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_TCR,\r\n      name: specialParams.tpChargeRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_PDR,\r\n      name: specialParams.physicalDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_MDR,\r\n      name: specialParams.magicDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_FDR,\r\n      name: specialParams.floorDamageRate,\r\n    },\r\n    {\r\n      id: SPECIAL_PARAM_EXR,\r\n      name: specialParams.experienceRate,\r\n    },\r\n  ];\r\n};\r\n"],"names":["mergeWithDefaults","defaultLabels","labels","reulst","key","value","mergeNestedPrimitiveRecords","base","override","result","domain","domainBase","domainOverride","makeNamedItem","name","index","getVariableNames","system","getElements","getEquipTypes","getSkillTypes","getWeaponTypes","getArmorTypes","getParamNames","regularParamName","paramIndex","extraParamName","specialParamName","foldCollapsOptions","options","global","foldPartyAbilityOptions","foldRegularParam","param","foldExtraParam","xparam","foldSpecialParams","specialParams"],"mappings":"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"}